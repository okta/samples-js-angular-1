var path = require("path");

/**
 * GET /assets/js/mvc/loginpage/initLoginPage.pack.e390de883bff24e97b9aba891d0bd0b7.js
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: * / *
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0pJrIhHufR6m9XkWWgLOenQ; t=default; JSESSIONID=5059E6FF7345C6845E26364BCD29CFA9
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"1484090-1507280782000\"");
  res.setHeader("last-modified", "Fri, 06 Oct 2017 09:06:22 GMT");
  res.setHeader("content-type", "text/javascript");
  res.setHeader("content-length", "1484090");
  res.setHeader("date", "Fri, 06 Oct 2017 20:08:18 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("biBlbGVtLnBhcmVudE5vZGUmJmVsZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LGVsZW0uc2VsZWN0ZWQ9PT0hMH0sZW1wdHk6ZnVuY3Rpb24oZWxlbSl7Zm9yKGVsZW09ZWxlbS5maXJzdENoaWxkO2VsZW07ZWxlbT1lbGVtLm5leHRTaWJsaW5nKWlmKGVsZW0ubm9kZVR5cGU8NilyZXR1cm4hMTtyZXR1cm4hMH0scGFyZW50OmZ1bmN0aW9uKGVsZW0pe3JldHVybiFFeHByLnBzZXVkb3MuZW1wdHkoZWxlbSl9LGhlYWRlcjpmdW5jdGlvbihlbGVtKXtyZXR1cm4gcmhlYWRlci50ZXN0KGVsZW0ubm9kZU5hbWUpfSxpbnB1dDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gcmlucHV0cy50ZXN0KGVsZW0ubm9kZU5hbWUpfSxidXR0b246ZnVuY3Rpb24oZWxlbSl7dmFyIG5hbWU9ZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiJpbnB1dCI9PT1uYW1lJiYiYnV0dG9uIj09PWVsZW0udHlwZXx8ImJ1dHRvbiI9PT1uYW1lfSx0ZXh0OmZ1bmN0aW9uKGVsZW0pe3ZhciBhdHRyO3JldHVybiJpbnB1dCI9PT1lbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkmJiJ0ZXh0Ij09PWVsZW0udHlwZSYmKG51bGw9PShhdHRyPWVsZW0uZ2V0QXR0cmlidXRlKCJ0eXBlIikpfHwidGV4dCI9PT1hdHRyLnRvTG93ZXJDYXNlKCkpfSxmaXJzdDpjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDpjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKG1hdGNoSW5kZXhlcyxsZW5ndGgpe3JldHVybltsZW5ndGgtMV19KSxlcTpjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKG1hdGNoSW5kZXhlcyxsZW5ndGgsYXJndW1lbnQpe3JldHVyblthcmd1bWVudDwwP2FyZ3VtZW50K2xlbmd0aDphcmd1bWVudF19KSxldmVuOmNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24obWF0Y2hJbmRleGVzLGxlbmd0aCl7Zm9yKHZhciBpPTA7aTxsZW5ndGg7aSs9MiltYXRjaEluZGV4ZXMucHVzaChpKTtyZXR1cm4gbWF0Y2hJbmRleGVzfSksb2RkOmNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24obWF0Y2hJbmRleGVzLGxlbmd0aCl7Zm9yKHZhciBpPTE7aTxsZW5ndGg7aSs9MiltYXRjaEluZGV4ZXMucHVzaChpKTtyZXR1cm4gbWF0Y2hJbmRleGVzfSksbHQ6Y3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbihtYXRjaEluZGV4ZXMsbGVuZ3RoLGFyZ3VtZW50KXtmb3IodmFyIGk9YXJndW1lbnQ8MD9hcmd1bWVudCtsZW5ndGg6YXJndW1lbnQ7LS1pPj0wOyltYXRjaEluZGV4ZXMucHVzaChpKTtyZXR1cm4gbWF0Y2hJbmRleGVzfSksZ3Q6Y3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbihtYXRjaEluZGV4ZXMsbGVuZ3RoLGFyZ3VtZW50KXtmb3IodmFyIGk9YXJndW1lbnQ8MD9hcmd1bWVudCtsZW5ndGg6YXJndW1lbnQ7KytpPGxlbmd0aDspbWF0Y2hJbmRleGVzLnB1c2goaSk7cmV0dXJuIG1hdGNoSW4=", "base64"));
  res.write(new Buffer("ZGV4ZXN9KX19LEV4cHIucHNldWRvcy5udGg9RXhwci5wc2V1ZG9zLmVxO2ZvcihpIGlue3JhZGlvOiEwLGNoZWNrYm94OiEwLGZpbGU6ITAscGFzc3dvcmQ6ITAsaW1hZ2U6ITB9KUV4cHIucHNldWRvc1tpXT1jcmVhdGVJbnB1dFBzZXVkbyhpKTtmb3IoaSBpbntzdWJtaXQ6ITAscmVzZXQ6ITB9KUV4cHIucHNldWRvc1tpXT1jcmVhdGVCdXR0b25Qc2V1ZG8oaSk7cmV0dXJuIHNldEZpbHRlcnMucHJvdG90eXBlPUV4cHIuZmlsdGVycz1FeHByLnBzZXVkb3MsRXhwci5zZXRGaWx0ZXJzPW5ldyBzZXRGaWx0ZXJzLHRva2VuaXplPVNpenpsZS50b2tlbml6ZT1mdW5jdGlvbihzZWxlY3RvcixwYXJzZU9ubHkpe3ZhciBtYXRjaGVkLG1hdGNoLHRva2Vucyx0eXBlLHNvRmFyLGdyb3VwcyxwcmVGaWx0ZXJzLGNhY2hlZD10b2tlbkNhY2hlW3NlbGVjdG9yKyIgIl07aWYoY2FjaGVkKXJldHVybiBwYXJzZU9ubHk/MDpjYWNoZWQuc2xpY2UoMCk7Zm9yKHNvRmFyPXNlbGVjdG9yLGdyb3Vwcz1bXSxwcmVGaWx0ZXJzPUV4cHIucHJlRmlsdGVyO3NvRmFyOyl7bWF0Y2hlZCYmIShtYXRjaD1yY29tbWEuZXhlYyhzb0ZhcikpfHwobWF0Y2gmJihzb0Zhcj1zb0Zhci5zbGljZShtYXRjaFswXS5sZW5ndGgpfHxzb0ZhciksZ3JvdXBzLnB1c2godG9rZW5zPVtdKSksbWF0Y2hlZD0hMSwobWF0Y2g9cmNvbWJpbmF0b3JzLmV4ZWMoc29GYXIpKSYmKG1hdGNoZWQ9bWF0Y2guc2hpZnQoKSx0b2tlbnMucHVzaCh7dmFsdWU6bWF0Y2hlZCx0eXBlOm1hdGNoWzBdLnJlcGxhY2UocnRyaW0sIiAiKX0pLHNvRmFyPXNvRmFyLnNsaWNlKG1hdGNoZWQubGVuZ3RoKSk7Zm9yKHR5cGUgaW4gRXhwci5maWx0ZXIpIShtYXRjaD1tYXRjaEV4cHJbdHlwZV0uZXhlYyhzb0ZhcikpfHxwcmVGaWx0ZXJzW3R5cGVdJiYhKG1hdGNoPXByZUZpbHRlcnNbdHlwZV0obWF0Y2gpKXx8KG1hdGNoZWQ9bWF0Y2guc2hpZnQoKSx0b2tlbnMucHVzaCh7dmFsdWU6bWF0Y2hlZCx0eXBlOnR5cGUsbWF0Y2hlczptYXRjaH0pLHNvRmFyPXNvRmFyLnNsaWNlKG1hdGNoZWQubGVuZ3RoKSk7aWYoIW1hdGNoZWQpYnJlYWt9cmV0dXJuIHBhcnNlT25seT9zb0Zhci5sZW5ndGg6c29GYXI/U2l6emxlLmVycm9yKHNlbGVjdG9yKTp0b2tlbkNhY2hlKHNlbGVjdG9yLGdyb3Vwcykuc2xpY2UoMCl9LGNvbXBpbGU9U2l6emxlLmNvbXBpbGU9ZnVuY3Rpb24oc2VsZWN0b3IsbWF0Y2gpe3ZhciBpLHNldE1hdGNoZXJzPVtdLGVsZW1lbnRNYXRjaGVycz1bXSxjYWNoZWQ9Y29tcGlsZXJDYWNoZVtzZWxlY3RvcisiICJdO2lmKCFjYWNoZWQpe2ZvcihtYXRjaHx8KG1hdGNoPXRva2VuaXplKHNlbGVjdG9yKSksaT1tYXRjaC5sZW5ndGg7aS0tOyljYWNoZWQ9bWF0Y2hlckZyb21Ub2tlbnMobWF0Y2hbaV0pLGNhY2hlZFtleHBhbmRvXT9zZXRNYXRjaGVycy5wdXNoKGNhY2hlZCk6ZWxlbWVudE1hdGNoZXJzLnB1c2g=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("fShhcmd1bWVudHMpLGZpcmluZz9maXJpbmdMZW5ndGg9bGlzdC5sZW5ndGg6bWVtb3J5JiYoZmlyaW5nU3RhcnQ9c3RhcnQsZmlyZShtZW1vcnkpKX1yZXR1cm4gdGhpc30scmVtb3ZlOmZ1bmN0aW9uKCl7cmV0dXJuIGxpc3QmJmpRdWVyeS5lYWNoKGFyZ3VtZW50cyxmdW5jdGlvbihfLGFyZyl7Zm9yKHZhciBpbmRleDsoaW5kZXg9alF1ZXJ5LmluQXJyYXkoYXJnLGxpc3QsaW5kZXgpKT4tMTspbGlzdC5zcGxpY2UoaW5kZXgsMSksZmlyaW5nJiYoaW5kZXg8PWZpcmluZ0xlbmd0aCYmZmlyaW5nTGVuZ3RoLS0saW5kZXg8PWZpcmluZ0luZGV4JiZmaXJpbmdJbmRleC0tKX0pLHRoaXN9LGhhczpmdW5jdGlvbihmbil7cmV0dXJuIGZuP2pRdWVyeS5pbkFycmF5KGZuLGxpc3QpPi0xOiEoIWxpc3R8fCFsaXN0Lmxlbmd0aCl9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIGxpc3Q9W10sZmlyaW5nTGVuZ3RoPTAsdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBsaXN0PXN0YWNrPW1lbW9yeT12b2lkIDAsdGhpc30sZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hbGlzdH0sbG9jazpmdW5jdGlvbigpe3JldHVybiBzdGFjaz12b2lkIDAsbWVtb3J5fHxzZWxmLmRpc2FibGUoKSx0aGlzfSxsb2NrZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hc3RhY2t9LGZpcmVXaXRoOmZ1bmN0aW9uKGNvbnRleHQsYXJncyl7cmV0dXJuIWxpc3R8fGZpcmVkJiYhc3RhY2t8fChhcmdzPWFyZ3N8fFtdLGFyZ3M9W2NvbnRleHQsYXJncy5zbGljZT9hcmdzLnNsaWNlKCk6YXJnc10sZmlyaW5nP3N0YWNrLnB1c2goYXJncyk6ZmlyZShhcmdzKSksdGhpc30sZmlyZTpmdW5jdGlvbigpe3JldHVybiBzZWxmLmZpcmVXaXRoKHRoaXMsYXJndW1lbnRzKSx0aGlzfSxmaXJlZDpmdW5jdGlvbigpe3JldHVybiEhZmlyZWR9fTtyZXR1cm4gc2VsZn0salF1ZXJ5LmV4dGVuZCh7RGVmZXJyZWQ6ZnVuY3Rpb24oZnVuYyl7dmFyIHR1cGxlcz1bWyJyZXNvbHZlIiwiZG9uZSIsalF1ZXJ5LkNhbGxiYWNrcygib25jZSBtZW1vcnkiKSwicmVzb2x2ZWQiXSxbInJlamVjdCIsImZhaWwiLGpRdWVyeS5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksInJlamVjdGVkIl0sWyJub3RpZnkiLCJwcm9ncmVzcyIsalF1ZXJ5LkNhbGxiYWNrcygibWVtb3J5IildXSxzdGF0ZT0icGVuZGluZyIscHJvbWlzZT17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gc3RhdGV9LGFsd2F5czpmdW5jdGlvbigpe3JldHVybiBkZWZlcnJlZC5kb25lKGFyZ3VtZW50cykuZmFpbChhcmd1bWVudHMpLHRoaXN9LHRoZW46ZnVuY3Rpb24oKXt2YXIgZm5zPWFyZ3VtZW50cztyZXR1cm4galF1ZXJ5LkRlZmVycmVkKGZ1bmN0aW9uKG5ld0RlZmVyKXtqUXVlcnkuZWFjaCh0dXBsZXMsZnVuY3Rpb24oaSx0dXBsZSl7dmFyIGZuPWpRdWVyeS5pc0Z1bmN0aW9uKGZuc1tpXSkmJmZuc1tpXTtkZWZlcnJlZFt0dXBsZVsxXV0oZnVuY3Q=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("KGUsbnVsbCxlbGVtKTpqUXVlcnkuZXZlbnQuZGlzcGF0Y2guY2FsbChlbGVtLGUpLGUuaXNEZWZhdWx0UHJldmVudGVkKCkmJmV2ZW50LnByZXZlbnREZWZhdWx0KCl9fSxqUXVlcnkucmVtb3ZlRXZlbnQ9ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcj9mdW5jdGlvbihlbGVtLHR5cGUsaGFuZGxlKXtlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXImJmVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLGhhbmRsZSwhMSl9OmZ1bmN0aW9uKGVsZW0sdHlwZSxoYW5kbGUpe3ZhciBuYW1lPSJvbiIrdHlwZTtlbGVtLmRldGFjaEV2ZW50JiYodHlwZW9mIGVsZW1bbmFtZV09PT1zdHJ1bmRlZmluZWQmJihlbGVtW25hbWVdPW51bGwpLGVsZW0uZGV0YWNoRXZlbnQobmFtZSxoYW5kbGUpKX0salF1ZXJ5LkV2ZW50PWZ1bmN0aW9uKHNyYyxwcm9wcyl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBqUXVlcnkuRXZlbnQ/KHNyYyYmc3JjLnR5cGU/KHRoaXMub3JpZ2luYWxFdmVudD1zcmMsdGhpcy50eXBlPXNyYy50eXBlLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXNyYy5kZWZhdWx0UHJldmVudGVkfHx2b2lkIDA9PT1zcmMuZGVmYXVsdFByZXZlbnRlZCYmc3JjLnJldHVyblZhbHVlPT09ITE/cmV0dXJuVHJ1ZTpyZXR1cm5GYWxzZSk6dGhpcy50eXBlPXNyYyxwcm9wcyYmalF1ZXJ5LmV4dGVuZCh0aGlzLHByb3BzKSx0aGlzLnRpbWVTdGFtcD1zcmMmJnNyYy50aW1lU3RhbXB8fGpRdWVyeS5ub3coKSx2b2lkKHRoaXNbalF1ZXJ5LmV4cGFuZG9dPSEwKSk6bmV3IGpRdWVyeS5FdmVudChzcmMscHJvcHMpfSxqUXVlcnkuRXZlbnQucHJvdG90eXBlPXtpc0RlZmF1bHRQcmV2ZW50ZWQ6cmV0dXJuRmFsc2UsaXNQcm9wYWdhdGlvblN0b3BwZWQ6cmV0dXJuRmFsc2UsaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6cmV0dXJuRmFsc2UscHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cmV0dXJuVHJ1ZSxlJiYoZS5wcmV2ZW50RGVmYXVsdD9lLnByZXZlbnREZWZhdWx0KCk6ZS5yZXR1cm5WYWx1ZT0hMSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXJldHVyblRydWUsZSYmKGUuc3RvcFByb3BhZ2F0aW9uJiZlLnN0b3BQcm9wYWdhdGlvbigpLGUuY2FuY2VsQnViYmxlPSEwKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9cmV0dXJuVHJ1ZSxlJiZlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiYmZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSx0aGlzLnN0b3BQcm9wYWdhdGlvbigpfX0salF1ZXJ5LmVhY2goe21vdXNlZW50ZXI6Im1vdXNlb3ZlciIsbW91c2VsZWF2ZToibW91c2VvdXQiLHBvaW50ZXJlbnRlcjoicG9pbnRlcm92ZXIiLHBvaW50ZXJsZWF2ZToicG9pbnRlcm91dCJ9LGZ1bmN0aW9uKG9yaWcsZml4KXtqUXVlcnkuZXZlbnQuc3BlY2lhbFtvcmlnXT17ZGVsZWdhdGVUeXBlOmZpeCxiaW5kVHlwZTpmaXgsaGFuZGxlOmZ1bmN0aW9uKGV2ZW50KXt2YXIgcmV0LHRhcmdldD10aGlzLHJlbGF0ZWQ9ZXZlbnQucmVsYXRlZFRhcmdldCxoYW5kbGVPYmo9ZXZlbnQuaGFuZGxlT2JqO3JldHVybiByZWxhdGVkJiYocmVsYXRlZD09PXRhcmdldHx8alF1ZXJ5LmNvbnRhaW5zKHRhcmdldCxyZWxhdGVkKSl8fChldmVudC50eXBlPWhhbmRsZU9iai5vcmlnVHlwZSxyZXQ9aGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGV2ZW50LnR5cGU9Zml4KSxyZXR9fX0pLHN1cHBvcnQuc3VibWl0QnViYmxlc3x8KGpRdWVyeS5ldmVudC5zcGVjaWFsLnN1Ym1pdD17c2V0dXA6ZnVuY3Rpb24oKXtyZXR1cm4halF1ZXJ5Lm5vZGVOYW1lKHRoaXMsImZvcm0iKSYmdm9pZCBqUXVlcnkuZXZlbnQuYWRkKHRoaXMsImNsaWNrLl9zdWJtaXQga2V5cHJlc3MuX3N1Ym1pdCIsZnVuY3Rpb24oZSl7dmFyIGVsZW09ZS50YXJnZXQsZm9ybT1qUXVlcnkubm9kZU5hbWUoZWxlbSwiaW5wdXQiKXx8alF1ZXJ5Lm5vZGVOYW1lKGVsZW0sImJ1dHRvbiIpP2VsZW0uZm9ybTp2b2lkIDA7Zm9ybSYmIWpRdWVyeS5fZGF0YShmb3JtLCJzdWJtaXRCdWJibGVzIikmJihqUXVlcnkuZXZlbnQuYWRkKGZvcm0sInN1Ym1pdC5fc3VibWl0IixmdW5jdGlvbihldmVudCl7ZXZlbnQuX3N1Ym1pdF9idWJibGU9ITB9KSxqUXVlcnkuX2RhdGEoZm9ybSwic3VibWl0QnViYmxlcyIsITApKX0pfSxwb3N0RGlzcGF0Y2g6ZnVuY3Rpb24oZXZlbnQpe2V2ZW50Ll9zdWJtaXRfYnViYmxlJiYoZGVsZXRlIGV2ZW50Ll9zdWJtaXRfYnViYmxlLHRoaXMucGFyZW50Tm9kZSYmIWV2ZW50LmlzVHJpZ2dlciYmalF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCJzdWJtaXQiLHRoaXMucGFyZW50Tm9kZSxldmVudCwhMCkpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3JldHVybiFqUXVlcnkubm9kZU5hbWUodGhpcywiZm9ybSIpJiZ2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUodGhpcywiLl9zdWJtaXQiKX19KSxzdXBwb3J0LmNoYW5nZUJ1YmJsZXN8fChqUXVlcnkuZXZlbnQuc3BlY2lhbC5jaGFuZ2U9e3NldHVwOmZ1bmN0aW9uKCl7cmV0dXJuIHJmb3JtRWxlbXMudGVzdCh0aGlzLm5vZGVOYW1lKT8oImNoZWNrYm94IiE9PXRoaXMudHlwZSYmInJhZGlvIiE9PXRoaXMudHlwZXx8KGpRdWVyeS5ldmVudC5hZGQodGhpcywicHJvcGVydHljaGFuZ2UuX2NoYW5nZSIsZnVuY3Rpb24oZXZlbnQpeyJjaGVja2VkIj09PWV2ZW50Lm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lJiYodGhpcy5fanVzdF9jaGFuZ2VkPSEwKX0pLGpRdWVyeS5ldmVudC5hZGQodGhpcywiY2xpY2suX2NoYW5nZSIsZnVuY3Rpb24oZXZlbnQpe3RoaXMuX2p1c3RfY2hhbmdlZCYmIWV2ZW50LmlzVHJpZ2dlciYmKHRoaXMuX2p1c3RfY2hhbmdlZD0hMSksalF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCJjaGFuZ2UiLHRoaXMsZXZlbnQsITApfSkpLCExKTp2b2lkIGpRdWVyeS5ldmVudC5hZGQodGhpcywiYmVmb3JlYWN0aXZhdGUuX2NoYW5nZSIsZnVuY3Rpb24oZSl7dmFyIGVsZW09ZS50YXJnZXQ7cmZvcm1FbGVtcy50ZXN0KGVsZW0ubm9kZU5hbWUpJiYhalF1ZXJ5Ll9kYXRhKGVsZW0sImNoYW5nZUJ1YmJsZXMiKSYmKGpRdWVyeS5ldmVudC5hZGQoZWxlbSwiY2hhbmdlLl9jaGFuZ2UiLGZ1bmN0aW9uKGV2ZW50KXshdGhpcy5wYXJlbnROb2RlfHxldmVudC5pc1NpbXVsYXRlZHx8ZXZlbnQuaXNUcmlnZ2VyfHxqUXVlcnkuZXZlbnQuc2ltdWxhdGUoImNoYW5nZSIsdGhpcy5wYXJlbnROb2RlLGV2ZW50LCEwKX0pLGpRdWVyeS5fZGF0YShlbGVtLCJjaGFuZ2VCdWJibGVzIiwhMCkpfSl9LGhhbmRsZTpmdW5jdGlvbihldmVudCl7dmFyIGVsZW09ZXZlbnQudGFyZ2V0O2lmKHRoaXMhPT1lbGVtfHxldmVudC5pc1NpbXVsYXRlZHx8ZXZlbnQuaXNUcmlnZ2VyfHwicmFkaW8iIT09ZWxlbS50eXBlJiYiY2hlY2tib3giIT09ZWxlbS50eXBlKXJldHVybiBldmVudC5oYW5kbGVPYmouaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7cmV0dXJuIGpRdWVyeS5ldmVudC5yZW1vdmUodGhpcywiLl9jaGFuZ2UiKSwhcmZvcm1FbGVtcy50ZXN0KHRoaXMubm9kZU5hbWUpfX0pLHN1cHBvcnQuZm9jdXNpbkJ1YmJsZXN8fGpRdWVyeS5lYWNoKHtmb2N1czoiZm9jdXNpbiIsYmx1cjoiZm9jdXNvdXQifSxmdW5jdGlvbihvcmlnLGZpeCl7dmFyIGhhbmRsZXI9ZnVuY3Rpb24oZXZlbnQpe2pRdWVyeS5ldmVudC5zaW11bGF0ZShmaXgsZXZlbnQudGFyZ2V0LGpRdWVyeS5ldmVudC5maXgoZXZlbnQpLCEwKX07alF1ZXJ5LmV2ZW50LnNwZWNpYWxbZml4XT17c2V0dXA6ZnVuY3Rpb24oKXt2YXIgZG9jPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyxhdHRhY2hlcz1qUXVlcnkuX2RhdGEoZG9jLGZpeCk7YXR0YWNoZXN8fGRvYy5hZGRFdmVudExpc3RlbmVyKG9yaWcsaGFuZGxlciwhMCksalF1ZXJ5Ll9kYXRhKGRvYyxmaXgsKGF0dGFjaGVzfHwwKSsxKX0sdGVhcmRvd246ZnVuY3Rpb24oKXt2YXIgZG9jPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyxhdHRhY2hlcz1qUXVlcnkuX2RhdGEoZG9jLGZpeCktMTthdHRhY2hlcz9qUXVlcnkuX2RhdGEoZG9jLGZpeCxhdHRhY2hlcyk6KGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKG9yaWcsaGFuZGxlciwhMCksalF1ZXJ5Ll9yZW1vdmVEYXRhKGRvYyxmaXgpKX19fSksalF1ZXJ5LmZuLmV4dGVuZCh7b246ZnVuY3Rpb24odHlwZXMsc2VsZWN0b3IsZGF0YSxmbixvbmUpe3ZhciB0eXBlLG9yaWdGbjtpZigib2JqZWN0Ij09dHlwZW9mIHR5cGVzKXsic3RyaW5nIiE9dHlwZW9mIHNlbGVjdG9yJiYoZGF0YT1kYXRhfHxzZWxlY3RvcixzZWxlY3Rvcj12b2lkIDApO2Zvcih0eXBlIGluIHR5cGVzKXRoaXMub24odHlwZSxzZWxlY3RvcixkYXRhLHR5cGVzW3R5cGVdLG9uZSk7cmV0dXJuIHRoaXN9aWYobnVsbD09ZGF0YSYmbnVsbD09Zm4/KGZuPXNlbGVjdG9yLGRhdGE9c2VsZWN0b3I9dm9pZCAwKTpudWxsPT1mbiYmKCJzdHJpbmciPT10eXBlb2Ygc2VsZWN0b3I/KGZuPWRhdGEsZGF0YT12b2lkIDApOihmbj1kYXRhLGRhdGE9c2VsZWN0b3Isc2VsZWN0b3I9dm9pZCAwKSksZm49PT0hMSlmbj1yZXR1cm5GYWxzZTtlbHNlIGlmKCFmbilyZXR1cm4gdGhpcztyZXR1cm4gMT09PW9uZSYmKG9yaWdGbj1mbixmbj1mdW5jdGlvbihldmVudCl7cmV0dXJuIGpRdWVyeSgpLm9mZihldmVudCksb3JpZ0ZuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZm4uZ3VpZD1vcmlnRm4uZ3VpZHx8KG9yaWdGbi5ndWlkPWpRdWVyeS5ndWlkKyspKSx0aGlzLmVhY2goZnVuY3Rpb24oKXtqUXVlcnkuZXZlbnQuYWRkKHRoaXMsdHlwZXMsZm4sZGF0YSxzZWxlY3Rvcil9KX0sb25lOmZ1bmN0aW9uKHR5cGVzLHNlbGVjdG9yLGRhdGEsZm4pe3JldHVybiB0aGlzLm9uKHR5cGVzLHNlbGVjdG9yLGRhdGEsZm4sMSl9LG9mZjpmdW5jdGlvbih0eXBlcyxzZWxlY3Rvcixmbil7dmFyIGhhbmRsZU9iaix0eXBlO2lmKHR5cGVzJiZ0eXBlcy5wcmV2ZW50RGVmYXVsdCYmdHlwZXMuaGFuZGxlT2JqKXJldHVybiBoYW5kbGVPYmo9dHlwZXMuaGFuZGxlT2JqLGpRdWVyeSh0eXBlcy5kZWxlZ2F0ZVRhcmdldCkub2ZmKGhhbmRsZU9iai5uYW1lc3BhY2U/aGFuZGxlT2JqLm9yaWdUeXBlKyIuIitoYW5kbGVPYmoubmFtZXNwYWNlOmhhbmRsZU9iai5vcmlnVHlwZSxoYW5kbGVPYmouc2VsZWN0b3IsaGFuZGxlT2JqLmhhbmRsZXIpLHRoaXM7aWYoIm9iamVjdCI9PXR5cGVvZiB0eXBlcyl7Zm9yKHR5cGUgaW4gdHlwZXMpdGhpcy5vZmYodHlwZSxzZWxlY3Rvcix0eXBlc1t0eXBlXSk7cmV0dXJuIHRoaXN9cmV0dXJuIHNlbGVjdG9yIT09ITEmJiJmdW5jdGlvbiIhPXR5cGVvZiBzZWxlY3Rvcnx8KGZuPXNlbGVjdG9yLHNlbGVjdG9yPXZvaWQgMCksZm49PT0hMSYmKGZuPXJldHVybkZhbHNlKSx0aGlzLmVhY2goZnVuY3Rpb24oKXtqUXVlcnkuZXZlbnQucmVtb3ZlKHRoaXMsdHlwZXMsZm4sc2VsZWN0b3IpfSl9LHRyaWdnZXI6ZnVuY3Rpb24odHlwZSxkYXRhKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7alF1ZXJ5LmV2ZW50LnRyaWdnZXIodHlwZSxkYXRhLHRoaXMpfSl9LHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKHR5cGUsZGF0YSl7dmFyIGVsZW09dGhpc1swXTtpZihlbGVtKXJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlcih0eXBlLGRhdGEsZWxlbSw=", "base64"));
  res.write(new Buffer("ITApfX0pO3ZhciBub2RlTmFtZXM9ImFiYnJ8YXJ0aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8ZGV0YWlsc3xmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8aGVhZGVyfGhncm91cHxtYXJrfG1ldGVyfG5hdnxvdXRwdXR8cHJvZ3Jlc3N8c2VjdGlvbnxzdW1tYXJ5fHRpbWV8dmlkZW8iLHJpbmxpbmVqUXVlcnk9LyBqUXVlcnlcZCs9Iig/Om51bGx8XGQrKSIvZyxybm9zaGltY2FjaGU9bmV3IFJlZ0V4cCgiPCg/OiIrbm9kZU5hbWVzKyIpW1xccy8+XSIsImkiKSxybGVhZGluZ1doaXRlc3BhY2U9L15ccysvLHJ4aHRtbFRhZz0vPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXHc6XSspW14+XSopXC8+L2dpLHJ0YWdOYW1lPS88KFtcdzpdKykvLHJ0Ym9keT0vPHRib2R5L2kscmh0bWw9Lzx8JiM/XHcrOy8scm5vSW5uZXJodG1sPS88KD86c2NyaXB0fHN0eWxlfGxpbmspL2kscmNoZWNrZWQ9L2NoZWNrZWRccyooPzpbXj1dfD1ccyouY2hlY2tlZC4pL2kscnNjcmlwdFR5cGU9L14kfFwvKD86amF2YXxlY21hKXNjcmlwdC9pLHJzY3JpcHRUeXBlTWFza2VkPS9edHJ1ZVwvKC4qKS8scmNsZWFuU2NyaXB0PS9eXHMqPCEoPzpcW0NEQVRBXFt8LS0pfCg/OlxdXF18LS0pPlxzKiQvZyx3cmFwTWFwPXtvcHRpb246WzEsIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz4iLCI8L3NlbGVjdD4iXSxsZWdlbmQ6WzEsIjxmaWVsZHNldD4iLCI8L2ZpZWxkc2V0PiJdLGFyZWE6WzEsIjxtYXA+IiwiPC9tYXA+Il0scGFyYW06WzEsIjxvYmplY3Q+IiwiPC9vYmplY3Q+Il0sdGhlYWQ6WzEsIjx0YWJsZT4iLCI8L3RhYmxlPiJdLHRyOlsyLCI8dGFibGU+PHRib2R5PiIsIjwvdGJvZHk+PC90YWJsZT4iXSxjb2w6WzIsIjx0YWJsZT48dGJvZHk+PC90Ym9keT48Y29sZ3JvdXA+IiwiPC9jb2xncm91cD48L3RhYmxlPiJdLHRkOlszLCI8dGFibGU+PHRib2R5Pjx0cj4iLCI8L3RyPjwvdGJvZHk+PC90YWJsZT4iXSxfZGVmYXVsdDpzdXBwb3J0Lmh0bWxTZXJpYWxpemU/WzAsIiIsIiJdOlsxLCJYPGRpdj4iLCI8L2Rpdj4iXX0sc2FmZUZyYWdtZW50PWNyZWF0ZVNhZmVGcmFnbWVudChkb2N1bWVudCksZnJhZ21lbnREaXY9c2FmZUZyYWdtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpKTt3cmFwTWFwLm9wdGdyb3VwPXdyYXBNYXAub3B0aW9uLHdyYXBNYXAudGJvZHk9d3JhcE1hcC50Zm9vdD13cmFwTWFwLmNvbGdyb3VwPXdyYXBNYXAuY2FwdGlvbj13cmFwTWFwLnRoZWFkLHdyYXBNYXAudGg9d3JhcE1hcC50ZCxqUXVlcnkuZXh0ZW5kKHtjbG9uZTpmdW5jdGlvbihlbGVtLGRhdGFBbmRFdmVudHMsZGVlcERhdGFBbmRFdmVudHMpe3ZhciBkZXN0RWxlbWVudHMsbm9kZSxjbG9uZSxpLHNyY0VsZW1lbnRzLGluUGFnZT1qUXVlcnkuY29udGFpbnMoZWxlbS5vd25lckRvY3VtZW50LGVsZW0pO2lmKHN1cHBvcnQuaHRtbDVDbG9uZXx8alF1ZXJ5LmlzWE1MRG9jKGVsZW0pfHwhcm5vc2hpbWNhY2hlLnRlc3QoIjwiK2VsZW0ubm9kZU5hbWUrIj4iKT9jbG9uZT1lbGVtLmNsb25lTm9kZSghMCk6KGZyYWdtZW50RGl2LmlubmVySFRNTD1lbGVtLm91dGVySFRNTCxmcmFnbWVudERpdi5yZW1vdmVDaGlsZChjbG9uZT1mcmFnbWVudERpdi5maXJzdENoaWxkKSksIShzdXBwb3J0Lm5vQ2xvbmVFdmVudCYmc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZHx8MSE9PWVsZW0ubm9kZVR5cGUmJjExIT09ZWxlbS5ub2RlVHlwZXx8alF1ZXJ5LmlzWE1MRG9jKGVsZW0pKSlmb3IoZGVzdEVsZW1lbnRzPWdldEFsbChjbG9uZSksc3JjRWxlbWVudHM9Z2V0QWxsKGVsZW0pLGk9MDtudWxsIT0obm9kZT1zcmNFbGVtZW50c1tpXSk7KytpKWRlc3RFbGVtZW50c1tpXSYmZml4Q2xvbmVOb2RlSXNzdWVzKG5vZGUsZGVzdEVsZW1lbnRzW2ldKTtpZihkYXRhQW5kRXZlbnRzKWlmKGRlZXBEYXRhQW5kRXZlbnRzKWZvcihzcmNFbGVtZW50cz1zcmNFbGVtZW50c3x8Z2V0QWxsKGVsZW0pLGRlc3RFbGVtZW50cz1kZXN0RWxlbWVudHN8fGdldEFsbChjbG9uZSksaT0wO251bGwhPShub2RlPXNyY0VsZW1lbnRzW2ldKTtpKyspY2xvbmVDb3B5RXZlbnQobm9kZSxkZXN0RWxlbWVudHNbaV0pO2Vsc2UgY2xvbmVDb3B5RXZlbnQoZWxlbSxjbG9uZSk7CnJldHVybiBkZXN0RWxlbWVudHM9Z2V0QWxsKGNsb25lLCJzY3JpcHQiKSxkZXN0RWxlbWVudHMubGVuZ3RoPjAmJnNldEdsb2JhbEV2YWwoZGVzdEVsZW1lbnRzLCFpblBhZ2UmJmdldEFsbChlbGVtLCJzY3JpcHQiKSksZGVzdEVsZW1lbnRzPXNyY0VsZW1lbnRzPW5vZGU9bnVsbCxjbG9uZX0sYnVpbGRGcmFnbWVudDpmdW5jdGlvbihlbGVtcyxjb250ZXh0LHNjcmlwdHMsc2VsZWN0aW9uKXtmb3IodmFyIGosZWxlbSxjb250YWlucyx0bXAsdGFnLHRib2R5LHdyYXAsbD1lbGVtcy5sZW5ndGgsc2FmZT1jcmVhdGVTYWZlRnJhZ21lbnQoY29udGV4dCksbm9kZXM9W10saT0wO2k8bDtpKyspaWYoZWxlbT1lbGVtc1tpXSxlbGVtfHwwPT09ZWxlbSlpZigib2JqZWN0Ij09PWpRdWVyeS50eXBlKGVsZW0pKWpRdWVyeS5tZXJnZShub2RlcyxlbGVtLm5vZGVUeXBlP1tlbGVtXTplbGVtKTtlbHNlIGlmKHJodG1sLnRlc3QoZWxlbSkpe2Zvcih0bXA9dG1wfHxzYWZlLmFwcGVuZENoaWxkKGNvbnRleHQuY3JlYXRlRWxlbWVudCgiZGl2IikpLHRhZz0ocnRhZ05hbWUuZXhlYyhlbGVtKXx8WyIiLCIiXSlbMV0udG9Mb3dlckNhc2UoKSx3cmFwPXdyYXBNYXBbdGFnXXx8d3JhcE1hcC5fZGVmYXVsdCx0bXAuaW5uZXJIVE1MPXdyYXBbMV0rZWxlbS5yZXBsYWNlKHJ4aHRtbFRhZywiPCQxPjwvJDI+Iikrd3JhcFsyXSxqPXdyYXBbMF07ai0tOyl0bXA9dG1wLmxhc3RDaGlsZDtpZighc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSYmcmxlYWRpbmdXaGl0ZXNwYWNlLnRlc3QoZWxlbSkmJm5vZGVzLnB1c2goY29udGV4dC5jcmVhdGVUZXh0Tm9kZShybGVhZGluZ1doaXRlc3BhY2UuZXhlYyhlbGVtKVswXSkpLCFzdXBwb3J0LnRib2R5KWZvcihlbGVtPSJ0YWJsZSIhPT10YWd8fHJ0Ym9keS50ZXN0KGVsZW0pPyI8dGFibGU+IiE9PXdyYXBbMV18fHJ0Ym9keS50ZXN0KGVsZW0pPzA6dG1wOnRtcC5maXJzdENoaWxkLGo9ZWxlbSYmZWxlbS5jaGlsZE5vZGVzLmxlbmd0aDtqLS07KWpRdWVyeS5ub2RlTmFtZSh0Ym9keT1lbGVtLmNoaWxkTm9kZXNbal0sInRib2R5IikmJiF0Ym9keS5jaGlsZE5vZGVzLmxlbmd0aCYmZWxlbS5yZW1vdmVDaGlsZCh0Ym9keSk7Zm9yKGpRdWVyeS5tZXJnZShub2Rlcyx0bXAuY2hpbGROb2RlcyksdG1wLnRleHRDb250ZW50PSIiO3RtcC5maXJzdENoaWxkOyl0bXAucmVtb3ZlQ2hpbGQodG1wLmZpcnN0Q2hpbGQpO3RtcD1zYWZlLmxhc3RDaGlsZH1lbHNlIG5vZGVzLnB1c2goY29udGV4dC5jcmVhdGVUZXh0Tm9kZShlbGVtKSk7Zm9yKHRtcCYmc2FmZS5yZW1vdmVDaGlsZCh0bXApLHN1cHBvcnQuYXBwZW5kQ2hlY2tlZHx8alF1ZXJ5LmdyZXAoZ2V0QWxsKG5vZGVzLCJpbnB1dCIpLGZpeERlZmF1bHRDaGVja2VkKSxpPTA7ZWxlbT1ub2Rlc1tpKytdOylpZigoIXNlbGVjdGlvbnx8alF1ZXJ5LmluQXJyYXkoZWxlbSxzZWxlY3Rpb24pPT09LTEpJiYoY29udGFpbnM9alF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKSx0bXA9Z2V0QWxsKHNhZmUuYXBwZW5kQ2hpbGQoZWxlbSksInNjcmlwdCIpLGNvbnRhaW5zJiZzZXRHbG9iYWxFdmFsKHRtcCksc2NyaXB0cykpZm9yKGo9MDtlbGVtPXRtcFtqKytdOylyc2NyaXB0VHlwZS50ZXN0KGVsZW0udHlwZXx8IiIpJiZzY3JpcHRzLnB1c2goZWxlbSk7cmV0dXJuIHRtcD1udWxsLHNhZmV9LGNsZWFuRGF0YTpmdW5jdGlvbihlbGVtcyxhY2NlcHREYXRhKXtmb3IodmFyIGVsZW0sdHlwZSxpZCxkYXRhLGk9MCxpbnRlcm5hbEtleT1qUXVlcnkuZXhwYW5kbyxjYWNoZT1qUXVlcnkuY2FjaGUsZGVsZXRlRXhwYW5kbz1zdXBwb3J0LmRlbGV0ZUV4cGFuZG8sc3BlY2lhbD1qUXVlcnkuZXZlbnQuc3BlY2lhbDtudWxsIT0oZWxlbT1lbGVtc1tpXSk7aSsrKWlmKChhY2NlcHREYXRhfHxqUXVlcnkuYWNjZXB0RGF0YShlbGVtKSkmJihpZD1lbGVtW2ludGVybmFsS2V5XSxkYXRhPWlkJiZjYWNoZVtpZF0pKXtpZihkYXRhLmV2ZW50cylmb3IodHlwZSBpbiBkYXRhLmV2ZW50cylzcGVjaWFsW3R5cGVdP2pRdWVyeS5ldmVudC5yZW1vdmUoZWxlbSx0eXBlKTpqUXVlcnkucmVtb3ZlRXZlbnQoZWxlbSx0eXBlLGRhdGEuaGFuZGxlKTtjYWNoZVtpZF0mJihkZWxldGUgY2FjaGVbaWRdLGRlbGV0ZUV4cGFuZG8/ZGVsZXRlIGVsZW1baW50ZXJuYWxLZXldOnR5cGVvZiBlbGVtLnJl", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("d2FyZSIpLCB0byBkZWFsCglpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzCgl0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCgljb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMKCWZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgkKCVRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCglhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KCQoJVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKCUlNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAoJRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCglBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCglMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLAoJT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTgoJVEhFIFNPRlRXQVJFLgoJCgkqLwohZnVuY3Rpb24ocm9vdCxmYWN0b3J5KXttb2R1bGUuZXhwb3J0cz1mYWN0b3J5KCl9KHRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24obW9kdWxlcyl7ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCl7aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pcmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7dmFyIG1vZHVsZT1pbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXT17ZXhwb3J0czp7fSxpZDptb2R1bGVJZCxsb2FkZWQ6ITF9O3JldHVybiBtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLG1vZHVsZSxtb2R1bGUuZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKSxtb2R1bGUubG9hZGVkPSEwLG1vZHVsZS5leHBvcnRzfXZhciBpbnN0YWxsZWRNb2R1bGVzPXt9O3JldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLm09bW9kdWxlcyxfX3dlYnBhY2tfcmVxdWlyZV9fLmM9aW5zdGFsbGVkTW9kdWxlcyxfX3dlYnBhY2tfcmVxdWlyZV9fLnA9IiIsX193ZWJwYWNrX3JlcXVpcmVfXygwKX0oW2Z1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBjcmVhdGUoKXt2YXIgaGI9X2NyZWF0ZSgpO3JldHVybiBoYi5jb21waWxlPWZ1bmN0aW9uKGlucHV0LG9wdGlvbnMpe3JldHVybiBfaGFuZGxlYmFyc0NvbXBpbGVyQ29tcGlsZXIuY29tcGlsZShpbnB1dCxvcHRpb25zLGhiKX0saGIucHJlY29tcGlsZT1mdW5jdGlvbihpbnB1dCxvcHRpb25zKXtyZXR1cm4gX2hhbmRsZWJhcnNDb21waWxlckNvbXBpbGVyLnByZWNvbXBpbGUoaW5wdXQsb3B0aW9ucyxoYil9LGhiLkFTVD1faGFuZGxlYmFyc0NvbXBpbGVyQXN0MlsiZGVmYXVsdCJdLGhiLkNvbXBpbGVyPV9oYW5kbGViYXJzQ29tcGlsZXJDb21waWxlci5Db21waWxlcixoYi5KYXZhU2NyaXB0Q29tcGlsZXI9X2hhbmRsZWJhcnNDb21waWxlckphdmFzY3JpcHRDb21waWxlcjJbImRlZmF1bHQiXSxoYi5QYXJzZXI9X2hhbmRsZWJhcnNDb21waWxlckJhc2UucGFyc2VyLGhiLnBhcnNlPV9oYW5kbGViYXJzQ29tcGlsZXJCYXNlLnBhcnNlLGhifXZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PV9fd2VicGFja19yZXF1aXJlX18oMSlbImRlZmF1bHQiXTtleHBvcnRzLl9fZXNNb2R1bGU9ITA7dmFyIF9oYW5kbGViYXJzUnVudGltZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDIpLF9oYW5kbGViYXJzUnVudGltZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGFuZGxlYmFyc1J1bnRpbWUpLF9oYW5kbGViYXJzQ29tcGlsZXJBc3Q9X193ZWJwYWNrX3JlcXVpcmVfXygzNSksX2hhbmRsZWJhcnNDb21waWxlckFzdDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGFuZGxlYmFyc0NvbXBpbGVyQXN0KSxfaGFuZGxlYmFyc0NvbXBpbGVyQmFzZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDM2KSxfaGFuZGxlYmFyc0NvbXBpbGVyQ29tcGlsZXI9X193ZWJwYWNrX3JlcXVpcmVfXyg0MSksX2hhbmRsZWJhcnNDb21waWxlckphdmFzY3JpcHRDb21waWxlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDQyKSxfaGFuZGxlYmFyc0NvbXBpbGVySmF2YXNjcmlwdENvbXBpbGVyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzQ29tcGlsZXJKYXZhc2NyaXB0Q29tcGlsZXIpLF9oYW5kbGViYXJzQ29tcGlsZXJWaXNpdG9yPV9fd2VicGFja19yZXF1aXJlX18oMzkpLF9oYW5kbGViYXJzQ29tcGlsZXJWaXNpdG9yMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzQ29tcGlsZXJWaXNpdG9yKSxfaGFuZGxlYmFyc05vQ29uZmxpY3Q9X193ZWJwYWNrX3JlcXVpcmVfXygzNCksX2hhbmRsZWJhcnNOb0NvbmZsaWN0Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYW5kbGViYXJzTm9Db25mbGljdCksX2NyZWF0ZT1faGFuZGxlYmFyc1J1bnRpbWUyWyJkZWZhdWx0Il0uY3JlYXRlLGluc3Q9Y3JlYXRlKCk7aW5zdC5jcmVhdGU9Y3JlYXRlLF9oYW5kbGViYXJzTm9Db25mbGljdDJbImRlZmF1bHQiXShpbnN0KSxpbnN0LlZpc2l0b3I9X2hhbmRsZWJhcnNDb21waWxlclZpc2l0b3IyWyJkZWZhdWx0Il0saW5zdFsiZGVmYXVsdCJdPWluc3QsZXhwb3J0c1siZGVmYXVsdCJdPWluc3QsbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO2V4cG9ydHNbImRlZmF1bHQiXT1mdW5jdGlvbihvYmope3JldHVybiBvYmomJm9iai5fX2VzTW9kdWxlP29iajp7ImRlZmF1bHQiOm9ian19LGV4cG9ydHMuX19lc01vZHVsZT0hMH0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGNyZWF0ZSgpe3ZhciBoYj1uZXcgYmFzZS5IYW5kbGViYXJzRW52aXJvbm1lbnQ7cmV0dXJuIFV0aWxzLmV4dGVuZChoYixiYXNlKSxoYi5TYWZlU3RyaW5nPV9oYW5kbGViYXJzU2FmZVN0cmluZzJbImRlZmF1bHQiXSxoYi5FeGNlcHRpb249X2hhbmRsZWJhcnNFeGNlcHRpb24yWyJkZWZhdWx0Il0saGIuVXRpbHM9VXRpbHMsaGIuZXNjYXBlRXhwcmVzc2lvbj1VdGlscy5lc2NhcGVFeHByZXNzaW9uLGhiLlZNPXJ1bnRpbWUsaGIudGVtcGxhdGU9ZnVuY3Rpb24oc3BlYyl7cmV0dXJuIHJ1bnRpbWUudGVtcGxhdGUoc3BlYyxoYil9LGhifXZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZD1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpWyJkZWZhdWx0Il0sX2ludGVyb3BSZXF1aXJlRGVmYXVsdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpWyJkZWZhdWx0Il07ZXhwb3J0cy5fX2VzTW9kdWxlPSEwO3ZhciBfaGFuZGxlYmFyc0Jhc2U9X193ZWJwYWNrX3JlcXVpcmVfXyg0KSxiYXNlPV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKF9oYW5kbGViYXJzQmFzZSksX2hhbmRsZWJhcnNTYWZlU3RyaW5nPV9fd2VicGFja19yZXF1aXJlX18oMjEpLF9oYW5kbGViYXJzU2FmZVN0cmluZzI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGFuZGxlYmFyc1NhZmVTdHJpbmcpLF9oYW5kbGViYXJzRXhjZXB0aW9uPV9fd2VicGFja19yZXF1aXJlX18oNiksX2hhbmRsZWJhcnNFeGNlcHRpb24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hhbmRsZWJhcnNFeGNlcHRpb24pLF9oYW5kbGViYXJzVXRpbHM9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxVdGlscz1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaGFuZGxlYmFyc1V0aWxzKSxfaGFuZGxlYmFyc1J1bnRpbWU9X193ZWJwYWNrX3JlcXVpcmVfXygyMikscnVudGltZT1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaGFuZGxlYmFyc1J1bnRpbWUpLF9oYW5kbGViYXJzTm9Db25mbGljdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDM0KSxfaGFuZGxlYmFyc05vQ29uZmxpY3QyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hhbmRsZWJhcnNOb0NvbmZsaWN0KSxpbnN0PWNyZWF0ZSgpO2luc3QuY3JlYXRlPWNyZWF0ZSxfaGFuZGxlYmFyc05vQ29uZmxpY3QyWyJkZWZhdWx0Il0oaW5zdCksaW5zdFsiZGVmYXVsdCJdPWluc3QsZXhwb3J0c1siZGVmYXVsdCJdPWluc3QsbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO2V4cG9ydHNbImRlZmF1bHQiXT1mdW5jdGlvbihvYmope2lmKG9iaiYmb2JqLl9fZXNNb2R1bGUpcmV0dXJuIG9iajt2YXIgbmV3T2JqPXt9O2lmKG51bGwhPW9iailmb3IodmFyIGtleSBpbiBvYmopT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpJiYobmV3T2JqW2tleV09b2JqW2tleV0pO3JldHVybiBuZXdPYmpbImRlZmF1bHQiXT1vYmosbmV3T2JqfSxleHBvcnRzLl9fZXNNb2R1bGU9ITB9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBIYW5kbGViYXJzRW52aXJvbm1lbnQoaGVscGVycyxwYXJ0aWFscyxkZWNvcmF0b3JzKXt0aGlzLmhlbHBlcnM9aGVscGVyc3x8e30sdGhpcy5wYXJ0aWFscz1wYXJ0aWFsc3x8e30sdGhpcy5kZWNvcmF0b3JzPWRlY29yYXRvcnN8fHt9LF9oZWxwZXJzLnJlZ2lzdGVyRGVmYXVsdEhlbHBlcnModGhpcyksX2RlY29yYXRvcnMucmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyh0aGlzKX12YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpWyJkZWZhdWx0Il07ZXhwb3J0cy5fX2VzTW9kdWxlPSEwLGV4cG9ydHMuSGFuZGxlYmFyc0Vudmlyb25tZW50PUhhbmRsZWJhcnNFbnZpcm9ubWVudDt2YXIgX3V0aWxzPV9fd2VicGFja19yZXF1aXJlX18oNSksX2V4Y2VwdGlvbj1fX3dlYnBhY2tfcmVxdWlyZV9fKDYpLF9leGNlcHRpb24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4Y2VwdGlvbiksX2hlbHBlcnM9X193ZWJwYWNrX3JlcXVpcmVfXygxMCksX2RlY29yYXRvcnM9X193ZWJwYWNrX3JlcXVpcmVfXygxOCksX2xvZ2dlcj1fX3dlYnBhY2tfcmVxdWlyZV9fKDIwKSxfbG9nZ2VyMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2dnZXIpLFZFUlNJT049IjQuMC4xMCI7ZXhwb3J0cy5WRVJTSU9OPVZFUlNJT047dmFyIENPTVBJTEVSX1JFVklTSU9OPTc7ZXhwb3J0cy5DT01QSUxFUl9SRVZJU0lPTj1DT01QSUxFUl9SRVZJU0lPTjt2YXIgUkVWSVNJT05fQ0hBTkdFUz17MToiPD0gMS4wLnJjLjIiLDI6Ij09IDEuMC4wLXJjLjMiLDM6Ij09IDEuMC4wLXJjLjQiLDQ6Ij09IDEueC54Iiw1OiI9PSAyLjAuMC1hbHBoYS54Iiw2OiI+PSAyLjAuMC1iZXRhLjEiLDc6Ij49IDQuMC4wIn07ZXhwb3J0cy5SRVZJU0lPTl9DSEFOR0VTPVJFVklTSU9OX0NIQU5HRVM7dmFyIG9iamVjdFR5cGU9IltvYmplY3QgT2JqZWN0XSI7SGFuZGxlYmFyc0Vudmlyb25tZW50LnByb3RvdHlwZT17Y29uc3RydWN0b3I6SGFuZGxlYmFyc0Vudmlyb25tZW50LGxvZ2dlcjpfbG9nZ2VyMlsiZGVmYXVsdCJdLGxvZzpfbG9nZ2VyMlsiZGVmYXVsdCJdLmxvZyxyZWdpc3RlckhlbHBlcjpmdW5jdGlvbihuYW1lLGZuKXtpZihfdXRpbHMudG9TdHJpbmcuY2FsbChuYW1lKT09PW9iamVjdFR5cGUpe2lmKGZuKXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMiKTtfdXRpbHMuZXh0ZW5kKHRoaXMuaGVscGVycyxuYW1lKX1lbHNlIHRoaXMuaGVscGVyc1tuYW1lXT1mbn0sdW5yZWdpc3RlckhlbHBlcjpmdW5jdGlvbihuYW1lKXtkZWxldGUgdGhpcy5oZWxwZXJzW25hbWVdfSxyZWdpc3RlclBhcnRpYWw6ZnVuY3Rpb24obmFtZSxwYXJ0aWFsKXtpZihfdXRpbHMudG9TdHJpbmcuY2FsbChuYW1lKT09PW9iamVjdFR5cGUpX3V0aWxzLmV4dGVuZCh0aGlzLnBhcnRpYWxzLG5hbWUpO2Vsc2V7aWYoInVuZGVmaW5lZCI9PXR5cGVvZiBwYXJ0aWFsKXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCdBdHRlbXB0aW5nIHRvIHJlZ2lzdGVyIGEgcGFydGlhbCBjYWxsZWQgIicrbmFtZSsnIiBhcyB1bmRlZmluZWQnKTt0aGlzLnBhcnRpYWxzW25hbWVdPXBhcnRpYWx9fSx1bnJlZ2lzdGVyUGFydGlhbDpmdW5jdGlvbihuYW1lKXtkZWxldGUgdGhpcy5wYXJ0aWFsc1tuYW1lXX0scmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24obmFtZSxmbil7aWYoX3V0aWxzLnRvU3RyaW5nLmNhbGwobmFtZSk9PT1vYmplY3RUeXBlKXtpZihmbil0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbImRlZmF1bHQiXSgiQXJnIG5vdCBzdXBwb3J0ZWQgd2l0aCBtdWx0aXBsZSBkZWNvcmF0b3JzIik7X3V0aWxzLmV4dGVuZCh0aGlzLmRlY29yYXRvcnMsbmFtZSl9ZWxzZSB0aGlzLmRlY29yYXRvcnNbbmFtZV09Zm59LHVucmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24obmFtZSl7ZGVsZXRlIHRoaXMuZGVjb3JhdG9yc1tuYW1lXX19O3ZhciBsb2c9X2xvZ2dlcjJbImRlZmF1bHQiXS5sb2c7ZXhwb3J0cy5sb2c9bG9nLGV4cG9ydHMuY3JlYXRlRnJhbWU9X3V0aWxzLmNyZWF0ZUZyYW1lLGV4cG9ydHMubG9nZ2VyPV9sb2dnZXIyWyJkZWZhdWx0Il19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZXNjYXBlQ2hhcihjaHIpe3JldHVybiBlc2NhcGVbY2hyXX1mdW5jdGlvbiBleHRlbmQob2JqKXtmb3IodmFyIGk9MTtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKWZvcih2YXIga2V5IGluIGFyZ3VtZW50c1tpXSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYXJndW1lbnRzW2ldLGtleSkmJihvYmpba2V5XT1hcmd1bWVudHNbaV1ba2V5XSk7cmV0dXJuIG9ian1mdW5jdGlvbiBpbmRleE9mKGFycmF5LHZhbHVlKXtmb3IodmFyIGk9MCxsZW49YXJyYXkubGVuZ3RoO2k8bGVuO2krKylpZihhcnJheVtpXT09PXZhbHVlKXJldHVybiBpO3JldHVybi0xfWZ1bmN0aW9uIGVzY2FwZUV4cHJlc3Npb24oc3RyaW5nKXtpZigic3RyaW5nIiE9dHlwZW9mIHN0cmluZyl7aWYoc3RyaW5nJiZzdHJpbmcudG9IVE1MKXJldHVybiBzdHJpbmcudG9IVE1MKCk7aWYobnVsbD09c3RyaW5nKXJldHVybiIiO2lmKCFzdHJpbmcpcmV0dXJuIHN0cmluZysiIjtzdHJpbmc9IiIrc3RyaW5nfXJldHVybiBwb3NzaWJsZS50ZXN0KHN0cmluZyk/c3RyaW5nLnJlcGxhY2UoYmFkQ2hhcnMsZXNjYXBlQ2hhcik6c3RyaW5nfWZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpe3JldHVybiF2YWx1ZSYmMCE9PXZhbHVlfHwhKCFpc0FycmF5KHZhbHVlKXx8MCE9PXZhbHVlLmxlbmd0aCl9ZnVuY3Rpb24gY3JlYXRlRnJhbWUob2JqZWN0KXt2YXIgZnJhbWU9ZXh0ZW5kKHt9LG9iamVjdCk7cmV0dXJuIGZyYW1lLl9wYXJlbnQ9b2JqZWN0LGZyYW1lfWZ1bmN0aW9uIGJsb2NrUGFyYW1zKHBhcmFtcyxpZHMpe3JldHVybiBwYXJhbXMucGF0aD1pZHMscGFyYW1zfWZ1bmN0aW9uIGFwcGVuZENvbnRleHRQYXRoKGNvbnRleHRQYXRoLGlkKXtyZXR1cm4oY29udGV4dFBhdGg/Y29udGV4dFBhdGgrIi4iOiIiKStpZH1leHBvcnRzLl9fZXNNb2R1bGU9ITAsZXhwb3J0cy5leHRlbmQ9ZXh0ZW5kLGV4cG9ydHMuaW5kZXhPZj1pbmRleE9mLGV4cG9ydHMuZXNjYXBlRXhwcmVzc2lvbj1lc2NhcGVFeHByZXNzaW9uLGV4cG9ydHMuaXNFbXB0eT1pc0VtcHR5LGV4cG9ydHMuY3JlYXRlRnJhbWU9Y3JlYXRlRnJhbWUsZXhwb3J0cy5ibG9ja1BhcmFtcz1ibG9ja1BhcmFtcyxleHBvcnRzLmFwcGVuZENvbnRleHRQYXRoPWFwcGVuZENvbnRleHRQYXRoO3ZhciBlc2NhcGU9eyImIjoiJmFtcDsiLCI8IjoiJmx0OyIsIj4iOiImZ3Q7IiwnIic6IiZxdW90OyIsIiciOiImI3gyNzsiLCJgIjoiJiN4NjA7IiwiPSI6IiYjeDNEOyJ9LGJhZENoYXJzPS9bJjw+IidgPV0vZyxwb3NzaWJsZT0vWyY8PiInYD1dLyx0b1N0cmluZz1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO2V4cG9ydHMudG9TdHJpbmc9dG9TdHJpbmc7dmFyIGlzRnVuY3Rpb249ZnVuY3Rpb24odmFsdWUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZX07aXNGdW5jdGlvbigveC8pJiYoZXhwb3J0cy5pc0Z1bmN0aW9uPWlzRnVuY3Rpb249ZnVuY3Rpb24odmFsdWUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB2YWx1ZSYmIltvYmplY3QgRnVuY3Rpb25dIj09PXRvU3RyaW5nLmNhbGwodmFsdWUpfSksZXhwb3J0cy5pc0Z1bmN0aW9uPWlzRnVuY3Rpb247dmFyIGlzQXJyYXk9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24odmFsdWUpe3JldHVybiEoIXZhbHVlfHwib2JqZWN0IiE9dHlwZW9mIHZhbHVlKSYmIltvYmplY3QgQXJyYXldIj09PXRvU3RyaW5nLmNhbGwodmFsdWUpfTtleHBvcnRzLmlzQXJyYXk9aXNBcnJheX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIEV4Y2VwdGlvbihtZXNzYWdlLG5vZGUpe3ZhciBsb2M9bm9kZSYmbm9kZS5sb2MsbGluZT12b2lkIDAsY29sdW1uPXZvaWQgMDtsb2MmJihsaW5lPWxvYy5zdGFydC5saW5lLGNvbHVtbj1sb2Muc3RhcnQuY29sdW1uLG1lc3NhZ2UrPSIgLSAiK2xpbmUrIjoiK2NvbHVtbik7Zm9yKHZhciB0bXA9RXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcyxtZXNzYWdlKSxpZHg9MDtpZHg8ZXJyb3JQcm9wcy5sZW5ndGg7aWR4KyspdGhpc1tlcnJvclByb3BzW2lkeF1dPXRtcFtlcnJvclByb3BzW2lkeF1dO0Vycm9yLmNhcHR1cmVTdGFja1RyYWNlJiZFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLEV4Y2VwdGlvbik7dHJ5e2xvYyYmKHRoaXMubGluZU51bWJlcj1saW5lLF9PYmplY3QkZGVmaW5lUHJvcGVydHk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsImNvbHVtbiIse3ZhbHVlOmNvbHVtbixlbnVtZXJhYmxlOiEwfSk6dGhpcy5jb2x1bW49Y29sdW1uKX1jYXRjaChub3Ape319dmFyIF9PYmplY3QkZGVmaW5lUHJvcGVydHk9X193ZWJwYWNrX3JlcXVpcmVfXyg3KVsiZGVmYXVsdCJdO2V4cG9ydHMuX19lc01vZHVsZT0hMDt2YXIgZXJyb3JQcm9wcz1bImRlc2NyaXB0aW9uIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwibWVzc2FnZSIsIm5hbWUiLCJudW1iZXIiLCJzdGFjayJdO0V4Y2VwdGlvbi5wcm90b3R5cGU9bmV3IEVycm9yLGV4cG9ydHNbImRlZmF1bHQiXT1FeGNlcHRpb24sbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXttb2R1bGUuZXhwb3J0cz17ImRlZmF1bHQiOl9fd2VicGFja19yZXF1aXJlX18oOCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe3ZhciAkPV9fd2VicGFja19yZXF1aXJlX18oOSk7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oaXQsa2V5LGRlc2Mpe3JldHVybiAkLnNldERlc2MoaXQsa2V5LGRlc2MpfX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe3ZhciAkT2JqZWN0PU9iamVjdDttb2R1bGUuZXhwb3J0cz17Y3JlYXRlOiRPYmplY3QuY3JlYXRlLGdldFByb3RvOiRPYmplY3QuZ2V0UHJvdG90eXBlT2YsaXNFbnVtOnt9LnByb3BlcnR5SXNFbnVtZXJhYmxlLGdldERlc2M6JE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Isc2V0RGVzYzokT2JqZWN0LmRlZmluZVByb3BlcnR5LHNldERlc2NzOiRPYmplY3QuZGVmaW5lUHJvcGVydGllcyxnZXRLZXlzOiRPYmplY3Qua2V5cyxnZXROYW1lczokT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMsZ2V0U3ltYm9sczokT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxlYWNoOltdLmZvckVhY2h9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0SGVscGVycyhpbnN0YW5jZSl7X2hlbHBlcnNCbG9ja0hlbHBlck1pc3NpbmcyWyJkZWZhdWx0Il0oaW5zdGFuY2UpLF9oZWxwZXJzRWFjaDJbImRlZmF1bHQiXShpbnN0YW5jZSksX2hlbHBlcnNIZWxwZXJNaXNzaW5nMlsiZGVmYXVsdCJdKGluc3RhbmNlKSxfaGVscGVyc0lmMlsiZGVmYXVsdCJdKGluc3RhbmNlKSxfaGVscGVyc0xvZzJbImRlZmF1bHQiXShpbnN0YW5jZSksX2hlbHBlcnNMb29rdXAyWyJkZWZhdWx0Il0oaW5zdGFuY2UpLF9oZWxwZXJzV2l0aDJbImRlZmF1bHQiXShpbnN0YW5jZSl9dmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ9X193ZWJwYWNrX3JlcXVpcmVfXygxKVsiZGVmYXVsdCJdO2V4cG9ydHMuX19lc01vZHVsZT0hMCxleHBvcnRzLnJlZ2lzdGVyRGVmYXVsdEhlbHBlcnM9cmVnaXN0ZXJEZWZhdWx0SGVscGVyczt2YXIgX2hlbHBlcnNCbG9ja0hlbHBlck1pc3Npbmc9X193ZWJwYWNrX3JlcXVpcmVfXygxMSksX2hlbHBlcnNCbG9ja0hlbHBlck1pc3NpbmcyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hlbHBlcnNCbG9ja0hlbHBlck1pc3NpbmcpLF9oZWxwZXJzRWFjaD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEyKSxfaGVscGVyc0VhY2gyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2hlbHBlcnNFYWNoKSxfaGVscGVyc0hlbHBlck1pc3Npbmc9X193ZWJwYWNrX3JlcXVpcmVfXygxMyksX2hlbHBlcnNIZWxwZXJNaXNzaW5nMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oZWxwZXJzSGVscGVyTWlzc2luZyksX2hlbHBlcnNJZj1fX3dlYnBhY2tfcmVxdWlyZV9fKDE0KSxfaGVscGVyc0lmMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oZWxwZXJzSWYpLF9oZWxwZXJzTG9nPV9fd2VicGFja19yZXF1aXJlX18oMTUpLF9oZWxwZXJzTG9nMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oZWxwZXJzTG9nKSxfaGVscGVyc0xvb2t1cD1fX3dlYnBhY2tfcmVxdWlyZV9fKDE2KSxfaGVscGVyc0xvb2t1cDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGVscGVyc0xvb2t1cCksX2hlbHBlcnNXaXRoPV9fd2VicGFja19yZXF1aXJlX18oMTcpLF9oZWxwZXJzV2l0aDI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGVscGVyc1dpdGgpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7ZXhwb3J0cy5fX2VzTW9kdWxlPSEwO3ZhciBfdXRpbHM9X193ZWJwYWNrX3JlcXVpcmVfXyg1KTtleHBvcnRzWyJkZWZhdWx0Il09ZnVuY3Rpb24oaW5zdGFuY2Upe2luc3RhbmNlLnJlZ2lzdGVySGVscGVyKCJibG9ja0hlbHBlck1pc3NpbmciLGZ1bmN0aW9uKGNvbnRleHQsb3B0aW9ucyl7dmFyIGludmVyc2U9b3B0aW9ucy5pbnZlcnNlLGZuPW9wdGlvbnMuZm47aWYoY29udGV4dD09PSEwKXJldHVybiBmbih0aGlzKTtpZihjb250ZXh0PT09ITF8fG51bGw9PWNvbnRleHQpcmV0dXJuIGludmVyc2UodGhpcyk7aWYoX3V0aWxzLmlzQXJyYXkoY29udGV4dCkpcmV0dXJuIGNvbnRleHQubGVuZ3RoPjA/KG9wdGlvbnMuaWRzJiYob3B0aW9ucy5pZHM9W29wdGlvbnMubmFtZV0pLGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LG9wdGlvbnMpKTppbnZlcnNlKHRoaXMpO2lmKG9wdGlvbnMuZGF0YSYmb3B0aW9ucy5pZHMpe3ZhciBkYXRhPV91dGlscy5jcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO2RhdGEuY29udGV4dFBhdGg9X3V0aWxzLmFwcGVuZENvbnRleHRQYXRoKG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxvcHRpb25zLm5hbWUpLG9wdGlvbnM9e2RhdGE6ZGF0YX19cmV0dXJuIGZuKGNvbnRleHQsb3B0aW9ucyl9KX0sbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7dmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ9X193ZWJwYWNrX3JlcXVpcmVfXygxKVsiZGVmYXVsdCJdO2V4cG9ydHMuX19lc01vZHVsZT0hMDt2YXIgX3V0aWxzPV9fd2VicGFja19yZXF1aXJlX18oNSksX2V4Y2VwdGlvbj1fX3dlYnBhY2tfcmVxdWlyZV9fKDYpLF9leGNlcHRpb24yPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4Y2VwdGlvbik7ZXhwb3J0c1siZGVmYXVsdCJdPWZ1bmN0aW9uKGluc3RhbmNlKXtpbnN0YW5jZS5yZWdpc3RlckhlbHBlcigiZWFjaCIsZnVuY3Rpb24oY29udGV4dCxvcHRpb25zKXtmdW5jdGlvbiBleGVjSXRlcmF0aW9uKGZpZWxkLGluZGV4LGxhc3Qpe2RhdGEmJihkYXRhLmtleT1maWVsZCxkYXRhLmluZGV4PWluZGV4LGRhdGEuZmlyc3Q9MD09PWluZGV4LGRhdGEubGFzdD0hIWxhc3QsY29udGV4dFBhdGgmJihkYXRhLmNvbnRleHRQYXRoPWNvbnRleHRQYXRoK2ZpZWxkKSkscmV0Kz1mbihjb250ZXh0W2ZpZWxkXSx7ZGF0YTpkYXRhLGJsb2NrUGFyYW1zOl91dGlscy5ibG9ja1BhcmFtcyhbY29udGV4dFtmaWVsZF0sZmllbGRdLFtjb250ZXh0UGF0aCtmaWVsZCxudWxsXSl9KX1pZighb3B0aW9ucyl0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbImRlZmF1bHQiXSgiTXVzdCBwYXNzIGl0ZXJhdG9yIHRvICNlYWNoIik7dmFyIGZuPW9wdGlvbnMuZm4saW52ZXJzZT1vcHRpb25zLmludmVyc2UsaT0wLHJldD0iIixkYXRhPXZvaWQgMCxjb250ZXh0UGF0aD12b2lkIDA7aWYob3B0aW9ucy5kYXRhJiZvcHRpb25zLmlkcyYmKGNvbnRleHRQYXRoPV91dGlscy5hcHBlbmRDb250ZXh0UGF0aChvcHRpb25zLmRhdGEuY29udGV4dFBhdGgsb3B0aW9ucy5pZHNbMF0pKyIuIiksX3V0aWxzLmlzRnVuY3Rpb24oY29udGV4dCkmJihjb250ZXh0PWNvbnRleHQuY2FsbCh0aGlzKSksb3B0aW9ucy5kYXRhJiYoZGF0YT1fdXRpbHMuY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKSksY29udGV4dCYmIm9iamVjdCI9PXR5cGVvZiBjb250ZXh0KWlmKF91dGlscy5pc0FycmF5KGNvbnRleHQpKWZvcih2YXIgaj1jb250ZXh0Lmxlbmd0aDtpPGo7aSsrKWkgaW4gY29udGV4dCYmZXhlY0l0ZXJhdGlvbihpLGksaT09PWNvbnRleHQubGVuZ3RoLTEpO2Vsc2V7dmFyIHByaW9yS2V5PXZvaWQgMDtmb3IodmFyIGtleSBpbiBjb250ZXh0KWNvbnRleHQuaGFzT3duUHJvcGVydHkoa2V5KSYmKHZvaWQgMCE9PXByaW9yS2V5JiZleGVjSXRlcmF0aW9uKHByaW9yS2V5LGktMSkscHJpb3JLZXk9a2V5LGkrKyk7dm9pZCAwIT09cHJpb3JLZXkmJmV4ZWNJdGVyYXRpb24ocHJpb3JLZXksaS0xLCEwKX1yZXR1cm4gMD09PWkmJihyZXQ9aW52ZXJzZSh0aGlzKSkscmV0fSl9LG1vZHVsZS5leHBvcnRzPWV4cG9ydHNbImRlZmF1bHQiXX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO3ZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PV9fd2VicGFja19yZXF1aXJlX18oMSlbImRlZmF1bHQiXTtleHBvcnRzLl9fZXNNb2R1bGU9ITA7dmFyIF9leGNlcHRpb249X193ZWJwYWNrX3JlcXVpcmVfXyg2KSxfZXhjZXB0aW9uMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pO2V4cG9ydHNbImRlZmF1bHQiXT1mdW5jdGlvbihpbnN0YW5jZSl7aW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoImhlbHBlck1pc3NpbmciLGZ1bmN0aW9uKCl7aWYoMSE9PWFyZ3VtZW50cy5sZW5ndGgpdGhyb3cgbmV3IF9leGNlcHRpb24yWyJkZWZhdWx0Il0oJ01pc3NpbmcgaGVscGVyOiAiJythcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXS5uYW1lKyciJyl9KX0sbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7ZXhwb3J0cy5fX2VzTW9kdWxlPSEwO3ZhciBfdXRpbHM9X193ZWJwYWNrX3JlcXVpcmVfXyg1KTtleHBvcnRzWyJkZWZhdWx0Il09ZnVuY3Rpb24oaW5zdGFuY2Upe2luc3RhbmNlLnJlZ2lzdGVySGVscGVyKCJpZiIsZnVuY3Rpb24oY29uZGl0aW9uYWwsb3B0aW9ucyl7cmV0dXJuIF91dGlscy5pc0Z1bmN0aW9uKGNvbmRpdGlvbmFsKSYmKGNvbmRpdGlvbmFsPWNvbmRpdGlvbmFsLmNhbGwodGhpcykpLCFvcHRpb25zLmhhc2guaW5jbHVkZVplcm8mJiFjb25kaXRpb25hbHx8X3V0aWxzLmlzRW1wdHkoY29uZGl0aW9uYWwpP29wdGlvbnMuaW52ZXJzZSh0aGlzKTpvcHRpb25zLmZuKHRoaXMpfSksaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoInVubGVzcyIsZnVuY3Rpb24oY29uZGl0aW9uYWwsb3B0aW9ucyl7cmV0dXJuIGluc3RhbmNlLmhlbHBlcnNbImlmIl0uY2FsbCh0aGlzLGNvbmRpdGlvbmFsLHtmbjpvcHRpb25zLmludmVyc2UsaW52ZXJzZTpvcHRpb25zLmZuLGhhc2g6b3B0aW9ucy5oYXNofSl9KX0sbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO2V4cG9ydHMuX19lc01vZHVsZT0hMCxleHBvcnRzWyJkZWZhdWx0Il09ZnVuY3Rpb24oaW5zdGFuY2Upe2luc3RhbmNlLnJlZ2lzdGVySGVscGVyKCJsb2ciLGZ1bmN0aW9uKCl7Zm9yKHZhciBhcmdzPVt2b2lkIDBdLG9wdGlvbnM9YXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGgtMV0saT0wO2k8YXJndW1lbnRzLmxlbmd0aC0xO2krKylhcmdzLnB1c2goYXJndW1lbnRzW2ldKTt2YXIgbGV2ZWw9MTtudWxsIT1vcHRpb25zLmhhc2gubGV2ZWw/bGV2ZWw9b3B0aW9ucy5oYXNoLmxldmVsOm9wdGlvbnMuZGF0YSYmbnVsbCE9b3B0aW9ucy5kYXRhLmxldmVsJiYobGV2ZWw9b3B0aW9ucy5kYXRhLmxldmVsKSxhcmdzWzBdPWxldmVsLGluc3RhbmNlLmxvZy5hcHBseShpbnN0YW5jZSxhcmdzKX0pfSxtb2R1bGUuZXhwb3J0cz1leHBvcnRzWyJkZWZhdWx0Il19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXsidXNlIHN0cmljdCI7ZXhwb3J0cy5fX2VzTW9kdWxlPSEwLGV4cG9ydHNbImRlZmF1bHQiXT1mdW5jdGlvbihpbnN0YW5jZSl7aW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoImxvb2t1cCIsZnVuY3Rpb24ob2JqLGZpZWxkKXtyZXR1cm4gb2JqJiZvYmpbZmllbGRdfSl9LG1vZHVsZS5leHBvcnRzPWV4cG9ydHNbImRlZmF1bHQiXX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO2V4cG9ydHMuX19lc01vZHVsZT0hMDt2YXIgX3V0aWxzPV9fd2VicGFja19yZXF1aXJlX18oNSk7ZXhwb3J0c1siZGVmYXVsdCJdPWZ1bmN0aW9uKGluc3RhbmNlKXtpbnN0YW5jZS5yZWdpc3RlckhlbHBlcigid2l0aCIsZnVuY3Rpb24oY29udGV4dCxvcHRpb25zKXtfdXRpbHMuaXNGdW5jdGlvbihjb250ZXh0KSYmKGNvbnRleHQ9Y29udGV4dC5jYWxsKHRoaXMpKTt2YXIgZm49b3B0aW9ucy5mbjtpZihfdXRpbHMuaXNFbXB0eShjb250ZXh0KSlyZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO3ZhciBkYXRhPW9wdGlvbnMuZGF0YTtyZXR1cm4gb3B0aW9ucy5kYXRhJiZvcHRpb25zLmlkcyYmKGRhdGE9X3V0aWxzLmNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSksZGF0YS5jb250ZXh0UGF0aD1fdXRpbHMuYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLG9wdGlvbnMuaWRzWzBdKSksZm4oY29udGV4dCx7ZGF0YTpkYXRhLGJsb2NrUGFyYW1zOl91dGlscy5ibG9ja1BhcmFtcyhbY29udGV4dF0sW2RhdGEmJmRhdGEuY29udGV4dFBhdGhdKX0pfSl9LG1vZHVsZS5leHBvcnRzPWV4cG9ydHNbImRlZmF1bHQiXX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnMoaW5zdGFuY2Upe19kZWNvcmF0b3JzSW5saW5lMlsiZGVmYXVsdCJdKGluc3RhbmNlKX12YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpWyJkZWZhdWx0Il07ZXhwb3J0cy5fX2VzTW9kdWxlPSEwLGV4cG9ydHMucmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycz1yZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzO3ZhciBfZGVjb3JhdG9yc0lubGluZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDE5KSxfZGVjb3JhdG9yc0lubGluZTI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZGVjb3JhdG9yc0lubGluZSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtleHBvcnRzLl9fZXNNb2R1bGU9ITA7dmFyIF91dGlscz1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpO2V4cG9ydHNbImRlZmF1bHQiXT1mdW5jdGlvbihpbnN0YW5jZSl7aW5zdGFuY2UucmVnaXN0ZXJEZWNvcmF0b3IoImlubGluZSIsZnVuY3Rpb24oZm4scHJvcHMsY29udGFpbmVyLG9wdGlvbnMpe3ZhciByZXQ9Zm47cmV0dXJuIHByb3BzLnBhcnRpYWxzfHwocHJvcHMucGFydGlhbHM9e30scmV0PWZ1bmN0aW9uKGNvbnRleHQsb3B0aW9ucyl7dmFyIG9yaWdpbmFsPWNvbnRhaW5lci5wYXJ0aWFscztjb250YWluZXIucGFydGlhbHM9X3V0aWxzLmV4dGVuZCh7fSxvcmlnaW5hbCxwcm9wcy5wYXJ0aWFscyk7dmFyIHJldD1mbihjb250ZXh0LG9wdGlvbnMpO3JldHVybiBjb250YWluZXIucGFydGlhbHM9b3JpZ2luYWwscmV0fSkscHJvcHMucGFydGlhbHNbb3B0aW9ucy5hcmdzWzBdXT1vcHRpb25zLmZuLHJldH0pfSxtb2R1bGUuZXhwb3J0cz1leHBvcnRzWyJkZWZhdWx0Il19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtleHBvcnRzLl9fZXNNb2R1bGU9ITA7dmFyIF91dGlscz1fX3dlYnBhY2tfcmVxdWlyZV9fKDUpLGxvZ2dlcj17bWV0aG9kTWFwOlsiZGVidWciLCJpbmZvIiwid2FybiIsImVycm9yIl0sbGV2ZWw6ImluZm8iLGxvb2t1cExldmVsOmZ1bmN0aW9uKGxldmVsKXtpZigic3RyaW5nIj09dHlwZW9mIGxldmVsKXt2YXIgbGV2ZWxNYXA9X3V0aWxzLmluZGV4T2YobG9nZ2VyLm1ldGhvZE1hcCxsZXZlbC50b0xvd2VyQ2FzZSgpKTtsZXZlbD1sZXZlbE1hcD49MD9sZXZlbE1hcDpwYXJzZUludChsZXZlbCwxMCl9cmV0dXJuIGxldmVsfSxsb2c6ZnVuY3Rpb24obGV2ZWwpe2lmKGxldmVsPWxvZ2dlci5sb29rdXBMZXZlbChsZXZlbCksInVuZGVmaW5lZCIhPXR5cGVvZiBjb25zb2xlJiZsb2dnZXIubG9va3VwTGV2ZWwobG9nZ2VyLmxldmVsKTw9bGV2ZWwpe3ZhciBtZXRob2Q9bG9nZ2VyLm1ldGhvZE1hcFtsZXZlbF07Y29uc29sZVttZXRob2RdfHwobWV0aG9kPSJsb2ciKTtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxtZXNzYWdlPUFycmF5KF9sZW4+MT9fbGVuLTE6MCksX2tleT0xO19rZXk8X2xlbjtfa2V5KyspbWVzc2FnZVtfa2V5LTFdPWFyZ3VtZW50c1tfa2V5XTtjb25zb2xlW21ldGhvZF0uYXBwbHkoY29uc29sZSxtZXNzYWdlKX19fTtleHBvcnRzWyJkZWZhdWx0Il09bG9nZ2VyLG1vZHVsZS5leHBvcnRzPWV4cG9ydHNbImRlZmF1bHQiXX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBTYWZlU3RyaW5nKHN0cmluZyl7dGhpcy5zdHJpbmc9c3RyaW5nfWV4cG9ydHMuX19lc01vZHVsZT0hMCxTYWZlU3RyaW5nLnByb3RvdHlwZS50b1N0cmluZz1TYWZlU3RyaW5nLnByb3RvdHlwZS50b0hUTUw9ZnVuY3Rpb24oKXtyZXR1cm4iIit0aGlzLnN0cmluZ30sZXhwb3J0c1siZGVmYXVsdCJdPVNhZmVTdHJpbmcsbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gY2hlY2tSZXZpc2lvbihjb21waWxlckluZm8pe3ZhciBjb21waWxlclJldmlzaW9uPWNvbXBpbGVySW5mbyYmY29tcGlsZXJJbmZvWzBdfHwxLGN1cnJlbnRSZXZpc2lvbj1fYmFzZS5DT01QSUxFUl9SRVZJU0lPTjtpZihjb21waWxlclJldmlzaW9uIT09Y3VycmVudFJldmlzaW9uKXtpZihjb21waWxlclJldmlzaW9uPGN1cnJlbnRSZXZpc2lvbil7dmFyIHJ1bnRpbWVWZXJzaW9ucz1fYmFzZS5SRVZJU0lPTl9DSEFOR0VTW2N1cnJlbnRSZXZpc2lvbl0sY29tcGlsZXJWZXJzaW9ucz1fYmFzZS5SRVZJU0lPTl9DSEFOR0VTW2NvbXBpbGVyUmV2aXNpb25dO3Rocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJUZW1wbGF0ZSB3YXMgcHJlY29tcGlsZWQgd2l0aCBhbiBvbGRlciB2ZXJzaW9uIG9mIEhhbmRsZWJhcnMgdGhhbiB0aGUgY3VycmVudCBydW50aW1lLiBQbGVhc2UgdXBkYXRlIHlvdXIgcHJlY29tcGlsZXIgdG8gYSBuZXdlciB2ZXJzaW9uICgiK3J1bnRpbWVWZXJzaW9ucysiKSBvciBkb3duZ3JhZGUgeW91ciBydW50aW1lIHRvIGFuIG9sZGVyIHZlcnNpb24gKCIrY29tcGlsZXJWZXJzaW9ucysiKS4iKX10aHJvdyBuZXcgX2V4Y2VwdGlvbjJbImRlZmF1bHQiXSgiVGVtcGxhdGUgd2FzIHByZWNvbXBpbGVkIHdpdGggYSBuZXdlciB2ZXJzaW9uIG9mIEhhbmRsZWJhcnMgdGhhbiB0aGUgY3VycmVudCBydW50aW1lLiBQbGVhc2UgdXBkYXRlIHlvdXIgcnVudGltZSB0byBhIG5ld2VyIHZlcnNpb24gKCIrY29tcGlsZXJJbmZvWzFdKyIpLiIpfX1mdW5jdGlvbiB0ZW1wbGF0ZSh0ZW1wbGF0ZVNwZWMsZW52KXtmdW5jdGlvbiBpbnZva2VQYXJ0aWFsV3JhcHBlcihwYXJ0aWFsLGNvbnRleHQsb3B0aW9ucyl7b3B0aW9ucy5oYXNoJiYoY29udGV4dD1VdGlscy5leHRlbmQoe30sY29udGV4dCxvcHRpb25zLmhhc2gpLG9wdGlvbnMuaWRzJiYob3B0aW9ucy5pZHNbMF09ITApKSxwYXJ0aWFsPWVudi5WTS5yZXNvbHZlUGFydGlhbC5jYWxsKHRoaXMscGFydGlhbCxjb250ZXh0LG9wdGlvbnMpO3ZhciByZXN1bHQ9ZW52LlZNLmludm9rZVBhcnRpYWwuY2FsbCh0aGlzLHBhcnRpYWwsY29udGV4dCxvcHRpb25zKTtpZihudWxsPT1yZXN1bHQmJmVudi5jb21waWxlJiYob3B0aW9ucy5wYXJ0aWFsc1tvcHRpb25zLm5hbWVdPWVudi5jb21waWxlKHBhcnRpYWwsdGVtcGxhdGVTcGVjLmNvbXBpbGVyT3B0aW9ucyxlbnYpLHJlc3VsdD1vcHRpb25zLnBhcnRpYWxzW29wdGlvbnMubmFtZV0oY29udGV4dCxvcHRpb25zKSksbnVsbCE9cmVzdWx0KXtpZihvcHRpb25zLmluZGVudCl7Zm9yKHZhciBsaW5lcz1yZXN1bHQuc3BsaXQoIlxuIiksaT0wLGw9bGluZXMubGVuZ3RoO2k8bCYmKGxpbmVzW2ldfHxpKzEhPT1sKTtpKyspbGluZXNbaV09b3B0aW9ucy5pbmRlbnQrbGluZXNbaV07cmVzdWx0PWxpbmVzLmpvaW4oIlxuIil9cmV0dXJuIHJlc3VsdH10aHJvdyBuZXcgX2V4Y2VwdGlvbjJbImRlZmF1bHQiXSgiVGhlIHBhcnRpYWwgIitvcHRpb25zLm5hbWUrIiBjb3VsZCBub3QgYmUgY29tcGlsZWQgd2hlbiBydW5uaW5nIGluIHJ1bnRpbWUtb25seSBtb2RlIil9ZnVuY3Rpb24gcmV0KGNvbnRleHQpe2Z1bmN0aW9uIG1haW4oY29udGV4dCl7cmV0dXJuIiIrdGVtcGxhdGVTcGVjLm1haW4oY29udGFpbmVyLGNvbnRleHQsY29udGFpbmVyLmhlbHBlcnMsY29udGFpbmVyLnBhcnRpYWxzLGRhdGEsYmxvY2tQYXJhbXMsZGVwdGhzKX12YXIgb3B0aW9ucz1hcmd1bWVudHMubGVuZ3RoPD0xfHx2b2lkIDA9PT1hcmd1bWVudHNbMV0/e306YXJndW1lbnRzWzFdLGRhdGE9b3B0aW9ucy5kYXRhO3JldC5fc2V0dXAob3B0aW9ucyksIW9wdGlvbnMucGFydGlhbCYmdGVtcGxhdGVTcGVjLnVzZURhdGEmJihkYXRhPWluaXREYXRhKGNvbnRleHQsZGF0YSkpO3ZhciBkZXB0aHM9dm9pZCAwLGJsb2NrUGFyYW1zPXRlbXBsYXRlU3BlYy51c2VCbG9ja1BhcmFtcz9bXTp2b2lkIDA7cmV0dXJuIHRlbXBsYXRlU3BlYy51c2VEZXB0aHMmJihkZXB0aHM9b3B0aW9ucy5kZXB0aHM/Y29udGV4dCE9b3B0aW9ucy5kZXB0aHNbMF0/W2NvbnRleHRdLmNvbmNhdChvcHRpb25zLmRlcHRocyk6b3B0aW9ucy5kZXB0aHM6W2NvbnRleHRdKSwobWFpbj1leGVjdXRlRGVjb3JhdG9ycyh0ZW1wbGF0ZVNwZWMubWFpbixtYWluLGNvbnRhaW5lcixvcHRpb25zLmRlcHRoc3x8W10sZGF0YSxibG9ja1BhcmFtcykpKGNvbnRleHQsb3B0aW9ucyl9aWYoIWVudil0aHJvdyBuZXcgX2V4Y2VwdGlvbjJbImRlZmF1bHQiXSgiTm8gZW52aXJvbm1lbnQgcGFzc2VkIHRvIHRlbXBsYXRlIik7aWYoIXRlbXBsYXRlU3BlY3x8IXRlbXBsYXRlU3BlYy5tYWluKXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJVbmtub3duIHRlbXBsYXRlIG9iamVjdDogIit0eXBlb2YgdGVtcGxhdGVTcGVjKTt0ZW1wbGF0ZVNwZWMubWFpbi5kZWNvcmF0b3I9dGVtcGxhdGVTcGVjLm1haW5fZCxlbnYuVk0uY2hlY2tSZXZpc2lvbih0ZW1wbGF0ZVNwZWMuY29tcGlsZXIpO3ZhciBjb250YWluZXI9e3N0cmljdDpmdW5jdGlvbihvYmosbmFtZSl7aWYoIShuYW1lIGluIG9iaikpdGhyb3cgbmV3IF9leGNlcHRpb24yWyJkZWZhdWx0Il0oJyInK25hbWUrJyIgbm90IGRlZmluZWQgaW4gJytvYmopO3JldHVybiBvYmpbbmFtZV19LGxvb2t1cDpmdW5jdGlvbihkZXB0aHMsbmFtZSl7Zm9yKHZhciBsZW49ZGVwdGhzLmxlbmd0aCxpPTA7aTxsZW47aSsrKWlmKGRlcHRoc1tpXSYmbnVsbCE9ZGVwdGhzW2ldW25hbWVdKXJldHVybiBkZXB0aHNbaV1bbmFtZV19LGxhbWJkYTpmdW5jdGlvbihjdXJyZW50LGNvbnRleHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBjdXJyZW50P2N1cnJlbnQuY2FsbChjb250ZXh0KTpjdXJyZW50fSxlc2NhcGVFeHByZXNzaW9uOlV0aWxzLmVzY2FwZUV4cHJlc3Npb24saW52b2tlUGFydGlhbDppbnZva2VQYXJ0aWFsV3JhcHBlcixmbjpmdW5jdGlvbihpKXt2YXIgcmV0PXRlbXBsYXRlU3BlY1tpXTtyZXR1cm4gcmV0LmRlY29yYXRvcj10ZW1wbGF0ZVNwZWNbaSsiX2QiXSxyZXR9LHByb2dyYW1zOltdLHByb2dyYW06ZnVuY3Rpb24oaSxkYXRhLGRlY2xhcmVkQmxvY2tQYXJhbXMsYmxvY2tQYXJhbXMsZGVwdGhzKXt2YXIgcHJvZ3JhbVdyYXBwZXI9dGhpcy5wcm9ncmFtc1tpXSxmbj10aGlzLmZuKGkpO3JldHVybiBkYXRhfHxkZXB0aHN8fGJsb2NrUGFyYW1zfHxkZWNsYXJlZEJsb2NrUGFyYW1zP3Byb2dyYW1XcmFwcGVyPXdyYXBQcm9ncmFtKHRoaXMsaSxmbixkYXRhLGRlY2xhcmVkQmxvY2tQYXJhbXMsYmxvY2tQYXJhbXMsZGVwdGhzKTpwcm9ncmFtV3JhcHBlcnx8KHByb2dyYW1XcmFwcGVyPXRoaXMucHJvZ3JhbXNbaV09d3JhcFByb2dyYW0odGhpcyxpLGZuKSkscHJvZ3JhbVdyYXBwZXJ9LGRhdGE6ZnVuY3Rpb24odmFsdWUsZGVwdGgpe2Zvcig7dmFsdWUmJmRlcHRoLS07KXZhbHVlPXZhbHVlLl9wYXJlbnQ7cmV0dXJuIHZhbHVlfSxtZXJnZTpmdW5jdGlvbihwYXJhbSxjb21tb24pe3ZhciBvYmo9cGFyYW18fGNvbW1vbjtyZXR1cm4gcGFyYW0mJmNvbW1vbiYmcGFyYW0hPT1jb21tb24mJihvYmo9VXRpbHMuZXh0ZW5kKHt9LGNvbW1vbixwYXJhbSkpLG9ian0sbnVsbENvbnRleHQ6X09iamVjdCRzZWFsKHt9KSxub29wOmVudi5WTS5ub29wLGNvbXBpbGVySW5mbzp0ZW1wbGF0ZVNwZWMuY29tcGlsZXJ9O3JldHVybiByZXQuaXNUb3A9ITAscmV0Ll9zZXR1cD1mdW5jdGlvbihvcHRpb25zKXtvcHRpb25zLnBhcnRpYWw/KGNvbnRhaW5lci5oZWxwZXJzPW9wdGlvbnMuaGVscGVycyxjb250YWluZXIucGFydGlhbHM9b3B0aW9ucy5wYXJ0aWFscyxjb250YWluZXIuZGVjb3JhdG9ycz1vcHRpb25zLmRlY29yYXRvcnMpOihjb250YWluZXIuaGVscGVycz1jb250YWluZXIubWVyZ2Uob3B0aW9ucy5oZWxwZXJzLGVudi5oZWxwZXJzKSx0ZW1wbGF0ZVNwZWMudXNlUGFydGlhbCYmKGNvbnRhaW5lci5wYXJ0aWFscz1jb250YWluZXIubWVyZ2Uob3B0aW9ucy5wYXJ0aWFscyxlbnYucGFydGlhbHMpKSwodGVtcGxhdGVTcGVjLnVzZVBhcnRpYWx8fHRlbXBsYXRlU3BlYy51c2VEZWNvcmF0b3JzKSYmKGNvbnRhaW5lci5kZWNvcmF0b3JzPWNvbnRhaW5lci5tZXJnZShvcHRpb25zLmRlY29yYXRvcnMsZW52LmRlY29yYXRvcnMpKSl9LHJldC5fY2hpbGQ9ZnVuY3Rpb24oaSxkYXRhLGJsb2NrUGFyYW1zLGRlcHRocyl7aWYodGVtcGxhdGVTcGVjLnVzZUJsb2NrUGFyYW1zJiYhYmxvY2tQYXJhbXMpdGhyb3cgbmV3IF9leGNlcHRpb24yWyJkZWZhdWx0Il0oIm11c3QgcGFzcyBibG9jayBwYXJhbXMiKTtpZih0ZW1wbGF0ZVNwZWMudXNlRGVwdGhzJiYhZGVwdGhzKXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJtdXN0IHBhc3MgcGFyZW50IGRlcHRocyIpO3JldHVybiB3cmFwUHJvZ3JhbShjb250YWluZXIsaSx0ZW1wbGF0ZVNwZWNbaV0sZGF0YSwwLGJsb2NrUGFyYW1zLGRlcHRocyl9LHJldH1mdW5jdGlvbiB3cmFwUHJvZ3JhbShjb250YWluZXIsaSxmbixkYXRhLGRlY2xhcmVkQmxvY2tQYXJhbXMsYmxvY2tQYXJhbXMsZGVwdGhzKXtmdW5jdGlvbiBwcm9nKGNvbnRleHQpe3ZhciBvcHRpb25zPWFyZ3VtZW50cy5sZW5ndGg8PTF8fHZvaWQgMD09PWFyZ3VtZW50c1sxXT97fTphcmd1bWVudHNbMV0sY3VycmVudERlcHRocz1kZXB0aHM7cmV0dXJuIWRlcHRoc3x8Y29udGV4dD09ZGVwdGhzWzBdfHxjb250ZXh0PT09Y29udGFpbmVyLm51bGxDb250ZXh0JiZudWxsPT09ZGVwdGhzWzBdfHwoY3VycmVudERlcHRocz1bY29udGV4dF0uY29uY2F0KGRlcHRocykpLGZuKGNvbnRhaW5lcixjb250ZXh0LGNvbnRhaW5lci5oZWxwZXJzLGNvbnRhaW5lci5wYXJ0aWFscyxvcHRpb25zLmRhdGF8fGRhdGEsYmxvY2tQYXJhbXMmJltvcHRpb25zLmJsb2NrUGFyYW1zXS5jb25jYXQoYmxvY2tQYXJhbXMpLGN1cnJlbnREZXB0aHMpfXJldHVybiBwcm9nPWV4ZWN1dGVEZWNvcmF0b3JzKGZuLHByb2csY29udGFpbmVyLGRlcHRocyxkYXRhLGJsb2NrUGFyYW1zKSxwcm9nLnByb2dyYW09aSxwcm9nLmRlcHRoPWRlcHRocz9kZXB0aHMubGVuZ3RoOjAscHJvZy5ibG9ja1BhcmFtcz1kZWNsYXJlZEJsb2NrUGFyYW1zfHwwLHByb2d9ZnVuY3Rpb24gcmVzb2x2ZVBhcnRpYWwocGFydGlhbCxjb250ZXh0LG9wdGlvbnMpe3JldHVybiBwYXJ0aWFsP3BhcnRpYWwuY2FsbHx8b3B0aW9ucy5uYW1lfHwob3B0aW9ucy5uYW1lPXBhcnRpYWwscGFydGlhbD1vcHRpb25zLnBhcnRpYWxzW3BhcnRpYWxdKTpwYXJ0aWFsPSJAcGFydGlhbC1ibG9jayI9PT1vcHRpb25zLm5hbWU/b3B0aW9ucy5kYXRhWyJwYXJ0aWFsLWJsb2NrIl06b3B0aW9ucy5wYXJ0aWFsc1tvcHRpb25zLm5hbWVdLHBhcnRpYWx9ZnVuY3Rpb24gaW52b2tlUGFydGlhbChwYXJ0aWFsLGNvbnRleHQsb3B0aW9ucyl7dmFyIGN1cnJlbnRQYXJ0aWFsQmxvY2s9b3B0aW9ucy5kYXRhJiZvcHRpb25zLmRhdGFbInBhcnRpYWwtYmxvY2siXTtvcHRpb25zLnBhcnRpYWw9ITAsb3B0aW9ucy5pZHMmJihvcHRpb25zLmRhdGEuY29udGV4dFBhdGg9b3B0aW9ucy5pZHNbMF18fG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCk7dmFyIHBhcnRpYWxCbG9jaz12b2lkIDA7aWYob3B0aW9ucy5mbiYmb3B0aW9ucy5mbiE9PW5vb3AmJiFmdW5jdGlvbigpe29wdGlvbnMuZGF0YT1fYmFzZS5jcmVhdGVGcmFtZShvcHRpb25zLmRhdGEpO3ZhciBmbj1vcHRpb25zLmZuO3BhcnRpYWxCbG9jaz1vcHRpb25zLmRhdGFbInBhcnRpYWwtYmxvY2siXT1mdW5jdGlvbihjb250ZXh0KXt2YXIgb3B0aW9ucz1hcmd1bWVudHMubGVuZ3RoPD0xfHx2b2lkIDA9PT1hcmd1bWVudHNbMV0/e306YXJndW1lbnRzWzFdO3JldHVybiBvcHRpb25zLmRhdGE9X2Jhc2UuY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKSxvcHRpb25zLmRhdGFbInBhcnRpYWwtYmxvY2siXT1jdXJyZW50UGFydGlhbEJsb2NrLGZuKGNvbnRleHQsb3B0aW9ucyl9LGZuLnBhcnRpYWxzJiYob3B0aW9ucy5wYXJ0aWFscz1VdGlscy5leHRlbmQoe30sb3B0aW9ucy5wYXJ0aWFscyxmbi5wYXJ0aWFscykpfSgpLHZvaWQgMD09PXBhcnRpYWwmJnBhcnRpYWxCbG9jayYmKHBhcnRpYWw9cGFydGlhbEJsb2NrKSx2b2lkIDA9PT1wYXJ0aWFsKXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJUaGUgcGFydGlhbCAiK29wdGlvbnMubmFtZSsiIGNvdWxkIG5vdCBiZSBmb3VuZCIpO2lmKHBhcnRpYWwgaW5zdGFuY2VvZiBGdW5jdGlvbilyZXR1cm4gcGFydGlhbChjb250ZXh0LG9wdGlvbnMpfWZ1bmN0aW9uIG5vb3AoKXtyZXR1cm4iIn1mdW5jdGlvbiBpbml0RGF0YShjb250ZXh0LGRhdGEpe3JldHVybiBkYXRhJiYicm9vdCJpbiBkYXRhfHwoZGF0YT1kYXRhP19iYXNlLmNyZWF0ZUZyYW1lKGRhdGEpOnt9LGRhdGEucm9vdD1jb250ZXh0KSxkYXRhfWZ1bmN0aW9uIGV4ZWN1dGVEZWNvcmF0b3JzKGZuLHByb2csY29udGFpbmVyLGRlcHRocyxkYXRhLGJsb2NrUGFyYW1zKXtpZihmbi5kZWNvcmF0b3Ipe3ZhciBwcm9wcz17fTtwcm9nPWZuLmRlY29yYXRvcihwcm9nLHByb3BzLGNvbnRhaW5lcixkZXB0aHMmJmRlcHRoc1swXSxkYXRhLGJsb2NrUGFyYW1zLGRlcHRocyksVXRpbHMuZXh0ZW5kKHByb2cscHJvcHMpfXJldHVybiBwcm9nfXZhciBfT2JqZWN0JHNlYWw9X193ZWJwYWNrX3JlcXVpcmVfXygyMylbImRlZmF1bHQiXSxfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZD1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpWyJkZWZhdWx0Il0sX2ludGVyb3BSZXF1aXJlRGVmYXVsdD1fX3dlYnBhY2tfcmVxdWlyZV9fKDEpWyJkZWZhdWx0Il07ZXhwb3J0cy5fX2VzTW9kdWxlPSEwLGV4cG9ydHMuY2hlY2tSZXZpc2lvbj1jaGVja1JldmlzaW9uLGV4cG9ydHMudGVtcGxhdGU9dGVtcGxhdGUsZXhwb3J0cy53cmFwUHJvZ3JhbT13cmFwUHJvZ3JhbSxleHBvcnRzLnJlc29sdmVQYXJ0aWFsPXJlc29sdmVQYXJ0aWFsLGV4cG9ydHMuaW52b2tlUGFydGlhbD1pbnZva2VQYXJ0aWFsLGV4cG9ydHMubm9vcD1ub29wO3ZhciBfdXRpbHM9X193ZWJwYWNrX3JlcXVpcmVfXyg1KSxVdGlscz1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfdXRpbHMpLF9leGNlcHRpb249X193ZWJwYWNrX3JlcXVpcmVfXyg2KSxfZXhjZXB0aW9uMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leGNlcHRpb24pLF9iYXNlPV9fd2VicGFja19yZXF1aXJlX18oNCl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe21vZHVsZS5leHBvcnRzPXsiZGVmYXVsdCI6X193ZWJwYWNrX3JlcXVpcmVfXygyNCksX19lc01vZHVsZTohMH19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe19fd2VicGFja19yZXF1aXJlX18oMjUpLG1vZHVsZS5leHBvcnRzPV9fd2VicGFja19yZXF1aXJlX18oMzApLk9iamVjdC5zZWFsfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXt2YXIgaXNPYmplY3Q9X193ZWJwYWNrX3JlcXVpcmVfXygyNik7X193ZWJwYWNrX3JlcXVpcmVfXygyNykoInNlYWwiLGZ1bmN0aW9uKCRzZWFsKXtyZXR1cm4gZnVuY3Rpb24oaXQpe3JldHVybiAkc2VhbCYmaXNPYmplY3QoaXQpPyRzZWFsKGl0KTppdH19KX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpe21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGl0KXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIGl0P251bGwhPT1pdDoiZnVuY3Rpb24iPT10eXBlb2YgaXR9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXt2YXIgJGV4cG9ydD1fX3dlYnBhY2tfcmVxdWlyZV9fKDI4KSxjb3JlPV9fd2VicGFja19yZXF1aXJlX18oMzApLGZhaWxzPV9fd2VicGFja19yZXF1aXJlX18oMzMpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKEtFWSxleGVjKXt2YXIgZm49KGNvcmUuT2JqZWN0fHx7fSlbS0VZXXx8T2JqZWN0W0tFWV0sZXhwPXt9O2V4cFtLRVldPWV4ZWMoZm4pLCRleHBvcnQoJGV4cG9ydC5TKyRleHBvcnQuRipmYWlscyhmdW5jdGlvbigpe2ZuKDEpfSksIk9iamVjdCIsZXhwKX19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe3ZhciBnbG9iYWw9X193ZWJwYWNrX3JlcXVpcmVfXygyOSksY29yZT1fX3dlYnBhY2tfcmVxdWlyZV9fKDMwKSxjdHg9X193ZWJwYWNrX3JlcXVpcmVfXygzMSksUFJPVE9UWVBFPSJwcm90b3R5cGUiLCRleHBvcnQ9ZnVuY3Rpb24odHlwZSxuYW1lLHNvdXJjZSl7dmFyIGtleSxvd24sb3V0LElTX0ZPUkNFRD10eXBlJiRleHBvcnQuRixJU19HTE9CQUw9dHlwZSYkZXhwb3J0LkcsSVNfU1RBVElDPXR5cGUmJGV4cG9ydC5TLElTX1BST1RPPXR5cGUmJGV4cG9ydC5QLElTX0JJTkQ9dHlwZSYkZXhwb3J0LkIsSVNfV1JBUD10eXBlJiRleHBvcnQuVyxleHBvcnRzPUlTX0dMT0JBTD9jb3JlOmNvcmVbbmFtZV18fChjb3JlW25hbWVdPXt9KSx0YXJnZXQ9SVNfR0xPQkFMP2dsb2JhbDpJU19TVEFUSUM/Z2xvYmFsW25hbWVdOihnbG9iYWxbbmFtZV18fHt9KVtQUk9UT1RZUEVdO0lTX0dMT0JBTCYmKHNvdXJjZT1uYW1lKTtmb3Ioa2V5IGluIHNvdXJjZSlvd249IUlTX0ZPUkNFRCYmdGFyZ2V0JiZrZXkgaW4gdGFyZ2V0LG93biYma2V5IGluIGV4cG9ydHN8fChvdXQ9b3duP3RhcmdldFtrZXldOnNvdXJjZVtrZXldLGV4cG9ydHNba2V5XT1JU19HTE9CQUwmJiJmdW5jdGlvbiIhPXR5cGVvZiB0YXJnZXRba2V5XT9zb3VyY2Vba2V5XTpJU19CSU5EJiZvd24/Y3R4KG91dCxnbG9iYWwpOklTX1dSQVAmJnRhcmdldFtrZXldPT1vdXQ/ZnVuY3Rpb24oQyl7dmFyIEY9ZnVuY3Rpb24ocGFyYW0pe3JldHVybiB0aGlzIGluc3RhbmNlb2YgQz9uZXcgQyhwYXJhbSk6QyhwYXJhbSl9O3JldHVybiBGW1BST1RPVFlQRV09Q1tQUk9UT1RZUEVdLEZ9KG91dCk6SVNfUFJPVE8mJiJmdW5jdGlvbiI9PXR5cGVvZiBvdXQ/Y3R4KEZ1bmN0aW9uLmNhbGwsb3V0KTpvdXQsSVNfUFJPVE8mJigoZXhwb3J0c1tQUk9UT1RZUEVdfHwoZXhwb3J0c1tQUk9UT1RZUEVdPXt9KSlba2V5XT1vdXQpKX07JGV4cG9ydC5GPTEsJGV4cG9ydC5HPTIsJGV4cG9ydC5TPTQsJGV4cG9ydC5QPTgsJGV4cG9ydC5CPTE2LCRleHBvcnQuVz0zMixtb2R1bGUuZXhwb3J0cz0kZXhwb3J0fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7dmFyIGdsb2JhbD1tb2R1bGUuZXhwb3J0cz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93Lk1hdGg9PU1hdGg/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZi5NYXRoPT1NYXRoP3NlbGY6RnVuY3Rpb24oInJldHVybiB0aGlzIikoKTsibnVtYmVyIj09dHlwZW9mIF9fZyYmKF9fZz1nbG9iYWwpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7dmFyIGNvcmU9bW9kdWxlLmV4cG9ydHM9e3ZlcnNpb246IjEuMi42In07Im51bWJlciI9PXR5cGVvZiBfX2UmJihfX2U9Y29yZSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe3ZhciBhRnVuY3Rpb249X193ZWJwYWNrX3JlcXVpcmVfXygzMik7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZm4sdGhhdCxsZW5ndGgpe2lmKGFGdW5jdGlvbihmbiksdm9pZCAwPT09dGhhdClyZXR1cm4gZm47c3dpdGNoKGxlbmd0aCl7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihhKXtyZXR1cm4gZm4uY2FsbCh0aGF0LGEpfTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKGEsYil7cmV0dXJuIGZuLmNhbGwodGhhdCxhLGIpfTtjYXNlIDM6cmV0dXJuIGZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gZm4uY2FsbCh0aGF0LGEsYixjKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGZuLmFwcGx5KHRoYXQsYXJndW1lbnRzKX19fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oaXQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBpdCl0aHJvdyBUeXBlRXJyb3IoaXQrIiBpcyBub3QgYSBmdW5jdGlvbiEiKTtyZXR1cm4gaXR9fSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oZXhlYyl7dHJ5e3JldHVybiEhZXhlYygpfWNhdGNoKGUpe3JldHVybiEwfX19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzKXsoZnVuY3Rpb24oZ2xvYmFsKXsidXNlIHN0cmljdCI7ZXhwb3J0cy5fX2VzTW9kdWxlPSEwLGV4cG9ydHNbImRlZmF1bHQiXT1mdW5jdGlvbihIYW5kbGViYXJzKXt2YXIgcm9vdD0idW5kZWZpbmVkIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6d2luZG93LCRIYW5kbGViYXJzPXJvb3QuSGFuZGxlYmFycztIYW5kbGViYXJzLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtyZXR1cm4gcm9vdC5IYW5kbGViYXJzPT09SGFuZGxlYmFycyYmKHJvb3QuSGFuZGxlYmFycz0kSGFuZGxlYmFycyksSGFuZGxlYmFyc319LG1vZHVsZS5leHBvcnRzPWV4cG9ydHNbImRlZmF1bHQiXX0pLmNhbGwoZXhwb3J0cyxmdW5jdGlvbigpe3JldHVybiB0aGlzfSgpKX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0IjtleHBvcnRzLl9fZXNNb2R1bGU9ITA7dmFyIEFTVD17aGVscGVyczp7aGVscGVyRXhwcmVzc2lvbjpmdW5jdGlvbihub2RlKXtyZXR1cm4iU3ViRXhwcmVzc2lvbiI9PT1ub2RlLnR5cGV8fCgiTXVzdGFjaGVTdGF0ZW1lbnQiPT09bm9kZS50eXBlfHwiQmxvY2tTdGF0ZW1lbnQiPT09bm9kZS50eXBlKSYmISEobm9kZS5wYXJhbXMmJm5vZGUucGFyYW1zLmxlbmd0aHx8bm9kZS5oYXNoKX0sc2NvcGVkSWQ6ZnVuY3Rpb24ocGF0aCl7cmV0dXJuL15cLnx0aGlzXGIvLnRlc3QocGF0aC5vcmlnaW5hbCl9LHNpbXBsZUlkOmZ1bmN0aW9uKHBhdGgpe3JldHVybiAxPT09cGF0aC5wYXJ0cy5sZW5ndGgmJiFBU1QuaGVscGVycy5zY29wZWRJZChwYXRoKSYmIXBhdGguZGVwdGh9fX07ZXhwb3J0c1siZGVmYXVsdCJdPUFTVCxtb2R1bGUuZXhwb3J0cz1leHBvcnRzWyJkZWZhdWx0Il19LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBwYXJzZShpbnB1dCxvcHRpb25zKXtpZigiUHJvZ3JhbSI9PT1pbnB1dC50eXBlKXJldHVybiBpbnB1dDtfcGFyc2VyMlsiZGVmYXVsdCJdLnl5PXl5LHl5LmxvY0luZm89ZnVuY3Rpb24obG9jSW5mbyl7cmV0dXJuIG5ldyB5eS5Tb3VyY2VMb2NhdGlvbihvcHRpb25zJiZvcHRpb25zLnNyY05hbWUsbG9jSW5mbyl9O3ZhciBzdHJpcD1uZXcgX3doaXRlc3BhY2VDb250cm9sMlsiZGVmYXVsdCJdKG9wdGlvbnMpO3JldHVybiBzdHJpcC5hY2NlcHQoX3BhcnNlcjJbImRlZmF1bHQiXS5wYXJzZShpbnB1dCkpfXZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PV9fd2VicGFja19yZXF1aXJlX18oMSlbImRlZmF1bHQiXSxfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZD1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpWyJkZWZhdWx0Il07ZXhwb3J0cy5fX2VzTW9kdWxlPSEwLGV4cG9ydHMucGFyc2U9cGFyc2U7dmFyIF9wYXJzZXI9X193ZWJwYWNrX3JlcXVpcmVfXygzNyksX3BhcnNlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyc2VyKSxfd2hpdGVzcGFjZUNvbnRyb2w9X193ZWJwYWNrX3JlcXVpcmVfXygzOCksX3doaXRlc3BhY2VDb250cm9sMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93aGl0ZXNwYWNlQ29udHJvbCksX2hlbHBlcnM9X193ZWJwYWNrX3JlcXVpcmVfXyg0MCksSGVscGVycz1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChfaGVscGVycyksX3V0aWxzPV9fd2VicGFja19yZXF1aXJlX18oNSk7ZXhwb3J0cy5wYXJzZXI9X3BhcnNlcjJbImRlZmF1bHQiXTt2YXIgeXk9e307X3V0aWxzLmV4dGVuZCh5eSxIZWxwZXJzKX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMpeyJ1c2Ugc3RyaWN0IjtleHBvcnRzLl9fZXNNb2R1bGU9ITA7dmFyIGhhbmRsZWJhcnM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBQYXJzZXIoKXt0aGlzLnl5PXt9fXZhciBwYXJzZXI9e3RyYWNlOmZ1bmN0aW9uKCl7fSx5eTp7fSxzeW1ib2xzXzp7ZXJyb3I6Mixyb290OjMscHJvZ3JhbTo0LEVPRjo1LHByb2dyYW1fcmVwZXRpdGlvbjA6NixzdGF0ZW1lbnQ6NyxtdXN0YWNoZTo4LGJsb2NrOjkscmF3QmxvY2s6MTAscGFydGlhbDoxMSxwYXJ0aWFsQmxvY2s6MTIsY29udGVudDoxMyxDT01NRU5UOjE0LENPTlRFTlQ6MTUsb3BlblJhd0Jsb2NrOjE2LHJhd0Jsb2NrX3JlcGV0aXRpb25fcGx1czA6MTcsRU5EX1JBV19CTE9DSzoxOCxPUEVOX1JBV19CTE9DSzoxOSxoZWxwZXJOYW1lOjIwLG9wZW5SYXdCbG9ja19yZXBldGl0aW9uMDoyMSxvcGVuUmF3QmxvY2tfb3B0aW9uMDoyMixDTE9TRV9SQVdfQkxPQ0s6MjMsb3BlbkJsb2NrOjI0LGJsb2NrX29wdGlvbjA6MjUsY2xvc2VCbG9jazoyNixvcGVuSW52ZXJzZToyNyxibG9ja19vcHRpb24xOjI4LE9QRU5fQkxPQ0s6Mjksb3BlbkJsb2NrX3JlcGV0aXRpb24wOjMwLG9wZW5CbG9j", "base64"));
  res.write(new Buffer("a19vcHRpb24wOjMxLG9wZW5CbG9ja19vcHRpb24xOjMyLENMT1NFOjMzLE9QRU5fSU5WRVJTRTozNCxvcGVuSW52ZXJzZV9yZXBldGl0aW9uMDozNSxvcGVuSW52ZXJzZV9vcHRpb24wOjM2LG9wZW5JbnZlcnNlX29wdGlvbjE6Mzcsb3BlbkludmVyc2VDaGFpbjozOCxPUEVOX0lOVkVSU0VfQ0hBSU46Mzksb3BlbkludmVyc2VDaGFpbl9yZXBldGl0aW9uMDo0MCxvcGVuSW52ZXJzZUNoYWluX29wdGlvbjA6NDEsb3BlbkludmVyc2VDaGFpbl9vcHRpb24xOjQyLGludmVyc2VBbmRQcm9ncmFtOjQzLElOVkVSU0U6NDQsaW52ZXJzZUNoYWluOjQ1LGludmVyc2VDaGFpbl9vcHRpb24wOjQ2LE9QRU5fRU5EQkxPQ0s6NDcsT1BFTjo0OCxtdXN0YWNoZV9yZXBldGl0aW9uMDo0OSxtdXN0YWNoZV9vcHRpb24wOjUwLE9QRU5fVU5FU0NBUEVEOjUxLG11c3RhY2hlX3JlcGV0aXRpb24xOjUyLG11c3RhY2hlX29wdGlvbjE6NTMsQ0xPU0VfVU5FU0NBUEVEOjU0LE9QRU5fUEFSVElBTDo1NSxwYXJ0aWFsTmFtZTo1NixwYXJ0aWFsX3JlcGV0aXRpb24wOjU3LHBhcnRpYWxfb3B0aW9uMDo1OCxvcGVuUGFydGlhbEJsb2NrOjU5LE9QRU5fUEFSVElBTF9CTE9DSzo2MCxvcGVuUGFydGlhbEJsb2NrX3JlcGV0aXRpb24wOjYxLG9wZW5QYXJ0aWFsQmxvY2tfb3B0aW9uMDo2MixwYXJhbTo2MyxzZXhwcjo2NCxPUEVOX1NFWFBSOjY1LHNleHByX3JlcGV0aXRpb24wOjY2LHNleHByX29wdGlvbjA6NjcsQ0xPU0VfU0VYUFI6NjgsaGFzaDo2OSxoYXNoX3JlcGV0aXRpb25fcGx1czA6NzAsaGFzaFNlZ21lbnQ6NzEsSUQ6NzIsRVFVQUxTOjczLGJsb2NrUGFyYW1zOjc0LE9QRU5fQkxPQ0tfUEFSQU1TOjc1LGJsb2NrUGFyYW1zX3JlcGV0aXRpb25fcGx1czA6NzYsQ0xPU0VfQkxPQ0tfUEFSQU1TOjc3LHBhdGg6NzgsZGF0YU5hbWU6NzksU1RSSU5HOjgwLE5VTUJFUjo4MSxCT09MRUFOOjgyLFVOREVGSU5FRDo4MyxOVUxMOjg0LERBVEE6ODUscGF0aFNlZ21lbnRzOjg2LFNFUDo4NywkYWNjZXB0OjAsJGVuZDoxfSx0ZXJtaW5hbHNfOnsyOiJlcnJvciIsNToiRU9GIiwxNDoiQ09NTUVOVCIsMTU6IkNPTlRFTlQiLDE4OiJFTkRfUkFXX0JMT0NLIiwxOToiT1BFTl9SQVdfQkxPQ0siLDIzOiJDTE9TRV9SQVdfQkxPQ0siLDI5OiJPUEVOX0JMT0NLIiwzMzoiQ0xPU0UiLDM0OiJPUEVOX0lOVkVSU0UiLDM5OiJPUEVOX0lOVkVSU0VfQ0hBSU4iLDQ0OiJJTlZFUlNFIiw0NzoiT1BFTl9FTkRCTE9DSyIsNDg6Ik9QRU4iLDUxOiJPUEVOX1VORVNDQVBFRCIsNTQ6IkNMT1NFX1VORVNDQVBFRCIsNTU6Ik9QRU5fUEFSVElBTCIsNjA6Ik9QRU5fUEFSVElBTF9CTE9DSyIsNjU6Ik9QRU5fU0VYUFIiLDY4OiJDTE9TRV9TRVhQUiIsNzI6IklEIiw3MzoiRVFVQUxTIiw3NToiT1BFTl9CTE9DS19QQVJBTVMiLDc3OiJDTE9TRV9CTE9DS19QQVJBTVMiLDgwOiJTVFJJTkciLDgxOiJOVU1CRVIiLDgyOiJCT09MRUFOIiw4MzoiVU5ERUZJTkVEIiw4NDoiTlVMTCIsODU6IkRBVEEiLDg3OiJTRVAifSxwcm9kdWN0aW9uc186WzAsWzMsMl0sWzQsMV0sWzcsMV0sWzcsMV0sWzcsMV0sWzcsMV0sWzcsMV0sWzcsMV0sWzcsMV0sWzEzLDFdLFsxMCwzXSxbMTYsNV0sWzksNF0sWzksNF0sWzI0LDZdLFsyNyw2XSxbMzgsNl0sWzQzLDJdLFs0NSwzXSxbNDUsMV0sWzI2LDNdLFs4LDVdLFs4LDVdLFsxMSw1XSxbMTIsM10sWzU5LDVdLFs2MywxXSxbNjMsMV0sWzY0LDVdLFs2OSwxXSxbNzEsM10sWzc0LDNdLFsyMCwxXSxbMjAsMV0sWzIwLDFdLFsyMCwxXSxbMjAsMV0sWzIwLDFdLFsyMCwxXSxbNTYsMV0sWzU2LDFdLFs3OSwyXSxbNzgsMV0sWzg2LDNdLFs4NiwxXSxbNiwwXSxbNiwyXSxbMTcsMV0sWzE3LDJdLFsyMSwwXSxbMjEsMl0sWzIyLDBdLFsyMiwxXSxbMjUsMF0sWzI1LDFdLFsyOCwwXSxbMjgsMV0sWzMwLDBdLFszMCwyXSxbMzEsMF0sWzMxLDFdLFszMiwwXSxbMzIsMV0sWzM1LDBdLFszNSwyXSxbMzYsMF0sWzM2LDFdLFszNywwXSxbMzcsMV0sWzQwLDBdLFs0MCwyXSxbNDEsMF0sWzQxLDFdLFs0MiwwXSxbNDIsMV0sWzQ2LDBdLFs0NiwxXSxbNDksMF0sWzQ5LDJdLFs1MCwwXSxbNTAsMV0sWzUyLDBdLFs1MiwyXSxbNTMsMF0sWzUzLDFdLFs1NywwXSxbNTcsMl0sWzU4LDBdLFs1OCwxXSxbNjEsMF0sWzYxLDJdLFs2MiwwXSxbNjIsMV0sWzY2LDBdLFs2NiwyXSxbNjcsMF0sWzY3LDFdLFs3MCwxXSxbNzAsMl0sWzc2LDFdLFs3NiwyXV0scGVyZm9ybUFjdGlvbjpmdW5jdGlvbih5eXRleHQseXlsZW5nLHl5bGluZW5vLHl5LHl5c3RhdGUsJCQsXyQpe3ZhciAkMD0kJC5sZW5ndGgtMTtzd2l0Y2goeXlzdGF0ZSl7Y2FzZSAxOnJldHVybiAkJFskMC0xXTtjYXNlIDI6dGhpcy4kPXl5LnByZXBhcmVQcm9ncmFtKCQkWyQwXSk7YnJlYWs7Y2FzZSAzOnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSA0OnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSA1OnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSA2OnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSA3Ogp0aGlzLiQ9JCRbJDBdO2JyZWFrO2Nhc2UgODp0aGlzLiQ9JCRbJDBdO2JyZWFrO2Nhc2UgOTp0aGlzLiQ9e3R5cGU6IkNvbW1lbnRTdGF0ZW1lbnQiLHZhbHVlOnl5LnN0cmlwQ29tbWVudCgkJFskMF0pLHN0cmlwOnl5LnN0cmlwRmxhZ3MoJCRbJDBdLCQkWyQwXSksbG9jOnl5LmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMTA6dGhpcy4kPXt0eXBlOiJDb250ZW50U3RhdGVtZW50IixvcmlnaW5hbDokJFskMF0sdmFsdWU6JCRbJDBdLGxvYzp5eS5sb2NJbmZvKHRoaXMuXyQpfTticmVhaztjYXNlIDExOnRoaXMuJD15eS5wcmVwYXJlUmF3QmxvY2soJCRbJDAtMl0sJCRbJDAtMV0sJCRbJDBdLHRoaXMuXyQpO2JyZWFrO2Nhc2UgMTI6dGhpcy4kPXtwYXRoOiQkWyQwLTNdLHBhcmFtczokJFskMC0yXSxoYXNoOiQkWyQwLTFdfTticmVhaztjYXNlIDEzOnRoaXMuJD15eS5wcmVwYXJlQmxvY2soJCRbJDAtM10sJCRbJDAtMl0sJCRbJDAtMV0sJCRbJDBdLCExLHRoaXMuXyQpO2JyZWFrO2Nhc2UgMTQ6dGhpcy4kPXl5LnByZXBhcmVCbG9jaygkJFskMC0zXSwkJFskMC0yXSwkJFskMC0xXSwkJFskMF0sITAsdGhpcy5fJCk7YnJlYWs7Y2FzZSAxNTp0aGlzLiQ9e29wZW46JCRbJDAtNV0scGF0aDokJFskMC00XSxwYXJhbXM6JCRbJDAtM10saGFzaDokJFskMC0yXSxibG9ja1BhcmFtczokJFskMC0xXSxzdHJpcDp5eS5zdHJpcEZsYWdzKCQkWyQwLTVdLCQkWyQwXSl9O2JyZWFrO2Nhc2UgMTY6dGhpcy4kPXtwYXRoOiQkWyQwLTRdLHBhcmFtczokJFskMC0zXSxoYXNoOiQkWyQwLTJdLGJsb2NrUGFyYW1zOiQkWyQwLTFdLHN0cmlwOnl5LnN0cmlwRmxhZ3MoJCRbJDAtNV0sJCRbJDBdKX07YnJlYWs7Y2FzZSAxNzp0aGlzLiQ9e3BhdGg6JCRbJDAtNF0scGFyYW1zOiQkWyQwLTNdLGhhc2g6JCRbJDAtMl0sYmxvY2tQYXJhbXM6JCRbJDAtMV0sc3RyaXA6eXkuc3RyaXBGbGFncygkJFskMC01XSwkJFskMF0pfTticmVhaztjYXNlIDE4OnRoaXMuJD17c3RyaXA6eXkuc3RyaXBGbGFncygkJFskMC0xXSwkJFskMC0xXSkscHJvZ3JhbTokJFskMF19O2JyZWFrO2Nhc2UgMTk6dmFyIGludmVyc2U9eXkucHJlcGFyZUJsb2NrKCQkWyQwLTJdLCQkWyQwLTFdLCQkWyQwXSwkJFskMF0sITEsdGhpcy5fJCkscHJvZ3JhbT15eS5wcmVwYXJlUHJvZ3JhbShbaW52ZXJzZV0sJCRbJDAtMV0ubG9jKTtwcm9ncmFtLmNoYWluZWQ9ITAsdGhpcy4kPXtzdHJpcDokJFskMC0yXS5zdHJpcCxwcm9ncmFtOnByb2dyYW0sY2hhaW46ITB9O2JyZWFrO2Nhc2UgMjA6dGhpcy4kPSQkWyQwXTticmVhaztjYXNlIDIxOnRoaXMuJD17cGF0aDokJFskMC0xXSxzdHJpcDp5eS5zdHJpcEZsYWdzKCQkWyQwLTJdLCQkWyQwXSl9O2JyZWFrO2Nhc2UgMjI6dGhpcy4kPXl5LnByZXBhcmVNdXN0YWNoZSgkJFskMC0zXSwkJFskMC0yXSwkJFskMC0xXSwkJFskMC00XSx5eS5zdHJpcEZsYWdzKCQkWyQwLTRdLCQkWyQwXSksdGhpcy5fJCk7YnJlYWs7Y2FzZSAyMzp0aGlzLiQ9eXkucHJlcGFyZU11c3RhY2hlKCQkWyQwLTNdLCQkWyQwLTJdLCQkWyQwLTFdLCQkWyQwLTRdLHl5LnN0cmlwRmxhZ3MoJCRbJDAtNF0sJCRbJDBdKSx0aGlzLl8kKTticmVhaztjYXNlIDI0OnRoaXMuJD17dHlwZToiUGFydGlhbFN0YXRlbWVudCIsbmFtZTokJFskMC0zXSxwYXJhbXM6JCRbJDAtMl0saGFzaDokJFskMC0xXSxpbmRlbnQ6IiIsc3RyaXA6eXkuc3RyaXBGbGFncygkJFskMC00XSwkJFskMF0pLGxvYzp5eS5sb2NJbmZvKHRoaXMuXyQpfTticmVhaztjYXNlIDI1OnRoaXMuJD15eS5wcmVwYXJlUGFydGlhbEJsb2NrKCQkWyQwLTJdLCQkWyQwLTFdLCQkWyQwXSx0aGlzLl8kKTticmVhaztjYXNlIDI2OnRoaXMuJD17cGF0aDokJFskMC0zXSxwYXJhbXM6JCRbJDAtMl0saGFzaDokJFskMC0xXSxzdHJpcDp5eS5zdHJpcEZsYWdzKCQkWyQwLTRdLCQkWyQwXSl9O2JyZWFrO2Nhc2UgMjc6dGhpcy4kPSQkWyQwXTticmVhaztjYXNlIDI4OnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSAyOTp0aGlzLiQ9e3R5cGU6IlN1YkV4cHJlc3Npb24iLHBhdGg6JCRbJDAtM10scGFyYW1zOiQkWyQwLTJdLGhhc2g6JCRbJDAtMV0sbG9jOnl5LmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzA6dGhpcy4kPXt0eXBlOiJIYXNoIixwYWlyczokJFskMF0sbG9jOnl5LmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzE6dGhpcy4kPXt0eXBlOiJIYXNoUGFpciIsa2V5Onl5LmlkKCQkWyQwLTJdKSx2YWx1ZTokJFskMF0sbG9jOnl5LmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzI6dGhpcy4kPXl5LmlkKCQkWyQwLTFdKTticmVhaztjYXNlIDMzOnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSAzNDp0aGlzLiQ9JCRbJDBdO2JyZWFrO2Nhc2UgMzU6dGhpcy4kPXt0eXBlOiJTdHJpbmdMaXRlcmFsIix2YWx1ZTokJFskMF0sb3JpZ2luYWw6JCRbJDBdLGxvYzp5eS5sb2NJbmZvKHRoaXMuXyQpfTticmVhaztjYXNlIDM2OnRoaXMuJD17dHlwZToiTnVtYmVyTGl0ZXJhbCIsdmFsdWU6TnVtYmVyKCQkWyQwXSksb3JpZ2luYWw6TnVtYmVyKCQkWyQwXSksbG9jOnl5LmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzc6dGhpcy4kPXt0eXBlOiJCb29sZWFuTGl0ZXJhbCIsdmFsdWU6InRydWUiPT09JCRbJDBdLG9yaWdpbmFsOiJ0cnVlIj09PSQkWyQwXSxsb2M6eXkubG9jSW5mbyh0aGlzLl8kKX07YnJlYWs7Y2FzZSAzODp0aGlzLiQ9e3R5cGU6IlVuZGVmaW5lZExpdGVyYWwiLG9yaWdpbmFsOnZvaWQgMCx2YWx1ZTp2b2lkIDAsbG9jOnl5LmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzk6dGhpcy4kPXt0eXBlOiJOdWxsTGl0ZXJhbCIsb3JpZ2luYWw6bnVsbCx2YWx1ZTpudWxsLGxvYzp5eS5sb2NJbmZvKHRoaXMuXyQpfTticmVhaztjYXNlIDQwOnRoaXMuJD0kJFskMF07YnJlYWs7Y2FzZSA0MTp0aGlzLiQ9JCRbJDBdO2JyZWFrO2Nhc2UgNDI6dGhpcy4kPXl5LnByZXBhcmVQYXRoKCEwLCQkWyQwXSx0aGlzLl8kKTticmVhaztjYXNlIDQzOnRoaXMuJD15eS5wcmVwYXJlUGF0aCghMSwkJFskMF0sdGhpcy5fJCk7YnJlYWs7Y2FzZSA0NDokJFskMC0yXS5wdXNoKHtwYXJ0Onl5LmlkKCQkWyQwXSksb3JpZ2luYWw6JCRbJDBdLHNlcGFyYXRvcjokJFskMC0xXX0pLHRoaXMuJD0kJFskMC0yXTticmVhaztjYXNlIDQ1OnRoaXMuJD1be3BhcnQ6eXkuaWQoJCRbJDBdKSxvcmlnaW5hbDokJFskMF19XTticmVhaztjYXNlIDQ2OnRoaXMuJD1bXTticmVhaztjYXNlIDQ3OiQkWyQwLTFdLnB1c2goJCRbJDBdKTticmVhaztjYXNlIDQ4OnRoaXM=", "base64"));
  res.write(new Buffer("LiQ9WyQkWyQwXV07YnJlYWs7Y2FzZSA0OTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA1MDp0aGlzLiQ9W107YnJlYWs7Y2FzZSA1MTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA1ODp0aGlzLiQ9W107YnJlYWs7Y2FzZSA1OTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA2NDp0aGlzLiQ9W107YnJlYWs7Y2FzZSA2NTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA3MDp0aGlzLiQ9W107YnJlYWs7Y2FzZSA3MTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA3ODp0aGlzLiQ9W107YnJlYWs7Y2FzZSA3OTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA4Mjp0aGlzLiQ9W107YnJlYWs7Y2FzZSA4MzokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA4Njp0aGlzLiQ9W107YnJlYWs7Y2FzZSA4NzokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA5MDp0aGlzLiQ9W107YnJlYWs7Y2FzZSA5MTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA5NDp0aGlzLiQ9W107YnJlYWs7Y2FzZSA5NTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSA5ODp0aGlzLiQ9WyQkWyQwXV07YnJlYWs7Y2FzZSA5OTokJFskMC0xXS5wdXNoKCQkWyQwXSk7YnJlYWs7Y2FzZSAxMDA6dGhpcy4kPVskJFskMF1dO2JyZWFrO2Nhc2UgMTAxOiQkWyQwLTFdLnB1c2goJCRbJDBdKX19LHRhYmxlOlt7MzoxLDQ6Miw1OlsyLDQ2XSw2OjMsMTQ6WzIsNDZdLDE1OlsyLDQ2XSwxOTpbMiw0Nl0sMjk6WzIsNDZdLDM0OlsyLDQ2XSw0ODpbMiw0Nl0sNTE6WzIsNDZdLDU1OlsyLDQ2XSw2MDpbMiw0Nl19LHsxOlszXX0sezU6WzEsNF19LHs1OlsyLDJdLDc6NSw4OjYsOTo3LDEwOjgsMTE6OSwxMjoxMCwxMzoxMSwxNDpbMSwxMl0sMTU6WzEsMjBdLDE2OjE3LDE5OlsxLDIzXSwyNDoxNSwyNzoxNiwyOTpbMSwyMV0sMzQ6WzEsMjJdLDM5OlsyLDJdLDQ0OlsyLDJdLDQ3OlsyLDJdLDQ4OlsxLDEzXSw1MTpbMSwxNF0sNTU6WzEsMThdLDU5OjE5LDYwOlsxLDI0XX0sezE6WzIsMV19LHs1OlsyLDQ3XSwxNDpbMiw0N10sMTU6WzIsNDddLDE5OlsyLDQ3XSwyOTpbMiw0N10sMzQ6WzIsNDddLDM5OlsyLDQ3XSw0NDpbMiw0N10sNDc6WzIsNDddLDQ4OlsyLDQ3XSw1MTpbMiw0N10sNTU6WzIsNDddLDYwOlsyLDQ3XX0sezU6WzIsM10sMTQ6WzIsM10sMTU6WzIsM10sMTk6WzIsM10sMjk6WzIsM10sMzQ6WzIsM10sMzk6WzIsM10sNDQ6WzIsM10sNDc6WzIsM10sNDg6WzIsM10sNTE6WzIsM10sNTU6WzIsM10sNjA6WzIsM119LHs1OlsyLDRdLDE0OlsyLDRdLDE1OlsyLDRdLDE5OlsyLDRdLDI5OlsyLDRdLDM0OlsyLDRdLDM5OlsyLDRdLDQ0OlsyLDRdLDQ3OlsyLDRdLDQ4OlsyLDRdLDUxOlsyLDRdLDU1OlsyLDRdLDYwOlsyLDRdfSx7NTpbMiw1XSwxNDpbMiw1XSwxNTpbMiw1XSwxOTpbMiw1XSwyOTpbMiw1XSwzNDpbMiw1XSwzOTpbMiw1XSw0NDpbMiw1XSw0NzpbMiw1XSw0ODpbMiw1XSw1MTpbMiw1XSw1NTpbMiw1XSw2MDpbMiw1XX0sezU6WzIsNl0sMTQ6WzIsNl0sMTU6WzIsNl0sMTk6WzIsNl0sMjk6WzIsNl0sMzQ6WzIsNl0sMzk6WzIsNl0sNDQ6WzIsNl0sNDc6WzIsNl0sNDg6WzIsNl0sNTE6WzIsNl0sNTU6WzIsNl0sNjA6WzIsNl19LHs1OlsyLDddLDE0OlsyLDddLDE1OlsyLDddLDE5OlsyLDddLDI5OlsyLDddLDM0OlsyLDddLDM5OlsyLDddLDQ0OlsyLDddLDQ3OlsyLDddLDQ4OlsyLDddLDUxOlsyLDddLDU1OlsyLDddLDYwOlsyLDddfSx7NTpbMiw4XSwxNDpbMiw4XSwxNTpbMiw4XSwxOTpbMiw4XSwyOTpbMiw4XSwzNDpbMiw4XSwzOTpbMiw4XSw0NDpbMiw4XSw0NzpbMiw4XSw0ODpbMiw4XSw1MTpbMiw4XSw1NTpbMiw4XSw2MDpbMiw4XX0sezU6WzIsOV0sMTQ6WzIsOV0sMTU6WzIsOV0sMTk6WzIsOV0sMjk6WzIsOV0sMzQ6WzIsOV0sMzk6WzIsOV0sNDQ6WzIsOV0sNDc6WzIsOV0sNDg6WzIsOV0sNTE6WzIsOV0sNTU6WzIsOV0sNjA6WzIsOV19LHsyMDoyNSw3MjpbMSwzNV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHsyMDozNiw3MjpbMSwzNV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHs0OjM3LDY6MywxNDpbMiw0Nl0sMTU6WzIsNDZdLDE5OlsyLDQ2XSwyOTpbMiw0Nl0sMzQ6WzIsNDZdLDM5OlsyLDQ2XSw0NDpbMiw0Nl0sNDc6WzIsNDZdLDQ4OlsyLDQ2XSw1MTpbMiw0Nl0sNTU6WzIsNDZdLDYwOlsyLDQ2XX0sezQ6MzgsNjozLDE0OlsyLDQ2XSwxNTpbMiw0Nl0sMTk6WzIsNDZdLDI5OlsyLDQ2XSwzNDpbMiw0Nl0sNDQ6WzIsNDZdLDQ3OlsyLDQ2XSw0ODpbMiw0Nl0sNTE6WzIsNDZdLDU1OlsyLDQ2XSw2MDpbMiw0Nl19LHsxMzo0MCwxNTpbMSwyMF0sMTc6Mzl9LHsyMDo0Miw1Njo0MSw2NDo0Myw2NTpbMSw0NF0sNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7NDo0NSw2OjMsMTQ6WzIsNDZdLDE1OlsyLDQ2XSwxOTpbMiw0Nl0sMjk6WzIsNDZdLDM0OlsyLDQ2XSw0NzpbMiw0Nl0sNDg6WzIsNDZdLDUxOlsyLDQ2XSw1NTpbMiw0Nl0sNjA6WzIsNDZdfSx7NTpbMiwxMF0sMTQ6WzIsMTBdLDE1OlsyLDEwXSwxODpbMiwxMF0sMTk6WzIsMTBdLDI5OlsyLDEwXSwzNDpbMiwxMF0sMzk6WzIsMTBdLDQ0OlsyLDEwXSw0NzpbMiwxMF0sNDg6WzIsMTBdLDUxOlsyLDEwXSw1NTpbMiwxMF0sNjA6WzIsMTBdfSx7MjA6NDYsNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjA6NDcsNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjA6NDgsNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjA6NDIsNTY6NDksNjQ6NDMsNjU6WzEsNDRdLDcyOlsxLDM1XSw3ODoyNiw3OToyNyw4MDpbMSwyOF0sODE6WzEsMjldLDgyOlsxLDMwXSw4MzpbMSwzMV0sODQ6WzEsMzJdLDg1OlsxLDM0XSw4NjozM30sezMzOlsyLDc4XSw0OTo1MCw2NTpbMiw3OF0sNzI6WzIsNzhdLDgwOlsyLDc4XSw4MTpbMiw3OF0sODI6WzIsNzhdLDgzOlsyLDc4XSw4NDpbMiw3OF0sODU6WzIsNzhdfSx7MjM6WzIsMzNdLDMzOlsyLDMzXSw1NDpbMiwzM10sNjU6WzIsMzNdLDY4OlsyLDMzXSw3MjpbMiwzM10sNzU6WzIsMzNdLDgwOlsyLDMzXSw4MTpbMiwzM10sODI6WzIsMzNdLDgzOlsyLDMzXSw4NDpbMiwzM10sODU6WzIsMzNdfSx7MjM6WzIsMzRdLDMzOlsyLDM0XSw1NDpbMiwzNF0sNjU6WzIsMzRdLDY4OlsyLDM0XSw3MjpbMiwzNF0sNzU6WzIsMzRdLDgwOlsyLDM0XSw4MTpbMiwzNF0sODI6WzIsMzRdLDgzOlsyLDM0XSw4NDpbMiwzNF0sODU6WzIsMzRdfSx7MjM6WzIsMzVdLDMzOlsyLDM1XSw1NDpbMiwzNV0sNjU6WzIsMzVdLDY4OlsyLDM1XSw3MjpbMiwzNV0sNzU6WzIsMzVdLDgwOlsyLDM1XSw4MTpbMiwzNV0sODI6WzIsMzVdLDgzOlsyLDM1XSw4NDpbMiwzNV0sODU6WzIsMzVdfSx7MjM6WzIsMzZdLDMzOlsyLDM2XSw1NDpbMiwzNl0sNjU6WzIsMzZdLDY4OlsyLDM2XSw3MjpbMiwzNl0sNzU6WzIsMzZdLDgwOlsyLDM2XSw4MTpbMiwzNl0sODI6WzIsMzZdLDgzOlsyLDM2XSw4NDpbMiwzNl0sODU6WzIsMzZdfSx7MjM6WzIsMzddLDMzOlsyLDM3XSw1NDpbMiwzN10sNjU6WzIsMzddLDY4OlsyLDM3XSw3MjpbMiwzN10sNzU6WzIsMzddLDgwOlsyLDM3XSw4MTpbMiwzN10sODI6WzIsMzddLDgzOlsyLDM3XSw4NDpbMiwzN10sODU6WzIsMzddfSx7MjM6WzIsMzhdLDMzOlsyLDM4XSw1NDpbMiwzOF0sNjU6WzIsMzhdLDY4OlsyLDM4XSw3MjpbMiwzOF0sNzU6WzIsMzhdLDgwOlsyLDM4XSw4MTpbMiwzOF0sODI6WzIsMzhdLDgzOlsyLDM4XSw4NDpbMiwzOF0sODU6WzIsMzhdfSx7MjM6WzIsMzldLDMzOlsyLDM5XSw1NDpbMiwzOV0sNjU6WzIsMzldLDY4OlsyLDM5XSw3MjpbMiwzOV0sNzU6WzIsMzldLDgwOlsyLDM5XSw4MTpbMiwzOV0sODI6WzIsMzldLDgzOlsyLDM5XSw4NDpbMiwzOV0sODU6WzIsMzldfSx7MjM6WzIsNDNdLDMzOlsyLDQzXSw1NDpbMiw0M10sNjU6WzIsNDNdLDY4OlsyLDQzXSw3MjpbMiw0M10sNzU6WzIsNDNdLDgwOlsyLDQzXSw4MTpbMiw0M10sODI6WzIsNDNdLDgzOlsyLDQzXSw4NDpbMiw0M10sODU6WzIsNDNdLDg3OlsxLDUxXX0sezcyOlsxLDM1XSw4Njo1Mn0sezIzOlsyLDQ1XSwzMzpbMiw0NV0sNTQ6WzIsNDVdLDY1OlsyLDQ1XSw2ODpbMiw0NV0sNzI6WzIsNDVdLDc1OlsyLDQ1XSw4MDpbMiw0NV0sODE6WzIsNDVdLDgyOlsyLDQ1XSw4MzpbMiw0NV0sODQ6WzIsNDVdLDg1OlsyLDQ1XSw4NzpbMiw0NV19LHs1Mjo1Myw1NDpbMiw4Ml0sNjU6WzIsODJdLDcyOlsyLDgyXSw4MDpbMiw4Ml0sODE6WzIsODJdLDgyOlsyLDgyXSw4MzpbMiw4Ml0sODQ6WzIsODJdLDg1OlsyLDgyXX0sezI1OjU0LDM4OjU2LDM5OlsxLDU4XSw0Mzo1Nyw0NDpbMSw1OV0sNDU6NTUsNDc6WzIsNTRdfSx7Mjg6NjAsNDM6NjEsNDQ6WzEsNTldLDQ3OlsyLDU2XX0sezEzOjYzLDE1OlsxLDIwXSwxODpbMSw2Ml19LHsxNTpbMiw0OF0sMTg6WzIsNDhdfSx7MzM6WzIsODZdLDU3OjY0LDY1OlsyLDg2XSw3MjpbMiw4Nl0sODA6WzIsODZdLDgxOlsyLDg2XSw4MjpbMiw4Nl0sODM6WzIsODZdLDg0OlsyLDg2XSw4NTpbMiw4Nl19LHszMzpbMiw0MF0sNjU6WzIsNDBdLDcyOlsyLDQwXSw4MDpbMiw0MF0sODE6WzIsNDBdLDgyOlsyLDQwXSw4MzpbMiw0MF0sODQ6WzIsNDBdLDg1OlsyLDQwXX0sezMzOlsyLDQxXSw2NTpbMiw0MV0sNzI6WzIsNDFdLDgwOlsyLDQxXSw4MTpbMiw0MV0sODI6WzIsNDFdLDgzOlsyLDQxXSw4NDpbMiw0MV0sODU6WzIsNDFdfSx7MjA6NjUsNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjY6NjYsNDc6WzEsNjddfSx7MzA6NjgsMzM6WzIsNThdLDY1OlsyLDU4XSw3MjpbMiw1OF0sNzU6WzIsNThdLDgwOlsyLDU4XSw4MTpbMiw1OF0sODI6WzIsNThdLDgzOlsyLDU4XSw4NDpbMiw1OF0sODU6WzIsNThdfSx7MzM6WzIsNjRdLDM1OjY5LDY1OlsyLDY0XSw3MjpbMiw2NF0sNzU6WzIsNjRdLDgwOlsyLDY0XSw4MTpbMiw2NF0sODI6WzIsNjRdLDgzOlsyLDY0XSw4NDpbMiw2NF0sODU6WzIsNjRdfSx7MjE6NzAsMjM6WzIsNTBdLDY1OlsyLDUwXSw3MjpbMiw1MF0sODA6WzIsNTBdLDgxOlsyLDUwXSw4MjpbMiw1MF0sODM6WzIsNTBdLDg0OlsyLDUwXSw4NTpbMiw1MF19LHszMzpbMiw5MF0sNjE6NzEsNjU6WzIsOTBdLDcyOlsyLDkwXSw4MDpbMiw5MF0sODE6WzIsOTBdLDgyOlsyLDkwXSw4MzpbMiw5MF0sODQ6WzIsOTBdLDg1OlsyLDkwXX0sezIwOjc1LDMzOlsyLDgwXSw1MDo3Miw2Mzo3Myw2NDo3Niw2NTpbMSw0NF0sNjk6NzQsNzA6NzcsNzE6NzgsNzI6WzEsNzldLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7NzI6WzEsODBdfSw=", "base64"));
  res.write(new Buffer("ezIzOlsyLDQyXSwzMzpbMiw0Ml0sNTQ6WzIsNDJdLDY1OlsyLDQyXSw2ODpbMiw0Ml0sNzI6WzIsNDJdLDc1OlsyLDQyXSw4MDpbMiw0Ml0sODE6WzIsNDJdLDgyOlsyLDQyXSw4MzpbMiw0Ml0sODQ6WzIsNDJdLDg1OlsyLDQyXSw4NzpbMSw1MV19LHsyMDo3NSw1Mzo4MSw1NDpbMiw4NF0sNjM6ODIsNjQ6NzYsNjU6WzEsNDRdLDY5OjgzLDcwOjc3LDcxOjc4LDcyOlsxLDc5XSw3ODoyNiw3OToyNyw4MDpbMSwyOF0sODE6WzEsMjldLDgyOlsxLDMwXSw4MzpbMSwzMV0sODQ6WzEsMzJdLDg1OlsxLDM0XSw4NjozM30sezI2Ojg0LDQ3OlsxLDY3XX0sezQ3OlsyLDU1XX0sezQ6ODUsNjozLDE0OlsyLDQ2XSwxNTpbMiw0Nl0sMTk6WzIsNDZdLDI5OlsyLDQ2XSwzNDpbMiw0Nl0sMzk6WzIsNDZdLDQ0OlsyLDQ2XSw0NzpbMiw0Nl0sNDg6WzIsNDZdLDUxOlsyLDQ2XSw1NTpbMiw0Nl0sNjA6WzIsNDZdfSx7NDc6WzIsMjBdfSx7MjA6ODYsNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7NDo4Nyw2OjMsMTQ6WzIsNDZdLDE1OlsyLDQ2XSwxOTpbMiw0Nl0sMjk6WzIsNDZdLDM0OlsyLDQ2XSw0NzpbMiw0Nl0sNDg6WzIsNDZdLDUxOlsyLDQ2XSw1NTpbMiw0Nl0sNjA6WzIsNDZdfSx7MjY6ODgsNDc6WzEsNjddfSx7NDc6WzIsNTddfSx7NTpbMiwxMV0sMTQ6WzIsMTFdLDE1OlsyLDExXSwxOTpbMiwxMV0sMjk6WzIsMTFdLDM0OlsyLDExXSwzOTpbMiwxMV0sNDQ6WzIsMTFdLDQ3OlsyLDExXSw0ODpbMiwxMV0sNTE6WzIsMTFdLDU1OlsyLDExXSw2MDpbMiwxMV19LHsxNTpbMiw0OV0sMTg6WzIsNDldfSx7MjA6NzUsMzM6WzIsODhdLDU4Ojg5LDYzOjkwLDY0Ojc2LDY1OlsxLDQ0XSw2OTo5MSw3MDo3Nyw3MTo3OCw3MjpbMSw3OV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHs2NTpbMiw5NF0sNjY6OTIsNjg6WzIsOTRdLDcyOlsyLDk0XSw4MDpbMiw5NF0sODE6WzIsOTRdLDgyOlsyLDk0XSw4MzpbMiw5NF0sODQ6WzIsOTRdLDg1OlsyLDk0XX0sezU6WzIsMjVdLDE0OlsyLDI1XSwxNTpbMiwyNV0sMTk6WzIsMjVdLDI5OlsyLDI1XSwzNDpbMiwyNV0sMzk6WzIsMjVdLDQ0OlsyLDI1XSw0NzpbMiwyNV0sNDg6WzIsMjVdLDUxOlsyLDI1XSw1NTpbMiwyNV0sNjA6WzIsMjVdfSx7MjA6OTMsNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjA6NzUsMzE6OTQsMzM6WzIsNjBdLDYzOjk1LDY0Ojc2LDY1OlsxLDQ0XSw2OTo5Niw3MDo3Nyw3MTo3OCw3MjpbMSw3OV0sNzU6WzIsNjBdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjA6NzUsMzM6WzIsNjZdLDM2Ojk3LDYzOjk4LDY0Ojc2LDY1OlsxLDQ0XSw2OTo5OSw3MDo3Nyw3MTo3OCw3MjpbMSw3OV0sNzU6WzIsNjZdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MjA6NzUsMjI6MTAwLDIzOlsyLDUyXSw2MzoxMDEsNjQ6NzYsNjU6WzEsNDRdLDY5OjEwMiw3MDo3Nyw3MTo3OCw3MjpbMSw3OV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHsyMDo3NSwzMzpbMiw5Ml0sNjI6MTAzLDYzOjEwNCw2NDo3Niw2NTpbMSw0NF0sNjk6MTA1LDcwOjc3LDcxOjc4LDcyOlsxLDc5XSw3ODoyNiw3OToyNyw4MDpbMSwyOF0sODE6WzEsMjldLDgyOlsxLDMwXSw4MzpbMSwzMV0sODQ6WzEsMzJdLDg1OlsxLDM0XSw4NjozM30sezMzOlsxLDEwNl19LHszMzpbMiw3OV0sNjU6WzIsNzldLDcyOlsyLDc5XSw4MDpbMiw3OV0sODE6WzIsNzldLDgyOlsyLDc5XSw4MzpbMiw3OV0sODQ6WzIsNzldLDg1OlsyLDc5XX0sezMzOlsyLDgxXX0sezIzOlsyLDI3XSwzMzpbMiwyN10sNTQ6WzIsMjddLDY1OlsyLDI3XSw2ODpbMiwyN10sNzI6WzIsMjddLDc1OlsyLDI3XSw4MDpbMiwyN10sODE6WzIsMjddLDgyOlsyLDI3XSw4MzpbMiwyN10sODQ6WzIsMjddLDg1OlsyLDI3XX0sezIzOlsyLDI4XSwzMzpbMiwyOF0sNTQ6WzIsMjhdLDY1OlsyLDI4XSw2ODpbMiwyOF0sNzI6WzIsMjhdLDc1OlsyLDI4XSw4MDpbMiwyOF0sODE6WzIsMjhdLDgyOlsyLDI4XSw4MzpbMiwyOF0sODQ6WzIsMjhdLDg1OlsyLDI4XX0sezIzOlsyLDMwXSwzMzpbMiwzMF0sNTQ6WzIsMzBdLDY4OlsyLDMwXSw3MToxMDcsNzI6WzEsMTA4XSw3NTpbMiwzMF19LHsyMzpbMiw5OF0sMzM6WzIsOThdLDU0OlsyLDk4XSw2ODpbMiw5OF0sNzI6WzIsOThdLDc1OlsyLDk4XX0sezIzOlsyLDQ1XSwzMzpbMiw0NV0sNTQ6WzIsNDVdLDY1OlsyLDQ1XSw2ODpbMiw0NV0sNzI6WzIsNDVdLDczOlsxLDEwOV0sNzU6WzIsNDVdLDgwOlsyLDQ1XSw4MTpbMiw0NV0sODI6WzIsNDVdLDgzOlsyLDQ1XSw4NDpbMiw0NV0sODU6WzIsNDVdLDg3OlsyLDQ1XX0sezIzOlsyLDQ0XSwzMzpbMiw0NF0sNTQ6WzIsNDRdLDY1OlsyLDQ0XSw2ODpbMiw0NF0sNzI6WzIsNDRdLDc1OlsyLDQ0XSw4MDpbMiw0NF0sODE6WzIsNDRdLDgyOlsyLDQ0XSw4MzpbMiw0NF0sODQ6WzIsNDRdLDg1OlsyLDQ0XSw4NzpbMiw0NF19LHs1NDpbMSwxMTBdfSx7NTQ6WzIsODNdLDY1OlsyLDgzXSw3MjpbMiw4M10sODA6WzIsODNdLDgxOlsyLDgzXSw4MjpbMiw4M10sODM6WzIsODNdLDg0OlsyLDgzXSw4NTpbMiw4M119LHs1NDpbMiw4NV19LHs1Og==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZXh0LnN1YnN0cigwLHRoaXMueXl0ZXh0Lmxlbmd0aC1sZW4tMSksdGhpcy5vZmZzZXQtPWxlbjt2YXIgb2xkTGluZXM9dGhpcy5tYXRjaC5zcGxpdCgvKD86XHJcbj98XG4pL2cpO3RoaXMubWF0Y2g9dGhpcy5tYXRjaC5zdWJzdHIoMCx0aGlzLm1hdGNoLmxlbmd0aC0xKSx0aGlzLm1hdGNoZWQ9dGhpcy5tYXRjaGVkLnN1YnN0cigwLHRoaXMubWF0Y2hlZC5sZW5ndGgtMSksbGluZXMubGVuZ3RoLTEmJih0aGlzLnl5bGluZW5vLT1saW5lcy5sZW5ndGgtMSk7dmFyIHI9dGhpcy55eWxsb2MucmFuZ2U7cmV0dXJuIHRoaXMueXlsbG9jPXtmaXJzdF9saW5lOnRoaXMueXlsbG9jLmZpcnN0X2xpbmUsbGFzdF9saW5lOnRoaXMueXlsaW5lbm8rMSxmaXJzdF9jb2x1bW46dGhpcy55eWxsb2MuZmlyc3RfY29sdW1uLGxhc3RfY29sdW1uOmxpbmVzPyhsaW5lcy5sZW5ndGg9PT1vbGRMaW5lcy5sZW5ndGg/dGhpcy55eWxsb2MuZmlyc3RfY29sdW1uOjApK29sZExpbmVzW29sZExpbmVzLmxlbmd0aC1saW5lcy5sZW5ndGhdLmxlbmd0aC1saW5lc1swXS5sZW5ndGg6dGhpcy55eWxsb2MuZmlyc3RfY29sdW1uLWxlbn0sdGhpcy5vcHRpb25zLnJhbmdlcyYmKHRoaXMueXlsbG9jLnJhbmdlPVtyWzBdLHJbMF0rdGhpcy55eWxlbmctbGVuXSksdGhpc30sbW9yZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9tb3JlPSEwLHRoaXN9LGxlc3M6ZnVuY3Rpb24obil7dGhpcy51bnB1dCh0aGlzLm1hdGNoLnNsaWNlKG4pKX0scGFzdElucHV0OmZ1bmN0aW9uKCl7dmFyIHBhc3Q9dGhpcy5tYXRjaGVkLnN1YnN0cigwLHRoaXMubWF0Y2hlZC5sZW5ndGgtdGhpcy5tYXRjaC5sZW5ndGgpO3JldHVybihwYXN0Lmxlbmd0aD4yMD8iLi4uIjoiIikrcGFzdC5zdWJzdHIoLTIwKS5yZXBsYWNlKC9cbi9nLCIiKX0sdXBjb21pbmdJbnB1dDpmdW5jdGlvbigpe3ZhciBuZXh0PXRoaXMubWF0Y2g7cmV0dXJuIG5leHQubGVuZ3RoPDIwJiYobmV4dCs9dGhpcy5faW5wdXQuc3Vic3RyKDAsMjAtbmV4dC5sZW5ndGgpKSwobmV4dC5zdWJzdHIoMCwyMCkrKG5leHQubGVuZ3RoPjIwPyIuLi4iOiIiKSkucmVwbGFjZSgvXG4vZywiIil9LHNob3dQb3NpdGlvbjpmdW5jdGlvbigpe3ZhciBwcmU9dGhpcy5wYXN0SW5wdXQoKSxjPW5ldyBBcnJheShwcmUubGVuZ3RoKzEpLmpvaW4oIi0iKTtyZXR1cm4gcHJlK3RoaXMudXBjb21pbmdJbnB1dCgpKyJcbiIrYysiXiJ9LG5leHQ6ZnVuY3Rpb24oKXtpZih0aGlzLmRvbmUpcmV0dXJuIHRoaXMuRU9GO3RoaXMuX2lucHV0fHwodGhpcy5kb25lPSEwKTt2YXIgdG9rZW4sbWF0Y2gsdGVtcE1hdGNoLGluZGV4LGxpbmVzO3RoaXMuX21vcmV8fCh0aGlzLnl5dGV4dD0iIix0aGlzLm1hdGNoPSIiKTtmb3IodmFyIHJ1bGVzPXRoaXMuX2N1cnJlbnRSdWxlcygpLGk9MDtpPHJ1bGVzLmxlbmd0aCYmKHRlbXBNYXRjaD10aGlzLl9pbnB1dC5tYXRjaCh0aGlzLnJ1bGVzW3J1bGVzW2ldXSksIXRlbXBNYXRjaHx8bWF0Y2gmJiEodGVtcE1hdGNoWzBdLmxlbmd0aD5tYXRjaFswXS5sZW5ndGgpfHwobWF0Y2g9dGVtcE1hdGNoLGluZGV4PWksdGhpcy5vcHRpb25zLmZsZXgpKTtpKyspO3JldHVybiBtYXRjaD8obGluZXM9bWF0Y2hbMF0ubWF0Y2goLyg/OlxyXG4/fFxuKS4qL2cpLGxpbmVzJiYodGhpcy55eWxpbmVubys9bGluZXMubGVuZ3RoKSx0aGlzLnl5bGxvYz17Zmlyc3RfbGluZTp0aGlzLnl5bGxvYy5sYXN0X2xpbmUsbGFzdF9saW5lOnRoaXMueXlsaW5lbm8rMSxmaXJzdF9jb2x1bW46dGhpcy55eWxsb2MubGFzdF9jb2x1bW4sbGFzdF9jb2x1bW46bGluZXM/bGluZXNbbGluZXMubGVuZ3RoLTFdLmxlbmd0aC1saW5lc1tsaW5lcy5sZW5ndGgtMV0ubWF0Y2goL1xyP1xuPy8pWzBdLmxlbmd0aDp0aGlzLnl5bGxvYy5sYXN0X2NvbHVtbittYXRjaFswXS5sZW5ndGh9LHRoaXMueXl0ZXh0Kz1tYXRjaFswXSx0aGlzLm1hdGNoKz1tYXRjaFswXSx0aGlzLm1hdGNoZXM9bWF0Y2gsdGhpcy55eWxlbmc9dGhpcy55eXRleHQubGVuZ3RoLHRoaXMub3B0aW9ucy5yYW5nZXMmJih0aGlzLnl5bGxvYy5yYW5nZT1bdGhpcy5vZmZzZXQsdGhpcy5vZmZzZXQrPXRoaXMueXlsZW5nXSksdGhpcy5fbW9yZT0hMSx0aGlzLl9pbnB1dD10aGlzLl9pbnB1dC5zbGljZShtYXRjaFswXS5sZW5ndGgpLHRoaXMubWF0Y2hlZCs9bWF0Y2hbMF0sdG9rZW49dGhpcy5wZXJmb3JtQWN0aW9uLmNhbGwodGhpcyx0aGlzLnl5LHRoaXMscnVsZXNbaW5kZXhdLHRoaXMuY29uZGl0aW9uU3RhY2tbdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGgtMV0pLHRoaXMuZG9uZSYmdGhpcy5faW5wdXQmJih0aGlzLmRvbmU9ITEpLHRva2VuP3Rva2VuOnZvaWQgMCk6IiI9PT10aGlzLl9pbnB1dD90aGlzLkVPRjp0aGlzLnBhcnNlRXJyb3IoIkxleGljYWwgZXJyb3Igb24gbGluZSAiKyh0aGlzLnl5bGluZW5vKzEpKyIuIFVucmVjb2duaXplZCB0ZXh0LlxuIit0aGlzLnNob3dQb3NpdGlvbigpLHt0ZXh0OiIiLHRva2VuOm51bGwsbGluZTp0aGlzLnl5bGluZW5vfSl9LGxleDpmdW5jdGlvbigpe3ZhciByPXRoaXMubmV4dCgpO3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2Ygcj9yOnRoaXMubGV4KCl9LGJlZ2luOmZ1bmN0aW9uKGNvbmRpdGlvbil7dGhpcy5jb25kaXRpb25TdGFjay5wdXNoKGNvbmRpdGlvbil9LHBvcFN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uZGl0aW9uU3RhY2sucG9wKCl9LF9jdXJyZW50UnVsZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb25kaXRpb25zW3RoaXMuY29uZGl0aW9uU3RhY2tbdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGgtMV1dLnJ1bGVzfSx0b3BTdGF0ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbmRpdGlvblN0YWNrW3RoaXMuY29uZGl0aW9uU3RhY2subGVuZ3RoLTJdfSxwdXNoU3RhdA==", "base64"));
  res.write(new Buffer("ZTpmdW5jdGlvbihjb25kaXRpb24pe3RoaXMuYmVnaW4oY29uZGl0aW9uKX19O3JldHVybiBsZXhlci5vcHRpb25zPXt9LGxleGVyLnBlcmZvcm1BY3Rpb249ZnVuY3Rpb24oeXkseXlfLCRhdm9pZGluZ19uYW1lX2NvbGxpc2lvbnMsWVlfU1RBUlQpe2Z1bmN0aW9uIHN0cmlwKHN0YXJ0LGVuZCl7cmV0dXJuIHl5Xy55eXRleHQ9eXlfLnl5dGV4dC5zdWJzdHIoc3RhcnQseXlfLnl5bGVuZy1lbmQpfXN3aXRjaCgkYXZvaWRpbmdfbmFtZV9jb2xsaXNpb25zKXtjYXNlIDA6aWYoIlxcXFwiPT09eXlfLnl5dGV4dC5zbGljZSgtMik/KHN0cmlwKDAsMSksdGhpcy5iZWdpbigibXUiKSk6IlxcIj09PXl5Xy55eXRleHQuc2xpY2UoLTEpPyhzdHJpcCgwLDEpLHRoaXMuYmVnaW4oImVtdSIpKTp0aGlzLmJlZ2luKCJtdSIpLHl5Xy55eXRleHQpcmV0dXJuIDE1O2JyZWFrO2Nhc2UgMTpyZXR1cm4gMTU7Y2FzZSAyOnJldHVybiB0aGlzLnBvcFN0YXRlKCksMTU7Y2FzZSAzOnJldHVybiB0aGlzLmJlZ2luKCJyYXciKSwxNTtjYXNlIDQ6cmV0dXJuIHRoaXMucG9wU3RhdGUoKSwicmF3Ij09PXRoaXMuY29uZGl0aW9uU3RhY2tbdGhpcy5jb25kaXRpb25TdGFjay5sZW5ndGgtMV0/MTU6KHl5Xy55eXRleHQ9eXlfLnl5dGV4dC5zdWJzdHIoNSx5eV8ueXlsZW5nLTkpLCJFTkRfUkFXX0JMT0NLIik7Y2FzZSA1OnJldHVybiAxNTtjYXNlIDY6cmV0dXJuIHRoaXMucG9wU3RhdGUoKSwxNDtjYXNlIDc6cmV0dXJuIDY1O2Nhc2UgODpyZXR1cm4gNjg7Y2FzZSA5OnJldHVybiAxOTtjYXNlIDEwOnJldHVybiB0aGlzLnBvcFN0YXRlKCksdGhpcy5iZWdpbigicmF3IiksMjM7Y2FzZSAxMTpyZXR1cm4gNTU7Y2FzZSAxMjpyZXR1cm4gNjA7Y2FzZSAxMzpyZXR1cm4gMjk7Y2FzZSAxNDpyZXR1cm4gNDc7Y2FzZSAxNTpyZXR1cm4gdGhpcy5wb3BTdGF0ZSgpLDQ0O2Nhc2UgMTY6cmV0dXJuIHRoaXMucG9wU3RhdGUoKSw0NDtjYXNlIDE3OnJldHVybiAzNDtjYXNlIDE4OnJldHVybiAzOTtjYXNlIDE5OnJldHVybiA1MTtjYXNlIDIwOnJldHVybiA0ODtjYXNlIDIxOnRoaXMudW5wdXQoeXlfLnl5dGV4dCksdGhpcy5wb3BTdGF0ZSgpLHRoaXMuYmVnaW4oImNvbSIpO2JyZWFrO2Nhc2UgMjI6cmV0dXJuIHRoaXMucG9wU3RhdGUoKSwxNDtjYXNlIDIzOnJldHVybiA0ODtjYXNlIDI0OnJldHVybiA3MztjYXNlIDI1OnJldHVybiA3MjtjYXNlIDI2OnJldHVybiA3MjtjYXNlIDI3OnJldHVybiA4NztjYXNlIDI4OmJyZWFrO2Nhc2UgMjk6cmV0dXJuIHRoaXMucG9wU3RhdGUoKSw1NDtjYXNlIDMwOnJldHVybiB0aGlzLnBvcFN0YXRlKCksMzM7Y2FzZSAzMTpyZXR1cm4geXlfLnl5dGV4dD1zdHJpcCgxLDIpLnJlcGxhY2UoL1xcIi9nLCciJyksODA7Y2FzZSAzMjpyZXR1cm4geXlfLnl5dGV4dD1zdHJpcCgxLDIpLnJlcGxhY2UoL1xcJy9nLCInIiksODA7Y2FzZSAzMzpyZXR1cm4=", "base64"));
  res.write(new Buffer("IDg1O2Nhc2UgMzQ6cmV0dXJuIDgyO2Nhc2UgMzU6cmV0dXJuIDgyO2Nhc2UgMzY6cmV0dXJuIDgzO2Nhc2UgMzc6cmV0dXJuIDg0O2Nhc2UgMzg6cmV0dXJuIDgxO2Nhc2UgMzk6cmV0dXJuIDc1O2Nhc2UgNDA6cmV0dXJuIDc3O2Nhc2UgNDE6cmV0dXJuIDcyO2Nhc2UgNDI6cmV0dXJuIHl5Xy55eXRleHQ9eXlfLnl5dGV4dC5yZXBsYWNlKC9cXChbXFxcXV0pL2csIiQxIiksNzI7Y2FzZSA0MzpyZXR1cm4iSU5WQUxJRCI7Y2FzZSA0NDpyZXR1cm4gNX19LGxleGVyLnJ1bGVzPVsvXig/OlteXHgwMF0qPyg/PShce1x7KSkpLywvXig/OlteXHgwMF0rKS8sL14oPzpbXlx4MDBdezIsfT8oPz0oXHtce3xcXFx7XHt8XFxcXFx7XHt8JCkpKS8sL14oPzpce1x7XHtceyg/PVteXC9dKSkvLC9eKD86XHtce1x7XHtcL1teXHMhIiMlLSxcLlwvOy0+QFxbLVxeYFx7LX5dKyg/PVs9fVxzXC8uXSlcfVx9XH1cfSkvLC9eKD86W15ceDAwXSo/KD89KFx7XHtce1x7KSkpLywvXig/Oltcc1xTXSo/LS0ofik/XH1cfSkvLC9eKD86XCgpLywvXig/OlwpKS8sL14oPzpce1x7XHtceykvLC9eKD86XH1cfVx9XH0pLywvXig/Olx7XHsofik/PikvLC9eKD86XHtceyh+KT8jPikvLC9eKD86XHtceyh+KT8jXCo/KS8sL14oPzpce1x7KH4pP1wvKS8sL14oPzpce1x7KH4pP1xeXHMqKH4pP1x9XH0pLywvXig/Olx7XHsofik/XHMqZWxzZVxzKih+KT9cfVx9KS8sL14oPzpce1x7KH4pP1xeKS8sL14oPzpce1x7KH4pP1xzKmVsc2VcYikvLC9eKD86XHtceyh+KT9ceykvLC9eKD86XHtceyh+KT8mKS8sL14oPzpce1x7KH4pPyEtLSkvLC9eKD86XHtceyh+KT8hW1xzXFNdKj9cfVx9KS8sL14oPzpce1x7KH4pP1wqPykvLC9eKD86PSkvLC9eKD86XC5cLikvLC9eKD86XC4oPz0oWz1+fVxzXC8uKXxdKSkpLywvXig/OltcLy5dKS8sL14oPzpccyspLywvXig/Olx9KH4pP1x9XH0pLywvXig/Oih+KT9cfVx9KS8sL14oPzoiKFxcWyJdfFteIl0pKiIpLywvXig/OicoXFxbJ118W14nXSkqJykvLC9eKD86QCkvLC9eKD86dHJ1ZSg/PShbfn1ccyldKSkpLywvXig/OmZhbHNlKD89KFt+fVxzKV0pKSkvLC9eKD86dW5kZWZpbmVkKD89KFt+fVxzKV0pKSkvLC9eKD86bnVsbCg/PShbfn1ccyldKSkpLywvXig/Oi0/WzAtOV0rKD86XC5bMC05XSspPyg/PShbfn1ccyldKSkpLywvXig/OmFzXHMrXHwpLywvXig/Olx8KS8sL14oPzooW15ccyEiIyUtLFwuXC87LT5AXFstXF5gXHstfl0rKD89KFs9fn1cc1wvLil8XSkpKSkvLC9eKD86XFsoXFxcXXxbXlxdXSkqXF0pLywvXig/Oi4pLywvXig/OiQpL10sbGV4ZXIuY29uZGl0aW9ucz17bXU6e3J1bGVzOls3LDgsOSwxMCwxMSwxMiwxMywxNCwxNSwxNiwxNywxOCwxOSwyMCwyMSwyMiwyMywyNCwyNSwyNiwyNywyOCwyOSwzMCwzMSwzMiwzMywzNCwzNSwzNiwzNywzOCwzOSw0MCw0MSw0Miw0Myw0NF0saW5jbHVzaXZlOiExfSxlbXU6e3J1bGU=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("LmZvcmNlQnVmZmVyLGFwcGVuZEZpcnN0PXZvaWQgMCxzb3VyY2VTZWVuPXZvaWQgMCxidWZmZXJTdGFydD12b2lkIDAsYnVmZmVyRW5kPXZvaWQgMDtyZXR1cm4gdGhpcy5zb3VyY2UuZWFjaChmdW5jdGlvbihsaW5lKXtsaW5lLmFwcGVuZFRvQnVmZmVyPyhidWZmZXJTdGFydD9saW5lLnByZXBlbmQoIiAgKyAiKTpidWZmZXJTdGFydD1saW5lLGJ1ZmZlckVuZD1saW5lKTooYnVmZmVyU3RhcnQmJihzb3VyY2VTZWVuP2J1ZmZlclN0YXJ0LnByZXBlbmQoImJ1ZmZlciArPSAiKTphcHBlbmRGaXJzdD0hMCxidWZmZXJFbmQuYWRkKCI7IiksYnVmZmVyU3RhcnQ9YnVmZmVyRW5kPXZvaWQgMCksc291cmNlU2Vlbj0hMCxpc1NpbXBsZXx8KGFwcGVuZE9ubHk9ITEpKX0pLGFwcGVuZE9ubHk/YnVmZmVyU3RhcnQ/KGJ1ZmZlclN0YXJ0LnByZXBlbmQoInJldHVybiAiKSxidWZmZXJFbmQuYWRkKCI7IikpOnNvdXJjZVNlZW58fHRoaXMuc291cmNlLnB1c2goJ3JldHVybiAiIjsnKToodmFyRGVjbGFyYXRpb25zKz0iLCBidWZmZXIgPSAiKyhhcHBlbmRGaXJzdD8iIjp0aGlzLmluaXRpYWxpemVCdWZmZXIoKSksYnVmZmVyU3RhcnQ/KGJ1ZmZlclN0YXJ0LnByZXBlbmQoInJldHVybiBidWZmZXIgKyAiKSxidWZmZXJFbmQuYWRkKCI7IikpOnRoaXMuc291cmNlLnB1c2goInJldHVybiBidWZmZXI7IikpLHZhckRlY2xhcmF0aW9ucyYmdGhpcy5zb3VyY2UucHJlcGVuZCgidmFyICIrdmFyRGVjbGFyYXRpb25zLnN1YnN0cmluZygyKSsoYXBwZW5kRmlyc3Q/IiI6IjtcbiIpKSx0aGlzLnNvdXJjZS5tZXJnZSgpfSxibG9ja1ZhbHVlOmZ1bmN0aW9uKG5hbWUpe3ZhciBibG9ja0hlbHBlck1pc3Npbmc9dGhpcy5hbGlhc2FibGUoImhlbHBlcnMuYmxvY2tIZWxwZXJNaXNzaW5nIikscGFyYW1zPVt0aGlzLmNvbnRleHROYW1lKDApXTt0aGlzLnNldHVwSGVscGVyQXJncyhuYW1lLDAscGFyYW1zKTt2YXIgYmxvY2tOYW1lPXRoaXMucG9wU3RhY2soKTtwYXJhbXMuc3BsaWNlKDEsMCxibG9ja05hbWUpLHRoaXMucHVzaCh0aGlzLnNvdXJjZS5mdW5jdGlvbkNhbGwoYmxvY2tIZWxwZXJNaXNzaW5nLCJjYWxsIixwYXJhbXMpKX0sYW1iaWd1b3VzQmxvY2tWYWx1ZTpmdW5jdGlvbigpe3ZhciBibG9ja0hlbHBlck1pc3Npbmc9dGhpcy5hbGlhc2FibGUoImhlbHBlcnMuYmxvY2tIZWxwZXJNaXNzaW5nIikscGFyYW1zPVt0aGlzLmNvbnRleHROYW1lKDApXTt0aGlzLnNldHVwSGVscGVyQXJncygiIiwwLHBhcmFtcywhMCksdGhpcy5mbHVzaElubGluZSgpO3ZhciBjdXJyZW50PXRoaXMudG9wU3RhY2soKTtwYXJhbXMuc3BsaWNlKDEsMCxjdXJyZW50KSx0aGlzLnB1c2hTb3VyY2UoWyJpZiAoISIsdGhpcy5sYXN0SGVscGVyLCIpIHsgIixjdXJyZW50LCIgPSAiLHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChibG9ja0hlbHBlck1pc3NpbmcsImNhbGwiLHBhcmFtcyksIn0iXSl9LGFwcGVuZENvbnRlbnQ6ZnVuY3Rpb24oY29udGVudCl7dGhpcy5wZW5kaW5nQ29udGVudD9jb250ZW50PXRoaXMucGVuZGluZ0NvbnRlbnQrY29udGVudDp0aGlzLnBlbmRpbmdMb2NhdGlvbj10aGlzLnNvdXJjZS5jdXJyZW50TG9jYXRpb24sdGhpcy5wZW5kaW5nQ29udGVudD1jb250ZW50fSxhcHBlbmQ6ZnVuY3Rpb24oKXtpZih0aGlzLmlzSW5saW5lKCkpdGhpcy5yZXBsYWNlU3RhY2soZnVuY3Rpb24oY3VycmVudCl7cmV0dXJuWyIgIT0gbnVsbCA/ICIsY3VycmVudCwnIDogIiInXX0pLHRoaXMucHVzaFNvdXJjZSh0aGlzLmFwcGVuZFRvQnVmZmVyKHRoaXMucG9wU3RhY2soKSkpO2Vsc2V7dmFyIGxvY2FsPXRoaXMucG9wU3RhY2soKTt0aGlzLnB1c2hTb3VyY2UoWyJpZiAoIixsb2NhbCwiICE9IG51bGwpIHsgIix0aGlzLmFwcGVuZFRvQnVmZmVyKGxvY2FsLHZvaWQgMCwhMCksIiB9Il0pLHRoaXMuZW52aXJvbm1lbnQuaXNTaW1wbGUmJnRoaXMucHVzaFNvdXJjZShbImVsc2UgeyAiLHRoaXMuYXBwZW5kVG9CdWZmZXIoIicnIix2b2lkIDAsITApLCIgfSJdKX19LGFwcGVuZEVzY2FwZWQ6ZnVuY3Rpb24oKXt0aGlzLnB1c2hTb3VyY2UodGhpcy5hcHBlbmRUb0J1ZmZlcihbdGhpcy5hbGlhc2FibGUoImNvbnRhaW5lci5lc2NhcGVFeHByZXNzaW9uIiksIigiLHRoaXMucG9wU3RhY2soKSwiKSJdKSl9LGdldENvbnRleHQ6ZnVuY3Rpb24oZGVwdGgpe3RoaXMubGFzdENvbnRleHQ9ZGVwdGh9LHB1c2hDb250ZXh0OmZ1bmN0aW9uKCl7dGhpcy5wdXNoU3RhY2tMaXRlcmFsKHRoaXMuY29udGV4dE5hbWUodGhpcy5sYXN0Q29udGV4dCkpfSxsb29rdXBPbkNvbnRleHQ6ZnVuY3Rpb24ocGFydHMsZmFsc3ksc3RyaWN0LHNjb3BlZCl7dmFyIGk9MDtzY29wZWR8fCF0aGlzLm9wdGlvbnMuY29tcGF0fHx0aGlzLmxhc3RDb250ZXh0P3RoaXMucHVzaENvbnRleHQoKTp0aGlzLnB1c2godGhpcy5kZXB0aGVkTG9va3VwKHBhcnRzW2krK10pKSx0aGlzLnJlc29sdmVQYXRoKCJjb250ZXh0IixwYXJ0cyxpLGZhbHN5LHN0cmljdCl9LGxvb2t1cEJsb2NrUGFyYW06ZnVuY3Rpb24oYmxvY2tQYXJhbUlkLHBhcnRzKXt0aGlzLnVzZUJsb2NrUGFyYW1zPSEwLHRoaXMucHVzaChbImJsb2NrUGFyYW1zWyIsYmxvY2tQYXJhbUlkWzBdLCJdWyIsYmxvY2tQYXJhbUlkWzFdLCJdIl0pLHRoaXMucmVzb2x2ZVBhdGgoImNvbnRleHQiLHBhcnRzLDEpfSxsb29rdXBEYXRhOmZ1bmN0aW9uKGRlcHRoLHBhcnRzLHN0cmljdCl7ZGVwdGg/dGhpcy5wdXNoU3RhY2tMaXRlcmFsKCJjb250YWluZXIuZGF0YShkYXRhLCAiK2RlcHRoKyIpIik6dGhpcy5wdXNoU3RhY2tMaXRlcmFsKCJkYXRhIiksdGhpcy5yZXNvbHZlUGF0aCgiZGF0YSIscGFydHMsMCwhMCxzdHJpY3QpfSxyZXNvbHZlUGF0aDpmdW5jdGlvbih0eXBlLHBhcnRzLGksZmFsc3ksc3RyaWN0KXt2YXIgX3RoaXM9dGhpcztpZih0aGlzLm9wdGlvbnMuc3RyaWN0fHx0aGlzLm9wdGlvbnMuYXNzdW1lT2JqZWN0cylyZXR1cm4gdm9pZCB0aGlzLnB1c2goc3RyaWN0TG9va3VwKHRoaXMub3B0aW9ucy5zdHJpY3QmJnN0cmljdCx0aGlzLHBhcnRzLHR5cGUpKTtmb3IodmFyIGxlbj1wYXJ0cy5sZW5ndGg7aTxsZW47aSsrKXRoaXMucmVwbGFjZVN0YWNrKGZ1bmN0aW9uKGN1cnJlbnQpe3ZhciBsb29rdXA9X3RoaXMubmFtZUxvb2t1cChjdXJyZW50LHBhcnRzW2ldLHR5cGUpO3JldHVybiBmYWxzeT9bIiAmJiAiLGxvb2t1cF06WyIgIT0gbnVsbCA/ICIsbG9va3VwLCIgOiAiLGN1cnJlbnRdfSl9LHJlc29sdmVQb3NzaWJsZUxhbWJkYTpmdW5jdGlvbigpe3RoaXMucHVzaChbdGhpcy5hbGlhc2FibGUoImNvbnRhaW5lci5sYW1iZGEiKSwiKCIsdGhpcy5wb3BTdGFjaygpLCIsICIsdGhpcy5jb250ZXh0TmFtZSgwKSwiKSJdKX0scHVzaFN0cmluZ1BhcmFtOmZ1bmN0aW9uKHN0cmluZyx0eXBlKXt0aGlzLnB1c2hDb250ZXh0KCksdGhpcy5wdXNoU3RyaW5nKHR5cGUpLCJTdWJFeHByZXNzaW9uIiE9PXR5cGUmJigic3RyaW5nIj09dHlwZW9mIHN0cmluZz90aGlzLnB1c2hTdHJpbmcoc3RyaW5nKTp0aGlzLnB1c2hTdGFja0xpdGVyYWwoc3RyaW5nKSl9LGVtcHR5SGFzaDpmdW5jdGlvbihvbWl0RW1wdHkpe3RoaXMudHJhY2tJZHMmJnRoaXMucHVzaCgie30iKSx0aGlzLnN0cmluZ1BhcmFtcyYmKHRoaXMucHVzaCgie30iKSx0aGlzLnB1c2goInt9IikpLHRoaXMucHVzaFN0YWNrTGl0ZXJhbChvbWl0RW1wdHk/InVuZGVmaW5lZCI6Int9Iil9LHB1c2hIYXNoOmZ1bmN0aW9uKCl7dGhpcy5oYXNoJiZ0aGlzLmhhc2hlcy5wdXNoKHRoaXMuaGFzaCksdGhpcy5oYXNoPXt2YWx1ZXM6W10sdHlwZXM6W10sY29udGV4dHM6W10saWRzOltdfX0scG9wSGFzaDpmdW5jdGlvbigpe3ZhciBoYXNoPXRoaXMuaGFzaDt0aGlzLmhhc2g9dGhpcy5oYXNoZXMucG9wKCksdGhpcy50cmFja0lkcyYmdGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbChoYXNoLmlkcykpLHRoaXMuc3RyaW5nUGFyYW1zJiYodGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbChoYXNoLmNvbnRleHRzKSksdGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbChoYXNoLnR5cGVzKSkpLHRoaXMucHVzaCh0aGlzLm9iamVjdExpdGVyYWwoaGFzaC52YWx1ZXMpKX0scHVzaFN0cmluZzpmdW5jdGlvbihzdHJpbmcpe3RoaXMucHVzaFN0YWNrTGl0ZXJhbCh0aGlzLnF1b3RlZFN0cmluZyhzdHJpbmcpKX0scHVzaExpdGVyYWw6ZnVuY3Rpb24odmFsdWUpe3RoaXMucHVzaFN0YWNrTGl0ZXJhbCh2YWx1ZSl9LHB1c2hQcm9ncmFtOmZ1bmN0aW9uKGd1aWQpe251bGwhPWd1aWQ/dGhpcy5wdXNoU3RhY2tMaXRlcmFsKHRoaXMucHJvZ3JhbUV4cHJlc3Npb24oZ3VpZCkpOnRoaXMucHVzaFN0YWNrTGl0ZXJhbChudWxsKX0scmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24ocGFyYW1TaXplLG5hbWUpe3ZhciBmb3VuZERlY29yYXRvcj10aGlzLm5hbWVMb29rdXAoImRlY29yYXRvcnMiLG5hbWUsImRlY29yYXRvciIpLG9wdGlvbnM9dGhpcy5zZXR1cEhlbHBlckFyZ3MobmFtZSxwYXJhbVNpemUpO3RoaXMuZGVjb3JhdG9ycy5wdXNoKFsiZm4gPSAiLHRoaXMuZGVjb3JhdG9ycy5mdW5jdGlvbkNhbGwoZm91bmREZWNvcmF0b3IsIiIsWyJmbiIsInByb3BzIiwiY29udGFpbmVyIixvcHRpb25zXSksIiB8fCBmbjsiXSl9LGludm9rZUhlbHBlcjpmdW5jdGlvbihwYXJhbVNpemUsbmFtZSxpc1NpbXBsZSl7dmFyIG5vbkhlbHBlcj10aGlzLnBvcFN0YWNrKCksaGVscGVyPXRoaXMuc2V0dXBIZWxwZXIocGFyYW1TaXplLG5hbWUpLHNpbXBsZT1pc1NpbXBsZT9baGVscGVyLm5hbWUsIiB8fCAiXToiIixsb29rdXA9WyIoIl0uY29uY2F0KHNpbXBsZSxub25IZWxwZXIpO3RoaXMub3B0aW9ucy5zdHJpY3R8fGxvb2t1cC5wdXNoKCIgfHwgIix0aGlzLmFsaWFzYWJsZSgiaGVscGVycy5oZWxwZXJNaXNzaW5nIikpLGxvb2t1cC5wdXNoKCIpIiksdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChsb29rdXAsImNhbGwiLGhlbHBlci5jYWxsUGFyYW1zKSl9LGludm9rZUtub3duSGVscGVyOmZ1bmN0aW9uKHBhcmFtU2l6ZSxuYW1lKXt2YXIgaGVscGVyPXRoaXMuc2V0dXBIZWxwZXIocGFyYW1TaXplLG5hbWUpO3RoaXMucHVzaCh0aGlzLnNvdXJjZS5mdW5jdGlvbkNhbGwoaGVscGVyLm5hbWUsImNhbGwiLGhlbHBlci5jYWxsUGFyYW1zKSl9LGludm9rZUFtYmlndW91czpmdW5jdGlvbihuYW1lLGhlbHBlckNhbGwpe3RoaXMudXNlUmVnaXN0ZXIoImhlbHBlciIpO3ZhciBub25IZWxwZXI9dGhpcy5wb3BTdGFjaygpO3RoaXMuZW1wdHlIYXNoKCk7dmFyIGhlbHBlcj10aGlzLnNldHVwSGVscGVyKDAsbmFtZSxoZWxwZXJDYWxsKSxoZWxwZXJOYW1lPXRoaXMubGFzdEhlbHBlcj10aGlzLm5hbWVMb29rdXAoImhlbHBlcnMiLG5hbWUsImhlbHBlciIpLGxvb2t1cD1bIigiLCIoaGVscGVyID0gIixoZWxwZXJOYW1lLCIgfHwgIixub25IZWxwZXIsIikiXTt0aGlzLm9wdGlvbnMuc3RyaWN0fHwobG9va3VwWzBdPSIoaGVscGVyID0gIixsb29rdXAucHVzaCgiICE9IG51bGwgPyBoZWxwZXIgOiAiLHRoaXMuYWxpYXNhYmxlKCJoZWxwZXJzLmhlbHBlck1pc3NpbmciKSkpLHRoaXMucHVzaChbIigiLGxvb2t1cCxoZWxwZXIucGFyYW1zSW5pdD9bIiksKCIsaGVscGVyLnBhcmFtc0luaXRdOltdLCIpLCIsIih0eXBlb2YgaGVscGVyID09PSAiLHRoaXMuYWxpYXNhYmxlKCciZnVuY3Rpb24iJyksIiA/ICIsdGhpcy5zb3VyY2UuZnVuY3Rpb25DYWxsKCJoZWxwZXIiLCJjYWxsIixoZWxwZXIuY2FsbFBhcmFtcyksIiA6IGhlbHBlcikpIl0pfSxpbnZva2VQYXJ0aWFsOmZ1bmN0aW8=", "base64"));
  res.write(new Buffer("bihpc0R5bmFtaWMsbmFtZSxpbmRlbnQpe3ZhciBwYXJhbXM9W10sb3B0aW9ucz10aGlzLnNldHVwUGFyYW1zKG5hbWUsMSxwYXJhbXMpO2lzRHluYW1pYyYmKG5hbWU9dGhpcy5wb3BTdGFjaygpLGRlbGV0ZSBvcHRpb25zLm5hbWUpLGluZGVudCYmKG9wdGlvbnMuaW5kZW50PUpTT04uc3RyaW5naWZ5KGluZGVudCkpLG9wdGlvbnMuaGVscGVycz0iaGVscGVycyIsb3B0aW9ucy5wYXJ0aWFscz0icGFydGlhbHMiLG9wdGlvbnMuZGVjb3JhdG9ycz0iY29udGFpbmVyLmRlY29yYXRvcnMiLGlzRHluYW1pYz9wYXJhbXMudW5zaGlmdChuYW1lKTpwYXJhbXMudW5zaGlmdCh0aGlzLm5hbWVMb29rdXAoInBhcnRpYWxzIixuYW1lLCJwYXJ0aWFsIikpLHRoaXMub3B0aW9ucy5jb21wYXQmJihvcHRpb25zLmRlcHRocz0iZGVwdGhzIiksb3B0aW9ucz10aGlzLm9iamVjdExpdGVyYWwob3B0aW9ucykscGFyYW1zLnB1c2gob3B0aW9ucyksdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbCgiY29udGFpbmVyLmludm9rZVBhcnRpYWwiLCIiLHBhcmFtcykpfSxhc3NpZ25Ub0hhc2g6ZnVuY3Rpb24oa2V5KXt2YXIgdmFsdWU9dGhpcy5wb3BTdGFjaygpLGNvbnRleHQ9dm9pZCAwLHR5cGU9dm9pZCAwLGlkPXZvaWQgMDt0aGlzLnRyYWNrSWRzJiYoaWQ9dGhpcy5wb3BTdGFjaygpKSx0aGlzLnN0cmluZ1BhcmFtcyYmKHR5cGU9dGhpcy5wb3BTdGFjaygpLGNvbnRleHQ9dGhpcy5wb3BTdGFjaygpKTt2YXIgaGFzaD10aGlzLmhhc2g7Y29udGV4dCYmKGhhc2guY29udGV4dHNba2V5XT1jb250ZXh0KSx0eXBlJiYoaGFzaC50eXBlc1trZXldPXR5cGUpLGlkJiYoaGFzaC5pZHNba2V5XT1pZCksaGFzaC52YWx1ZXNba2V5XT12YWx1ZX0scHVzaElkOmZ1bmN0aW9uKHR5cGUsbmFtZSxjaGlsZCl7IkJsb2NrUGFyYW0iPT09dHlwZT90aGlzLnB1c2hTdGFja0xpdGVyYWwoImJsb2NrUGFyYW1zWyIrbmFtZVswXSsiXS5wYXRoWyIrbmFtZVsxXSsiXSIrKGNoaWxkPyIgKyAiK0pTT04uc3RyaW5naWZ5KCIuIitjaGlsZCk6IiIpKToiUGF0aEV4cHJlc3Npb24iPT09dHlwZT90aGlzLnB1c2hTdHJpbmcobmFtZSk6IlN1YkV4cHJlc3Npb24iPT09dHlwZT90aGlzLnB1c2hTdGFja0xpdGVyYWwoInRydWUiKTp0aGlzLnB1c2hTdGFja0xpdGVyYWwoIm51bGwiKX0sY29tcGlsZXI6SmF2YVNjcmlwdENvbXBpbGVyLGNvbXBpbGVDaGlsZHJlbjpmdW5jdGlvbihlbnZpcm9ubWVudCxvcHRpb25zKXtmb3IodmFyIGNoaWxkcmVuPWVudmlyb25tZW50LmNoaWxkcmVuLGNoaWxkPXZvaWQgMCxjb21waWxlcj12b2lkIDAsaT0wLGw9Y2hpbGRyZW4ubGVuZ3RoO2k8bDtpKyspe2NoaWxkPWNoaWxkcmVuW2ldLGNvbXBpbGVyPW5ldyB0aGlzLmNvbXBpbGVyO3ZhciBleGlzdGluZz10aGlzLm1hdGNoRXhpc3RpbmdQcm9ncmFtKGNoaWxkKTtpZihudWxsPT1leGlzdGluZyl7dGg=", "base64"));
  res.write(new Buffer("aXMuY29udGV4dC5wcm9ncmFtcy5wdXNoKCIiKTt2YXIgaW5kZXg9dGhpcy5jb250ZXh0LnByb2dyYW1zLmxlbmd0aDtjaGlsZC5pbmRleD1pbmRleCxjaGlsZC5uYW1lPSJwcm9ncmFtIitpbmRleCx0aGlzLmNvbnRleHQucHJvZ3JhbXNbaW5kZXhdPWNvbXBpbGVyLmNvbXBpbGUoY2hpbGQsb3B0aW9ucyx0aGlzLmNvbnRleHQsIXRoaXMucHJlY29tcGlsZSksdGhpcy5jb250ZXh0LmRlY29yYXRvcnNbaW5kZXhdPWNvbXBpbGVyLmRlY29yYXRvcnMsdGhpcy5jb250ZXh0LmVudmlyb25tZW50c1tpbmRleF09Y2hpbGQsdGhpcy51c2VEZXB0aHM9dGhpcy51c2VEZXB0aHN8fGNvbXBpbGVyLnVzZURlcHRocyx0aGlzLnVzZUJsb2NrUGFyYW1zPXRoaXMudXNlQmxvY2tQYXJhbXN8fGNvbXBpbGVyLnVzZUJsb2NrUGFyYW1zLGNoaWxkLnVzZURlcHRocz10aGlzLnVzZURlcHRocyxjaGlsZC51c2VCbG9ja1BhcmFtcz10aGlzLnVzZUJsb2NrUGFyYW1zfWVsc2UgY2hpbGQuaW5kZXg9ZXhpc3RpbmcuaW5kZXgsY2hpbGQubmFtZT0icHJvZ3JhbSIrZXhpc3RpbmcuaW5kZXgsdGhpcy51c2VEZXB0aHM9dGhpcy51c2VEZXB0aHN8fGV4aXN0aW5nLnVzZURlcHRocyx0aGlzLnVzZUJsb2NrUGFyYW1zPXRoaXMudXNlQmxvY2tQYXJhbXN8fGV4aXN0aW5nLnVzZUJsb2NrUGFyYW1zfX0sbWF0Y2hFeGlzdGluZ1Byb2dyYW06ZnVuY3Rpb24oY2hpbGQpe2Zvcih2YXIgaT0wLGxlbj10aGlzLmNvbnRleHQuZW52aXJvbm1lbnRzLmxlbmd0aDtpPGxlbjtpKyspe3ZhciBlbnZpcm9ubWVudD10aGlzLmNvbnRleHQuZW52aXJvbm1lbnRzW2ldO2lmKGVudmlyb25tZW50JiZlbnZpcm9ubWVudC5lcXVhbHMoY2hpbGQpKXJldHVybiBlbnZpcm9ubWVudH19LHByb2dyYW1FeHByZXNzaW9uOmZ1bmN0aW9uKGd1aWQpe3ZhciBjaGlsZD10aGlzLmVudmlyb25tZW50LmNoaWxkcmVuW2d1aWRdLHByb2dyYW1QYXJhbXM9W2NoaWxkLmluZGV4LCJkYXRhIixjaGlsZC5ibG9ja1BhcmFtc107cmV0dXJuKHRoaXMudXNlQmxvY2tQYXJhbXN8fHRoaXMudXNlRGVwdGhzKSYmcHJvZ3JhbVBhcmFtcy5wdXNoKCJibG9ja1BhcmFtcyIpLHRoaXMudXNlRGVwdGhzJiZwcm9ncmFtUGFyYW1zLnB1c2goImRlcHRocyIpLCJjb250YWluZXIucHJvZ3JhbSgiK3Byb2dyYW1QYXJhbXMuam9pbigiLCAiKSsiKSJ9LHVzZVJlZ2lzdGVyOmZ1bmN0aW9uKG5hbWUpe3RoaXMucmVnaXN0ZXJzW25hbWVdfHwodGhpcy5yZWdpc3RlcnNbbmFtZV09ITAsdGhpcy5yZWdpc3RlcnMubGlzdC5wdXNoKG5hbWUpKX0scHVzaDpmdW5jdGlvbihleHByKXtyZXR1cm4gZXhwciBpbnN0YW5jZW9mIExpdGVyYWx8fChleHByPXRoaXMuc291cmNlLndyYXAoZXhwcikpLHRoaXMuaW5saW5lU3RhY2sucHVzaChleHByKSxleHByfSxwdXNoU3RhY2tMaXRlcmFsOmZ1bmN0aW9uKGl0ZW0pe3RoaXMucHVzaChuZXcgTGl0ZXJhbChpdGVtKSl9LHB1c2hTb3VyY2U6ZnVuY3Rpb24oc291cmNlKXt0aGlzLnBlbmRpbmdDb250ZW50JiYodGhpcy5zb3VyY2UucHVzaCh0aGlzLmFwcGVuZFRvQnVmZmVyKHRoaXMuc291cmNlLnF1b3RlZFN0cmluZyh0aGlzLnBlbmRpbmdDb250ZW50KSx0aGlzLnBlbmRpbmdMb2NhdGlvbikpLHRoaXMucGVuZGluZ0NvbnRlbnQ9dm9pZCAwKSxzb3VyY2UmJnRoaXMuc291cmNlLnB1c2goc291cmNlKX0scmVwbGFjZVN0YWNrOmZ1bmN0aW9uKGNhbGxiYWNrKXt2YXIgcHJlZml4PVsiKCJdLHN0YWNrPXZvaWQgMCxjcmVhdGVkU3RhY2s9dm9pZCAwLHVzZWRMaXRlcmFsPXZvaWQgMDtpZighdGhpcy5pc0lubGluZSgpKXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJyZXBsYWNlU3RhY2sgb24gbm9uLWlubGluZSIpO3ZhciB0b3A9dGhpcy5wb3BTdGFjayghMCk7aWYodG9wIGluc3RhbmNlb2YgTGl0ZXJhbClzdGFjaz1bdG9wLnZhbHVlXSxwcmVmaXg9WyIoIixzdGFja10sdXNlZExpdGVyYWw9ITA7ZWxzZXtjcmVhdGVkU3RhY2s9ITA7dmFyIF9uYW1lPXRoaXMuaW5jclN0YWNrKCk7cHJlZml4PVsiKCgiLHRoaXMucHVzaChfbmFtZSksIiA9ICIsdG9wLCIpIl0sc3RhY2s9dGhpcy50b3BTdGFjaygpfXZhciBpdGVtPWNhbGxiYWNrLmNhbGwodGhpcyxzdGFjayk7dXNlZExpdGVyYWx8fHRoaXMucG9wU3RhY2soKSxjcmVhdGVkU3RhY2smJnRoaXMuc3RhY2tTbG90LS0sdGhpcy5wdXNoKHByZWZpeC5jb25jYXQoaXRlbSwiKSIpKX0saW5jclN0YWNrOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc3RhY2tTbG90KyssdGhpcy5zdGFja1Nsb3Q+dGhpcy5zdGFja1ZhcnMubGVuZ3RoJiZ0aGlzLnN0YWNrVmFycy5wdXNoKCJzdGFjayIrdGhpcy5zdGFja1Nsb3QpLHRoaXMudG9wU3RhY2tOYW1lKCl9LHRvcFN0YWNrTmFtZTpmdW5jdGlvbigpe3JldHVybiJzdGFjayIrdGhpcy5zdGFja1Nsb3R9LGZsdXNoSW5saW5lOmZ1bmN0aW9uKCl7dmFyIGlubGluZVN0YWNrPXRoaXMuaW5saW5lU3RhY2s7dGhpcy5pbmxpbmVTdGFjaz1bXTtmb3IodmFyIGk9MCxsZW49aW5saW5lU3RhY2subGVuZ3RoO2k8bGVuO2krKyl7dmFyIGVudHJ5PWlubGluZVN0YWNrW2ldO2lmKGVudHJ5IGluc3RhbmNlb2YgTGl0ZXJhbCl0aGlzLmNvbXBpbGVTdGFjay5wdXNoKGVudHJ5KTtlbHNle3ZhciBzdGFjaz10aGlzLmluY3JTdGFjaygpO3RoaXMucHVzaFNvdXJjZShbc3RhY2ssIiA9ICIsZW50cnksIjsiXSksdGhpcy5jb21waWxlU3RhY2sucHVzaChzdGFjayl9fX0saXNJbmxpbmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbmxpbmVTdGFjay5sZW5ndGh9LHBvcFN0YWNrOmZ1bmN0aW9uKHdyYXBwZWQpe3ZhciBpbmxpbmU9dGhpcy5pc0lubGluZSgpLGl0ZW09KGlubGluZT90aGlzLmlubGluZVN0YWNrOnRoaXMuY29tcGlsZVN0YWNrKS5wb3AoKTtpZighd3JhcHBlZCYmaXRlbSBpbnN0YW5jZW9mIExpdGVyYWwpcmV0dXJuIGl0ZW0udmFsdWU7aWYoIWlubGluZSl7aWYoIXRoaXMuc3RhY2tTbG90KXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJJbnZhbGlkIHN0YWNrIHBvcCIpO3RoaXMuc3RhY2tTbG90LS19cmV0dXJuIGl0ZW19LHRvcFN0YWNrOmZ1bmN0aW9uKCl7dmFyIHN0YWNrPXRoaXMuaXNJbmxpbmUoKT90aGlzLmlubGluZVN0YWNrOnRoaXMuY29tcGlsZVN0YWNrLGl0ZW09c3RhY2tbc3RhY2subGVuZ3RoLTFdO3JldHVybiBpdGVtIGluc3RhbmNlb2YgTGl0ZXJhbD9pdGVtLnZhbHVlOml0ZW19LGNvbnRleHROYW1lOmZ1bmN0aW9uKGNvbnRleHQpe3JldHVybiB0aGlzLnVzZURlcHRocyYmY29udGV4dD8iZGVwdGhzWyIrY29udGV4dCsiXSI6ImRlcHRoIitjb250ZXh0fSxxdW90ZWRTdHJpbmc6ZnVuY3Rpb24oc3RyKXtyZXR1cm4gdGhpcy5zb3VyY2UucXVvdGVkU3RyaW5nKHN0cil9LG9iamVjdExpdGVyYWw6ZnVuY3Rpb24ob2JqKXtyZXR1cm4gdGhpcy5zb3VyY2Uub2JqZWN0TGl0ZXJhbChvYmopfSxhbGlhc2FibGU6ZnVuY3Rpb24obmFtZSl7dmFyIHJldD10aGlzLmFsaWFzZXNbbmFtZV07cmV0dXJuIHJldD8ocmV0LnJlZmVyZW5jZUNvdW50KysscmV0KToocmV0PXRoaXMuYWxpYXNlc1tuYW1lXT10aGlzLnNvdXJjZS53cmFwKG5hbWUpLHJldC5hbGlhc2FibGU9ITAscmV0LnJlZmVyZW5jZUNvdW50PTEscmV0KX0sc2V0dXBIZWxwZXI6ZnVuY3Rpb24ocGFyYW1TaXplLG5hbWUsYmxvY2tIZWxwZXIpe3ZhciBwYXJhbXM9W10scGFyYW1zSW5pdD10aGlzLnNldHVwSGVscGVyQXJncyhuYW1lLHBhcmFtU2l6ZSxwYXJhbXMsYmxvY2tIZWxwZXIpLGZvdW5kSGVscGVyPXRoaXMubmFtZUxvb2t1cCgiaGVscGVycyIsbmFtZSwiaGVscGVyIiksY2FsbENvbnRleHQ9dGhpcy5hbGlhc2FibGUodGhpcy5jb250ZXh0TmFtZSgwKSsiICE9IG51bGwgPyAiK3RoaXMuY29udGV4dE5hbWUoMCkrIiA6IChjb250YWluZXIubnVsbENvbnRleHQgfHwge30pIik7cmV0dXJue3BhcmFtczpwYXJhbXMscGFyYW1zSW5pdDpwYXJhbXNJbml0LG5hbWU6Zm91bmRIZWxwZXIsY2FsbFBhcmFtczpbY2FsbENvbnRleHRdLmNvbmNhdChwYXJhbXMpfX0sc2V0dXBQYXJhbXM6ZnVuY3Rpb24oaGVscGVyLHBhcmFtU2l6ZSxwYXJhbXMpe3ZhciBvcHRpb25zPXt9LGNvbnRleHRzPVtdLHR5cGVzPVtdLGlkcz1bXSxvYmplY3RBcmdzPSFwYXJhbXMscGFyYW09dm9pZCAwO29iamVjdEFyZ3MmJihwYXJhbXM9W10pLG9wdGlvbnMubmFtZT10aGlzLnF1b3RlZFN0cmluZyhoZWxwZXIpLG9wdGlvbnMuaGFzaD10aGlzLnBvcFN0YWNrKCksdGhpcy50cmFja0lkcyYmKG9wdGlvbnMuaGFzaElkcz10aGlzLnBvcFN0YWNrKCkpLHRoaXMuc3RyaW5nUGFyYW1zJiYob3B0aW9ucy5oYXNoVHlwZXM9dGhpcy5wb3BTdGFjaygpLG9w", "base64"));
  res.write(new Buffer("dGlvbnMuaGFzaENvbnRleHRzPXRoaXMucG9wU3RhY2soKSk7dmFyIGludmVyc2U9dGhpcy5wb3BTdGFjaygpLHByb2dyYW09dGhpcy5wb3BTdGFjaygpOyhwcm9ncmFtfHxpbnZlcnNlKSYmKG9wdGlvbnMuZm49cHJvZ3JhbXx8ImNvbnRhaW5lci5ub29wIixvcHRpb25zLmludmVyc2U9aW52ZXJzZXx8ImNvbnRhaW5lci5ub29wIik7Zm9yKHZhciBpPXBhcmFtU2l6ZTtpLS07KXBhcmFtPXRoaXMucG9wU3RhY2soKSxwYXJhbXNbaV09cGFyYW0sdGhpcy50cmFja0lkcyYmKGlkc1tpXT10aGlzLnBvcFN0YWNrKCkpLHRoaXMuc3RyaW5nUGFyYW1zJiYodHlwZXNbaV09dGhpcy5wb3BTdGFjaygpLGNvbnRleHRzW2ldPXRoaXMucG9wU3RhY2soKSk7cmV0dXJuIG9iamVjdEFyZ3MmJihvcHRpb25zLmFyZ3M9dGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheShwYXJhbXMpKSx0aGlzLnRyYWNrSWRzJiYob3B0aW9ucy5pZHM9dGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheShpZHMpKSx0aGlzLnN0cmluZ1BhcmFtcyYmKG9wdGlvbnMudHlwZXM9dGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheSh0eXBlcyksb3B0aW9ucy5jb250ZXh0cz10aGlzLnNvdXJjZS5nZW5lcmF0ZUFycmF5KGNvbnRleHRzKSksdGhpcy5vcHRpb25zLmRhdGEmJihvcHRpb25zLmRhdGE9ImRhdGEiKSx0aGlzLnVzZUJsb2NrUGFyYW1zJiYob3B0aW9ucy5ibG9ja1BhcmFtcz0iYmxvY2tQYXJhbXMiKSxvcHRpb25zfSxzZXR1cEhlbHBlckFyZ3M6ZnVuY3Rpb24oaGVscGVyLHBhcmFtU2l6ZSxwYXJhbXMsdXNlUmVnaXN0ZXIpe3ZhciBvcHRpb25zPXRoaXMuc2V0dXBQYXJhbXMoaGVscGVyLHBhcmFtU2l6ZSxwYXJhbXMpO3JldHVybiBvcHRpb25zPXRoaXMub2JqZWN0TGl0ZXJhbChvcHRpb25zKSx1c2VSZWdpc3Rlcj8odGhpcy51c2VSZWdpc3Rlcigib3B0aW9ucyIpLHBhcmFtcy5wdXNoKCJvcHRpb25zIiksWyJvcHRpb25zPSIsb3B0aW9uc10pOnBhcmFtcz8ocGFyYW1zLnB1c2gob3B0aW9ucyksIiIpOm9wdGlvbnN9fSxmdW5jdGlvbigpe2Zvcih2YXIgcmVzZXJ2ZWRXb3Jkcz0iYnJlYWsgZWxzZSBuZXcgdmFyIGNhc2UgZmluYWxseSByZXR1cm4gdm9pZCBjYXRjaCBmb3Igc3dpdGNoIHdoaWxlIGNvbnRpbnVlIGZ1bmN0aW9uIHRoaXMgd2l0aCBkZWZhdWx0IGlmIHRocm93IGRlbGV0ZSBpbiB0cnkgZG8gaW5zdGFuY2VvZiB0eXBlb2YgYWJzdHJhY3QgZW51bSBpbnQgc2hvcnQgYm9vbGVhbiBleHBvcnQgaW50ZXJmYWNlIHN0YXRpYyBieXRlIGV4dGVuZHMgbG9uZyBzdXBlciBjaGFyIGZpbmFsIG5hdGl2ZSBzeW5jaHJvbml6ZWQgY2xhc3MgZmxvYXQgcGFja2FnZSB0aHJvd3MgY29uc3QgZ290byBwcml2YXRlIHRyYW5zaWVudCBkZWJ1Z2dlciBpbXBsZW1lbnRzIHByb3RlY3RlZCB2b2xhdGlsZSBkb3VibGUgaW1wb3J0IHB1YmxpYyBsZXQgeWllbGQgYXdhaXQgbnVsbCB0cnVlIGZhbHNlIi5zcGxpdCgiICIpLGNvbXBpbGVyV29yZHM9SmF2YVNjcmlwdENvbXBpbGVyLlJFU0VSVkVEX1dPUkRTPXt9LGk9MCxsPXJlc2VydmVkV29yZHMubGVuZ3RoO2k8bDtpKyspY29tcGlsZXJXb3Jkc1tyZXNlcnZlZFdvcmRzW2ldXT0hMDsKfSgpLEphdmFTY3JpcHRDb21waWxlci5pc1ZhbGlkSmF2YVNjcmlwdFZhcmlhYmxlTmFtZT1mdW5jdGlvbihuYW1lKXtyZXR1cm4hSmF2YVNjcmlwdENvbXBpbGVyLlJFU0VSVkVEX1dPUkRTW25hbWVdJiYvXlthLXpBLVpfJF1bMC05YS16QS1aXyRdKiQvLnRlc3QobmFtZSl9LGV4cG9ydHNbImRlZmF1bHQiXT1KYXZhU2NyaXB0Q29tcGlsZXIsbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gY2FzdENodW5rKGNodW5rLGNvZGVHZW4sbG9jKXtpZihfdXRpbHMuaXNBcnJheShjaHVuaykpe2Zvcih2YXIgcmV0PVtdLGk9MCxsZW49Y2h1bmsubGVuZ3RoO2k8bGVuO2krKylyZXQucHVzaChjb2RlR2VuLndyYXAoY2h1bmtbaV0sbG9jKSk7cmV0dXJuIHJldH1yZXR1cm4iYm9vbGVhbiI9PXR5cGVvZiBjaHVua3x8Im51bWJlciI9PXR5cGVvZiBjaHVuaz9jaHVuaysiIjpjaHVua31mdW5jdGlvbiBDb2RlR2VuKHNyY0ZpbGUpe3RoaXMuc3JjRmlsZT1zcmNGaWxlLHRoaXMuc291cmNlPVtdfWV4cG9ydHMuX19lc01vZHVsZT0hMDt2YXIgX3V0aWxzPV9fd2VicGFja19yZXF1aXJlX18oNSksU291cmNlTm9kZT12b2lkIDA7dHJ5e31jYXRjaChlcnIpe31Tb3VyY2VOb2RlfHwoU291cmNlTm9kZT1mdW5jdGlvbihsaW5lLGNvbHVtbixzcmNGaWxlLGNodW5rcyl7dGhpcy5zcmM9IiIsY2h1bmtzJiZ0aGlzLmFkZChjaHVua3MpfSxTb3VyY2VOb2RlLnByb3RvdHlwZT17YWRkOmZ1bmN0aW9uKGNodW5rcyl7X3V0aWxzLmlzQXJyYXkoY2h1bmtzKSYmKGNodW5rcz1jaHVua3Muam9pbigiIikpLHRoaXMuc3JjKz1jaHVua3N9LHByZXBlbmQ6ZnVuY3Rpb24oY2h1bmtzKXtfdXRpbHMuaXNBcnJheShjaHVua3MpJiYoY2h1bmtzPWNodW5rcy5qb2luKCIiKSksdGhpcy5zcmM9Y2h1bmtzK3RoaXMuc3JjfSx0b1N0cmluZ1dpdGhTb3VyY2VNYXA6ZnVuY3Rpb24oKXtyZXR1cm57Y29kZTp0aGlzLnRvU3RyaW5nKCl9fSx0b1N0cmluZzpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNyY319KSxDb2RlR2VuLnByb3RvdHlwZT17aXNFbXB0eTpmdW5jdGlvbigpe3JldHVybiF0aGlzLnNvdXJjZS5sZW5ndGh9LHByZXBlbmQ6ZnVuY3Rpb24oc291cmNlLGxvYyl7dGhpcy5zb3VyY2UudW5zaGlmdCh0aGlzLndyYXAoc291cmNlLGxvYykpfSxwdXNoOmZ1bmN0aW9uKHNvdXJjZSxsb2Mpe3RoaXMuc291cmNlLnB1c2godGhpcy53cmFwKHNvdXJjZSxsb2MpKX0sbWVyZ2U6ZnVuY3Rpb24oKXt2YXIgc291cmNlPXRoaXMuZW1wdHkoKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGxpbmUpe3NvdXJjZS5hZGQoWyIgICIsbGluZSwiXG4iXSl9KSxzb3VyY2V9LGVhY2g6ZnVuY3Rpb24oaXRlcil7Zm9yKHZhciBpPTAsbGVuPXRoaXMuc291cmNlLmxlbmd0aDtpPGxlbjtpKyspaXRlcih0aGlzLnNvdXJjZVtpXSl9LGVtcHR5OmZ1bmN0aW9uKCl7dmFyIGxvYz10aGlzLmN1cnJlbnRMb2NhdGlvbnx8e3N0YXJ0Ont9fTtyZXR1cm4gbmV3IFNvdXJjZU5vZGUobG9jLnN0YXJ0LmxpbmUsbG9jLnN0YXJ0LmNvbHVtbix0aGlzLnNyY0ZpbGUpfSx3cmFwOmZ1bmN0aW9uKGNodW5rKXt2YXIgbG9jPWFyZ3VtZW50cy5sZW5ndGg8PTF8fHZvaWQgMD09PWFyZ3VtZW50c1sxXT90aGlzLmN1cnJlbnRMb2NhdGlvbnx8e3N0YXJ0Ont9fTphcmd1bWVudHNbMV07cmV0dXJuIGNodW5rIGluc3RhbmNlb2YgU291cmNlTm9kZT9jaHVuazooY2h1bms9Y2FzdENodW5rKGNodW5rLHRoaXMsbG9jKSxuZXcgU291cmNlTm9kZShsb2Muc3RhcnQubGluZSxsb2Muc3RhcnQuY29sdW1uLHRoaXMuc3JjRmlsZSxjaHVuaykpfSxmdW5jdGlvbkNhbGw6ZnVuY3Rpb24oZm4sdHlwZSxwYXJhbXMpe3JldHVybiBwYXJhbXM9dGhpcy5nZW5lcmF0ZUxpc3QocGFyYW1zKSx0aGlzLndyYXAoW2ZuLHR5cGU/Ii4iK3R5cGUrIigiOiIoIixwYXJhbXMsIikiXSl9LHF1b3RlZFN0cmluZzpmdW5jdGlvbihzdHIpe3JldHVybiciJysoc3RyKyIiKS5yZXBsYWNlKC9cXC9nLCJcXFxcIikucmVwbGFjZSgvIi9nLCdcXCInKS5yZXBsYWNlKC9cbi9nLCJcXG4iKS5yZXBsYWNlKC9cci9nLCJcXHIiKS5yZXBsYWNlKC9cdTIwMjgvZywiXFx1MjAyOCIpLnJlcGxhY2UoL1x1MjAyOS9nLCJcXHUyMDI5IikrJyInfSxvYmplY3RMaXRlcmFsOmZ1bmN0aW9uKG9iail7dmFyIHBhaXJzPVtdO2Zvcih2YXIga2V5IGluIG9iailpZihvYmouaGFzT3duUHJvcGVydHkoa2V5KSl7dmFyIHZhbHVlPWNhc3RDaHVuayhvYmpba2V5XSx0aGlzKTsidW5kZWZpbmVkIiE9PXZhbHVlJiZwYWlycy5wdXNoKFt0aGlzLnF1b3RlZFN0cmluZyhrZXkpLCI6Iix2YWx1ZV0pfXZhciByZXQ9dGhpcy5nZW5lcmF0ZUxpc3QocGFpcnMpO3JldHVybiByZXQucHJlcGVuZCgieyIpLHJldC5hZGQoIn0iKSxyZXR9LGdlbmVyYXRlTGlzdDpmdW5jdGlvbihlbnRyaWVzKXtmb3IodmFyIHJldD10aGlzLmVtcHR5KCksaT0wLGxlbj1lbnRyaWVzLmxlbmd0aDtpPGxlbjtpKyspaSYmcmV0LmFkZCgiLCIpLHJldC5hZGQoY2FzdENodW5rKGVudHJpZXNbaV0sdGhpcykpO3JldHVybiByZXR9LGdlbmVyYXRlQXJyYXk6ZnVuY3Rpb24oZW50cmllcyl7dmFyIHJldD10aGlzLmdlbmVyYXRlTGlzdChlbnRyaWVzKTtyZXR1cm4gcmV0LnByZXBlbmQoIlsiKSxyZXQuYWRkKCJdIikscmV0fX0sZXhwb3J0c1siZGVmYXVsdCJdPUNvZGVHZW4sbW9kdWxlLmV4cG9ydHM9ZXhwb3J0c1siZGVmYXVsdCJdfV0pfSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe3ZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fO19fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX189W19fd2VicGFja19yZXF1aXJlX18oNiksX193ZWJwYWNrX3JlcXVpcmVfXyg4KV0sX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX189ZnVuY3Rpb24oXyxDb29raWUpe3ZhciBTRUNVUkVEX0NPT0tJRT0vXmh0dHBzLy50ZXN0KHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtyZXR1cm57c2V0Q29va2llOmZ1bmN0aW9uKG5hbWUsdmFsdWUsb3B0aW9ucyl7Q29va2llLnNldChuYW1lLHZhbHVlLF8uZGVmYXVsdHMob3B0aW9uc3x8e30se3NlY3VyZTpTRUNVUkVEX0NPT0tJRSxwYXRoOiIvIn0pKX0sZ2V0Q29va2llOmZ1bmN0aW9uKCl7cmV0dXJuIENvb2tpZS5nZXQuYXBwbHkoQ29va2llLGFyZ3VtZW50cyl9LHJlbW92ZUNvb2tpZTpmdW5jdGlvbigpe3JldHVybiBDb29raWUucmVtb3ZlLmFwcGx5KENvb2tpZSxhcmd1bWVudHMpfX19LmFwcGx5KGV4cG9ydHMsX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksISh2b2lkIDAhPT1fX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyYmKG1vZHVsZS5leHBvcnRzPV9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe3ZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fO19fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX189W19fd2VicGFja19yZXF1aXJlX18oNyksX193ZWJwYWNrX3JlcXVpcmVfXyg0KV0sX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX189ZnVuY3Rpb24odW5kZXJzY29yZSxIYW5kbGViYXJzKXt2YXIgXz11bmRlcnNjb3JlLm5vQ29uZmxpY3QoKTtyZXR1cm4gXy5taXhpbih7cmVzdWx0Q3R4OmZ1bmN0aW9uKG9iamVjdCxwcm9wZXJ0eSxjb250ZXh0LGRlZmF1bHRWYWx1ZSl7dmFyIHZhbHVlPV8uaXNPYmplY3Qob2JqZWN0KT9vYmplY3RbcHJvcGVydHldOnZvaWQgMDtyZXR1cm4gXy5pc0Z1bmN0aW9uKHZhbHVlKSYmKHZhbHVlPXZhbHVlLmNhbGwoY29udGV4dHx8b2JqZWN0KSksdmFsdWU/dmFsdWU6Xy5pc1VuZGVmaW5lZChkZWZhdWx0VmFsdWUpP3ZhbHVlOmRlZmF1bHRWYWx1ZX0saXNJbnRlZ2VyOmZ1bmN0aW9uKHgpe3JldHVybiBfLmlzTnVtYmVyKHgpJiZ4JTE9PT0wfSx0ZW1wbGF0ZTpmdW5jdGlvbiB0ZW1wbGF0ZShzb3VyY2UsZGF0YSl7dmFyIHRlbXBsYXRlPUhhbmRsZWJhcnMuY29tcGlsZShzb3VyY2UpO3JldHVybiBkYXRhP3RlbXBsYXRlKGRhdGEpOmZ1bmN0aW9uKGRhdGEpe3JldHVybiB0ZW1wbGF0ZShkYXRhKX19fSksX30uYXA=", "base64"));
  res.write(new Buffer("cGx5KGV4cG9ydHMsX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyksISh2b2lkIDAhPT1fX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXyYmKG1vZHVsZS5leHBvcnRzPV9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fKSl9LGZ1bmN0aW9uKG1vZHVsZSxleHBvcnRzLF9fd2VicGFja19yZXF1aXJlX18pe3ZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9BUlJBWV9fLF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fOyhmdW5jdGlvbigpe2Z1bmN0aW9uIGNyZWF0ZVJlZHVjZShkaXIpe2Z1bmN0aW9uIGl0ZXJhdG9yKG9iaixpdGVyYXRlZSxtZW1vLGtleXMsaW5kZXgsbGVuZ3RoKXtmb3IoO2luZGV4Pj0wJiZpbmRleDxsZW5ndGg7aW5kZXgrPWRpcil7dmFyIGN1cnJlbnRLZXk9a2V5cz9rZXlzW2luZGV4XTppbmRleDttZW1vPWl0ZXJhdGVlKG1lbW8sb2JqW2N1cnJlbnRLZXldLGN1cnJlbnRLZXksb2JqKX1yZXR1cm4gbWVtb31yZXR1cm4gZnVuY3Rpb24ob2JqLGl0ZXJhdGVlLG1lbW8sY29udGV4dCl7aXRlcmF0ZWU9b3B0aW1pemVDYihpdGVyYXRlZSxjb250ZXh0LDQpO3ZhciBrZXlzPSFpc0FycmF5TGlrZShvYmopJiZfLmtleXMob2JqKSxsZW5ndGg9KGtleXN8fG9iaikubGVuZ3RoLGluZGV4PWRpcj4wPzA6bGVuZ3RoLTE7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg8MyYmKG1lbW89b2JqW2tleXM/a2V5c1tpbmRleF06aW5kZXhdLGluZGV4Kz1kaXIpLGl0ZXJhdG9yKG9iaixpdGVyYXRlZSxtZW1vLGtleXMsaW5kZXgsbGVuZ3RoKX19ZnVuY3Rpb24gY3JlYXRlUHJlZGljYXRlSW5kZXhGaW5kZXIoZGlyKXtyZXR1cm4gZnVuY3Rpb24oYXJyYXkscHJlZGljYXRlLGNvbnRleHQpe3ByZWRpY2F0ZT1jYihwcmVkaWNhdGUsY29udGV4dCk7Zm9yKHZhciBsZW5ndGg9Z2V0TGVuZ3RoKGFycmF5KSxpbmRleD1kaXI+MD8wOmxlbmd0aC0xO2luZGV4Pj0wJiZpbmRleDxsZW5ndGg7aW5kZXgrPWRpcilpZihwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLGluZGV4LGFycmF5KSlyZXR1cm4gaW5kZXg7cmV0dXJuLTF9fWZ1bmN0aW9uIGNyZWF0ZUluZGV4RmluZGVyKGRpcixwcmVkaWNhdGVGaW5kLHNvcnRlZEluZGV4KXtyZXR1cm4gZnVuY3Rpb24oYXJyYXksaXRlbSxpZHgpe3ZhciBpPTAsbGVuZ3RoPWdldExlbmd0aChhcnJheSk7aWYoIm51bWJlciI9PXR5cGVvZiBpZHgpZGlyPjA/aT1pZHg+PTA/aWR4Ok1hdGgubWF4KGlkeCtsZW5ndGgsaSk6bGVuZ3RoPWlkeD49MD9NYXRoLm1pbihpZHgrMSxsZW5ndGgpOmlkeCtsZW5ndGgrMTtlbHNlIGlmKHNvcnRlZEluZGV4JiZpZHgmJmxlbmd0aClyZXR1cm4gaWR4PXNvcnRlZEluZGV4KGFycmF5LGl0ZW0pLGFycmF5W2lkeF09PT1pdGVtP2lkeDotMTtpZihpdGVtIT09aXRlbSlyZXR1cm4gaWR4PXByZWRpY2F0ZUZpbmQoc2xpY2UuY2FsbChhcnJheSxpLGxlbmd0aCksXy5pc05hTiksaWR4Pj0wP2lkeCtpOi0xO2ZvcihpZHg9ZGlyPjA/aTpsZW5ndGgtMTtpZHg+PTAmJmlkeDxsZW5ndGg7aWR4Kz1kaXIpaWYoYXJyYXlbaWR4XT09PWl0ZW0pcmV0dXJuIGlkeDtyZXR1cm4tMX19ZnVuY3Rpb24gY29sbGVjdE5vbkVudW1Qcm9wcyhvYmosa2V5cyl7dmFyIG5vbkVudW1JZHg9bm9uRW51bWVyYWJsZVByb3BzLmxlbmd0aCxjb25zdHJ1Y3Rvcj1vYmouY29uc3RydWN0b3IscHJvdG89Xy5pc0Z1bmN0aW9uKGNvbnN0cnVjdG9yKSYmY29uc3RydWN0b3IucHJvdG90eXBlfHxPYmpQcm90byxwcm9wPSJjb25zdHJ1Y3RvciI7Zm9yKF8uaGFzKG9iaixwcm9wKSYmIV8uY29udGFpbnMoa2V5cyxwcm9wKSYma2V5cy5wdXNoKHByb3ApO25vbkVudW1JZHgtLTspcHJvcD1ub25FbnVtZXJhYmxlUHJvcHNbbm9uRW51bUlkeF0scHJvcCBpbiBvYmomJm9ialtwcm9wXSE9PXByb3RvW3Byb3BdJiYhXy5jb250YWlucyhrZXlzLHByb3ApJiZrZXlzLnB1c2gocHJvcCl9dmFyIHJvb3Q9dGhpcyxwcmV2aW91c1VuZGVyc2NvcmU9cm9vdC5fLEFycmF5UHJvdG89QXJyYXkucHJvdG90eXBlLE9ialByb3RvPU9iamVjdC5wcm90b3R5cGUsRnVuY1Byb3RvPUZ1bmN0aW9uLnByb3RvdHlwZSxwdXNoPUFycmF5UHJvdG8ucHVzaCxzbGljZT1BcnJheVByb3RvLnNsaWNlLHRvU3RyaW5nPU9ialByb3RvLnRvU3RyaW5nLGhhc093blByb3BlcnR5PU9ialByb3RvLmhhc093blByb3BlcnR5LG5hdGl2ZUlzQXJyYXk9QXJyYXkuaXNBcnJheSxuYXRpdmVLZXlzPU9iamVjdC5rZXlzLG5hdGl2ZUJpbmQ9RnVuY1Byb3RvLmJpbmQsbmF0aXZlQ3JlYXRlPU9iamVjdC5jcmVhdGUsQ3Rvcj1mdW5jdGlvbigpe30sXz1mdW5jdGlvbihvYmope3JldHVybiBvYmogaW5zdGFuY2VvZiBfP29iajp0aGlzIGluc3RhbmNlb2YgXz92b2lkKHRoaXMuX3dyYXBwZWQ9b2JqKTpuZXcgXyhvYmopfTsidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHMmJihleHBvcnRzPW1vZHVsZS5leHBvcnRzPV8pLGV4cG9ydHMuXz1fLF8uVkVSU0lPTj0iMS44LjMiO3ZhciBvcHRpbWl6ZUNiPWZ1bmN0aW9uKGZ1bmMsY29udGV4dCxhcmdDb3VudCl7aWYodm9pZCAwPT09Y29udGV4dClyZXR1cm4gZnVuYztzd2l0Y2gobnVsbD09YXJnQ291bnQ/MzphcmdDb3VudCl7Y2FzZSAxOnJldHVybiBmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGZ1bmMuY2FsbChjb250ZXh0LHZhbHVlKX07Y2FzZSAyOnJldHVybiBmdW5jdGlvbih2YWx1ZSxvdGhlcil7cmV0dXJuIGZ1bmMuY2FsbChjb250ZXh0LHZhbHVlLG90aGVyKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbih2YWx1ZSxpbmRleCxjb2xsZWN0aW9uKXtyZXR1cm4gZnVuYy5jYWxsKGNvbnRleHQsdmFsdWUsaW5kZXgsY29sbGVjdGlvbil9O2Nhc2UgNDpyZXR1cm4gZnVuY3Rpb24oYWNjdW11bGF0b3IsdmFsdWUsaW5kZXgsY29sbGVjdGlvbil7cmV0dXJuIGZ1bmMuY2FsbChjb250ZXh0LGFjY3VtdWxhdG9yLHZhbHVlLGluZGV4LGNvbGxlY3Rpb24pfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZnVuYy5hcHBseShjb250ZXh0LGFyZ3VtZW50cyl9fSxjYj1mdW5jdGlvbih2YWx1ZSxjb250ZXh0LGFyZ0NvdW50KXtyZXR1cm4gbnVsbD09dmFsdWU/Xy5pZGVudGl0eTpfLmlzRnVuY3Rpb24odmFsdWUpP29wdGltaXplQ2IodmFsdWUsY29udGV4dCxhcmdDb3VudCk6Xy5pc09iamVjdCh2YWx1ZSk/Xy5tYXRjaGVyKHZhbHVlKTpfLnByb3BlcnR5KHZhbHVlKX07Xy5pdGVyYXRlZT1mdW5jdGlvbih2YWx1ZSxjb250ZXh0KXtyZXR1cm4gY2IodmFsdWUsY29udGV4dCwxLzApfTt2YXIgY3JlYXRlQXNzaWduZXI9ZnVuY3Rpb24oa2V5c0Z1bmMsdW5kZWZpbmVkT25seSl7cmV0dXJuIGZ1bmN0aW9uKG9iail7dmFyIGxlbmd0aD1hcmd1bWVudHMubGVuZ3RoO2lmKGxlbmd0aDwyfHxudWxsPT1vYmopcmV0dXJuIG9iajtmb3IodmFyIGluZGV4PTE7aW5kZXg8bGVuZ3RoO2luZGV4KyspZm9yKHZhciBzb3VyY2U9YXJndW1lbnRzW2luZGV4XSxrZXlzPWtleXNGdW5jKHNvdXJjZSksbD1rZXlzLmxlbmd0aCxpPTA7aTxsO2krKyl7dmFyIGtleT1rZXlzW2ldO3VuZGVmaW5lZE9ubHkmJnZvaWQgMCE9PW9ialtrZXldfHwob2JqW2tleV09c291cmNlW2tleV0pfXJldHVybiBvYmp9fSxiYXNlQ3JlYXRlPWZ1bmN0aW9uKHByb3RvdHlwZSl7aWYoIV8uaXNPYmplY3QocHJvdG90eXBlKSlyZXR1cm57fTtpZihuYXRpdmVDcmVhdGUpcmV0dXJuIG5hdGl2ZUNyZWF0ZShwcm90b3R5cGUpO0N0b3IucHJvdG90eXBlPXByb3RvdHlwZTt2YXIgcmVzdWx0PW5ldyBDdG9yO3JldHVybiBDdG9yLnByb3RvdHlwZT1udWxsLHJlc3VsdH0scHJvcGVydHk9ZnVuY3Rpb24oa2V5KXtyZXR1cm4gZnVuY3Rpb24ob2JqKXtyZXR1cm4gbnVsbD09b2JqP3ZvaWQgMDpvYmpba2V5XX19LE1BWF9BUlJBWV9JTkRFWD1NYXRoLnBvdygyLDUzKS0xLGdldExlbmd0aD1wcm9wZXJ0eSgibGVuZ3RoIiksaXNBcnJheUxpa2U9ZnVuY3Rpb24oY29sbGVjdGlvbil7dmFyIGxlbmd0aD1nZXRMZW5ndGgoY29sbGVjdGlvbik7cmV0dXJuIm51bWJlciI9PXR5cGVvZiBsZW5ndGgmJmxlbmd0aD49MCYmbGVuZ3RoPD1NQVhfQVJSQVlfSU5ERVh9O18uZWFjaD1fLmZvckVhY2g9ZnVuY3Rpb24ob2JqLGl0ZXJhdGVlLGNvbnRleHQpe2l0ZXJhdGVlPW9wdGltaXplQ2IoaXRlcmF0ZWUsY29udGV4dCk7dmFyIGksbGVuZ3RoO2lmKGlzQXJyYXlMaWtlKG9iaikpZm9yKGk9MCxsZW5ndGg9b2JqLmxlbmd0aDtpPGxlbmd0aDtpKyspaXRlcmF0ZWUob2JqW2ldLGksb2JqKTtlbHNle3ZhciBrZXlzPV8ua2V5cyhvYmopO2ZvcihpPTAsbGVuZ3RoPWtleXMubGVuZ3RoO2k8bGVuZ3RoO2krKylpdGVyYXRlZShvYmpba2V5c1tpXV0sa2V5c1tpXSxvYmopfXJldHVy", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZSxjb250ZXh0LDEpO2Zvcih2YXIgdmFsdWU9aXRlcmF0ZWUob2JqKSxsb3c9MCxoaWdoPWdldExlbmd0aChhcnJheSk7bG93PGhpZ2g7KXt2YXIgbWlkPU1hdGguZmxvb3IoKGxvdytoaWdoKS8yKTtpdGVyYXRlZShhcnJheVttaWRdKTx2YWx1ZT9sb3c9bWlkKzE6aGlnaD1taWR9cmV0dXJuIGxvd30sXy5pbmRleE9mPWNyZWF0ZUluZGV4RmluZGVyKDEsXy5maW5kSW5kZXgsXy5zb3J0ZWRJbmRleCksXy5sYXN0SW5kZXhPZj1jcmVhdGVJbmRleEZpbmRlcigtMSxfLmZpbmRMYXN0SW5kZXgpLF8ucmFuZ2U9ZnVuY3Rpb24oc3RhcnQsc3RvcCxzdGVwKXtudWxsPT1zdG9wJiYoc3RvcD1zdGFydHx8MCxzdGFydD0wKSxzdGVwPXN0ZXB8fDE7Zm9yKHZhciBsZW5ndGg9TWF0aC5tYXgoTWF0aC5jZWlsKChzdG9wLXN0YXJ0KS9zdGVwKSwwKSxyYW5nZT1BcnJheShsZW5ndGgpLGlkeD0wO2lkeDxsZW5ndGg7aWR4Kyssc3RhcnQrPXN0ZXApcmFuZ2VbaWR4XT1zdGFydDtyZXR1cm4gcmFuZ2V9O3ZhciBleGVjdXRlQm91bmQ9ZnVuY3Rpb24oc291cmNlRnVuYyxib3VuZEZ1bmMsY29udGV4dCxjYWxsaW5nQ29udGV4dCxhcmdzKXtpZighKGNhbGxpbmdDb250ZXh0IGluc3RhbmNlb2YgYm91bmRGdW5jKSlyZXR1cm4gc291cmNlRnVuYy5hcHBseShjb250ZXh0LGFyZ3MpO3ZhciBzZWxmPWJhc2VDcmVhdGUoc291cmNlRnVuYy5wcm90b3R5cGUpLHJlc3VsdD1zb3VyY2VGdW5jLmFwcGx5KHNlbGYsYXJncyk7cmV0dXJuIF8uaXNPYmplY3QocmVzdWx0KT9yZXN1bHQ6c2VsZn07Xy5iaW5kPWZ1bmN0aW9uKGZ1bmMsY29udGV4dCl7aWYobmF0aXZlQmluZCYmZnVuYy5iaW5kPT09bmF0aXZlQmluZClyZXR1cm4gbmF0aXZlQmluZC5hcHBseShmdW5jLHNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKTtpZighXy5pc0Z1bmN0aW9uKGZ1bmMpKXRocm93IG5ldyBUeXBlRXJyb3IoIkJpbmQgbXVzdCBiZSBjYWxsZWQgb24gYSBmdW5jdGlvbiIpO3ZhciBhcmdzPXNsaWNlLmNhbGwoYXJndW1lbnRzLDIpLGJvdW5kPWZ1bmN0aW9uKCl7cmV0dXJuIGV4ZWN1dGVCb3VuZChmdW5jLGJvdW5kLGNvbnRleHQsdGhpcyxhcmdzLmNvbmNhdChzbGljZS5jYWxsKGFyZ3VtZW50cykpKX07cmV0dXJuIGJvdW5kfSxfLnBhcnRpYWw9ZnVuY3Rpb24oZnVuYyl7dmFyIGJvdW5kQXJncz1zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxib3VuZD1mdW5jdGlvbigpe2Zvcih2YXIgcG9zaXRpb249MCxsZW5ndGg9Ym91bmRBcmdzLmxlbmd0aCxhcmdzPUFycmF5KGxlbmd0aCksaT0wO2k8bGVuZ3RoO2krKylhcmdzW2ldPWJvdW5kQXJnc1tpXT09PV8/YXJndW1lbnRzW3Bvc2l0aW9uKytdOmJvdW5kQXJnc1tpXTtmb3IoO3Bvc2l0aW9uPGFyZ3VtZW50cy5sZW5ndGg7KWFyZ3MucHVzaChhcmd1bWVudHNbcG9zaXRpb24rK10pO3JldHVybiBleGVjdXRlQm91bmQoZnVuYyxib3VuZCx0aGlzLHRoaXMsYXJncyl9O3JldHVybiBib3VuZH0sXy5iaW5kQWxsPWZ1bmN0aW9uKG9iail7dmFyIGksa2V5LGxlbmd0aD1hcmd1bWVudHMubGVuZ3RoO2lmKGxlbmd0aDw9MSl0aHJvdyBuZXcgRXJyb3IoImJpbmRBbGwgbXVzdCBiZSBwYXNzZWQgZnVuY3Rpb24gbmFtZXMiKTtmb3IoaT0xO2k8bGVuZ3RoO2krKylrZXk9YXJndW1lbnRzW2ldLG9ialtrZXldPV8uYmluZChvYmpba2V5XSxvYmopO3JldHVybiBvYmp9LF8ubWVtb2l6ZT1mdW5jdGlvbihmdW5jLGhhc2hlcil7dmFyIG1lbW9pemU9ZnVuY3Rpb24oa2V5KXt2YXIgY2FjaGU9bWVtb2l6ZS5jYWNoZSxhZGRyZXNzPSIiKyhoYXNoZXI/aGFzaGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKTprZXkpO3JldHVybiBfLmhhcyhjYWNoZSxhZGRyZXNzKXx8KGNhY2hlW2FkZHJlc3NdPWZ1bmMuYXBwbHkodGhpcyxhcmd1bWVudHMpKSxjYWNoZVthZGRyZXNzXX07cmV0dXJuIG1lbW9pemUuY2FjaGU9e30sbWVtb2l6ZX0sXy5kZWxheT1mdW5jdGlvbihmdW5jLHdhaXQpe3ZhciBhcmdzPXNsaWNlLmNhbGwoYXJndW1lbnRzLDIpO3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmMuYXBwbHkobnVsbCxhcmdzKX0sd2FpdCl9LF8uZGVmZXI9Xy5wYXJ0aWFsKF8uZGVsYXksXywxKSxfLnRocm90dGxlPWZ1bmN0aW9uKGZ1bmMsd2FpdCxvcHRpb25zKXt2YXIgY29udGV4dCxhcmdzLHJlc3VsdCx0aW1lb3V0PW51bGwscHJldmlvdXM9MDtvcHRpb25zfHwob3B0aW9ucz17fSk7dmFyIGxhdGVyPWZ1bmN0aW9uKCl7cHJldmlvdXM9b3B0aW9ucy5sZWFkaW5nPT09ITE/MDpfLm5vdygpLHRpbWVvdXQ9bnVsbCxyZXN1bHQ9ZnVuYy5hcHBseShjb250ZXh0LGFyZ3MpLHRpbWVvdXR8fChjb250ZXh0PWFyZ3M9bnVsbCl9O3JldHVybiBmdW5jdGlvbigpe3ZhciBub3c9Xy5ub3coKTtwcmV2aW91c3x8b3B0aW9ucy5sZWFkaW5nIT09ITF8fChwcmV2aW91cz1ub3cpO3ZhciByZW1haW5pbmc9d2FpdC0obm93LXByZXZpb3VzKTtyZXR1cm4gY29udGV4dD10aGlzLGFyZ3M9YXJndW1lbnRzLHJlbWFpbmluZzw9MHx8cmVtYWluaW5nPndhaXQ/KHRpbWVvdXQmJihjbGVhclRpbWVvdXQodGltZW91dCksdGltZW91dD1udWxsKSxwcmV2aW91cz1ub3cscmVzdWx0PWZ1bmMuYXBwbHkoY29udGV4dCxhcmdzKSx0aW1lb3V0fHwoY29udGV4dD1hcmdzPW51bGwpKTp0aW1lb3V0fHxvcHRpb25zLnRyYWlsaW5nPT09ITF8fCh0aW1lb3V0PXNldFRpbWVvdXQobGF0ZXIscmVtYWluaW5nKSkscmVzdWx0fX0sXy5kZWJvdW5jZT1mdW5jdGlvbihmdW5jLHdhaXQsaW1tZWRpYXRlKXt2YXIgdGltZW91dCxhcmdzLGNvbnRleHQsdGltZXN0YW1wLHJlc3VsdCxsYXRlcj1mdW5jdGlvbigpe3ZhciBsYXN0PV8ubm93KCktdGltZXN0YW1wO2xhc3Q8d2FpdCYmbGFzdD49MD90aW1lb3V0PXNldFRpbWVvdXQobGF0ZXIsd2FpdC1sYQ==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YWJsZXx8KHNvdXJjZT0id2l0aChvYmp8fHt9KXtcbiIrc291cmNlKyJ9XG4iKSxzb3VyY2U9InZhciBfX3QsX19wPScnLF9faj1BcnJheS5wcm90b3R5cGUuam9pbixwcmludD1mdW5jdGlvbigpe19fcCs9X19qLmNhbGwoYXJndW1lbnRzLCcnKTt9O1xuIitzb3VyY2UrInJldHVybiBfX3A7XG4iO3RyeXt2YXIgcmVuZGVyPW5ldyBGdW5jdGlvbihzZXR0aW5ncy52YXJpYWJsZXx8Im9iaiIsIl8iLHNvdXJjZSl9Y2F0Y2goZSl7dGhyb3cgZS5zb3VyY2U9c291cmNlLGV9dmFyIHRlbXBsYXRlPWZ1bmN0aW9uKGRhdGEpe3JldHVybiByZW5kZXIuY2FsbCh0aGlzLGRhdGEsXyl9LGFyZ3VtZW50PXNldHRpbmdzLnZhcmlhYmxlfHwib2JqIjtyZXR1cm4gdGVtcGxhdGUuc291cmNlPSJmdW5jdGlvbigiK2FyZ3VtZW50KyIpe1xuIitzb3VyY2UrIn0iLHRlbXBsYXRlfSxfLmNoYWluPWZ1bmN0aW9uKG9iail7dmFyIGluc3RhbmNlPV8ob2JqKTtyZXR1cm4gaW5zdGFuY2UuX2NoYWluPSEwLGluc3RhbmNlfTt2YXIgcmVzdWx0PWZ1bmN0aW9uKGluc3RhbmNlLG9iail7cmV0dXJuIGluc3RhbmNlLl9jaGFpbj9fKG9iaikuY2hhaW4oKTpvYmp9O18ubWl4aW49ZnVuY3Rpb24ob2JqKXtfLmVhY2goXy5mdW5jdGlvbnMob2JqKSxmdW5jdGlvbihuYW1lKXt2YXIgZnVuYz1fW25hbWVdPW9ialtuYW1lXTtfLnByb3RvdHlwZVtuYW1lXT1mdW5jdGlvbigpe3ZhciBhcmdzPVt0aGlzLl93cmFwcGVkXTtyZXR1cm4gcHVzaC5hcHBseShhcmdzLGFyZ3VtZW50cykscmVzdWx0KHRoaXMsZnVuYy5hcHBseShfLGFyZ3MpKX19KX0sXy5taXhpbihfKSxfLmVhY2goWyJwb3AiLCJwdXNoIiwicmV2ZXJzZSIsInNoaWZ0Iiwic29ydCIsInNwbGljZSIsInVuc2hpZnQiXSxmdW5jdGlvbihuYW1lKXt2YXIgbWV0aG9kPUFycmF5UHJvdG9bbmFtZV07Xy5wcm90b3R5cGVbbmFtZV09ZnVuY3Rpb24oKXt2YXIgb2JqPXRoaXMuX3dyYXBwZWQ7cmV0dXJuIG1ldGhvZC5hcHBseShvYmosYXJndW1lbnRzKSwic2hpZnQiIT09bmFtZSYmInNwbGljZSIhPT1uYW1lfHwwIT09b2JqLmxlbmd0aHx8ZGVsZXRlIG9ialswXSxyZXN1bHQodGhpcyxvYmopfX0pLF8uZWFjaChbImNvbmNhdCIsImpvaW4iLCJzbGljZSJdLGZ1bmN0aW9uKG5hbWUpe3ZhciBtZXRob2Q9QXJyYXlQcm90b1tuYW1lXTtfLnByb3RvdHlwZVtuYW1lXT1mdW5jdGlvbigpe3JldHVybiByZXN1bHQodGhpcyxtZXRob2QuYXBwbHkodGhpcy5fd3JhcHBlZCxhcmd1bWVudHMpKX19KSxfLnByb3RvdHlwZS52YWx1ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl93cmFwcGVkfSxfLnByb3RvdHlwZS52YWx1ZU9mPV8ucHJvdG90eXBlLnRvSlNPTj1fLnByb3RvdHlwZS52YWx1ZSxfLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiIiK3RoaXMuX3dyYXBwZWR9LF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("XT0hMSksbj1NKG4se2VudW1lcmFibGU6dygwLCExKX0pKToocih0LFApfHxBKHQsUCx3KDEse30pKSx0W1BdW2VdPSEwKSxCKHQsZSxuKSk6QSh0LGUsbil9LEc9ZnVuY3Rpb24odCxlKXt2KHQpO2Zvcih2YXIgbixpPV8oZT15KGUpKSxyPTAsbz1pLmxlbmd0aDtvPnI7KSQodCxuPWlbcisrXSxlW25dKTtyZXR1cm4gdH0sSz1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDA9PT1lP00odCk6RyhNKHQpLGUpfSxKPWZ1bmN0aW9uKHQpe3ZhciBlPUkuY2FsbCh0aGlzLHQ9Yih0LCEwKSk7cmV0dXJuISh0aGlzPT09RiYmcihqLHQpJiYhcihILHQpKSYmKCEoZXx8IXIodGhpcyx0KXx8IXIoaix0KXx8cih0aGlzLFApJiZ0aGlzW1BdW3RdKXx8ZSl9LFg9ZnVuY3Rpb24odCxlKXtpZih0PXkodCksZT1iKGUsITApLHQhPT1GfHwhcihqLGUpfHxyKEgsZSkpe3ZhciBuPXgodCxlKTtyZXR1cm4hbnx8IXIoaixlKXx8cih0LFApJiZ0W1BdW2VdfHwobi5lbnVtZXJhYmxlPSEwKSxufX0sUT1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj1FKHkodCkpLGk9W10sbz0wO24ubGVuZ3RoPm87KXIoaixlPW5bbysrXSl8fGU9PVB8fGU9PWx8fGkucHVzaChlKTtyZXR1cm4gaX0sWj1mdW5jdGlvbih0KXtmb3IodmFyIGUsbj10PT09RixpPUUobj9IOnkodCkpLG89W10scz0wO2kubGVuZ3RoPnM7KSFyKGosZT1pW3MrK10pfHxuJiYhcihGLGUpfHxvLnB1c2goaltlXSk7cmV0dXJuIG99O3p8fChEPWZ1bmN0aW9uKCl7aWYodGhpcyBpbnN0YW5jZW9mIEQpdGhyb3cgVHlwZUVycm9yKCJTeW1ib2wgaXMgbm90IGEgY29uc3RydWN0b3IhIik7dmFyIHQ9aChhcmd1bWVudHMubGVuZ3RoPjA/YXJndW1lbnRzWzBdOnZvaWQgMCksZT1mdW5jdGlvbihuKXt0aGlzPT09RiYmZS5jYWxsKEgsbikscih0aGlzLFApJiZyKHRoaXNbUF0sdCkmJih0aGlzW1BdW3RdPSExKSxCKHRoaXMsdCx3KDEsbikpfTtyZXR1cm4gbyYmVyYmQihGLHQse2NvbmZpZ3VyYWJsZTohMCxzZXQ6ZX0pLFYodCl9LGEoRFtPXSwidG9TdHJpbmciLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2t9KSxULmY9WCxrLmY9JCxuKDQ5KS5mPVMuZj1RLG4oNDMpLmY9SixuKDQyKS5mPVosbyYmIW4oMjgpJiZhKEYsInByb3BlcnR5SXNFbnVtZXJhYmxlIixKLCEwKSxmLmY9ZnVuY3Rpb24odCl7cmV0dXJuIFYocCh0KSl9KSxzKHMuRytzLlcrcy5GKiF6LHtTeW1ib2w6RH0pO2Zvcih2YXIgdHQ9Imhhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzIi5zcGxpdCgiLCIpLGV0PTA7dHQubGVuZ3RoPmV0OylwKHR0W2V0KytdKTtmb3IodmFyIG50PUwocC5zdG9yZSksaXQ9MDtudC5sZW5ndGg+aXQ7KW0obnRbaXQrK10pO3Mocy5TK3MuRioheiwiU3ltYm9sIix7ImZvciI6ZnVuY3Rpb24odCl7cmV0dXJuIHIoUix0Kz0iIik/Ult0XTpSW3RdPUQodCl9LGtleUZvcjpmdW5jdGlvbih0KXtpZighcSh0KSl0aHJvdyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHN5bWJvbCEiKTtmb3IodmFyIGUgaW4gUilpZihSW2VdPT09dClyZXR1cm4gZX0sdXNlU2V0dGVyOmZ1bmN0aW9uKCl7Vz0hMH0sdXNlU2ltcGxlOmZ1bmN0aW9uKCl7Vz0hMX19KSxzKHMuUytzLkYqIXosIk9iamVjdCIse2NyZWF0ZTpLLGRlZmluZVByb3BlcnR5OiQsZGVmaW5lUHJvcGVydGllczpHLGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpYLGdldE93blByb3BlcnR5TmFtZXM6USxnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6Wn0pLEMmJnMocy5TK3MuRiooIXp8fGMoZnVuY3Rpb24oKXt2YXIgdD1EKCk7cmV0dXJuIltudWxsXSIhPVkoW3RdKXx8Int9IiE9WSh7YTp0fSl8fCJ7fSIhPVkoT2JqZWN0KHQpKX0pKSwiSlNPTiIse3N0cmluZ2lmeTpmdW5jdGlvbih0KXtpZih2b2lkIDAhPT10JiYhcSh0KSl7Zm9yKHZhciBlLG4saT1bdF0scj0xO2FyZ3VtZW50cy5sZW5ndGg+cjspaS5wdXNoKGFyZ3VtZW50c1tyKytdKTtyZXR1cm4gZT1pWzFdLCJmdW5jdGlvbiI9PXR5cGVvZiBlJiYobj1lKSwhbiYmZyhlKXx8KGU9ZnVuY3Rpb24odCxlKXtpZihuJiYoZT1uLmNhbGwodGhpcyx0LGUpKSwhcShlKSlyZXR1cm4gZX0pLGlbMV09ZSxZLmFwcGx5KEMsaSl9fX0pLERbT11bTl18fG4oMTApKERbT10sTixEW09dLnZhbHVlT2YpLGQoRCwiU3ltYm9sIiksZChNYXRoLCJNYXRoIiwhMCksZChpLkpTT04sIkpTT04iLCEwKX0sZnVuY3Rpb24odCxlKXt2YXIgbj10LmV4cG9ydHM9InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cmJndpbmRvdy5NYXRoPT1NYXRoP3dpbmRvdzoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJnNlbGYuTWF0aD09TWF0aD9zZWxmOkZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCk7Im51bWJlciI9PXR5cGVvZiBfX2cmJihfX2c9bil9LGZ1bmN0aW9uKHQsZSl7dmFyIG49e30uaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG4uY2FsbCh0LGUpfX0sZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz0hbig3KShmdW5jdGlvbigpe3JldHVybiA3IT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4hIXQoKX1jYXRjaChlKXtyZXR1cm4hMH19fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0KSxyPW4oOSksbz1uKDEwKSxzPW4oMTgpLGE9bigyMCksbD0icHJvdG90eXBlIixjPWZ1bmN0aW9uKHQsZSxuKXt2YXIgdSxkLGgscCxmPXQmYy5GLG09dCZjLkcsXz10JmMuUyxnPXQmYy5QLHY9dCZjLkIseT1tP2k6Xz9pW2VdfHwoaVtlXT17fSk6KGlbZV18fHt9KVtsXSxiPW0/cjpyW2VdfHwocltlXT17fSksdz1iW2xdfHwoYltsXT17fSk7bSYmKG49ZSk7Zm9yKHUgaW4gbilkPSFmJiZ5JiZ2b2lkIDAhPT15W3VdLGg9KGQ/eTpuKVt1XSxwPXYmJmQ/YShoLGkpOmcmJiJmdW5jdGlvbiI9PXR5cGVvZiBoP2EoRnVuY3Rpb24uY2FsbCxoKTpoLHkmJnMoeSx1LGgsdCZjLlUpLGJbdV0hPWgmJm8oYix1LHApLGcmJndbdV0hPWgmJih3W3VdPWgpfTtpLmNvcmU9cixjLkY9MSxjLkc9MixjLlM9NCxjLlA9OCxjLkI9MTYsYy5XPTMyLGMuVT02NCxjLlI9MTI4LHQuZXhwb3J0cz1jfSxmdW5jdGlvbih0LGUpe3ZhciBuPXQuZXhwb3J0cz17dmVyc2lvbjoiMi41LjEifTsibnVtYmVyIj09dHlwZW9mIF9fZSYmKF9fZT1uKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTEpLHI9bigxNyk7dC5leHBvcnRzPW4oNik/ZnVuY3Rpb24odCxlLG4pe3JldHVybiBpLmYodCxlLHIoMSxuKSl9OmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdFtlXT1uLHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMikscj1uKDE0KSxvPW4oMTYpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O2UuZj1uKDYpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbih0LGUsbil7aWYoaSh0KSxlPW8oZSwhMCksaShuKSxyKXRyeXtyZXR1cm4gcyh0LGUsbil9Y2F0Y2goYSl7fWlmKCJnZXQiaW4gbnx8InNldCJpbiBuKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIG4mJih0W2VdPW4udmFsdWUpLHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMyk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCFpKHQpKXRocm93IFR5cGVFcnJvcih0KyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiJvYmplY3QiPT10eXBlb2YgdD9udWxsIT09dDoiZnVuY3Rpb24iPT10eXBlb2YgdH19LGZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9IW4oNikmJiFuKDcpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShuKDE1KSgiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKSxyPW4oNCkuZG9jdW1lbnQsbz1pKHIpJiZpKHIuY3JlYXRlRWxlbWVudCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBvP3IuY3JlYXRlRWxlbWVudCh0KTp7fX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZighaSh0KSlyZXR1cm4gdDt2YXIgbixyO2lmKGUmJiJmdW5jdGlvbiI9PXR5cGVvZihuPXQudG9TdHJpbmcpJiYhaShyPW4uY2FsbCh0KSkpcmV0dXJuIHI7aWYoImZ1bmN0aW9uIj09dHlwZW9mKG49dC52YWx1ZU9mKSYmIWkocj1uLmNhbGwodCkpKXJldHVybiByO2lmKCFlJiYiZnVuY3Rpb24iPT10eXBlb2Yobj10LnRvU3RyaW5nKSYmIWkocj1uLmNhbGwodCkpKXJldHVybiByO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybntlbnVtZXJhYmxlOiEoMSZ0KSxjb25maWd1cmFibGU6ISgyJnQpLHdyaXRhYmxlOiEoNCZ0KSx2YWx1ZTplfX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDQpLHI9bigxMCksbz1uKDUpLHM9bigxOSkoInNyYyIpLGE9InRvU3RyaW5nIixsPUZ1bmN0aW9uW2FdLGM9KCIiK2wpLnNwbGl0KGEpO24oOSkuaW5zcGVjdFNvdXJjZT1mdW5jdGlvbih0KXtyZXR1cm4gbC5jYWxsKHQpfSwodC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGEpe3ZhciBsPSJmdW5jdGlvbiI9PXR5cGVvZiBuO2wmJihvKG4sIm5hbWUiKXx8cihuLCJuYW1lIixlKSksdFtlXSE9PW4mJihsJiYobyhuLHMpfHxyKG4scyx0W2VdPyIiK3RbZV06Yy5qb2luKFN0cmluZyhlKSkpKSx0PT09aT90W2VdPW46YT90W2VdP3RbZV09bjpyKHQsZSxuKTooZGVsZXRlIHRbZV0scih0LGUsbikpKX0pKEZ1bmN0aW9uLnByb3RvdHlwZSxhLGZ1bmN0aW9uKCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMmJnRoaXNbc118fGwuY2FsbCh0aGlzKX0pfSxmdW5jdGlvbih0LGUpe3ZhciBuPTAsaT1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PXQ/IiI6dCwiKV8iLCgrK24raSkudG9TdHJpbmcoMzYpKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4pe2lmKGkodCksdm9pZCAwPT09ZSlyZXR1cm4gdDtzd2l0Y2gobil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5jYWxsKGUsbil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24obixpKXtyZXR1cm4gdC5jYWxsKGUsbixpKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihuLGkscil7cmV0dXJuIHQuY2FsbChlLG4saSxyKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkoZSxhcmd1bWVudHMpfX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IFR5cGVFcnJvcih0KyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxOSkoIm1ldGEiKSxyPW4oMTMpLG89big1KSxzPW4oMTEpLmYsYT0wLGw9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYz0hbig3KShmdW5jdGlvbigpe3JldHVybiBsKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSksdT1mdW5jdGlvbih0KXtzKHQsaSx7dmFsdWU6e2k6Ik8iKyArK2Esdzp7fX19KX0sZD1mdW5jdGlvbih0LGUpe2lmKCFyKHQpKXJldHVybiJzeW1ib2wiPT10eXBlb2Y=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("KCJoYXNJbnN0YW5jZSIpLHM9RnVuY3Rpb24ucHJvdG90eXBlO28gaW4gc3x8bigxMSkuZihzLG8se3ZhbHVlOmZ1bmN0aW9uKHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0aGlzfHwhaSh0KSlyZXR1cm4hMTtpZighaSh0aGlzLnByb3RvdHlwZSkpcmV0dXJuIHQgaW5zdGFuY2VvZiB0aGlzO2Zvcig7dD1yKHQpOylpZih0aGlzLnByb3RvdHlwZT09PXQpcmV0dXJuITA7cmV0dXJuITF9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9big4MSk7aShpLkcraS5GKihwYXJzZUludCE9cikse3BhcnNlSW50OnJ9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNCkucGFyc2VJbnQscj1uKDgyKS50cmltLG89big4Mykscz0vXlstK10/MFt4WF0vO3QuZXhwb3J0cz04IT09aShvKyIwOCIpfHwyMiE9PWkobysiMHgxNiIpP2Z1bmN0aW9uKHQsZSl7dmFyIG49cihTdHJpbmcodCksMyk7cmV0dXJuIGkobixlPj4+MHx8KHMudGVzdChuKT8xNjoxMCkpfTppfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oMzUpLG89big3KSxzPW4oODMpLGE9IlsiK3MrIl0iLGw9IuKAi8KFIixjPVJlZ0V4cCgiXiIrYSthKyIqIiksdT1SZWdFeHAoYSthKyIqJCIpLGQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXt9LGE9byhmdW5jdGlvbigpe3JldHVybiEhc1t0XSgpfHxsW3RdKCkhPWx9KSxjPXJbdF09YT9lKGgpOnNbdF07biYmKHJbbl09YyksaShpLlAraS5GKmEsIlN0cmluZyIscil9LGg9ZC50cmltPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9U3RyaW5nKHIodCkpLDEmZSYmKHQ9dC5yZXBsYWNlKGMsIiIpKSwyJmUmJih0PXQucmVwbGFjZSh1LCIiKSksdH07dC5leHBvcnRzPWR9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSJcdFxuXHgwQlxmXHIgwqDhmoDhoI7igIDigIHigILigIPigITigIXigIbigIfigIjigInigIrigK/igZ/jgIBcdTIwMjhcdTIwMjlcdWZlZmYifSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oODUpO2koaS5HK2kuRioocGFyc2VGbG9hdCE9cikse3BhcnNlRmxvYXQ6cn0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0KS5wYXJzZUZsb2F0LHI9big4MikudHJpbTt0LmV4cG9ydHM9MS9pKG4oODMpKyItMCIpIT09LSgxLzApP2Z1bmN0aW9uKHQpe3ZhciBlPXIoU3RyaW5nKHQpLDMpLG49aShlKTtyZXR1cm4gMD09PW4mJiItIj09ZS5jaGFyQXQoMCk/LTA6bn06aX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDQpLHI9big1KSxvPW4oMzQpLHM9big4NyksYT1uKDE2KSxsPW4oNyksYz1uKDQ5KS5mLHU9big1MCkuZixkPW4oMTEpLmYsaD1uKDgyKS50cmltLHA9Ik51bWJlciIsZj1pW3BdLG09ZixfPWYucHJvdG90eXBlLGc9byhuKDQ1KShfKSk9PXAsdj0idHJpbSJpbiBTdHJpbmcucHJvdG90eXBlLHk9ZnVuY3Rpb24odCl7dmFyIGU9YSh0LCExKTtpZigic3RyaW5nIj09dHlwZW9mIGUmJmUubGVuZ3RoPjIpe2U9dj9lLnRyaW0oKTpoKGUsMyk7dmFyIG4saSxyLG89ZS5jaGFyQ29kZUF0KDApO2lmKDQzPT09b3x8NDU9PT1vKXtpZihuPWUuY2hhckNvZGVBdCgyKSw4OD09PW58fDEyMD09PW4pcmV0dXJuIE5hTn1lbHNlIGlmKDQ4PT09byl7c3dpdGNoKGUuY2hhckNvZGVBdCgxKSl7Y2FzZSA2NjpjYXNlIDk4Omk9MixyPTQ5O2JyZWFrO2Nhc2UgNzk6Y2FzZSAxMTE6aT04LHI9NTU7YnJlYWs7ZGVmYXVsdDpyZXR1cm4rZX1mb3IodmFyIHMsbD1lLnNsaWNlKDIpLGM9MCx1PWwubGVuZ3RoO2M8dTtjKyspaWYocz1sLmNoYXJDb2RlQXQoYyksczw0OHx8cz5yKXJldHVybiBOYU47cmV0dXJuIHBhcnNlSW50KGwsaSl9fXJldHVybitlfTtpZighZigiIDBvMSIpfHwhZigiMGIxIil8fGYoIisweDEiKSl7Zj1mdW5jdGlvbih0KXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPDE/MDp0LG49dGhpcztyZXR1cm4gbiBpbnN0YW5jZW9mIGYmJihnP2woZnVuY3Rpb24oKXtfLnZhbHVlT2YuY2FsbChuKX0pOm8obikhPXApP3MobmV3IG0oeShlKSksbixmKTp5KGUpfTtmb3IodmFyIGIsdz1uKDYpP2MobSk6Ik1BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLEVQU0lMT04saXNGaW5pdGUsaXNJbnRlZ2VyLGlzTmFOLGlzU2FmZUludGVnZXIsTUFYX1NBRkVfSU5URUdFUixNSU5fU0FGRV9JTlRFR0VSLHBhcnNlRmxvYXQscGFyc2VJbnQsaXNJbnRlZ2VyIi5zcGxpdCgiLCIpLE09MDt3Lmxlbmd0aD5NO00rKylyKG0sYj13W01dKSYmIXIoZixiKSYmZChmLGIsdShtLGIpKTtmLnByb3RvdHlwZT1fLF8uY29uc3RydWN0b3I9ZixuKDE4KShpLHAsZil9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMykscj1uKDcyKS5zZXQ7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuKXt2YXIgbyxzPWUuY29uc3RydWN0b3I7cmV0dXJuIHMhPT1uJiYiZnVuY3Rpb24iPT10eXBlb2YgcyYmKG89cy5wcm90b3R5cGUpIT09bi5wcm90b3R5cGUmJmkobykmJnImJnIodCxvKSx0fX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9bigzOCksbz1uKDg5KSxzPW4oOTApLGE9MS4udG9GaXhlZCxsPU1hdGguZmxvb3IsYz1bMCwwLDAsMCwwLDBdLHU9Ik51bWJlci50b0ZpeGVkOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEiLGQ9IjAiLGg9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49LTEsaT1lOysrbjw2OylpKz10KmNbbl0sY1tuXT1pJTFlNyxpPWwoaS8xZTcpfSxwPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT02LG49MDstLWU+PTA7KW4rPWNbZV0sY1tlXT1sKG4vdCksbj1uJXQqMWU3fSxmPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTYsZT0iIjstLXQ+PTA7KWlmKCIiIT09ZXx8MD09PXR8fDAhPT1jW3RdKXt2YXIgbj1TdHJpbmcoY1t0XSk7ZT0iIj09PWU/bjplK3MuY2FsbChkLDctbi5sZW5ndGgpK259cmV0dXJuIGV9LG09ZnVuY3Rpb24odCxlLG4pe3JldHVybiAwPT09ZT9uOmUlMj09PTE/bSh0LGUtMSxuKnQpOm0odCp0LGUvMixuKX0sXz1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXQ7bj49NDA5NjspZSs9MTIsbi89NDA5Njtmb3IoO24+PTI7KWUrPTEsbi89MjtyZXR1cm4gZX07aShpLlAraS5GKighIWEmJigiMC4wMDAiIT09OGUtNS50b0ZpeGVkKDMpfHwiMSIhPT0uOS50b0ZpeGVkKDApfHwiMS4yNSIhPT0xLjI1NS50b0ZpeGVkKDIpfHwiMTAwMDAwMDAwMDAwMDAwMDEyOCIhPT0oMHhkZTBiNmIzYTc2NDAwODApLnRvRml4ZWQoMCkpfHwhbig3KShmdW5jdGlvbigpe2EuY2FsbCh7fSl9KSksIk51bWJlciIse3RvRml4ZWQ6ZnVuY3Rpb24odCl7dmFyIGUsbixpLGEsbD1vKHRoaXMsdSksYz1yKHQpLGc9IiIsdj1kO2lmKGM8MHx8Yz4yMCl0aHJvdyBSYW5nZUVycm9yKHUpO2lmKGwhPWwpcmV0dXJuIk5hTiI7aWYobDw9LTFlMjF8fGw+PTFlMjEpcmV0dXJuIFN0cmluZyhsKTtpZihsPDAmJihnPSItIixsPS1sKSxsPjFlLTIxKWlmKGU9XyhsKm0oMiw2OSwxKSktNjksbj1lPDA/bCptKDIsLWUsMSk6bC9tKDIsZSwxKSxuKj00NTAzNTk5NjI3MzcwNDk2LGU9NTItZSxlPjApe2ZvcihoKDAsbiksaT1jO2k+PTc7KWgoMWU3LDApLGktPTc7Zm9yKGgobSgxMCxpLDEpLDApLGk9ZS0xO2k+PTIzOylwKDE8PDIzKSxpLT0yMztwKDE8PGkpLGgoMSwxKSxwKDIpLHY9ZigpfWVsc2UgaCgwLG4pLGgoMTw8LWUsMCksdj1mKCkrcy5jYWxsKGQsYyk7cmV0dXJuIGM+MD8oYT12Lmxlbmd0aCx2PWcrKGE8PWM/IjAuIitzLmNhbGwoZCxjLWEpK3Y6di5zbGljZSgwLGEtYykrIi4iK3Yuc2xpY2UoYS1jKSkpOnY9Zyt2LHZ9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDM0KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZigibnVtYmVyIiE9dHlwZW9mIHQmJiJOdW1iZXIiIT1pKHQpKXRocm93IFR5cGVFcnJvcihlKTtyZXR1cm4rdH19LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9bigzOCkscj1uKDM1KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIGU9U3RyaW5nKHIodGhpcykpLG49IiIsbz1pKHQpO2lmKG88MHx8bz09MS8wKXRocm93IFJhbmdlRXJyb3IoIkNvdW50IGNhbid0IGJlIG5lZ2F0aXZlIik7Zm9yKDtvPjA7KG8+Pj49MSkmJihlKz1lKSkxJm8mJihuKz1lKTtyZXR1cm4gbn19LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oNyksbz1uKDg5KSxzPTEuLnRvUHJlY2lzaW9uO2koaS5QK2kuRioocihmdW5jdGlvbigpe3JldHVybiIxIiE9PXMuY2FsbCgxLHZvaWQgMCl9KXx8IXIoZnVuY3Rpb24oKXtzLmNhbGwoe30pfSkpLCJOdW1iZXIiLHt0b1ByZWNpc2lvbjpmdW5jdGlvbih0KXt2YXIgZT1vKHRoaXMsIk51bWJlciN0b1ByZWNpc2lvbjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIHZv", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("MTQwKSgibGluayIsZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiB0KHRoaXMsImEiLCJocmVmIixlKX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtuKDE0MCkoInNtYWxsIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdCh0aGlzLCJzbWFsbCIsIiIsIiIpfX0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO24oMTQwKSgic3RyaWtlIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdCh0aGlzLCJzdHJpa2UiLCIiLCIiKX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtuKDE0MCkoInN1YiIsZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcywic3ViIiwiIiwiIil9fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7bigxNDApKCJzdXAiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0KHRoaXMsInN1cCIsIiIsIiIpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiRGF0ZSIse25vdzpmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfX0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oOCkscj1uKDU3KSxvPW4oMTYpO2koaS5QK2kuRipuKDcpKGZ1bmN0aW9uKCl7cmV0dXJuIG51bGwhPT1uZXcgRGF0ZShOYU4pLnRvSlNPTigpfHwxIT09RGF0ZS5wcm90b3R5cGUudG9KU09OLmNhbGwoe3RvSVNPU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIDF9fSl9KSwiRGF0ZSIse3RvSlNPTjpmdW5jdGlvbih0KXt2YXIgZT1yKHRoaXMpLG49byhlKTtyZXR1cm4ibnVtYmVyIiE9dHlwZW9mIG58fGlzRmluaXRlKG4pP2UudG9JU09TdHJpbmcoKTpudWxsfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oMTU2KTtpKGkuUCtpLkYqKERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nIT09ciksIkRhdGUiLHt0b0lTT1N0cmluZzpyfSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big3KSxyPURhdGUucHJvdG90eXBlLmdldFRpbWUsbz1EYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyxzPWZ1bmN0aW9uKHQpe3JldHVybiB0Pjk/dDoiMCIrdH07dC5leHBvcnRzPWkoZnVuY3Rpb24oKXtyZXR1cm4iMDM4NS0wNy0yNVQwNzowNjozOS45OTlaIiE9by5jYWxsKG5ldyBEYXRlKC01ZTEzLTEpKX0pfHwhaShmdW5jdGlvbigpe28uY2FsbChuZXcgRGF0ZShOYU4pKTsKfSk/ZnVuY3Rpb24oKXtpZighaXNGaW5pdGUoci5jYWxsKHRoaXMpKSl0aHJvdyBSYW5nZUVycm9yKCJJbnZhbGlkIHRpbWUgdmFsdWUiKTt2YXIgdD10aGlzLGU9dC5nZXRVVENGdWxsWWVhcigpLG49dC5nZXRVVENNaWxsaXNlY29uZHMoKSxpPWU8MD8iLSI6ZT45OTk5PyIrIjoiIjtyZXR1cm4gaSsoIjAwMDAwIitNYXRoLmFicyhlKSkuc2xpY2UoaT8tNjotNCkrIi0=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("cnJvcixWPXIuVWludDhBcnJheSxxPSJBcnJheUJ1ZmZlciIsJD0iU2hhcmVkIitxLEc9IkJZVEVTX1BFUl9FTEVNRU5UIixLPSJwcm90b3R5cGUiLEo9QXJyYXlbS10sWD1sLkFycmF5QnVmZmVyLFE9bC5EYXRhVmlldyxaPUQoMCksdHQ9RCgyKSxldD1EKDMpLG50PUQoNCksaXQ9RCg1KSxydD1EKDYpLG90PUMoITApLHN0PUMoITEpLGF0PU8udmFsdWVzLGx0PU8ua2V5cyxjdD1PLmVudHJpZXMsdXQ9Si5sYXN0SW5kZXhPZixkdD1KLnJlZHVjZSxodD1KLnJlZHVjZVJpZ2h0LHB0PUouam9pbixmdD1KLnNvcnQsbXQ9Si5zbGljZSxfdD1KLnRvU3RyaW5nLGd0PUoudG9Mb2NhbGVTdHJpbmcsdnQ9RSgiaXRlcmF0b3IiKSx5dD1FKCJ0b1N0cmluZ1RhZyIpLGJ0PUEoInR5cGVkX2NvbnN0cnVjdG9yIiksd3Q9QSgiZGVmX2NvbnN0cnVjdG9yIiksTXQ9YS5DT05TVFIsU3Q9YS5UWVBFRCxUdD1hLlZJRVcsa3Q9Ildyb25nIGxlbmd0aCEiLEx0PUQoMSxmdW5jdGlvbih0LGUpe3JldHVybiBDdChZKHQsdFt3dF0pLGUpfSkseHQ9byhmdW5jdGlvbigpe3JldHVybiAxPT09bmV3IFYobmV3IFVpbnQxNkFycmF5KFsxXSkuYnVmZmVyKVswXX0pLEF0PSEhViYmISFWW0tdLnNldCYmbyhmdW5jdGlvbigpe25ldyBWKDEpLnNldCh7fSl9KSxFdD1mdW5jdGlvbih0LGUpe3ZhciBuPWYodCk7aWYobjwwfHxuJWUpdGhyb3cgVygiV3Jvbmcgb2Zmc2V0ISIpO3JldHVybiBufSxEdD1mdW5jdGlvbih0KXtpZih3KHQpJiZTdCBpbiB0KXJldHVybiB0O3Rocm93IEIodCsiIGlzIG5vdCBhIHR5cGVkIGFycmF5ISIpfSxDdD1mdW5jdGlvbih0LGUpe2lmKCEodyh0KSYmYnQgaW4gdCkpdGhyb3cgQigiSXQgaXMgbm90IGEgdHlwZWQgYXJyYXkgY29uc3RydWN0b3IhIik7cmV0dXJuIG5ldyB0KGUpfSxZdD1mdW5jdGlvbih0LGUpe3JldHVybiBPdChZKHQsdFt3dF0pLGUpfSxPdD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLGk9ZS5sZW5ndGgscj1DdCh0LGkpO2k+bjspcltuXT1lW24rK107cmV0dXJuIHJ9LFB0PWZ1bmN0aW9uKHQsZSxuKXt6KHQsZSx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2Rbbl19fSl9LE50PWZ1bmN0aW9uKHQpe3ZhciBlLG4saSxyLG8scyxhPU0odCksbD1hcmd1bWVudHMubGVuZ3RoLHU9bD4xP2FyZ3VtZW50c1sxXTp2b2lkIDAsZD12b2lkIDAhPT11LGg9eChhKTtpZih2b2lkIDAhPWgmJiFTKGgpKXtmb3Iocz1oLmNhbGwoYSksaT1bXSxlPTA7IShvPXMubmV4dCgpKS5kb25lO2UrKylpLnB1c2goby52YWx1ZSk7YT1pfWZvcihkJiZsPjImJih1PWModSxhcmd1bWVudHNbMl0sMikpLGU9MCxuPW0oYS5sZW5ndGgpLHI9Q3QodGhpcyxuKTtuPmU7ZSsrKXJbZV09ZD91KGFbZV0sZSk6YVtlXTtyZXR1cm4gcn0sSXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPWFyZ3VtZW50cy5sZW5ndGgsbj1DdCh0aGlzLGUpO2U+dDspblt0XT1hcmd1bWVudHNbdCsrXTtyZXR1cm4gbn0sUnQ9ISFWJiZvKGZ1bmN0aW9uKCl7Z3QuY2FsbChuZXcgVigxKSl9KSxqdD1mdW5jdGlvbigpe3JldHVybiBndC5hcHBseShSdD9tdC5jYWxsKER0KHRoaXMpKTpEdCh0aGlzKSxhcmd1bWVudHMpfSxIdD17Y29weVdpdGhpbjpmdW5jdGlvbih0LGUpe3JldHVybiBqLmNhbGwoRHQodGhpcyksdCxlLGFyZ3VtZW50cy5sZW5ndGg+Mj9hcmd1bWVudHNbMl06dm9pZCAwKX0sZXZlcnk6ZnVuY3Rpb24odCl7cmV0dXJuIG50KER0KHRoaXMpLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfSxmaWxsOmZ1bmN0aW9uKHQpe3JldHVybiBSLmFwcGx5KER0KHRoaXMpLGFyZ3VtZW50cyl9LGZpbHRlcjpmdW5jdGlvbih0KXtyZXR1cm4gWXQodGhpcyx0dChEdCh0aGlzKSx0LGFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwKSl9LGZpbmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGl0KER0KHRoaXMpLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfSxmaW5kSW5kZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHJ0KER0KHRoaXMpLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfSxmb3JFYWNoOmZ1bmN0aW9uKHQpe1ooRHQodGhpcyksdCxhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMCl9LGluZGV4T2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHN0KER0KHRoaXMpLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfSxpbmNsdWRlczpmdW5jdGlvbih0KXtyZXR1cm4gb3QoRHQodGhpcyksdCxhcmd1bWVudHMubGVuZ3RoPjE/YXJndW1lbnRzWzFdOnZvaWQgMCl9LGpvaW46ZnVuY3Rpb24odCl7cmV0dXJuIHB0LmFwcGx5KER0KHRoaXMpLGFyZ3VtZW50cyl9LGxhc3RJbmRleE9mOmZ1bmN0aW9uKHQpe3JldHVybiB1dC5hcHBseShEdCh0aGlzKSxhcmd1bWVudHMpfSxtYXA6ZnVuY3Rpb24odCl7cmV0dXJuIEx0KER0KHRoaXMpLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfSxyZWR1Y2U6ZnVuY3Rpb24odCl7cmV0dXJuIGR0LmFwcGx5KER0KHRoaXMpLGFyZ3VtZW50cyl9LHJlZHVjZVJpZ2h0OmZ1bmN0aW9uKHQpe3JldHVybiBodC5hcHBseShEdCh0aGlzKSxhcmd1bWVudHMpfSxyZXZlcnNlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0LGU9dGhpcyxuPUR0KGUpLmxlbmd0aCxpPU1hdGguZmxvb3Iobi8yKSxyPTA7cjxpOyl0PWVbcl0sZVtyKytdPWVbLS1uXSxlW25dPXQ7cmV0dXJuIGV9LHNvbWU6ZnVuY3Rpb24odCl7cmV0dXJuIGV0KER0KHRoaXMpLHQsYXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDApfSxzb3J0OmZ1bmN0aW9uKHQpe3JldHVybiBmdC5jYWxsKER0KHRoaXMpLHQpfSxzdWJhcnJheTpmdW5jdGlvbih0LGUpe3ZhciBuPUR0KHRoaXMpLGk9bi5sZW5ndGgscj1nKHQsaSk7cmV0dXJuIG5ldyhZKG4sblt3dF0pKShuLmJ1ZmZlcixuLmJ5dGVPZmZzZXQrcipuLkJZVEVTX1BFUl9FTEVNRU5ULG0oKHZvaWQgMD09PWU/aTpnKGUsaSkpLXIpKX19LEZ0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFl0KHRoaXMsbXQuY2FsbChEdCh0aGlzKSx0LGUpKX0senQ9ZnVuY3Rpb24odCl7RHQodGhpcyk7dmFyIGU9RXQoYXJndW1lbnRzWzFdLDEpLG49dGhpcy5sZW5ndGgsaT1NKHQpLHI9bShpLmxlbmd0aCksbz0wO2lmKHIrZT5uKXRocm93IFcoa3QpO2Zvcig7bzxyOyl0aGlzW2Urb109aVtvKytdfSxVdD17ZW50cmllczpmdW5jdGlvbigpe3JldHVybiBjdC5jYWxsKER0KHRoaXMpKX0sa2V5czpmdW5jdGlvbigpe3JldHVybiBsdC5jYWxsKER0KHRoaXMpKX0sdmFsdWVzOmZ1bmN0aW9uKCl7cmV0dXJuIGF0LmNhbGwoRHQodGhpcykpfX0sV3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdyh0KSYmdFtTdF0mJiJzeW1ib2wiIT10eXBlb2YgZSYmZSBpbiB0JiZTdHJpbmcoK2UpPT1TdHJpbmcoZSl9LEJ0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFd0KHQsZT12KGUsITApKT9kKDIsdFtlXSk6VSh0LGUpfSxWdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIShXdCh0LGU9dihlLCEwKSkmJncobikmJnkobiwidmFsdWUiKSl8fHkobiwiZ2V0Iil8fHkobiwic2V0Iil8fG4uY29uZmlndXJhYmxlfHx5KG4sIndyaXRhYmxlIikmJiFuLndyaXRhYmxlfHx5KG4sImVudW1lcmFibGUiKSYmIW4uZW51bWVyYWJsZT96KHQsZSxuKToodFtlXT1uLnZhbHVlLHQpfTtNdHx8KEYuZj1CdCxILmY9VnQpLHMocy5TK3MuRiohTXQsIk9iamVjdCIse2dldE93blByb3BlcnR5RGVzY3JpcHRvcjpCdCxkZWZpbmVQcm9wZXJ0eTpWdH0pLG8oZnVuY3Rpb24oKXtfdC5jYWxsKHt9KX0pJiYoX3Q9Z3Q9ZnVuY3Rpb24oKXtyZXR1cm4gcHQuY2FsbCh0aGlzKX0pO3ZhciBxdD1wKHt9LEh0KTtwKHF0LFV0KSxoKHF0LHZ0LFV0LnZhbHVlcykscChxdCx7c2xpY2U6RnQsc2V0Onp0LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7fSx0b1N0cmluZzpfdCx0b0xvY2FsZVN0cmluZzpqdH0pLFB0KHF0LCJidWZmZXIiLCJiIiksUHQocXQsImJ5dGVPZmZzZXQiLCJvIiksUHQocXQsImJ5dGVMZW5ndGgiLCJsIiksUHQocXQsImxlbmd0aCIsImUiKSx6KHF0LHl0LHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tTdF19fSksdC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGwpe2w9ISFsO3ZhciBjPXQrKGw/IkNsYW1wZWQiOiIiKSsiQXJyYXkiLGQ9ImdldCIrdCxwPSJzZXQiK3QsZj1yW2NdLGc9Znx8e30sdj1mJiZrKGYpLHk9IWZ8fCFhLkFCVixNPXt9LFM9ZiYmZltLXSx4PWZ1bmN0aW9uKHQsbil7dmFyIGk9dC5fZDtyZXR1cm4gaS52W2RdKG4qZStpLm8seHQpOwp9LEE9ZnVuY3Rpb24odCxuLGkpe3ZhciByPXQuX2Q7bCYmKGk9KGk9TWF0aC5yb3VuZChpKSk8MD8wOmk+MjU1PzI1NToyNTUmaSksci52W3BdKG4qZStyLm8saSx4dCl9LEU9ZnVuY3Rpb24odCxlKXt6KHQsZSx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHgodGhpcyxlKX0sc2V0OmZ1bmN0aW9uKHQpe3JldHVybiBBKHRoaXMsZSx0KX0sZW51bWVyYWJsZTohMH0pfTt5PyhmPW4oZnVuY3Rpb24odCxuLGkscil7dSh0LGYsYywiX2QiKTt2YXIgbyxzLGEsbCxkPTAscD0wO2lmKHcobikpe2lmKCEobiBpbnN0YW5jZW9mIFh8fChsPWIobikpPT1xfHxsPT0kKSlyZXR1cm4gU3QgaW4gbj9PdChmLG4pOk50LmNhbGwoZixuKTtvPW4scD1FdChpLGUpO3ZhciBnPW4uYnl0ZUxlbmd0aDtpZih2b2lkIDA9PT1yKXtpZihnJWUpdGhyb3cgVyhrdCk7aWYocz1nLXAsczwwKXRocm93IFcoa3QpfWVsc2UgaWYocz1tKHIpKmUscytwPmcpdGhyb3cgVyhrdCk7YT1zL2V9ZWxzZSBhPV8obikscz1hKmUsbz1uZXcgWChzKTtmb3IoaCh0LCJfZCIse2I6byxvOnAsbDpzLGU6YSx2Om5ldyBRKG8pfSk7ZDxhOylFKHQsZCsrKX0pLFM9ZltLXT1UKHF0KSxoKFMsImNvbnN0cnVjdG9yIixmKSk6byhmdW5jdGlvbigpe2YoMSl9KSYmbyhmdW5jdGlvbigpe25ldyBmKC0xKX0pJiZOKGZ1bmN0aW9uKHQpe25ldyBmLG5ldyBmKG51bGwpLG5ldyBmKDEuNSksbmV3IGYodCl9LCEwKXx8KGY9bihmdW5jdGlvbih0LG4saSxyKXt1KHQsZixjKTt2YXIgbztyZXR1cm4gdyhuKT9uIGluc3RhbmNlb2YgWHx8KG89YihuKSk9PXF8fG89PSQ/dm9pZCAwIT09cj9uZXcgZyhuLEV0KGksZSkscik6dm9pZCAwIT09aT9uZXcgZyhuLEV0KGksZSkpOm5ldyBnKG4pOlN0IGluIG4/T3QoZixuKTpOdC5jYWxsKGYsbik6bmV3IGcoXyhuKSl9KSxaKHYhPT1GdW5jdGlvbi5wcm90b3R5cGU/TChnKS5jb25jYXQoTCh2KSk6TChnKSxmdW5jdGlvbih0KXt0IGluIGZ8fGgoZix0LGdbdF0pfSksZltLXT1TLGl8fChTLmNvbnN0cnVjdG9yPWYpKTt2YXIgRD1TW3Z0XSxDPSEhRCYmKCJ2YWx1ZXMiPT1ELm5hbWV8fHZvaWQgMD09RC5uYW1lKSxZPVV0LnZhbHVlcztoKGYsYnQsITApLGgoUyxTdCxjKSxoKFMsVHQsITApLGgoUyx3dCxmKSwobD9uZXcgZigxKVt5dF09PWM6eXQgaW4gUyl8fHooUyx5dCx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGN9fSksTVtjXT1mLHMocy5HK3MuVytzLkYqKGYhPWcpLE0pLHMocy5TLGMse0JZVEVTX1BFUl9FTEVNRU5UOmV9KSxzKHMuUytzLkYqbyhmdW5jdGlvbigpe2cub2YuY2FsbChmLDEpfSksYyx7ZnJvbTpOdCxvZjpJdH0pLEcgaW4gU3x8aChTLEcsZSkscyhzLlAsYyxIdCksSShjKSxzKHMuUCtzLkYqQXQsYyx7c2V0Onp0fSkscyhzLlArcy5GKiFDLGMsVXQpLGl8fFMudG9TdHJpbmc9PV90fHwoUy50b1N0cmluZz1fdCkscyhzLlArcy5GKm8oZnVuY3Rpb24oKXtuZXcgZigxKS5zbGljZSgpfSksYyx7c2xpY2U6RnR9KSxzKHMuUCtzLkYqKG8oZnVuY3Rpb24oKXs=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("MjgwKSgiV2Vha01hcCIpfSxmdW5jdGlvbih0LGUsbil7bigyODApKCJXZWFrU2V0Iil9LGZ1bmN0aW9uKHQsZSxuKXtuKDI4NSkoIk1hcCIpfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oOCkscj1uKDIxKSxvPW4oMjApLHM9bigyMDcpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtpKGkuUyx0LHtmcm9tOmZ1bmN0aW9uKHQpe3ZhciBlLG4saSxhLGw9YXJndW1lbnRzWzFdO3JldHVybiByKHRoaXMpLGU9dm9pZCAwIT09bCxlJiZyKGwpLHZvaWQgMD09dD9uZXcgdGhpczoobj1bXSxlPyhpPTAsYT1vKGwsYXJndW1lbnRzWzJdLDIpLHModCwhMSxmdW5jdGlvbih0KXtuLnB1c2goYSh0LGkrKykpfSkpOnModCwhMSxuLnB1c2gsbiksbmV3IHRoaXMobikpfX0pfX0sZnVuY3Rpb24odCxlLG4pe24oMjg1KSgiU2V0Iil9LGZ1bmN0aW9uKHQsZSxuKXtuKDI4NSkoIldlYWtNYXAiKX0sZnVuY3Rpb24odCxlLG4pe24oMjg1KSgiV2Vha1NldCIpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuRyx7Z2xvYmFsOm4oNCl9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIlN5c3RlbSIse2dsb2JhbDpuKDQpfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9bigzNCk7aShpLlMsIkVycm9yIix7aXNFcnJvcjpmdW5jdGlvbih0KXtyZXR1cm4iRXJyb3IiPT09cih0KX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIk1hdGgiLHtjbGFtcDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIE1hdGgubWluKG4sTWF0aC5tYXgoZSx0KSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJNYXRoIix7REVHX1BFUl9SQUQ6TWF0aC5QSS8xODB9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj0xODAvTWF0aC5QSTtpKGkuUywiTWF0aCIse2RlZ3JlZXM6ZnVuY3Rpb24odCl7cmV0dXJuIHQqcn19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj1uKDI5Niksbz1uKDExMyk7aShpLlMsIk1hdGgiLHtmc2NhbGU6ZnVuY3Rpb24odCxlLG4saSxzKXtyZXR1cm4gbyhyKHQsZSxuLGkscykpfX0pfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1NYXRoLnNjYWxlfHxmdW5jdGlvbih0LGUsbixpLHIpe3JldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aHx8dCE9dHx8ZSE9ZXx8biE9bnx8aSE9aXx8ciE9cj9OYU46dD09PTEvMHx8dD09PS0oMS8wKT90Oih0LWUpKihyLWkpLyhuLWUpK2l9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse2lhZGRoOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPXQ+Pj4wLG89ZT4+PjAscz1uPj4+MDtyZXR1cm4gbysoaT4+PjApKygociZzfChyfHMpJn4ocitzPj4+MCkpPj4+MzEpfDB9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJNYXRoIix7aXN1Ymg6ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9dD4+PjAsbz0=", "base64"));
  res.write(new Buffer("ZT4+PjAscz1uPj4+MDtyZXR1cm4gby0oaT4+PjApLSgofnImc3x+KHJecykmci1zPj4+MCk+Pj4zMSl8MH19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIk1hdGgiLHtpbXVsaDpmdW5jdGlvbih0LGUpe3ZhciBuPTY1NTM1LGk9K3Qscj0rZSxvPWkmbixzPXImbixhPWk+PjE2LGw9cj4+MTYsYz0oYSpzPj4+MCkrKG8qcz4+PjE2KTtyZXR1cm4gYSpsKyhjPj4xNikrKChvKmw+Pj4wKSsoYyZuKT4+MTYpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse1JBRF9QRVJfREVHOjE4MC9NYXRoLlBJfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9TWF0aC5QSS8xODA7aShpLlMsIk1hdGgiLHtyYWRpYW5zOmZ1bmN0aW9uKHQpe3JldHVybiB0KnJ9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJNYXRoIix7c2NhbGU6bigyOTYpfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJNYXRoIix7dW11bGg6ZnVuY3Rpb24odCxlKXt2YXIgbj02NTUzNSxpPSt0LHI9K2Usbz1pJm4scz1yJm4sYT1pPj4+MTYsbD1yPj4+MTYsYz0oYSpzPj4+MCkrKG8qcz4+PjE2KTtyZXR1cm4gYSpsKyhjPj4+MTYpKygobypsPj4+MCkrKGMmbik+Pj4xNil9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJNYXRoIix7c2lnbmJpdDpmdW5jdGlvbih0KXtyZXR1cm4odD0rdCkhPXQ/dDowPT10PzEvdD09MS8wOnQ+MH19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9big5KSxvPW4oNCkscz1uKDIwOCksYT1uKDIxMyk7aShpLlAraS5SLCJQcm9taXNlIix7ImZpbmFsbHkiOmZ1bmN0aW9uKHQpe3ZhciBlPXModGhpcyxyLlByb21pc2V8fG8uUHJvbWlzZSksbj0iZnVuY3Rpb24iPT10eXBlb2YgdDtyZXR1cm4gdGhpcy50aGVuKG4/ZnVuY3Rpb24obil7cmV0dXJuIGEoZSx0KCkpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbn0pfTp0LG4/ZnVuY3Rpb24obil7cmV0dXJuIGEoZSx0KCkpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBufSl9OnQpfX0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oOCkscj1uKDIxMSksbz1uKDIxMik7aShpLlMsIlByb21pc2UiLHsidHJ5IjpmdW5jdGlvbih0KXt2YXIgZT1yLmYodGhpcyksbj1vKHQpO3JldHVybihuLmU/ZS5yZWplY3Q6ZS5yZXNvbHZlKShuLnYpLGUucHJvbWlzZX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzA4KSxyPW4oMTIpLG89aS5rZXkscz1pLnNldDtpLmV4cCh7ZGVmaW5lTWV0YWRhdGE6ZnVuY3Rpb24odCxlLG4saSl7cyh0LGUscihuKSxvKGkpKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjE1KSxyPW4oOCksbz1uKDIzKSgibWV0YWRhdGEiKSxzPW8uc3RvcmV8fChvLnN0b3JlPW5ldyhuKDIyMCkpKSxhPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1zLmdldCh0KTtpZighcil7aWYoIW4pcmV0dXJuO3Muc2V0KHQscj1uZXcgaSl9dmFyIG89ci5nZXQoZSk7aWYoIW8pe2lmKCFuKXJldHVybjtyLnNldChlLG89bmV3IGkpfXJldHVybiBvfSxsPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1hKGUsbiwhMSk7cmV0dXJuIHZvaWQgMCE9PWkmJmkuaGFzKHQpfSxjPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1hKGUsbiwhMSk7cmV0dXJuIHZvaWQgMD09PWk/dm9pZCAwOmkuZ2V0KHQpfSx1PWZ1bmN0aW9uKHQsZSxuLGkpe2EobixpLCEwKS5zZXQodCxlKX0sZD1mdW5jdGlvbih0LGUpe3ZhciBuPWEodCxlLCExKSxpPVtdO3JldHVybiBuJiZuLmZvckVhY2goZnVuY3Rpb24odCxlKXtpLnB1c2goZSl9KSxpfSxoPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10fHwic3ltYm9sIj09dHlwZW9mIHQ/dDpTdHJpbmcodCl9LHA9ZnVuY3Rpb24odCl7cihyLlMsIlJlZmxlY3QiLHQpfTt0LmV4cG9ydHM9e3N0b3JlOnMsbWFwOmEsaGFzOmwsZ2V0OmMsc2V0OnUsa2V5czpkLGtleTpoLGV4cDpwfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzA4KSxyPW4oMTIpLG89aS5rZXkscz1pLm1hcCxhPWkuc3RvcmU7aS5leHAoe2RlbGV0ZU1ldGFkYXRhOmZ1bmN0aW9uKHQsZSl7dmFyIG49YXJndW1lbnRzLmxlbmd0aDwzP3ZvaWQgMDpvKGFyZ3VtZW50c1syXSksaT1zKHIoZSksbiwhMSk7aWYodm9pZCAwPT09aXx8IWlbImRlbGV0ZSJdKHQpKXJldHVybiExO2lmKGkuc2l6ZSlyZXR1cm4hMDt2YXIgbD1hLmdldChlKTtyZXR1cm4gbFsiZGVsZXRlIl0obiksISFsLnNpemV8fGFbImRlbGV0ZSJdKGUpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMDgpLHI9bigxMiksbz1uKDU4KSxzPWkuaGFzLGE9aS5nZXQsbD1pLmtleSxjPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1zKHQsZSxuKTtpZihpKXJldHVybiBhKHQsZSxuKTt2YXIgcj1vKGUpO3JldHVybiBudWxsIT09cj9jKHQscixuKTp2b2lkIDB9O2kuZXhwKHtnZXRNZXRhZGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBjKHQscihlKSxhcmd1bWVudHMubGVuZ3RoPDM/dm9pZCAwOmwoYXJndW1lbnRzWzJdKSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxOSkscj1uKDI3Nyksbz1uKDMwOCkscz1uKDEyKSxhPW4oNTgpLGw9by5rZXlzLGM9by5rZXksdT1mdW5jdGlvbih0LGUpe3ZhciBuPWwodCxlKSxvPWEodCk7aWYobnVsbD09PW8pcmV0dXJuIG47dmFyIHM9dShvLGUpO3JldHVybiBzLmxlbmd0aD9uLmxlbmd0aD9yKG5ldyBpKG4uY29uY2F0KHMpKSk6czpufTtvLmV4cCh7Z2V0TWV0YWRhdGFLZXlzOmZ1bmN0aW9uKHQpe3JldHVybiB1KHModCksYXJndW1lbnRzLmxlbmd0aDwyP3ZvaWQgMDpjKGFyZ3VtZW50c1sxXSkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMDgpLHI9bigxMiksbz1pLmdldCxzPWkua2V5O2kuZXhwKHtnZXRPd25NZQ==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("bmN0aW9uIGEoKXtuLS0sMD09PW4mJmUucmVqZWN0KG5ldyBFcnJvcigiQ2FuJ3QgZ2V0IGZ1bGZpbGxtZW50IHZhbHVlIGZyb20gYW55IHByb21pc2UsIGFsbCBwcm9taXNlcyB3ZXJlIHJlamVjdGVkLiIpKX1mdW5jdGlvbiBsKHQpe2Uubm90aWZ5KHtpbmRleDpvLHZhbHVlOnR9KX12YXIgYz10W29dO24rKyxtKGMscyxhLGwpfSx2b2lkIDApLGUucHJvbWlzZX1mdW5jdGlvbiBSKHQpe3JldHVybiBtKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQ9USh0LHUpLG0oTihRKHQsZnVuY3Rpb24odCl7cmV0dXJuIG0odCxxLHEpfSkpLGZ1bmN0aW9uKCl7cmV0dXJuIHR9KX0pfWZ1bmN0aW9uIGoodCl7cmV0dXJuIHUodCkuYWxsU2V0dGxlZCgpfWZ1bmN0aW9uIEgodCxlKXtyZXR1cm4gdSh0KS50aGVuKHZvaWQgMCx2b2lkIDAsZSl9ZnVuY3Rpb24gRih0LGUpe3JldHVybiB1KHQpLm5vZGVpZnkoZSl9dmFyIHo9ITE7dHJ5e3Rocm93IG5ldyBFcnJvcn1jYXRjaChVKXt6PSEhVS5zdGFja312YXIgVyxCLFY9bCgpLHE9ZnVuY3Rpb24oKXt9LCQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7Zm9yKHZhciB0LGk7bi5uZXh0OyluPW4ubmV4dCx0PW4udGFzayxuLnRhc2s9dm9pZCAwLGk9bi5kb21haW4saSYmKG4uZG9tYWluPXZvaWQgMCxpLmVudGVyKCkpLGUodCxpKTtmb3IoO2EubGVuZ3RoOyl0PWEucG9wKCksZSh0KTtyPSExfWZ1bmN0aW9uIGUoZSxuKXt0cnl7ZSgpfWNhdGNoKGkpe2lmKHMpdGhyb3cgbiYmbi5leGl0KCksc2V0VGltZW91dCh0LDApLG4mJm4uZW50ZXIoKSxpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBpfSwwKX1uJiZuLmV4aXQoKX12YXIgbj17dGFzazp2b2lkIDAsbmV4dDpudWxsfSxpPW4scj0hMSxvPXZvaWQgMCxzPSExLGE9W107aWYoJD1mdW5jdGlvbih0KXtpPWkubmV4dD17dGFzazp0LGRvbWFpbjpzJiZwcm9jZXNzLmRvbWFpbixuZXh0Om51bGx9LHJ8fChyPSEwLG8oKSl9LCJvYmplY3QiPT10eXBlb2YgcHJvY2VzcyYmIltvYmplY3QgcHJvY2Vzc10iPT09cHJvY2Vzcy50b1N0cmluZygpJiZwcm9jZXNzLm5leHRUaWNrKXM9ITAsbz1mdW5jdGlvbigpe3Byb2Nlc3MubmV4dFRpY2sodCl9O2Vsc2UgaWYoImZ1bmN0aW9uIj09dHlwZW9mIHNldEltbWVkaWF0ZSlvPSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93P3NldEltbWVkaWF0ZS5iaW5kKHdpbmRvdyx0KTpmdW5jdGlvbigpe3NldEltbWVkaWF0ZSh0KX07ZWxzZSBpZigidW5kZWZpbmVkIiE9dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgbD1uZXcgTWVzc2FnZUNoYW5uZWw7bC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtvPWMsbC5wb3J0MS5vbm1lc3NhZ2U9dCx0KCl9O3ZhciBjPWZ1bmN0aW9uKCl7bC5wb3J0Mi5wb3N0TWVzc2FnZSgwKX07bz1mdW5jdGlvbigpe3NldFRpbWVvdXQodCwwKSxjKCl9fWVsc2Ugbz1mdW5jdGlvbigpe3NldFRpbWVvdXQodCw=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YXNlIlBPUFVQIjp2YXIgeTtpZigib2t0YV9wb3N0X21lc3NhZ2UiPT09by5yZXNwb25zZU1vZGUpe2lmKCF0LmZlYXR1cmVzLmlzUG9wdXBQb3N0TWVzc2FnZVN1cHBvcnRlZCgpKXJldHVybiBTLnJlamVjdChuZXcgaygiVGhpcyBicm93c2VyIGRvZXNuJ3QgaGF2ZSBmdWxsIHBvc3RNZXNzYWdlIHN1cHBvcnQiKSk7eT1hKHQsbi50aW1lb3V0LG8uc3RhdGUpfXZhciBiPXtwb3B1cFRpdGxlOm4ucG9wdXBUaXRsZX0sVD1NLmxvYWRQb3B1cChwLGIpO2lmKCJmcmFnbWVudCI9PT1vLnJlc3BvbnNlTW9kZSl7dmFyIEw9aSh0LmlkVG9rZW4uYXV0aG9yaXplLl9nZXRMb2NhdGlvbkhyZWYoKSkseD1pKG8ucmVkaXJlY3RVcmkpO2lmKEwhPT14KXJldHVybiBTLnJlamVjdChuZXcgaygiVXNpbmcgZnJhZ21lbnQsIHRoZSByZWRpcmVjdFVyaSBvcmlnaW4gKCIreCsiKSBtdXN0IG1hdGNoIHRoZSBvcmlnaW4gb2YgdGhpcyBwYWdlICgiK0wrIikiKSk7eT1sKHQsVCxuLnRpbWVvdXQpfXZhciBBPVMuZGVmZXIoKSxFPXNldEludGVydmFsKGZ1bmN0aW9uKCl7cihUKX0sNTAwKTtyZXR1cm4geS50aGVuKGZ1bmN0aW9uKHQpe0EucmVzb2x2ZSh0KX0pLmZhaWwoZnVuY3Rpb24odCl7QS5yZWplY3QodCl9KSxBLnByb21pc2UudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gYyh0LG8sZSxmKX0pLmZpbihmdW5jdGlvbigpe1QuY2xvc2VkfHwoY2xlYXJJbnRlcnZhbChFKSxULmNsb3NlKCkpfSk7ZGVmYXVsdDpyZXR1cm4gUy5yZWplY3QobmV3IGsoIlRoZSBmdWxsIHBhZ2UgcmVkaXJlY3QgZmxvdyBpcyBub3Qgc3VwcG9ydGVkIikpfX1mdW5jdGlvbiBmKHQsZSxuKXt2YXIgaT13LmNsb25lKGUpfHx7fTtyZXR1cm4gdy5leHRlbmQoaSx7cHJvbXB0OiJub25lIixyZXNwb25zZU1vZGU6Im9rdGFfcG9zdF9tZXNzYWdlIixkaXNwbGF5Om51bGx9KSxwKHQsaSxuKX1mdW5jdGlvbiBtKHQsZSxuKXt2YXIgaT13LmNsb25lKGUpfHx7fTtyZXR1cm4gdy5leHRlbmQoaSx7ZGlzcGxheToicG9wdXAifSkscCh0LGksbil9ZnVuY3Rpb24gXyh0LGUsbil7ZT13LmNsb25lKGUpfHx7fTt2YXIgaT11KHQsZSk7aWYoIWUucmVzcG9uc2VNb2RlKXt2YXIgcj1pLnJlc3BvbnNlVHlwZTtyLmluZGV4T2YoImNvZGUiKSE9PS0xJiYody5pc1N0cmluZyhyKXx8QXJyYXkuaXNBcnJheShyKSYmMT09PXIubGVuZ3RoKT93LmV4dGVuZChpLHtyZXNwb25zZU1vZGU6InF1ZXJ5In0pOncuZXh0ZW5kKGkse3Jlc3BvbnNlTW9kZToiZnJhZ21lbnQifSl9dmFyIG89TS5nZXRPQXV0aFVybHModCxpLG4pLHM9by5hdXRob3JpemVVcmwraChpKTtBLnNldENvb2tpZSh4LlJFRElSRUNUX09BVVRIX1BBUkFNU19DT09LSUVfTkFNRSxKU09OLnN0cmluZ2lmeSh7cmVzcG9uc2VUeXBlOmkucmVzcG9uc2VUeXBlLHN0YXRlOmkuc3RhdGUsbm9uY2U6aS5ub25jZSxzY29wZXM6aS5zY29wZXMsdXJsczpvfSkpLEEuc2V0Q29va2llKHguUkVESVJFQ1RfTk9OQ0VfQ09PS0lFX05BTUUsaS5ub25jZSksQS5zZXRDb29raWUoeC5SRURJUkVDVF9TVEFURV9DT09LSUVfTkFNRSxpLnN0YXRlKSx0LnRva2VuLmdldFdpdGhSZWRpcmVjdC5fc2V0TG9jYXRpb24ocyl9ZnVuY3Rpb24gZyh0LGUpe2lmKCFNLmlzVG9rZW4oZSkpcmV0dXJuIFMucmVqZWN0KG5ldyBrKCJSZWZyZXNoIG11c3QgYmUgcGFzc2VkIGEgdG9rZW4gd2l0aCBhbiBhcnJheSBvZiBzY29wZXMgYW5kIGFuIGFjY2Vzc1Rva2VuIG9yIGlkVG9rZW4iKSk7dmFyIG47cmV0dXJuIG49ZS5hY2Nlc3NUb2tlbj8idG9rZW4iOiJpZF90b2tlbiIsdC50b2tlbi5nZXRXaXRob3V0UHJvbXB0KHtyZXNwb25zZVR5cGU6bixzY29wZXM6ZS5zY29wZXN9LHthdXRob3JpemVVcmw6ZS5hdXRob3JpemVVcmwsdXNlcmluZm9Vcmw6ZS51c2VyaW5mb1VybCxpc3N1ZXI6ZS5pc3N1ZXJ9KX1mdW5jdGlvbiB2KHQsZSl7dmFyIG49dC50b2tlbi5wYXJzZUZyb21VcmwuX2dldExvY2F0aW9uSGFzaCgpO2UmJihuPWUuc3Vic3RyaW5nKGUuaW5kZXhPZigiIyIpKSk7dmFyIGk9QS5nZXRDb29raWUoeC5SRURJUkVDVF9PQVVUSF9QQVJBTVNfQ09PS0lFX05BTUUpO2lmKCFufHwhaSlyZXR1cm4gUy5yZWplY3QobmV3IGsoIlVuYWJsZSB0byBwYXJzZSBhIHRva2VuIGZyb20gdGhlIHVybCIpKTt0cnl7dmFyIHI9SlNPTi5wYXJzZShpKSxvPXIudXJscztkZWxldGUgci51cmxzLEEuZGVsZXRlQ29va2llKHguUkVESVJFQ1RfT0FVVEhfUEFSQU1TX0NPT0tJRV9OQU1FKX1jYXRjaChzKXtyZXR1cm4gUy5yZWplY3QobmV3IGsoIlVuYWJsZSB0byBwYXJzZSB0aGUgIit4LlJFRElSRUNUX09BVVRIX1BBUkFNU19DT09LSUVfTkFNRSsiIGNvb2tpZTogIitzLm1lc3NhZ2UpKX1yZXR1cm4gUy5yZXNvbHZlKE0uaGFzaFRvT2JqZWN0KG4pKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBjKHQscixlLG8pfSl9ZnVuY3Rpb24geSh0LGUpe3JldHVybiBlJiYoTS5pc1Rva2VuKGUpfHxlLmFjY2Vzc1Rva2VufHxlLnVzZXJpbmZvVXJsKT9iLmh0dHBSZXF1ZXN0KHQse3VybDplLnVzZXJpbmZvVXJsLG1ldGhvZDoiR0VUIixhY2Nlc3NUb2tlbjplLmFjY2Vzc1Rva2VufSkuZmFpbChmdW5jdGlvbih0KXtpZih0LnhociYmKDQwMT09PXQueGhyLnN0YXR1c3x8NDAzPT09dC54aHIuc3RhdHVzKSl7dmFyIGU9dC54aHIuZ2V0UmVzcG9uc2VIZWFkZXIoIldXVy1BdXRoZW50aWNhdGUiKTtpZihlKXt2YXIgbj1lLm1hdGNoKC9lcnJvcj0iKC4qPykiLyl8fFtdLGk9ZS5tYXRjaCgvZXJyb3JfZGVzY3JpcHRpb249IiguKj8pIi8pfHxbXSxyPW5bMV0sbz1pWzFdO3ImJm8mJih0PW5ldyBMKHIsbykpfX10aHJvdyB0fSk6Uy5yZWplY3QobmV3IGsoImdldFVzZXJJbmZvIHJlcXVpcmVzIGFuIGFjY2VzcyB0b2tlbiBvYmplY3QiKSl9dmFyIGI9bigzNDApLA==", "base64"));
  res.write(new Buffer("dz1uKDMzOCksTT1uKDM1MSksUz1uKDM0NiksVD1uKDM1Miksaz1uKDM0NCksTD1uKDM1MykseD1uKDM0NSksQT1uKDM0MSk7dC5leHBvcnRzPXtnZXRUb2tlbjpwLGdldFdpdGhvdXRQcm9tcHQ6ZixnZXRXaXRoUG9wdXA6bSxnZXRXaXRoUmVkaXJlY3Q6XyxwYXJzZUZyb21Vcmw6dixyZWZyZXNoSWRUb2tlbjpzLGRlY29kZVRva2VuOmksdmVyaWZ5SWRUb2tlbjpyLHJlZnJlc2hUb2tlbjpnLGdldFVzZXJJbmZvOnksdmVyaWZ5VG9rZW46b319LGZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKHQpe3JldHVybiEoIXR8fCF0LmFjY2Vzc1Rva2VuJiYhdC5pZFRva2VufHwhQXJyYXkuaXNBcnJheSh0LnNjb3BlcykpfWZ1bmN0aW9uIHIodCxlLG4pe3QuYWRkRXZlbnRMaXN0ZW5lcj90LmFkZEV2ZW50TGlzdGVuZXIoZSxuKTp0LmF0dGFjaEV2ZW50KCJvbiIrZSxuKX1mdW5jdGlvbiBvKHQsZSxuKXt0LnJlbW92ZUV2ZW50TGlzdGVuZXI/dC5yZW1vdmVFdmVudExpc3RlbmVyKGUsbik6dC5kZXRhY2hFdmVudCgib24iK2Usbil9ZnVuY3Rpb24gcyh0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTtyZXR1cm4gZS5zdHlsZS5kaXNwbGF5PSJub25lIixlLnNyYz10LGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZSl9ZnVuY3Rpb24gYSh0LGUpe3ZhciBuPWUucG9wdXBUaXRsZXx8IkV4dGVybmFsIElkZW50aXR5IFByb3ZpZGVyIFVzZXIgQXV0aGVudGljYXRpb24iLGk9InRvb2xiYXI9bm8sIHNjcm9sbGJhcnM9eWVzLCByZXNpemFibGU9eWVzLCB0b3A9MTAwLCBsZWZ0PTUwMCwgd2lkdGg9NjAwLCBoZWlnaHQ9NjAwIjtyZXR1cm4gd2luZG93Lm9wZW4odCxuLGkpfWZ1bmN0aW9uIGwodCxlKXtyZXR1cm4gcC5nZXQodCwoZXx8dC5vcHRpb25zLnVybCkrIi8ud2VsbC1rbm93bi9vcGVuaWQtY29uZmlndXJhdGlvbiIse2NhY2hlUmVzcG9uc2U6ITB9KX1mdW5jdGlvbiBjKHQsZSxuKXtyZXR1cm4gbCh0LGUpLnRoZW4oZnVuY3Rpb24oZSl7dmFyIGk9ZS5qd2tzX3VyaSxyPWcuZ2V0U3RvcmFnZSgpLG89cltpXTtpZihvJiZEYXRlLm5vdygpLzFlMzxvLmV4cGlyZXNBdCl7dmFyIHM9Zi5maW5kKG8ucmVzcG9uc2Uua2V5cyx7a2lkOm59KTtpZihzKXJldHVybiBzfXJldHVybiBnLmNsZWFyU3RvcmFnZShpKSxwLmdldCh0LGkse2NhY2hlUmVzcG9uc2U6ITB9KS50aGVuKGZ1bmN0aW9uKHQpe3ZhciBlPWYuZmluZCh0LmtleXMse2tpZDpufSk7aWYoZSlyZXR1cm4gZTt0aHJvdyBuZXcgXygiVGhlIGtleSBpZCwgIituKyIsIHdhcyBub3QgZm91bmQgaW4gdGhlIHNlcnZlcidzIGtleXMiKX0pfSl9ZnVuY3Rpb24gdSh0LGUsbixpLHIpe2lmKCFlfHwhaXx8IW4pdGhyb3cgbmV3IF8oIlRoZSBqd3QsIGlzcywgYW5kIGF1ZCBhcmd1bWVudHMgYXJlIGFsbCByZXF1aXJlZCIpO2lmKHImJmUubm9uY2UhPT1yKXRocm93IG5ldyBfKCJPQXU=", "base64"));
  res.write(new Buffer("dGggZmxvdyByZXNwb25zZSBub25jZSBkb2Vzbid0IG1hdGNoIHJlcXVlc3Qgbm9uY2UiKTt2YXIgbz1NYXRoLmZsb29yKChuZXcgRGF0ZSkuZ2V0VGltZSgpLzFlMyk7aWYoZS5pc3MhPT1pKXRocm93IG5ldyBfKCJUaGUgaXNzdWVyIFsiK2UuaXNzKyJdIGRvZXMgbm90IG1hdGNoIFsiK2krIl0iKTtpZihlLmF1ZCE9PW4pdGhyb3cgbmV3IF8oIlRoZSBhdWRpZW5jZSBbIitlLmF1ZCsiXSBkb2VzIG5vdCBtYXRjaCBbIituKyJdIik7aWYoZS5pYXQ+ZS5leHApdGhyb3cgbmV3IF8oIlRoZSBKV1QgZXhwaXJlZCBiZWZvcmUgaXQgd2FzIGlzc3VlZCIpO2lmKG8tdC5vcHRpb25zLm1heENsb2NrU2tldz5lLmV4cCl0aHJvdyBuZXcgXygiVGhlIEpXVCBleHBpcmVkIGFuZCBpcyBubyBsb25nZXIgdmFsaWQiKTtpZihlLmlhdD5vK3Qub3B0aW9ucy5tYXhDbG9ja1NrZXcpdGhyb3cgbmV3IF8oIlRoZSBKV1Qgd2FzIGlzc3VlZCBpbiB0aGUgZnV0dXJlIil9ZnVuY3Rpb24gZCh0LGUsbil7bj1ufHx7fTt2YXIgaT1mLnJlbW92ZVRyYWlsaW5nU2xhc2gobi5hdXRob3JpemVVcmwpfHx0Lm9wdGlvbnMuYXV0aG9yaXplVXJsLHI9Zi5yZW1vdmVUcmFpbGluZ1NsYXNoKG4uaXNzdWVyKXx8dC5vcHRpb25zLmlzc3VlcixvPWYucmVtb3ZlVHJhaWxpbmdTbGFzaChuLnVzZXJpbmZvVXJsKXx8dC5vcHRpb25zLnVzZXJpbmZvVXJsO2lmKHImJiEvXmh0dHBzPzovLnRlc3QocikmJihyPXQub3B0aW9ucy51cmwrIi9vYXV0aDIvIityKSwhciYmaSYmZS5yZXNwb25zZVR5cGUuaW5kZXhPZigiaWRfdG9rZW4iKSE9PS0xKXRocm93IG5ldyBfKCJDYW5ub3QgcmVxdWVzdCBpZFRva2VuIHdpdGggYW4gYXV0aG9yaXplVXJsIHdpdGhvdXQgYW4gaXNzdWVyIik7aWYoIXImJmUucmVzcG9uc2VUeXBlLmluZGV4T2YoInRva2VuIikhPT0tMSl7aWYoaSYmIW8pdGhyb3cgbmV3IF8oIkNhbm5vdCByZXF1ZXN0IGFjY2Vzc1Rva2VuIHdpdGggYW4gYXV0aG9yaXplVXJsIHdpdGhvdXQgYW4gaXNzdWVyIG9yIHVzZXJpbmZvVXJsIik7aWYobyYmIWkpdGhyb3cgbmV3IF8oIkNhbm5vdCByZXF1ZXN0IHRva2VuIHdpdGggYW4gdXNlcmluZm9Vcmwgd2l0aG91dCBhbiBpc3N1ZXIgb3IgYXV0aG9yaXplVXJsIil9dmFyIHM9bmV3IFJlZ0V4cCgiXmh0dHBzPzovLy4qPy9vYXV0aDIvLisiKTtyZXR1cm4gcj1yfHx0Lm9wdGlvbnMudXJsLHMudGVzdChyKT8oaT1pfHxyKyIvdjEvYXV0aG9yaXplIixvPW98fHIrIi92MS91c2VyaW5mbyIpOihpPWl8fHIrIi9vYXV0aDIvdjEvYXV0aG9yaXplIixvPW98fHIrIi9vYXV0aDIvdjEvdXNlcmluZm8iKSx7aXNzdWVyOnIsYXV0aG9yaXplVXJsOmksdXNlcmluZm9Vcmw6b319ZnVuY3Rpb24gaCh0KXtmb3IodmFyIGUsbj0vXCsvZyxpPS8oW14mPV0rKT0/KFteJl0qKS9nLHI9dC5zdWJzdHJpbmcoMSksbz17fTtlPWkuZXhlYyhyKSxlOyl7dmFyIHM9ZVsxXSxhPWVbMl07ImlkX3Rva2VuIj09PXN8fCJhY2Nlc3NfdG9rZW4iPT09c3x8ImNvZGUiPT09cz9vW3NdPWE6b1tzXT1kZWNvZGVVUklDb21wb25lbnQoYS5yZXBsYWNlKG4sIiAiKSl9cmV0dXJuIG99dmFyIHA9bigzNDApLGY9bigzMzgpLG09bigzNDIpLF89bigzNDQpLGc9bS5nZXRIdHRwQ2FjaGUoKTt0LmV4cG9ydHM9e2dldFdlbGxLbm93bjpsLGdldEtleTpjLHZhbGlkYXRlQ2xhaW1zOnUsZ2V0T0F1dGhVcmxzOmQsbG9hZEZyYW1lOnMsbG9hZFBvcHVwOmEsaGFzaFRvT2JqZWN0OmgsaXNUb2tlbjppLGFkZExpc3RlbmVyOnIscmVtb3ZlTGlzdGVuZXI6b319LGZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKHQsZSl7ZT1yLmNsb25lKGUpO3ZhciBuPSJqd2siLGk9e25hbWU6IlJTQVNTQS1QS0NTMS12MV81IixoYXNoOntuYW1lOiJTSEEtMjU2In19LG89ITAscz1bInZlcmlmeSJdO3JldHVybiBkZWxldGUgZS51c2UsY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkobixlLGksbyxzKS50aGVuKGZ1bmN0aW9uKGUpe3ZhciBuPXQuc3BsaXQoIi4iKSxvPXIuc3RyaW5nVG9CdWZmZXIoblswXSsiLiIrblsxXSkscz1yLmJhc2U2NFVybERlY29kZShuWzJdKSxhPXIuc3RyaW5nVG9CdWZmZXIocyk7cmV0dXJuIGNyeXB0by5zdWJ0bGUudmVyaWZ5KGksZSxhLG8pfSl9dmFyIHI9bigzMzgpO3QuZXhwb3J0cz17dmVyaWZ5VG9rZW46aX19LGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbih0LGUpe3RoaXMubmFtZT0iT0F1dGhFcnJvciIsdGhpcy5tZXNzYWdlPWUsdGhpcy5lcnJvckNvZGU9dCx0aGlzLmVycm9yU3VtbWFyeT1lfW4ucHJvdG90eXBlPW5ldyBFcnJvcix0LmV4cG9ydHM9bn0sZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkodCxlLG4pe3QuZW1pdHRlci5lbWl0KCJleHBpcmVkIixlLG4pfWZ1bmN0aW9uIHIodCxlKXtjbGVhclRpbWVvdXQodC5yZWZyZXNoVGltZW91dHNbZV0pLGRlbGV0ZSB0LnJlZnJlc2hUaW1lb3V0c1tlXX1mdW5jdGlvbiBvKHQpe3ZhciBlPXQucmVmcmVzaFRpbWVvdXRzO2Zvcih2YXIgbiBpbiBlKWUuaGFzT3duUHJvcGVydHkobikmJnIodCxuKTt0LnJlZnJlc2hUaW1lb3V0cz17fX1mdW5jdGlvbiBzKHQsZSxuLG8scyl7dmFyIGE9MWUzKnMuZXhwaXJlc0F0LURhdGUubm93KCk7YTwwJiYoYT0wKTt2YXIgbD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXV0b1JlZnJlc2g/ZCh0LGUsbixvKTp2b2lkKDFlMypzLmV4cGlyZXNBdDw9RGF0ZS5ub3coKSYmKHUoZSxuLG8pLGkoZSxvLHMpKSl9LGEpO3IoZSxvKSxlLnJlZnJlc2hUaW1lb3V0c1tvXT1sfWZ1bmN0aW9uIGEodCxlLG4pe3RyeXt2YXIgaT1uLmdldFN0b3JhZ2UoKX1jYXRjaChyKXtyZXR1cm4gdm9pZCBlLmVtaXR0ZXIuZW1pdCgiZXJyb3IiLHIpfWZvcih2YXIgbyBpbiBpKWlmKGkuaGFzT3duUHJvcGVydHkobykpe3ZhciBhPWlbb107cyh0LGUsbixvLGEpfX1mdW5jdGlvbiBsKHQsZSxuLGkscil7dmFyIG89bi5nZXRTdG9yYWdlKCk7aWYoIWYuaXNPYmplY3Qocil8fCFyLnNjb3Blc3x8IXIuZXhwaXJlc0F0JiYwIT09ci5leHBpcmVzQXR8fCFyLmlkVG9rZW4mJiFyLmFjY2Vzc1Rva2VuKXRocm93IG5ldyBtKCJUb2tlbiBtdXN0IGJlIGFuIE9iamVjdCB3aXRoIHNjb3BlcywgZXhwaXJlc0F0LCBhbmQgYW4gaWRUb2tlbiBvciBhY2Nlc3NUb2tlbiBwcm9wZXJ0aWVzIik7b1tpXT1yLG4uc2V0U3RvcmFnZShvKSxzKHQsZSxuLGkscil9ZnVuY3Rpb24gYyh0LGUpe3ZhciBuPXQuZ2V0U3RvcmFnZSgpO3JldHVybiBuW2VdfWZ1bmN0aW9uIHUodCxlLG4pe3IodCxuKTt2YXIgaT1lLmdldFN0b3JhZ2UoKTtkZWxldGUgaVtuXSxlLnNldFN0b3JhZ2UoaSl9ZnVuY3Rpb24gZCh0LGUsbixvKXt0cnl7dmFyIHM9YyhuLG8pO2lmKCFzKXRocm93IG5ldyBtKCJUaGUgdG9rZW5NYW5hZ2VyIGhhcyBubyB0b2tlbiBmb3IgdGhlIGtleTogIitvKX1jYXRjaChhKXtyZXR1cm4gZy5yZWplY3QoYSl9cmV0dXJuIHIoZSxvKSx0LnRva2VuLnJlZnJlc2gocykudGhlbihmdW5jdGlvbihpKXtyZXR1cm4gbCh0LGUsbixvLGkpLGUuZW1pdHRlci5lbWl0KCJyZWZyZXNoZWQiLG8saSxzKSxpfSkuZmFpbChmdW5jdGlvbih0KXt0aHJvdyJPQXV0aEVycm9yIj09PXQubmFtZSYmKHUoZSxuLG8pLGkoZSxvLHMpKSx0fSl9ZnVuY3Rpb24gaCh0LGUpe28odCksZS5jbGVhclN0b3JhZ2UoKX1mdW5jdGlvbiBwKHQsZSl7ZT1lfHx7fSxlLnN0b3JhZ2U9ZS5zdG9yYWdlfHwibG9jYWxTdG9yYWdlIixlLmF1dG9SZWZyZXNofHxlLmF1dG9SZWZyZXNoPT09ITF8fChlLmF1dG9SZWZyZXNoPSEwKSwibG9jYWxTdG9yYWdlIiE9PWUuc3RvcmFnZXx8Xy5icm93c2VySGFzTG9jYWxTdG9yYWdlKCl8fChmLndhcm4oIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgbG9jYWxTdG9yYWdlLiBTd2l0Y2hpbmcgdG8gc2Vzc2lvblN0b3JhZ2UuIiksZS5zdG9yYWdlPSJzZXNzaW9uU3RvcmFnZSIpLCJzZXNzaW9uU3RvcmFnZSIhPT1lLnN0b3JhZ2V8fF8uYnJvd3Nlckhhc1Nlc3Npb25TdG9yYWdlKCl8fChmLndhcm4oIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgc2Vzc2lvblN0b3JhZ2UuIFN3aXRjaGluZyB0byBjb29raWUtYmFzZWQgc3RvcmFnZS4iKSxlLnN0b3JhZ2U9ImNvb2tpZSIpO3ZhciBuO3N3aXRjaChlLnN0b3JhZ2Upe2Nhc2UibG9jYWxTdG9yYWdlIjpuPWIobG9jYWxTdG9yYWdlLHkuVE9LRU5fU1RPUkFHRV9OQU1FKTticmVhaztjYXNlInNlc3Npb25TdG9yYWdlIjpuPWIoc2Vzc2lvblN0b3JhZ2UseS5UT0tFTl9TVE9SQUdFX05BTUUpO2JyZWFrO2Nhc2UiY29va2llIjpuPWIoXy5nZXRDb29raWVTdG9yYWdlKCkseS5UT0tFTl9TVE9SQUdFX05BTUUpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IG0oIlVu", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("TWV6aGV2ZW5fR291ZXJlX0Vvc3RfR3dlbmdvbG9fSGVyZV9EdV9LZXJ6dSIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiR2VuX0MnaHdlX01ldV9FYnJfTWFlX0V2ZV9Hb3VfRW9zX0d3ZV9IZXJfRHVfS2VyIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJTdWxfTHVuX01ldXJ6aF9NZXJjJ2hlcl9ZYW91X0d3ZW5lcl9TYWRvcm4iLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoiU3VsX0x1bl9NZXVfTWVyX1lhb19Hd2VfU2FkIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJTdV9MdV9NZV9NZXJfWWFfR3dfU2EiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJoW2VdbW0gQSIsTFRTOiJoW2VdbW06c3MgQSIsTDoiREQvTU0vWVlZWSIsTEw6IkQgW2Egdml6XSBNTU1NIFlZWVkiLExMTDoiRCBbYSB2aXpdIE1NTU0gWVlZWSBoW2VdbW0gQSIsTExMTDoiZGRkZCwgRCBbYSB2aXpdIE1NTU0gWVlZWSBoW2VdbW0gQSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbSGl6aXYgZGFdIExUIixuZXh0RGF5OiJbV2FyYydob2F6aCBkYV0gTFQiLG5leHRXZWVrOiJkZGRkIFtkYV0gTFQiLGxhc3REYXk6IltEZWMnaCBkYV0gTFQiLGxhc3RXZWVrOiJkZGRkIFtwYXNldCBkYV0gTFQiLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6ImEtYmVubiAlcyIscGFzdDoiJXMgJ3pvIixzOiJ1biBuZWJldWQgc2Vnb25kZW5ub8O5IixtOiJ1ciB2dW51dGVubiIsbW06ZSxoOiJ1biBldXIiLGhoOiIlZCBldXIiLGQ6InVuIGRldmV6aCIsZGQ6ZSxNOiJ1ciBtaXoiLE1NOmUseToidXIgYmxvYXoiLHl5Om59LG9yZGluYWxQYXJzZTovXGR7MSwyfShhw7F8dmV0KS8sb3JkaW5hbDpmdW5jdGlvbih0KXt2YXIgZT0xPT09dD8iYcOxIjoidmV0IjtyZXR1cm4gdCtlfSx3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gc30pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKHQsZSxuKXt2YXIgaT10KyIgIjtzd2l0Y2gobil7Y2FzZSJtIjpyZXR1cm4gZT8iamVkbmEgbWludXRhIjoiamVkbmUgbWludXRlIjtjYXNlIm1tIjpyZXR1cm4gaSs9MT09PXQ/Im1pbnV0YSI6Mj09PXR8fDM9PT10fHw0PT09dD8ibWludXRlIjoibWludXRhIjtjYXNlImgiOnJldHVybiBlPyJqZWRhbiBzYXQiOiJqZWRub2cgc2F0YSI7Y2FzZSJoaCI6cmV0dXJuIGkrPTE9PT10PyJzYXQiOjI9PT10fHwzPT09dHx8ND09PXQ/InNhdGEiOiJzYXRpIjtjYXNlImRkIjpyZXR1cm4gaSs9MT09PXQ/ImRhbiI6ImRhbmEiO2Nhc2UiTU0iOnJldHVybiBpKz0xPT09dD8ibWplc2VjIjoyPT09dHx8Mz09PXR8fDQ9PT10PyJtamVzZWNhIjoibWplc2VjaSI7Y2FzZSJ5eSI6cmV0dXJuIGkrPTE9PT10PyJnb2RpbmEiOjI9PT10fHwzPT09dHx8ND09PXQ/ImdvZGluZSI6ImdvZGluYSJ9fXZhciBuPXQuZGVmaW5lTG9jYWxlKCJicyIse21vbnRoczoiamFudWFyX2ZlYnJ1YXJfbWFydF9hcHJpbF9tYWpfanVuaV9qdWxpX2F1Z3VzdF9zZXB0ZW1iYXJfb2t0b2Jhcl9ub3ZlbWJhcl9kZWNlbWJhciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiamFuLl9mZWIuX21hci5fYXByLl9tYWouX2p1bi5fanVsLl9hdWcuX3NlcC5fb2t0Ll9ub3YuX2RlYy4iLnNwbGl0KCJfIiksd2Vla2RheXM6Im5lZGplbGphX3BvbmVkamVsamFrX3V0b3Jha19zcmlqZWRhX8SNZXR2cnRha19wZXRha19zdWJvdGEiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoibmVkLl9wb24uX3V0by5fc3JpLl/EjWV0Ll9wZXQuX3N1Yi4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46Im5lX3BvX3V0X3NyX8SNZV9wZV9zdSIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6Ikg6bW0iLExUUzoiSDptbTpzcyIsTDoiREQuIE1NLiBZWVlZIixMTDoiRC4gTU1NTSBZWVlZIixMTEw6IkQuIE1NTU0gWVlZWSBIOm1tIixMTExMOiJkZGRkLCBELiBNTU1NIFlZWVkgSDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbZGFuYXMgdV0gTFQiLG5leHREYXk6IltzdXRyYSB1XSBMVCIsbmV4dFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbdV0gW25lZGplbGp1XSBbdV0gTFQiO2Nhc2UgMzpyZXR1cm4iW3VdIFtzcmlqZWR1XSBbdV0gTFQiO2Nhc2UgNjpyZXR1cm4iW3VdIFtzdWJvdHVdIFt1XSBMVCI7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6Y2FzZSA1OnJldHVybiJbdV0gZGRkZCBbdV0gTFQifX0sbGFzdERheToiW2p1xI1lciB1XSBMVCIsbGFzdFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOmNhc2UgMzpyZXR1cm4iW3Byb8WhbHVdIGRkZGQgW3VdIExUIjtjYXNlIDY6cmV0dXJuIltwcm/FoWxlXSBbc3Vib3RlXSBbdV0gTFQiO2Nhc2UgMTpjYXNlIDI6Y2FzZSA0OmNhc2UgNTpyZXR1cm4iW3Byb8WhbGldIGRkZGQgW3VdIExUIn19LHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6InphICVzIixwYXN0OiJwcmlqZSAlcyIsczoicGFyIHNla3VuZGkiLG06ZSxtbTplLGg6ZSxoaDplLGQ6ImRhbiIsZGQ6ZSxNOiJtamVzZWMiLE1NOmUseToiZ29kaW51Iix5eTplfSxvcmRpbmFsUGFyc2U6L1xkezEsMn1cLi8sb3JkaW5hbDoiJWQuIix3ZWVrOntkb3c6MSxkb3k6N319KTtyZXR1cm4gbn0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgiY2EiLHttb250aHM6ImdlbmVyX2ZlYnJlcl9tYXLDp19hYnJpbF9tYWlnX2p1bnlfanVsaW9sX2Fnb3N0X3NldGVtYnJlX29jdHVicmVfbm92ZW1icmVfZGVzZW1icmUiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6Imdlbi5fZmVici5fbWFyLl9hYnIuX21haS5fanVuLl9qdWwuX2FnLl9zZXQuX29jdC5fbm92Ll9kZXMuIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJkaXVtZW5nZV9kaWxsdW5zX2RpbWFydHNfZGltZWNyZXNfZGlqb3VzX2RpdmVuZHJlc19kaXNzYWJ0ZSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJkZy5fZGwuX2R0Ll9kYy5fZGouX2R2Ll9kcy4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkRnX0RsX0R0X0RjX0RqX0R2X0RzIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSDptbSIsTFRTOiJIOm1tOnNzIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSDptbSIsTExMTDoiZGRkZCBEIE1NTU0gWVlZWSBIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6ZnVuY3Rpb24oKXtyZXR1cm4iW2F2dWkgYSAiKygxIT09dGhpcy5ob3VycygpPyJsZXMiOiJsYSIpKyJdIExUIn0sbmV4dERheTpmdW5jdGlvbigpe3JldHVybiJbZGVtw6AgYSAiKygxIT09dGhpcy5ob3VycygpPyJsZXMiOiJsYSIpKyJdIExUIn0sbmV4dFdlZWs6ZnVuY3Rpb24oKXtyZXR1cm4iZGRkZCBbYSAiKygxIT09dGhpcy5ob3VycygpPyJsZXMiOiJsYSIpKyJdIExUIn0sbGFzdERheTpmdW5jdGlvbigpe3JldHVybiJbYWhpciBhICIrKDEhPT10aGlzLmhvdXJzKCk/ImxlcyI6ImxhIikrIl0gTFQifSxsYXN0V2VlazpmdW5jdGlvbigpe3JldHVybiJbZWxdIGRkZGQgW3Bhc3NhdCBhICIrKDEhPT10aGlzLmhvdXJzKCk/ImxlcyI6ImxhIikrIl0gTFQifSxzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJlbiAlcyIscGFzdDoiZmEgJXMiLHM6InVucyBzZWdvbnMiLG06InVuIG1pbnV0IixtbToiJWQgbWludXRzIixoOiJ1bmEgaG9yYSIsaGg6IiVkIGhvcmVzIixkOiJ1biBkaWEiLGRkOiIlZCBkaWVzIixNOiJ1biBtZXMiLE1NOiIlZCBtZXNvcyIseToidW4gYW55Iix5eToiJWQgYW55cyJ9LG9yZGluYWxQYXJzZTovXGR7MSwyfShyfG58dHzDqHxhKS8sb3JkaW5hbDpmdW5jdGlvbih0LGUpe3ZhciBuPTE9PT10PyJyIjoyPT09dD8ibiI6Mz09PXQ/InIiOjQ9PT10PyJ0Ijoiw6giO3JldHVybiJ3IiE9PWUmJiJXIiE9PWV8fChuPSJhIiksdCtufSx3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKHQpe3JldHVybiB0PjEmJnQ8NSYmMSE9PX5+KHQvMTApfWZ1bmN0aW9uIG4odCxuLGkscil7dmFyIG89dCsiICI7c3dpdGNoKGkpe2Nhc2UicyI6cmV0dXJuIG58fHI/InDDoXIgc2VrdW5kIjoicMOhciBzZWt1bmRhbWkiO2Nhc2UibSI6cmV0dXJuIG4/Im1pbnV0YSI6cj8ibWludXR1IjoibWludXRvdSI7Y2FzZSJtbSI6cmV0dXJuIG58fHI/bysoZSh0KT8ibWludXR5IjoibWludXQiKTpvKyJtaW51dGFtaSI7Y2FzZSJoIjpyZXR1", "base64"));
  res.write(new Buffer("cm4gbj8iaG9kaW5hIjpyPyJob2RpbnUiOiJob2Rpbm91IjtjYXNlImhoIjpyZXR1cm4gbnx8cj9vKyhlKHQpPyJob2RpbnkiOiJob2RpbiIpOm8rImhvZGluYW1pIjtjYXNlImQiOnJldHVybiBufHxyPyJkZW4iOiJkbmVtIjtjYXNlImRkIjpyZXR1cm4gbnx8cj9vKyhlKHQpPyJkbnkiOiJkbsOtIik6bysiZG55IjtjYXNlIk0iOnJldHVybiBufHxyPyJtxJtzw61jIjoibcSbc8OtY2VtIjtjYXNlIk1NIjpyZXR1cm4gbnx8cj9vKyhlKHQpPyJtxJtzw61jZSI6Im3Em3PDrWPFryIpOm8rIm3Em3PDrWNpIjtjYXNlInkiOnJldHVybiBufHxyPyJyb2siOiJyb2tlbSI7Y2FzZSJ5eSI6cmV0dXJuIG58fHI/bysoZSh0KT8icm9reSI6ImxldCIpOm8rImxldHkifX12YXIgaT0ibGVkZW5fw7pub3JfYsWZZXplbl9kdWJlbl9rdsSbdGVuX8SNZXJ2ZW5fxI1lcnZlbmVjX3NycGVuX3rDocWZw61fxZnDrWplbl9saXN0b3BhZF9wcm9zaW5lYyIuc3BsaXQoIl8iKSxyPSJsZWRfw7pub19ixZllX2R1Yl9rdsSbX8SNdm5fxI12Y19zcnBfesOhxZlfxZnDrWpfbGlzX3BybyIuc3BsaXQoIl8iKSxvPXQuZGVmaW5lTG9jYWxlKCJjcyIse21vbnRoczppLG1vbnRoc1Nob3J0OnIsbW9udGhzUGFyc2U6ZnVuY3Rpb24odCxlKXt2YXIgbixpPVtdO2ZvcihuPTA7bjwxMjtuKyspaVtuXT1uZXcgUmVnRXhwKCJeIit0W25dKyIkfF4iK2Vbbl0rIiQiLCJpIik7cmV0dXJuIGl9KGksciksc2hvcnRNb250aHNQYXJzZTpmdW5jdGlvbih0KXt2YXIgZSxuPVtdO2ZvcihlPTA7ZTwxMjtlKyspbltlXT1uZXcgUmVnRXhwKCJeIit0W2VdKyIkIiwiaSIpO3JldHVybiBufShyKSxsb25nTW9udGhzUGFyc2U6ZnVuY3Rpb24odCl7dmFyIGUsbj1bXTtmb3IoZT0wO2U8MTI7ZSsrKW5bZV09bmV3IFJlZ0V4cCgiXiIrdFtlXSsiJCIsImkiKTtyZXR1cm4gbn0oaSksd2Vla2RheXM6Im5lZMSbbGVfcG9uZMSbbMOtX8O6dGVyw71fc3TFmWVkYV/EjXR2cnRla19ww6F0ZWtfc29ib3RhIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6Im5lX3BvX8O6dF9zdF/EjXRfcMOhX3NvIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJuZV9wb1/DunRfc3RfxI10X3DDoV9zbyIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6Ikg6bW0iLExUUzoiSDptbTpzcyIsTDoiREQuTU0uWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFlZWVkgSDptbSIsTExMTDoiZGRkZCBELiBNTU1NIFlZWVkgSDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbZG5lcyB2XSBMVCIsbmV4dERheToiW3rDrXRyYSB2XSBMVCIsbmV4dFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbdiBuZWTEm2xpIHZdIExUIjtjYXNlIDE6Y2FzZSAyOnJldHVybiJbdl0gZGRkZCBbdl0gTFQiO2Nhc2UgMzpyZXR1cm4iW3ZlIHN0xZllZHUgdl0gTFQiO2Nhc2UgNDpyZXR1cm4iW3ZlIMSNdHZydGVrIHZdIExUIjtjYXNlIDU6cmV0dXJuIlt2IHDDoXRlayB2XSBMVCI7Y2FzZSA2OnJldHVybiJbdiBzb2JvdHUgdl0gTFQifX0sbGFzdERheToiW3bEjWVyYSB2XSBMVCIsbGFzdFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbbWludWxvdSBuZWTEm2xpIHZdIExUIjtjYXNlIDE6Y2FzZSAyOnJldHVybiJbbWludWzDqV0gZGRkZCBbdl0gTFQiO2Nhc2UgMzpyZXR1cm4iW21pbnVsb3Ugc3TFmWVkdSB2XSBMVCI7Y2FzZSA0OmNhc2UgNTpyZXR1cm4iW21pbnVsw71dIGRkZGQgW3ZdIExUIjtjYXNlIDY6cmV0dXJuIlttaW51bG91IHNvYm90dSB2XSBMVCJ9fSxzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJ6YSAlcyIscGFzdDoicMWZZWQgJXMiLHM6bixtOm4sbW06bixoOm4saGg6bixkOm4sZGQ6bixNOm4sTU06bix5Om4seXk6bn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9XC4vLG9yZGluYWw6IiVkLiIsd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIG99KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoImN2Iix7bW9udGhzOiLQutOR0YDQu9Cw0Ydf0L3QsNGA05HRgV/Qv9GD0Yhf0LDQutCwX9C80LDQuV/Sq9OX0YDRgtC80LVf0YPRgtORX9Kr0YPRgNC70LBf0LDQstOR0L1f0Y7Qv9CwX9GH07PQul/RgNCw0YjRgtCw0LIiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6ItC605HRgF/QvdCw0YBf0L/Rg9GIX9Cw0LrQsF/QvNCw0Llf0qvTl9GAX9GD0YLTkV/Sq9GD0YBf0LDQstC9X9GO0L/QsF/Rh9Oz0Lpf0YDQsNGIIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLQstGL0YDRgdCw0YDQvdC40LrRg9C9X9GC0YPQvdGC0LjQutGD0L1f0YvRgtC70LDRgNC40LrRg9C9X9GO0L3QutGD0L1f0LrTl9Kr0L3QtdGA0L3QuNC60YPQvV/RjdGA0L3QtdC60YPQvV/RiNOR0LzQsNGC0LrRg9C9Ii5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6ItCy0YvRgF/RgtGD0L1f0YvRgtC7X9GO0L1f0LrTl9KrX9GN0YDQvV/RiNOR0LwiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46ItCy0YBf0YLQvV/Ri9GCX9GO0L1f0LrSq1/RjdGAX9GI0LwiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQtTU0tWVlZWSIsTEw6IllZWVkgW9Kr0YPQu9GF0LhdIE1NTU0gW9GD0LnTkdGF05fQvV0gRFst0LzTl9GI05ddIixMTEw6IllZWVkgW9Kr0YPQu9GF0LhdIE1NTU0gW9GD0LnTkdGF05fQvV0gRFst0LzTl9GI05ddLCBISDptbSIsTExMTDoiZGRkZCwgWVlZWSBb0qvRg9C70YXQuF0gTU1NTSBb0YPQudOR0YXTl9C9XSBEWy3QvNOX0YjTl10sIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvQn9Cw0Y/QvV0gTFQgW9GB0LXRhdC10YLRgNC1XSIsbg==", "base64"));
  res.write(new Buffer("ZXh0RGF5OiJb0KvRgNCw0L1dIExUIFvRgdC10YXQtdGC0YDQtV0iLGxhc3REYXk6IlvTltC90LXRgF0gTFQgW9GB0LXRhdC10YLRgNC1XSIsbmV4dFdlZWs6IlvSqtC40YLQtdGBXSBkZGRkIExUIFvRgdC10YXQtdGC0YDQtV0iLGxhc3RXZWVrOiJb0JjRgNGC0L3Tl10gZGRkZCBMVCBb0YHQtdGF0LXRgtGA0LVdIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOmZ1bmN0aW9uKHQpe3ZhciBlPS/RgdC10YXQtdGCJC9pLmV4ZWModCk/ItGA0LXQvSI6L9Kr0YPQuyQvaS5leGVjKHQpPyLRgtCw0L0iOiLRgNCw0L0iO3JldHVybiB0K2V9LHBhc3Q6IiVzINC60LDRj9C70LvQsCIsczoi0L/Tl9GALdC40Log0qvQtdC60LrRg9C90YIiLG06ItC/05fRgCDQvNC40L3Rg9GCIixtbToiJWQg0LzQuNC90YPRgiIsaDoi0L/Tl9GAINGB0LXRhdC10YIiLGhoOiIlZCDRgdC10YXQtdGCIixkOiLQv9OX0YAg0LrRg9C9IixkZDoiJWQg0LrRg9C9IixNOiLQv9OX0YAg0YPQudOR0YUiLE1NOiIlZCDRg9C505HRhSIseToi0L/Tl9GAINKr0YPQuyIseXk6IiVkINKr0YPQuyJ9LG9yZGluYWxQYXJzZTovXGR7MSwyfS3QvNOX0YgvLG9yZGluYWw6IiVkLdC805fRiCIsd2Vlazp7ZG93OjEsZG95Ojd9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoImN5Iix7bW9udGhzOiJJb25hd3JfQ2h3ZWZyb3JfTWF3cnRoX0VicmlsbF9NYWlfTWVoZWZpbl9Hb3JmZmVubmFmX0F3c3RfTWVkaV9IeWRyZWZfVGFjaHdlZGRfUmhhZ2Z5ciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSW9uX0Nod2VfTWF3X0Vicl9NYWlfTWVoX0dvcl9Bd3NfTWVkX0h5ZF9UYWNoX1JoYWciLnNwbGl0KCJfIiksd2Vla2RheXM6IkR5ZGQgU3VsX0R5ZGQgTGx1bl9EeWRkIE1hd3J0aF9EeWRkIE1lcmNoZXJfRHlkZCBJYXVfRHlkZCBHd2VuZXJfRHlkZCBTYWR3cm4iLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoiU3VsX0xsdW5fTWF3X01lcl9JYXVfR3dlX1NhZCIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoiU3VfTGxfTWFfTWVfSWFfR3dfU2EiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQvTU0vWVlZWSIsTEw6IkQgTU1NTSBZWVlZIixMTEw6IkQgTU1NTSBZWVlZIEhIOm1tIixMTExMOiJkZGRkLCBEIE1NTU0gWVlZWSBISDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbSGVkZGl3IGFtXSBMVCIsbmV4dERheToiW1lmb3J5IGFtXSBMVCIsbmV4dFdlZWs6ImRkZGQgW2FtXSBMVCIsbGFzdERheToiW0Rkb2UgYW1dIExUIixsYXN0V2VlazoiZGRkZCBbZGl3ZXRoYWYgYW1dIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJtZXduICVzIixwYXN0OiIlcyB5biDDtGwiLHM6InljaHlkaWcgZWlsaWFkYXUiLG06Im11bnVkIixtbToiJWQgbXVudWQiLGg6ImF3ciIsaGg6IiVkIGF3ciIsZDoiZGl3cm5vZCIsZGQ6IiVkIGRpd3Jub2QiLE06Im1pcyIsTU06IiVkIG1pcyIseToiYmx3eWRkeW4iLHl5OiIlZCBmbHluZWRkIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9KGZlZHxhaW58YWZ8aWx8eWRkfGVkfGVnKS8sb3JkaW5hbDpmdW5jdGlvbih0KXt2YXIgZT10LG49IiIsaT1bIiIsImFmIiwiaWwiLCJ5ZGQiLCJ5ZGQiLCJlZCIsImVkIiwiZWQiLCJmZWQiLCJmZWQiLCJmZWQiLCJlZyIsImZlZCIsImVnIiwiZWciLCJmZWQiLCJlZyIsImVnIiwiZmVkIiwiZWciLCJmZWQiXTtyZXR1cm4gZT4yMD9uPTQwPT09ZXx8NTA9PT1lfHw2MD09PWV8fDgwPT09ZXx8MTAwPT09ZT8iZmVkIjoiYWluIjplPjAmJihuPWlbZV0pLHQrbn0sd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoImRhIix7bW9udGhzOiJqYW51YXJfZmVicnVhcl9tYXJ0c19hcHJpbF9tYWpfanVuaV9qdWxpX2F1Z3VzdF9zZXB0ZW1iZXJfb2t0b2Jlcl9ub3ZlbWJlcl9kZWNlbWJlciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiamFuX2ZlYl9tYXJfYXByX21hal9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZWMiLnNwbGl0KCJfIiksd2Vla2RheXM6InPDuG5kYWdfbWFuZGFnX3RpcnNkYWdfb25zZGFnX3RvcnNkYWdfZnJlZGFnX2zDuHJkYWciLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoic8O4bl9tYW5fdGlyX29uc190b3JfZnJlX2zDuHIiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46InPDuF9tYV90aV9vbl90b19mcl9sw7giLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQvTU0vWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQgW2QuXSBELiBNTU1NIFlZWVkgSEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW0kgZGFnIGtsLl0gTFQiLG5leHREYXk6IltJIG1vcmdlbiBrbC5dIExUIixuZXh0V2VlazoiZGRkZCBba2wuXSBMVCIsbGFzdERheToiW0kgZ8OlciBrbC5dIExUIixsYXN0V2VlazoiW3NpZHN0ZV0gZGRkZCBba2xdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJvbSAlcyIscGFzdDoiJXMgc2lkZW4iLHM6ImbDpSBzZWt1bmRlciIsbToiZXQgbWludXQiLG1tOiIlZCBtaW51dHRlciIsaDoiZW4gdGltZSIsaGg6IiVkIHRpbWVyIixkOiJlbiBkYWciLGRkOiIlZCBkYWdlIixNOiJlbiBtw6VuZWQiLE1NOiIlZCBtw6VuZWRlciIseToiZXQgw6VyIix5eToiJWQgw6VyIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9XC4vLG9yZGluYWw6IiVkLiIsd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZSh0LGUsbixpKXt2YXIgcj17bTpbImVpbmUgTWludXRlIiwiZWluZXIgTWludXRlIl0saDpbImVpbmUgU3R1bmRlIiwiZWluZXIgU3R1bmRlIl0sZDpbImVpbiBUYWciLCJlaW5lbSBUYWciXSxkZDpbdCsiIFRhZ2UiLHQrIiBUYWdlbiJdLE06WyJlaW4gTW9uYXQiLCJlaW5lbSBNb25hdCJdLApNTTpbdCsiIE1vbmF0ZSIsdCsiIE1vbmF0ZW4iXSx5OlsiZWluIEphaHIiLCJlaW5lbSBKYWhyIl0seXk6W3QrIiBKYWhyZSIsdCsiIEphaHJlbiJdfTtyZXR1cm4gZT9yW25dWzBdOnJbbl1bMV19dmFyIG49dC5kZWZpbmVMb2NhbGUoImRlIix7bW9udGhzOiJKYW51YXJfRmVicnVhcl9Nw6Ryel9BcHJpbF9NYWlfSnVuaV9KdWxpX0F1Z3VzdF9TZXB0ZW1iZXJfT2t0b2Jlcl9Ob3ZlbWJlcl9EZXplbWJlciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSmFuLl9GZWJyLl9NcnouX0Fwci5fTWFpX0p1bi5fSnVsLl9BdWcuX1NlcHQuX09rdC5fTm92Ll9EZXouIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJTb25udGFnX01vbnRhZ19EaWVuc3RhZ19NaXR0d29jaF9Eb25uZXJzdGFnX0ZyZWl0YWdfU2Ftc3RhZyIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJTby5fTW8uX0RpLl9NaS5fRG8uX0ZyLl9TYS4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IlNvX01vX0RpX01pX0RvX0ZyX1NhIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEg6bW0iLExUUzoiSEg6bW06c3MiLEw6IkRELk1NLllZWVkiLExMOiJELiBNTU1NIFlZWVkiLExMTDoiRC4gTU1NTSBZWVlZIEhIOm1tIixMTExMOiJkZGRkLCBELiBNTU1NIFlZWVkgSEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW2hldXRlIHVtXSBMVCBbVWhyXSIsc2FtZUVsc2U6IkwiLG5leHREYXk6Ilttb3JnZW4gdW1dIExUIFtVaHJdIixuZXh0V2VlazoiZGRkZCBbdW1dIExUIFtVaHJdIixsYXN0RGF5OiJbZ2VzdGVybiB1bV0gTFQgW1Vocl0iLGxhc3RXZWVrOiJbbGV0enRlbl0gZGRkZCBbdW1dIExUIFtVaHJdIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6ImluICVzIixwYXN0OiJ2b3IgJXMiLHM6ImVpbiBwYWFyIFNla3VuZGVuIixtOmUsbW06IiVkIE1pbnV0ZW4iLGg6ZSxoaDoiJWQgU3R1bmRlbiIsZDplLGRkOmUsTTplLE1NOmUseTplLHl5OmV9LG9yZGluYWxQYXJzZTovXGR7MSwyfVwuLyxvcmRpbmFsOiIlZC4iLHdlZWs6e2RvdzoxLGRveTo0fX0pO3JldHVybiBufSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUodCxlLG4saSl7dmFyIHI9e206WyJlaW5lIE1pbnV0ZSIsImVpbmVyIE1pbnV0ZSJdLGg6WyJlaW5lIFN0dW5kZSIsImVpbmVyIFN0dW5kZSJdLGQ6WyJlaW4gVGFnIiwiZWluZW0gVGFnIl0sZGQ6W3QrIiBUYWdlIix0KyIgVGFnZW4iXSxNOlsiZWluIE1vbmF0IiwiZWluZW0gTW9uYXQiXSxNTTpbdCsiIE1vbmF0ZSIsdCsiIE1vbmF0ZW4iXSx5OlsiZWluIEphaHIiLCJlaW5lbSBKYWhyIl0seXk6W3QrIiBKYWhyZSIsdCsiIEphaHJlbiJdfTtyZXR1cm4gZT9yW25dWzBdOnJbbl1bMV19dmFyIG49dC5kZWZpbmVMb2NhbGUoImRlLWF0Iix7bW9udGhzOiJKw6RubmVyX0ZlYnJ1YXJfTcOkcnpfQXByaWxfTWFpX0p1bmlfSnVsaV9BdWd1c3RfU2VwdGVtYmVyX09rdG9iZXJfTm92ZW1iZXJfRGV6ZW1iZXIiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6IkrDpG4uX0ZlYnIuX01yei5fQXByLl9NYWlfSnVuLl9KdWwuX0F1Zy5fU2VwdC5fT2t0Ll9Ob3YuX0Rlei4iLnNwbGl0KCJfIiksd2Vla2RheXM6IlNvbm50YWdfTW9udGFnX0RpZW5zdGFnX01pdHR3b2NoX0Rvbm5lcnN0YWdfRnJlaXRhZ19TYW1zdGFnIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IlNvLl9Nby5fRGkuX01pLl9Eby5fRnIuX1NhLiIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoiU29fTW9fRGlfTWlfRG9fRnJfU2EiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQuTU0uWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQsIEQuIE1NTU0gWVlZWSBISDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbaGV1dGUgdW1dIExUIFtVaHJdIixzYW1lRWxzZToiTCIsbmV4dERheToiW21vcmdlbiB1bV0gTFQgW1Vocl0iLG5leHRXZWVrOiJkZGRkIFt1bV0gTFQgW1Vocl0iLGxhc3REYXk6IltnZXN0ZXJuIHVtXSBMVCBbVWhyXSIsbGFzdFdlZWs6IltsZXR6dGVuXSBkZGRkIFt1bV0gTFQgW1Vocl0ifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToiaW4gJXMiLHBhc3Q6InZvciAlcyIsczoiZWluIHBhYXIgU2VrdW5kZW4iLG06ZSxtbToiJWQgTWludXRlbiIsaDplLGhoOiIlZCBTdHVuZGVuIixkOmUsZGQ6ZSxNOmUsTU06ZSx5OmUseXk6ZX0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9XC4vLG9yZGluYWw6IiVkLiIsd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIG59KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9WyLelt6s3oLeqt6H3qbeg96pIiwi3orerN6E3rDeg96q3ofept6D3qkiLCLeid6n3oPeqN6X3qoiLCLeh96t3pXesN6D3qnejd6qIiwi3onerSIsIt6W3qvegt6wIiwi3pbeqt6N3qbeh96oIiwi3ofer96O3qbekN6w3pPeqiIsIt6Q3qzeld6w3pPerN6J3rDehN6m3oPeqiIsIt6H3q7eht6w3pPer96E3qbeg96qIiwi3oLert6I3qzeid6w3oTept6D3qoiLCLekd6o3pDerN6J3rDehN6m3oPeqiJdLG49WyLeh96n3oveqN6H3rDejN6mIiwi3oDer96J3qYiLCLeh96m3oLesN6O3qfeg96mIiwi3oTeqt6L3qYiLCLehN6q3oPep96Q3rDeit6m3ozeqCIsIt6A3qreht6q3oPeqiIsIt6A3q7egt6o3oDeqN6D3qoiXSxpPXQuZGVmaW5lTG9jYWxlKCJkdiIse21vbnRoczplLG1vbnRoc1Nob3J0OmUsd2Vla2RheXM6bix3ZWVrZGF5c1Nob3J0Om4sd2Vla2RheXNNaW46It6H3qfei96oX96A3q/eid6mX96H3qbegt6wX96E3qrei96mX96E3qreg96nX96A3qreht6qX96A3q7egt6oIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEg6bW0iLExUUzoiSEg6bW06c3MiLEw6IkQvTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQgRCBNTU1NIFlZWVkgSEg6bW0ifSxtZXJpZGllbVBhcnNlOi/eid6GfN6J3oovLGlzUE06ZnVuY3Rpb24odCl7cmV0dXJuIt6J3ooiPT09dH0sbWVyaWRpZW06ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PDEyPyLeid6GIjoi3oneiiJ9LGNhbGVuZGFyOntzYW1lRGF5OiJb3oneqN6H3qbei96qXSBMVCIsbmV4dERheToiW96J3qfei96m3onep10gTFQiLG5leHRXZWVrOiJkZGRkIExUIixsYXN0RGF5OiJb3ofeqN6H3rDelN6sXSBMVCIsbGFzdFdlZWs6Ilveit6n3ofeqN6M3qreiN6oXSBkZGRkIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiLejN6s3oPerd6O3qbeh96oICVzIixwYXN0OiLeht6q3oPeqN6C3rAgJXMiLHM6It6Q3qjeht6q3oLesN6M3qreht6u3oXerN6H3rAiLG06It6J3qjegt6o3pPerN6H3rAiLG1tOiLeid6o3oLeqN6T3qogJWQiLGg6It6O3qbekd6o3ofeqN6D3qzeh96wIixoaDoi3o7ept6R3qjeh96o3oPeqiAlZCIsZDoi3oveqt6I3qbegN6s3ofesCIsZGQ6It6L3qreiN6m3pDesCAlZCIsTToi3onept6A3qzeh96wIixNTToi3onept6Q3rAgJWQiLHk6It6H3qbegN6m3oPerN6H3rAiLHl5OiLeh96m3oDept6D3qogJWQifSxwcmVwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC/YjC9nLCIsIil9LHBvc3Rmb3JtYXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvLC9nLCLYjCIpfSx3ZWVrOntkb3c6Nyxkb3k6MTJ9fSk7cmV0dXJuIGl9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIEZ1bmN0aW9ufHwiW29iamVjdCBGdW5jdGlvbl0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfXZhciBuPXQuZGVmaW5lTG9jYWxlKCJlbCIse21vbnRoc05vbWluYXRpdmVFbDoizpnOsc69zr/Phc6sz4HOuc6/z4JfzqbOtc6yz4HOv8+FzqzPgc65zr/Pgl/OnM6sz4HPhM65zr/Pgl/Okc+Az4HOr867zrnOv8+CX86czqzOuc6/z4JfzpnOv8+Nzr3Ouc6/z4JfzpnOv8+NzrvOuc6/z4JfzpHPjc6zzr/Phc+Dz4TOv8+CX86jzrXPgM+Ezq3OvM6yz4HOuc6/z4Jfzp/Ous+Ez47Oss+BzrnOv8+CX86dzr/Orc68zrLPgc65zr/Pgl/OlM61zrrOrc68zrLPgc65zr/PgiIuc3BsaXQoIl8iKSxtb250aHNHZW5pdGl2ZUVsOiLOmc6xzr3Ov8+FzrHPgc6vzr/PhV/Ops61zrLPgc6/z4XOsc+Bzq/Ov8+FX86czrHPgc+Ezq/Ov8+FX86Rz4DPgc65zrvOr86/z4VfzpzOsc6Qzr/PhV/Omc6/z4XOvc6vzr/PhV/Omc6/z4XOu86vzr/PhV/Okc+FzrPOv8+Nz4PPhM6/z4VfzqPOtc+Az4TOtc68zrLPgc6vzr/PhV/On866z4TPic6yz4HOr86/z4Vfzp3Ov861zrzOss+Bzq/Ov8+FX86UzrXOus61zrzOss+Bzq/Ov8+FIi5zcGxpdCgiXyIpLG1vbnRoczpmdW5jdGlvbih0LGUpe3JldHVybi9ELy50ZXN0KGUuc3Vic3RyaW5nKDAsZS5pbmRleE9mKCJNTU1NIikpKT90aGlzLl9tb250aHNHZW5pdGl2ZUVsW3QubW9udGgoKV06dGhpcy5fbW9udGhzTm9taW5hdGl2ZUVsW3QubW9udGgoKV19LG1vbnRoc1Nob3J0OiLOmc6xzr1fzqbOtc6yX86czrHPgV/Okc+Az4FfzpzOsc+KX86Zzr/Phc69X86Zzr/Phc67X86Rz4XOs1/Oo861z4Bfzp/Ous+EX86dzr/OtV/OlM61zroiLnNwbGl0KCJfIiksd2Vla2RheXM6Is6az4XPgc65zrHOus6uX86UzrXPhc+Ezq3Pgc6xX86kz4HOr8+EzrdfzqTOtc+EzqzPgc+EzrdfzqDOrc68z4DPhM63X86gzrHPgc6xz4POus61z4XOrl/Oo86szrLOss6xz4TOvyIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiLOms+Fz4FfzpTOtc+FX86kz4HOuV/OpM61z4RfzqDOtc68X86gzrHPgV/Oo86xzrIiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46Is6az4VfzpTOtV/OpM+BX86kzrVfzqDOtV/OoM6xX86jzrEiLnNwbGl0KCJfIiksbWVyaWRpZW06ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PjExP24/Is68zrwiOiLOnM6cIjpuPyLPgM68IjoizqDOnCJ9LGlzUE06ZnVuY3Rpb24odCl7cmV0dXJuIs68Ij09PSh0KyIiKS50b0xvd2VyQ2FzZSgpWzBdfSxtZXJpZGllbVBhcnNlOi9bzqDOnF1cLj/OnD9cLj8vaSxsb25nRGF0ZUZvcm1hdDp7TFQ6Img6bW0gQSIsTFRTOiJoOm1tOnNzIEEiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBoOm1tIEEiLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZIGg6bW0gQSJ9LGNhbGVuZGFyRWw6e3NhbWVEYXk6IlvOo86uzrzOtc+BzrEge31dIExUIixuZXh0RGF5OiJbzpHPjc+BzrnOvyB7fV0gTFQiLG5leHRXZWVrOiJkZGRkIFt7fV0gTFQiLGxhc3REYXk6IlvOp864zrXPgiB7fV0gTFQiLGxhc3RXZWVrOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuZGF5KCkpe2Nhc2UgNjpyZXR1cm4iW8+Ezr8gz4DPgc6/zrfOs86/z43OvM61zr3Ov10gZGRkZCBbe31dIExUIjtkZWZhdWx0OnJldHVybiJbz4TOt869", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("IGHDsW9zIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9wrovLG9yZGluYWw6IiVkwroiLHdlZWs6e2RvdzoxLGRveTo0fX0pO3JldHVybiBpfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUodCxlLG4saSl7dmFyIHI9e3M6WyJtw7VuZSBzZWt1bmRpIiwibcO1bmkgc2VrdW5kIiwicGFhciBzZWt1bmRpdCJdLG06WyLDvGhlIG1pbnV0aSIsIsO8a3MgbWludXQiXSxtbTpbdCsiIG1pbnV0aSIsdCsiIG1pbnV0aXQiXSxoOlsiw7xoZSB0dW5uaSIsInR1bmQgYWVnYSIsIsO8a3MgdHVuZCJdLGhoOlt0KyIgdHVubmkiLHQrIiB0dW5kaSJdLGQ6WyLDvGhlIHDDpGV2YSIsIsO8a3MgcMOkZXYiXSxNOlsia3V1IGFqYSIsImt1dSBhZWdhIiwiw7xrcyBrdXUiXSxNTTpbdCsiIGt1dSIsdCsiIGt1dWQiXSx5Olsiw7xoZSBhYXN0YSIsImFhc3RhIiwiw7xrcyBhYXN0YSJdLHl5Olt0KyIgYWFzdGEiLHQrIiBhYXN0YXQiXX07cmV0dXJuIGU/cltuXVsyXT9yW25dWzJdOnJbbl1bMV06aT9yW25dWzBdOnJbbl1bMV19dmFyIG49dC5kZWZpbmVMb2NhbGUoImV0Iix7bW9udGhzOiJqYWFudWFyX3ZlZWJydWFyX23DpHJ0c19hcHJpbGxfbWFpX2p1dW5pX2p1dWxpX2F1Z3VzdF9zZXB0ZW1iZXJfb2t0b29iZXJfbm92ZW1iZXJfZGV0c2VtYmVyIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiJqYWFuX3ZlZWJyX23DpHJ0c19hcHJfbWFpX2p1dW5pX2p1dWxpX2F1Z19zZXB0X29rdF9ub3ZfZGV0cyIuc3BsaXQoIl8iKSx3ZWVrZGF5czoicMO8aGFww6Rldl9lc21hc3DDpGV2X3RlaXNpcMOkZXZfa29sbWFww6Rldl9uZWxqYXDDpGV2X3JlZWRlX2xhdXDDpGV2Ii5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IlBfRV9UX0tfTl9SX0wiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IlBfRV9UX0tfTl9SX0wiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJIOm1tIixMVFM6Ikg6bW06c3MiLEw6IkRELk1NLllZWVkiLExMOiJELiBNTU1NIFlZWVkiLExMTDoiRC4gTU1NTSBZWVlZIEg6bW0iLExMTEw6ImRkZGQsIEQuIE1NTU0gWVlZWSBIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltUw6RuYSxdIExUIixuZXh0RGF5OiJbSG9tbWUsXSBMVCIsbmV4dFdlZWs6IltKw6RyZ21pbmVdIGRkZGQgTFQiLGxhc3REYXk6IltFaWxlLF0gTFQiLGxhc3RXZWVrOiJbRWVsbWluZV0gZGRkZCBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToiJXMgcMOkcmFzdCIscGFzdDoiJXMgdGFnYXNpIixzOmUsbTplLG1tOmUsaDplLGhoOmUsZDplLGRkOiIlZCBww6RldmEiLE06ZSxNTTplLHk6ZSx5eTplfSxvcmRpbmFsUGFyc2U6L1xkezEsMn1cLi8sb3JkaW5hbDoiJWQuIix3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gbn0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgiZXUiLHttb250aHM6InVydGFycmlsYV9vdHNhaWxhX21hcnR4b2FfYXBpcmlsYV9tYWlhdHphX2VrYWluYV91enRhaWxhX2FidXp0dWFfaXJhaWxhX3VycmlhX2F6YXJvYV9hYmVuZHVhIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiJ1cnQuX290cy5fbWFyLl9hcGkuX21haS5fZWthLl91enQuX2FidS5faXJhLl91cnIuX2F6YS5fYWJlLiIuc3BsaXQoIl8iKSx3ZWVrZGF5czoiaWdhbmRlYV9hc3RlbGVoZW5hX2FzdGVhcnRlYV9hc3RlYXprZW5hX29zdGVndW5hX29zdGlyYWxhX2xhcnVuYmF0YSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJpZy5fYWwuX2FyLl9hei5fb2cuX29sLl9sci4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46ImlnX2FsX2FyX2F6X29nX29sX2xyIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEg6bW0iLExUUzoiSEg6bW06c3MiLEw6IllZWVktTU0tREQiLExMOiJZWVlZW2tvXSBNTU1NW3Jlbl0gRFthXSIsTExMOiJZWVlZW2tvXSBNTU1NW3Jlbl0gRFthXSBISDptbSIsTExMTDoiZGRkZCwgWVlZWVtrb10gTU1NTVtyZW5dIERbYV0gSEg6bW0iLGw6IllZWVktTS1EIixsbDoiWVlZWVtrb10gTU1NIERbYV0iLGxsbDoiWVlZWVtrb10gTU1NIERbYV0gSEg6bW0iLGxsbGw6ImRkZCwgWVlZWVtrb10gTU1NIERbYV0gSEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW2dhdXJdIExUW2V0YW5dIixuZXh0RGF5OiJbYmloYXJdIExUW2V0YW5dIixuZXh0V2VlazoiZGRkZCBMVFtldGFuXSIsbGFzdERheToiW2F0em9dIExUW2V0YW5dIixsYXN0V2VlazoiW2F1cnJla29dIGRkZGQgTFRbZXRhbl0iLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6IiVzIGJhcnJ1IixwYXN0OiJkdWVsYSAlcyIsczoic2VndW5kbyBiYXR6dWsiLG06Im1pbnV0dSBiYXQiLG1tOiIlZCBtaW51dHUiLGg6Im9yZHUgYmF0IixoaDoiJWQgb3JkdSIsZDoiZWd1biBiYXQiLGRkOiIlZCBlZ3VuIixNOiJoaWxhYmV0ZSBiYXQiLE1NOiIlZCBoaWxhYmV0ZSIseToidXJ0ZSBiYXQiLHl5OiIlZCB1cnRlIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9XC4vLG9yZGluYWw6IiVkLiIsd2Vlazp7ZG93OjEsZG95Ojd9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9ezE6ItuxIiwyOiLbsiIsMzoi27MiLDQ6Itu0Iiw1OiLbtSIsNjoi27YiLDc6Itu3Iiw4OiLbuCIsOToi27kiLDA6ItuwIn0sbj17ItuxIjoiMSIsItuyIjoiMiIsItuzIjoiMyIsItu0IjoiNCIsItu1IjoiNSIsItu2IjoiNiIsItu3IjoiNyIsItu4IjoiOCIsItu5IjoiOSIsItuwIjoiMCJ9LGk9dC5kZWZpbmVMb2NhbGUoImZhIix7bW9udGhzOiLamNin2YbZiNuM2Ydf2YHZiNix24zZh1/Zhdin2LHYs1/YotmI2LHbjNmEX9mF2Ydf2pjZiNim2YZf2pjZiNim24zZh1/Yp9mI2Kpf2LPZvtiq2KfZhdio2LFf2Kfaqdiq2KjYsV/ZhtmI2KfZhdio2LFf2K/Ys9in2YXYqNixIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiLamNin2YbZiNuM2Ydf2YHZiNix24zZh1/Zhdin2LHYs1/YotmI2LHbjNmEX9mF2Ydf2pjZiNim2YZf2pjZiNim24zZh1/Yp9mI2Kpf2LPZvtiq2KfZhdio2LFf2Kfaqdiq2KjYsV/ZhtmI2KfZhdio2LFf2K/Ys9in2YXYqNixIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLbjNqp4oCM2LTZhtio2Ydf2K/ZiNi02YbYqNmHX9iz2YfigIzYtNmG2KjZh1/ahtmH2KfYsdi02YbYqNmHX9m+2YbYrOKAjNi02YbYqNmHX9is2YXYudmHX9i02YbYqNmHIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6ItuM2qnigIzYtNmG2KjZh1/Yr9mI2LTZhtio2Ydf2LPZh+KAjNi02YbYqNmHX9qG2YfYp9ix2LTZhtio2Ydf2b7Zhtis4oCM2LTZhtio2Ydf2KzZhdi52Ydf2LTZhtio2YciLnNwbGl0KCJfIiksd2Vla2RheXNNaW46ItuMX9ivX9izX9qGX9m+X9isX9i0Ii5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEg6bW0iLExUUzoiSEg6bW06c3MiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBISDptbSIsTExMTDoiZGRkZCwgRCBNTU1NIFlZWVkgSEg6bW0ifSxtZXJpZGllbVBhcnNlOi/Zgtio2YQg2KfYsiDYuNmH2LF82KjYudivINin2LIg2LjZh9ixLyxpc1BNOmZ1bmN0aW9uKHQpe3JldHVybi/YqNi52K8g2KfYsiDYuNmH2LEvLnRlc3QodCl9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDwxMj8i2YLYqNmEINin2LIg2LjZh9ixIjoi2KjYudivINin2LIg2LjZh9ixIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvYp9mF2LHZiNiyINiz2KfYudiqXSBMVCIsbmV4dERheToiW9mB2LHYr9inINiz2KfYudiqXSBMVCIsbmV4dFdlZWs6ImRkZGQgW9iz2KfYudiqXSBMVCIsbGFzdERheToiW9iv24zYsdmI2LIg2LPYp9i52KpdIExUIixsYXN0V2VlazoiZGRkZCBb2b7bjNi0XSBb2LPYp9i52KpdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiLYr9ixICVzIixwYXN0OiIlcyDZvtuM2LQiLHM6ItqG2YbYr9uM2YYg2KvYp9mG24zZhyIsbToi24zaqSDYr9mC24zZgtmHIixtbToiJWQg2K/ZgtuM2YLZhyIsaDoi24zaqSDYs9in2LnYqiIsaGg6IiVkINiz2KfYudiqIixkOiLbjNqpINix2YjYsiIsZGQ6IiVkINix2YjYsiIsTToi24zaqSDZhdin2YciLE1NOiIlZCDZhdin2YciLHk6ItuM2qkg2LPYp9mEIix5eToiJWQg2LPYp9mEIn0scHJlcGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvW9uwLdu5XS9nLGZ1bmN0aW9uKHQpe3JldHVybiBuW3RdfSkucmVwbGFjZSgv2IwvZywiLCIpfSxwb3N0Zm9y", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("IGU9MT09PXQ/ImQiOnQlMTA9PT0yPyJuYSI6Im1oIjtyZXR1cm4gdCtlfSx3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gc30pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgiZ2wiLHttb250aHM6IlhhbmVpcm9fRmVicmVpcm9fTWFyem9fQWJyaWxfTWFpb19YdcOxb19YdWxsb19BZ29zdG9fU2V0ZW1icm9fT3V0dWJyb19Ob3ZlbWJyb19EZWNlbWJybyIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiWGFuLl9GZWIuX01hci5fQWJyLl9NYWkuX1h1w7EuX1h1bC5fQWdvLl9TZXQuX091dC5fTm92Ll9EZWMuIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJEb21pbmdvX0x1bnNfTWFydGVzX03DqXJjb3Jlc19Yb3Zlc19WZW5yZXNfU8OhYmFkbyIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJEb20uX0x1bi5fTWFyLl9Nw6lyLl9Yb3YuX1Zlbi5fU8OhYi4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkRvX0x1X01hX03DqV9Yb19WZV9Tw6EiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJIOm1tIixMVFM6Ikg6bW06c3MiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBIOm1tIixMTExMOiJkZGRkIEQgTU1NTSBZWVlZIEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheTpmdW5jdGlvbigpe3JldHVybiJbaG94ZSAiKygxIT09dGhpcy5ob3VycygpPyLDoXMiOiLDoSIpKyJdIExUIn0sbmV4dERheTpmdW5jdGlvbigpe3JldHVybiJbbWHDscOhICIrKDEhPT10aGlzLmhvdXJzKCk/IsOhcyI6IsOhIikrIl0gTFQifSxuZXh0V2VlazpmdW5jdGlvbigpe3JldHVybiJkZGRkIFsiKygxIT09dGhpcy5ob3VycygpPyLDoXMiOiJhIikrIl0gTFQifSxsYXN0RGF5OmZ1bmN0aW9uKCl7cmV0dXJuIltvbnRlICIrKDEhPT10aGlzLmhvdXJzKCk/IsOhIjoiYSIpKyJdIExUIn0sbGFzdFdlZWs6ZnVuY3Rpb24oKXtyZXR1cm4iW29dIGRkZGQgW3Bhc2FkbyAiKygxIT09dGhpcy5ob3VycygpPyLDoXMiOiJhIikrIl0gTFQifSxzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOmZ1bmN0aW9uKHQpe3JldHVybiJ1bnMgc2VndW5kb3MiPT09dD8ibnVucyBzZWd1bmRvcyI6ImVuICIrdH0scGFzdDoiaGFpICVzIixzOiJ1bnMgc2VndW5kb3MiLG06InVuIG1pbnV0byIsbW06IiVkIG1pbnV0b3MiLGg6InVuaGEgaG9yYSIsaGg6IiVkIGhvcmFzIixkOiJ1biBkw61hIixkZDoiJWQgZMOtYXMiLE06InVuIG1lcyIsTU06IiVkIG1lc2VzIix5OiJ1biBhbm8iLHl5OiIlZCBhbm9zIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9wrovLG9yZGluYWw6IiVkwroiLHdlZWs6e2RvdzoxLGRveTo3fX0pO3JldHVybiBlfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPXQuZGVmaW5lTG9jYWxlKCJoZSIse21vbnRoczoi15nXoNeV15DXqF/XpNeR16jXldeQ16hf157XqNelX9eQ16TXqNeZ15xf157XkNeZX9eZ15XXoNeZX9eZ15XXnNeZX9eQ15XXkteV16HXmF/Xodek15jXnteR16hf15DXlden15jXldeR16hf16DXldeR157XkdeoX9eT16bXnteR16giLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6IteZ16DXldezX9ek15HXqNezX9ee16jXpV/XkNek16jXs1/XnteQ15lf15nXldeg15lf15nXldec15lf15DXldeS17Nf16HXpNeY17Nf15DXlden17Nf16DXldeR17Nf15PXptee17MiLnNwbGl0KCJfIiksd2Vla2RheXM6Iteo15DXqdeV159f16nXoNeZX9ep15zXmdep15lf16jXkdeZ16LXmV/Xl9ee15nXqdeZX9ep15nXqdeZX9ep15HXqiIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiLXkNezX9eR17Nf15LXs1/Xk9ezX9eU17Nf15XXs1/XqdezIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiLXkF/XkV/Xkl/Xk1/XlF/XlV/XqSIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC9NTS9ZWVlZIixMTDoiRCBb15FdTU1NTSBZWVlZIixMTEw6IkQgW9eRXU1NTU0gWVlZWSBISDptbSIsTExMTDoiZGRkZCwgRCBb15FdTU1NTSBZWVlZIEhIOm1tIixsOiJEL00vWVlZWSIsbGw6IkQgTU1NIFlZWVkiLGxsbDoiRCBNTU0gWVlZWSBISDptbSIsbGxsbDoiZGRkLCBEIE1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvXlNeZ15XXnSDXkda+XUxUIixuZXh0RGF5OiJb157Xl9eoINeR1r5dTFQiLG5leHRXZWVrOiJkZGRkIFvXkdep16LXlF0gTFQiLGxhc3REYXk6IlvXkNeq157XldecINeR1r5dTFQiLGxhc3RXZWVrOiJb15HXmdeV151dIGRkZGQgW9eU15DXl9eo15XXnyDXkdep16LXlF0gTFQiLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6IteR16LXldeTICVzIixwYXN0OiLXnNek16DXmSAlcyIsczoi157Xodek16gg16nXoNeZ15XXqiIsbToi15PXp9eUIixtbToiJWQg15PXp9eV16oiLGg6Itep16LXlCIsaGg6ZnVuY3Rpb24odCl7cmV0dXJuIDI9PT10PyLXqdei16rXmdeZ150iOnQrIiDXqdei15XXqiJ9LGQ6IteZ15XXnSIsZGQ6ZnVuY3Rpb24odCl7cmV0dXJuIDI9PT10PyLXmdeV157XmdeZ150iOnQrIiDXmdee15nXnSJ9LE06IteX15XXk9epIixNTTpmdW5jdGlvbih0KXtyZXR1cm4gMj09PXQ/IteX15XXk9ep15nXmdedIjp0KyIg15fXldeT16nXmdedIn0seToi16nXoNeUIix5eTpmdW5jdGlvbih0KXtyZXR1cm4gMj09PXQ/Itep16DXqteZ15nXnSI6dCUxMD09PTAmJjEwIT09dD90KyIg16nXoNeUIjp0KyIg16nXoNeZ150ifX0sbWVyaWRpZW1QYXJzZTov15DXl9eUItemfNec16TXoNeUItemfNeQ15fXqNeZINeU16bXlNeo15nXmdedfNec16TXoNeZINeU16bXlNeo15nXmdedfNec16TXoNeV16og15HXlden16h815HXkdeV16fXqHzXkdei16jXkS9pLGlzUE06ZnVuY3Rpb24odCl7cmV0dXJuL14o15DXl9eUItemfNeQ15fXqNeZINeU16bXlNeo15nXmdedfNeR16LXqNeRKSQvLnRlc3QodCl9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDw1PyLXnNek16DXldeqINeR15XXp9eoIjp0PDEwPyLXkdeR15XXp9eoIjp0PDEyP24/J9ec16TXoNeUItemJzoi15zXpNeg15kg15TXpteU16jXmdeZ150iOnQ8MTg/bj8n15DXl9eUItemJzoi15DXl9eo15kg15TXpteU16jXmdeZ150iOiLXkdei16jXkSJ9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9ezE6IuClpyIsMjoi4KWoIiwzOiLgpakiLDQ6IuClqiIsNToi4KWrIiw2OiLgpawiLDc6IuClrSIsODoi4KWuIiw5OiLgpa8iLDA6IuClpiJ9LG49eyLgpaciOiIxIiwi4KWoIjoiMiIsIuClqSI6IjMiLCLgpaoiOiI0Iiwi4KWrIjoiNSIsIuClrCI6IjYiLCLgpa0iOiI3Iiwi4KWuIjoiOCIsIuClryI6IjkiLCLgpaYiOiIwIn0saT10LmRlZmluZUxvY2FsZSgiaGkiLHttb250aHM6IuCknOCkqOCkteCksOClgF/gpKvgpLzgpLDgpLXgpLDgpYBf4KSu4KS+4KSw4KWN4KSaX+CkheCkquCljeCksOCliOCksl/gpK7gpIhf4KSc4KWC4KSoX+CknOClgeCksuCkvuCkiF/gpIXgpJfgpLjgpY3gpKRf4KS44KS/4KSk4KSu4KWN4KSs4KSwX+CkheCkleCljeCkn+ClguCkrOCksF/gpKjgpLXgpK7gpY3gpKzgpLBf4KSm4KS/4KS44KSu4KWN4KSs4KSwIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiLgpJzgpKguX+Ckq+CkvOCksC5f4KSu4KS+4KSw4KWN4KSaX+CkheCkquCljeCksOCliC5f4KSu4KSIX+CknOClguCkqF/gpJzgpYHgpLIuX+CkheCkly5f4KS44KS/4KSkLl/gpIXgpJXgpY3gpJ/gpYIuX+CkqOCktS5f4KSm4KS/4KS4LiIuc3BsaXQoIl8iKSx3ZWVrZGF5czoi4KSw4KS14KS/4KS14KS+4KSwX+CkuOCli+CkruCkteCkvuCksF/gpK7gpILgpJfgpLLgpLXgpL7gpLBf4KSs4KWB4KSn4KS14KS+4KSwX+Ckl+ClgeCksOClguCkteCkvuCksF/gpLbgpYHgpJXgpY3gpLDgpLXgpL7gpLBf4KS24KSo4KS/4KS14KS+4KSwIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IuCksOCkteCkv1/gpLjgpYvgpK5f4KSu4KSC4KSX4KSyX+CkrOClgeCkp1/gpJfgpYHgpLDgpYJf4KS24KWB4KSV4KWN4KSwX+CktuCkqOCkvyIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoi4KSwX+CkuOCli1/gpK7gpIJf4KSs4KWBX+Ckl+ClgV/gpLbgpYFf4KS2Ii5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiQSBoOm1tIOCkrOCknOClhyIsTFRTOiJBIGg6bW06c3Mg4KSs4KSc4KWHIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVksIEEgaDptbSDgpKzgpJzgpYciLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZLCBBIGg6bW0g4KSs4KSc4KWHIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvgpIbgpJxdIExUIixuZXh0RGF5OiJb4KSV4KSyXSBMVCIsbmV4dFdlZWs6ImRkZGQsIExUIixsYXN0RGF5OiJb4KSV4KSyXSBMVCIsbGFzdFdlZWs6IlvgpKrgpL/gpJvgpLLgpYddIGRkZGQsIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiIlcyDgpK7gpYfgpIIiLHBhc3Q6IiVzIOCkquCkueCksuClhyIsczoi4KSV4KWB4KSbIOCkueClgCDgpJXgpY3gpLfgpKMiLG06IuCkj+CklSDgpK7gpL/gpKjgpJ8iLG1tOiIlZCDgpK7gpL/gpKjgpJ8iLGg6IuCkj+CklSDgpJjgpILgpJ/gpL4iLGhoOiIlZCDgpJjgpILgpJ/gpYciLGQ6IuCkj+CklSDgpKbgpL/gpKgiLGRkOiIlZCDgpKbgpL/gpKgiLE06IuCkj+CklSDgpK7gpLngpYDgpKjgpYciLE1NOiIlZCDgpK7gpLngpYDgpKjgpYciLHk6IuCkj+CklSDgpLXgpLDgpY3gpLciLHl5OiIlZCDgpLXgpLDgpY3gpLcifSxwcmVwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9b4KWn4KWo4KWp4KWq4KWr4KWs4KWt4KWu4KWv4KWmXS9nLGZ1bmN0aW9uKHQpe3JldHVybiBuW3RdfSl9LHBvc3Rmb3JtYXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXGQvZyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0pfSxtZXJpZGllbVBhcnNlOi/gpLDgpL7gpKR84KS44KWB4KSs4KS5fOCkpuCli+CkquCkueCksHzgpLbgpL7gpK4vLG1lcmlkaWVtSG91cjpmdW5jdGlvbih0LGUpe3JldHVybiAxMj09PXQmJih0PTApLCLgpLDgpL7gpKQiPT09ZT90PDQ/dDp0KzEyOiLgpLjgpYHgpKzgpLkiPT09ZT90OiLgpKbgpYvgpKrgpLngpLAiPT09ZT90Pj0xMD90OnQrMTI6IuCktuCkvuCkriI9PT1lP3QrMTI6dm9pZCAwfSxtZXJpZGllbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ8ND8i4KSw4KS+4KSkIjp0PDEwPyLgpLjgpYHgpKzgpLkiOnQ8MTc/IuCkpuCli+CkquCkueCksCI6dDwyMD8i4KS24KS+4KSuIjoi4KSw4KS+4KSkIn0sd2Vlazp7ZG93OjAsZG95OjZ9fSk7cmV0dXJuIGl9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gZSh0LGUsbil7dmFyIGk9dCsiICI7c3dpdGNoKG4pe2Nhc2UibSI6cmV0dXJuIGU/ImplZG5hIG1pbnV0YSI6ImplZG5lIG1pbnV0ZSI7Y2FzZSJtbSI6cmV0dXJuIGkrPTE9PT10PyJtaW51dGEiOjI9PT10fHwzPT09dHx8ND09PXQ/Im1pbnV0ZSI6Im1pbnV0YSI7Y2FzZSJoIjpyZXR1cm4gZT8iamVkYW4gc2F0IjoiamVkbm9nIHNhdGEiO2Nhc2UiaGgiOnJldHVybiBpKz0xPT09dD8ic2F0IjoyPT09dHx8Mz09PXR8fDQ9PT10PyJzYXRhIjoic2F0aSI7Y2FzZSJkZCI6cmV0dXJuIGkrPTE9PT10PyJkYW4iOiJkYW5hIjtjYXNlIk1NIjpyZXR1cm4gaSs9MT09PXQ/Im1qZXNlYyI6Mj09PXR8fDM9PT10fHw0PT09dD8ibWplc2VjYSI6Im1qZXNlY2kiO2Nhc2UieXkiOnJldHVybiBpKz0xPT09dD8iZ29kaW5hIjoyPT09dHx8Mz09PXR8fDQ9PT10PyJnb2RpbmUiOiJnb2RpbmEifX12YXIgbj10LmRlZmluZUxvY2FsZSgiaHIiLHttb250aHM6e2Zvcm1hdDoic2lqZcSNbmphX3ZlbGphxI1lX2/FvnVqa2FfdHJhdm5qYV9zdmlibmphX2xpcG5qYV9zcnBuamFfa29sb3ZvemFfcnVqbmFfbGlzdG9wYWRhX3N0dWRlbm9nYV9wcm9zaW5jYSIuc3BsaXQoIl8iKSxzdGFuZGFsb25lOiJzaWplxI1hbmpfdmVsamHEjWFfb8W+dWpha190cmF2YW5qX3N2aWJhbmpfbGlwYW5qX3NycGFual9rb2xvdm96X3J1amFuX2xpc3RvcGFkX3N0dWRlbmlfcHJvc2luYWMiLnNwbGl0KCJfIil9LG1vbnRoc1Nob3J0OiJzaWouX3ZlbGouX2/FvnUuX3RyYS5fc3ZpLl9saXAuX3NycC5fa29sLl9ydWouX2xpcy5fc3R1Ll9wcm8uIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJuZWRqZWxqYV9wb25lZGplbGpha191dG9yYWtfc3JpamVkYV/EjWV0dnJ0YWtfcGV0YWtfc3Vib3RhIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6Im5lZC5fcG9uLl91dG8uX3NyaS5fxI1ldC5fcGV0Ll9zdWIuIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJuZV9wb191dF9zcl/EjWVfcGVfc3UiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJIOm1tIixMVFM6Ikg6bW06c3MiLEw6IkRELiBNTS4gWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFlZWVkgSDptbSIsTExMTDoiZGRkZCwgRC4gTU1NTSBZWVlZIEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW2RhbmFzIHVdIExUIixuZXh0RGF5OiJbc3V0cmEgdV0gTFQiLG5leHRXZWVrOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuZGF5KCkpe2Nhc2UgMDpyZXR1cm4iW3VdIFtuZWRqZWxqdV0gW3VdIExUIjtjYXNlIDM6cmV0dXJuIlt1XSBbc3JpamVkdV0gW3VdIExUIjtjYXNlIDY6cmV0dXJuIlt1XSBbc3Vib3R1XSBbdV0gTFQiO2Nhc2UgMTpjYXNlIDI6Y2FzZSA0OmNhc2UgNTpyZXR1cm4iW3VdIGRkZGQgW3VdIExUIn19LGxhc3REYXk6IltqdcSNZXIgdV0gTFQiLGxhc3RXZWVrOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuZGF5KCkpe2Nhc2UgMDpjYXNlIDM6cmV0dXJuIltwcm/FoWx1XSBkZGRkIFt1XSBMVCI7Y2FzZSA2OnJldHVybiJbcHJvxaFsZV0gW3N1Ym90ZV0gW3VdIExUIjtjYXNlIDE6Y2FzZSAyOmNhc2UgNDpjYXNlIDU6cmV0dXJuIltwcm/FoWxpXSBkZGRkIFt1XSBMVCJ9fSxzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJ6YSAlcyIscGFzdDoicHJpamUgJXMiLHM6InBhciBzZWt1bmRpIixtOmUsbW06ZSxoOmUsaGg6ZSxkOiJkYW4iLGRkOmUsTToibWplc2VjIixNTTplLHk6ImdvZGludSIseXk6ZQp9LG9yZA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("pa/gpaZdL2csZnVuY3Rpb24odCl7cmV0dXJuIGlbdF19KX0scG9zdGZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cZC9nLGZ1bmN0aW9uKHQpe3JldHVybiBuW3RdfSl9LG1lcmlkaWVtUGFyc2U6L+CksOCkvuCkpOCljeCksOClgHzgpLjgpJXgpL7gpLPgpYB84KSm4KWB4KSq4KS+4KSw4KWAfOCkuOCkvuCkr+CkguCkleCkvuCks+ClgC8sbWVyaWRpZW1Ib3VyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIDEyPT09dCYmKHQ9MCksIuCksOCkvuCkpOCljeCksOClgCI9PT1lP3Q8ND90OnQrMTI6IuCkuOCkleCkvuCks+ClgCI9PT1lP3Q6IuCkpuClgeCkquCkvuCksOClgCI9PT1lP3Q+PTEwP3Q6dCsxMjoi4KS44KS+4KSv4KSC4KSV4KS+4KSz4KWAIj09PWU/dCsxMjp2b2lkIDB9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDw0PyLgpLDgpL7gpKTgpY3gpLDgpYAiOnQ8MTA/IuCkuOCkleCkvuCks+ClgCI6dDwxNz8i4KSm4KWB4KSq4KS+4KSw4KWAIjp0PDIwPyLgpLjgpL7gpK/gpILgpJXgpL7gpLPgpYAiOiLgpLDgpL7gpKTgpY3gpLDgpYAifSx3ZWVrOntkb3c6MCxkb3k6Nn19KTtyZXR1cm4gcn0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgibXMiLHttb250aHM6IkphbnVhcmlfRmVicnVhcmlfTWFjX0FwcmlsX01laV9KdW5fSnVsYWlfT2dvc19TZXB0ZW1iZXJfT2t0b2Jlcl9Ob3ZlbWJlcl9EaXNlbWJlciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSmFuX0ZlYl9NYWNfQXByX01laV9KdW5fSnVsX09nc19TZXBfT2t0X05vdl9EaXMiLnNwbGl0KCJfIiksd2Vla2RheXM6IkFoYWRfSXNuaW5fU2VsYXNhX1JhYnVfS2hhbWlzX0p1bWFhdF9TYWJ0dSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJBaGRfSXNuX1NlbF9SYWJfS2hhX0p1bV9TYWIiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkFoX0lzX1NsX1JiX0ttX0ptX1NiIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEgubW0iLExUUzoiSEgubW0uc3MiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBbcHVrdWxdIEhILm1tIixMTExMOiJkZGRkLCBEIE1NTU0gWVlZWSBbcHVrdWxdIEhILm1tIn0sbWVyaWRpZW1QYXJzZTovcGFnaXx0ZW5nYWhhcml8cGV0YW5nfG1hbGFtLyxtZXJpZGllbUhvdXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gMTI9PT10JiYodD0wKSwicGFnaSI9PT1lP3Q6InRlbmdhaGFyaSI9PT1lP3Q+PTExP3Q6dCsxMjoicGV0YW5nIj09PWV8fCJtYWxhbSI9PT1lP3QrMTI6dm9pZCAwfSxtZXJpZGllbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ8MTE/InBhZ2kiOnQ8MTU/InRlbmdhaGFyaSI6dDwxOT8icGV0YW5nIjoibWFsYW0ifSxjYWxlbmRhcjp7c2FtZURheToiW0hhcmkgaW5pIHB1a3VsXSBMVCIsbmV4dERheToiW0Vzb2sgcHVrdWxdIExUIixuZXh0V2VlazoiZGRkZCBbcHVrdWxdIExUIixsYXN0RGF5OiJbS2VsbWFyaW4gcHVrdWxdIExUIixsYXN0V2VlazoiZGRkZCBbbGVwYXMgcHVrdWxdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJkYWxhbSAlcyIscGFzdDoiJXMgeWFuZyBsZXBhcyIsczoiYmViZXJhcGEgc2FhdCIsbToic2VtaW5pdCIsbW06IiVkIG1pbml0IixoOiJzZWphbSIsaGg6IiVkIGphbSIsZDoic2VoYXJpIixkZDoiJWQgaGFyaSIsTToic2VidWxhbiIsTU06IiVkIGJ1bGFuIix5OiJzZXRhaHVuIix5eToiJWQgdGFodW4ifSx3ZWVrOntkb3c6MSxkb3k6N319KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgibXMtbXkiLHttb250aHM6IkphbnVhcmlfRmVicnVhcmlfTWFjX0FwcmlsX01laV9KdW5fSnVsYWlfT2dvc19TZXB0ZW1iZXJfT2t0b2Jlcl9Ob3ZlbWJlcl9EaXNlbWJlciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSmFuX0ZlYl9NYWNfQXByX01laV9KdW5fSnVsX09nc19TZXBfT2t0X05vdl9EaXMiLnNwbGl0KCJfIiksd2Vla2RheXM6IkFoYWRfSXNuaW5fU2VsYXNhX1JhYnVfS2hhbWlzX0p1bWFhdF9TYWJ0dSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJBaGRfSXNuX1NlbF9SYWJfS2hhX0p1bV9TYWIiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkFoX0lzX1NsX1JiX0ttX0ptX1NiIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEgubW0iLExUUzoiSEgubW0uc3MiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBbcHVrdWxdIEhILm1tIixMTExMOiJkZGRkLCBEIE1NTU0gWVlZWSBbcHVrdWxdIEhILm1tIn0sbWVyaWRpZW1QYXJzZTovcGFnaXx0ZW5nYWhhcml8cGV0YW5nfG1hbGFtLyxtZXJpZGllbUhvdXI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gMTI9PT10JiYodD0wKSwicGFnaSI9PT1lP3Q6InRlbmdhaGFyaSI9PT1lP3Q+PTExP3Q6dCsxMjoicGV0YW5nIj09PWV8fCJtYWxhbSI9PT1lP3QrMTI6dm9pZCAwfSxtZXJpZGllbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ8MTE/InBhZ2kiOnQ8MTU/InRlbmdhaGFyaSI6dDwxOT8icGV0YW5nIjoibWFsYW0ifSxjYWxlbmRhcjp7c2FtZURheToiW0hhcmkgaW5pIHB1a3VsXSBMVCIsbmV4dERheToiW0Vzb2sgcHVrdWxdIExUIixuZXh0V2VlazoiZGRkZCBbcHVrdWxdIExUIixsYXN0RGF5OiJbS2VsbWFyaW4gcHVrdWxdIExUIixsYXN0V2VlazoiZGRkZCBbbGVwYXMgcHVrdWxdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJkYWxhbSAlcyIscGFzdDoiJXMgeWFuZyBsZXBhcyIsczoiYmViZXJhcGEgc2FhdCIsbToic2VtaW5pdCIsbW06IiVkIG1pbml0IixoOiJzZWphbSIsaGg6IiVkIGphbSIsZDoic2VoYXJpIixkZDoiJWQgaGFyaSIsTToic2VidWxhbiIsTU06IiVkIGJ1bGFuIix5OiJzZXRhaHVuIix5eToiJWQgdGFodW4ifSx3ZWVrOntkb3c6MSxkb3k6N319KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT17MToi4YGBIiwyOiLhgYIiLDM6IuGBgyIsNDoi4YGEIiw1OiLhgYUiLDY6IuGBhiIsNzoi4YGHIiw4OiLhgYgiLDk6IuGBiSIsMDoi4YGAIn0sbj17IuGBgSI6IjEiLCLhgYIiOiIyIiwi4YGDIjoiMyIsIuGBhCI6IjQiLCLhgYUiOiI1Iiwi4YGGIjoiNiIsIuGBhyI6IjciLCLhgYgiOiI4Iiwi4YGJIjoiOSIsIuGBgCI6IjAifSxpPXQuZGVmaW5lTG9jYWxlKCJteSIse21vbnRoczoi4YCH4YCU4YC64YCU4YCd4YCr4YCb4YCuX+GAluGAseGAluGAseGArOGAuuGAneGAq+GAm+GArl/hgJnhgJDhgLpf4YCn4YCV4YC84YCuX+GAmeGAsV/hgIfhgL3hgJThgLpf4YCH4YCw4YCc4YCt4YCv4YCE4YC6X+GAnuGAvOGAguGAr+GAkOGAul/hgIXhgIDhgLrhgJDhgIThgLrhgJjhgKxf4YCh4YCx4YCs4YCA4YC64YCQ4YCt4YCv4YCY4YCsX+GAlOGAreGAr+GAneGAhOGAuuGAmOGArF/hgJLhgK7hgIfhgIThgLrhgJjhgKwiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6IuGAh+GAlOGAul/hgJbhgLFf4YCZ4YCQ4YC6X+GAleGAvOGArl/hgJnhgLFf4YCH4YC94YCU4YC6X+GAnOGAreGAr+GAhOGAul/hgJ7hgLxf4YCF4YCA4YC6X+GAoeGAseGArOGAgOGAul/hgJThgK3hgK9f4YCS4YCuIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLhgJDhgJThgIThgLrhgLnhgILhgJThgL3hgLFf4YCQ4YCU4YCE4YC64YC54YCc4YCsX+GAoeGAhOGAuuGAueGAguGAq1/hgJfhgK/hgJLhgLnhgJPhgJ/hgLDhgLhf4YCA4YC84YCs4YCe4YCV4YCQ4YCx4YC4X+GAnuGAseGArOGAgOGAvOGArF/hgIXhgJThgLEiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoi4YCU4YC94YCxX+GAnOGArF/hgILhgKtf4YCf4YCw4YC4X+GAgOGAvOGArF/hgJ7hgLHhgKxf4YCU4YCxIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiLhgJThgL3hgLFf4YCc4YCsX+GAguGAq1/hgJ/hgLDhgLhf4YCA4YC84YCsX+GAnuGAseGArF/hgJThgLEiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQvTU0vWVlZWSIsTEw6IkQgTU1NTSBZWVlZIixMTEw6IkQgTU1NTSBZWVlZIEhIOm1tIixMTExMOiJkZGRkIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvhgJrhgJThgLEuXSBMVCBb4YCZ4YC+4YCsXSIsbmV4dERheToiW+GAmeGAlOGAgOGAuuGAluGAvOGAlOGAul0gTFQgW+GAmeGAvuGArF0i", "base64"));
  res.write(new Buffer("LG5leHRXZWVrOiJkZGRkIExUIFvhgJnhgL7hgKxdIixsYXN0RGF5OiJb4YCZ4YCU4YCxLuGAgF0gTFQgW+GAmeGAvuGArF0iLGxhc3RXZWVrOiJb4YCV4YC84YCu4YC44YCB4YCy4YC34YCe4YCx4YCsXSBkZGRkIExUIFvhgJnhgL7hgKxdIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiLhgJzhgKzhgJnhgIrhgLrhgLcgJXMg4YCZ4YC+4YCsIixwYXN0OiLhgJzhgL3hgJThgLrhgIHhgLLhgLfhgJ7hgLHhgKwgJXMg4YCAIixzOiLhgIXhgIDhgLnhgIDhgJThgLou4YCh4YCU4YCK4YC64YC44YCE4YCa4YC6IixtOiLhgJDhgIXhgLrhgJnhgK3hgJThgIXhgLoiLG1tOiIlZCDhgJnhgK3hgJThgIXhgLoiLGg6IuGAkOGAheGAuuGAlOGArOGAm+GAriIsaGg6IiVkIOGAlOGArOGAm+GAriIsZDoi4YCQ4YCF4YC64YCb4YCA4YC6IixkZDoiJWQg4YCb4YCA4YC6IixNOiLhgJDhgIXhgLrhgJwiLE1NOiIlZCDhgJwiLHk6IuGAkOGAheGAuuGAlOGAvuGAheGAuiIseXk6IiVkIOGAlOGAvuGAheGAuiJ9LHByZXBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1vhgYHhgYLhgYPhgYThgYXhgYbhgYfhgYjhgYnhgYBdL2csZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KX0scG9zdGZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cZC9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9LHdlZWs6e2RvdzoxLGRveTo0fX0pO3JldHVybiBpfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPXQuZGVmaW5lTG9jYWxlKCJuYiIse21vbnRoczoiamFudWFyX2ZlYnJ1YXJfbWFyc19hcHJpbF9tYWlfanVuaV9qdWxpX2F1Z3VzdF9zZXB0ZW1iZXJfb2t0b2Jlcl9ub3ZlbWJlcl9kZXNlbWJlciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiamFuLl9mZWIuX21hcnNfYXByaWxfbWFpX2p1bmlfanVsaV9hdWcuX3NlcC5fb2t0Ll9ub3YuX2Rlcy4iLnNwbGl0KCJfIiksd2Vla2RheXM6InPDuG5kYWdfbWFuZGFnX3RpcnNkYWdfb25zZGFnX3RvcnNkYWdfZnJlZGFnX2zDuHJkYWciLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoic8O4Ll9tYS5fdGkuX29uLl90by5fZnIuX2zDuC4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46InPDuF9tYV90aV9vbl90b19mcl9sw7giLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQuTU0uWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFk=", "base64"));
  res.write(new Buffer("WVlZIFtrbC5dIEhIOm1tIixMTExMOiJkZGRkIEQuIE1NTU0gWVlZWSBba2wuXSBISDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbaSBkYWcga2wuXSBMVCIsbmV4dERheToiW2kgbW9yZ2VuIGtsLl0gTFQiLG5leHRXZWVrOiJkZGRkIFtrbC5dIExUIixsYXN0RGF5OiJbaSBnw6VyIGtsLl0gTFQiLApsYXN0V2VlazoiW2ZvcnJpZ2VdIGRkZGQgW2tsLl0gTFQiLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6Im9tICVzIixwYXN0OiJmb3IgJXMgc2lkZW4iLHM6Im5vZW4gc2VrdW5kZXIiLG06ImV0dCBtaW51dHQiLG1tOiIlZCBtaW51dHRlciIsaDoiZW4gdGltZSIsaGg6IiVkIHRpbWVyIixkOiJlbiBkYWciLGRkOiIlZCBkYWdlciIsTToiZW4gbcOlbmVkIixNTToiJWQgbcOlbmVkZXIiLHk6ImV0dCDDpXIiLHl5OiIlZCDDpXIifSxvcmRpbmFsUGFyc2U6L1xkezEsMn1cLi8sb3JkaW5hbDoiJWQuIix3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT17MToi4KWnIiwyOiLgpagiLDM6IuClqSIsNDoi4KWqIiw1OiLgpasiLDY6IuClrCIsNzoi4KWtIiw4OiLgpa4iLDk6IuClryIsMDoi4KWmIn0sbj17IuClpyI6IjEiLCLgpagiOiIyIiwi4KWpIjoiMyIsIuClqiI6IjQiLCLgpasiOiI1Iiwi4KWsIjoiNiIsIuClrSI6IjciLCLgpa4iOiI4Iiwi4KWvIjoiOSIsIuClpiI6IjAifSxpPXQuZGVmaW5lTG9jYWxlKCJuZSIse21vbnRoczoi4KSc4KSo4KS14KSw4KWAX+Ckq+Clh+CkrOCljeCksOClgeCkteCksOClgF/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KS/4KSyX+CkruCkiF/gpJzgpYHgpKhf4KSc4KWB4KSy4KS+4KSIX+CkheCkl+Ckt+CljeCkn1/gpLjgpYfgpKrgpY3gpJ/gpYfgpK7gpY3gpKzgpLBf4KSF4KSV4KWN4KSf4KWL4KSs4KSwX+CkqOCli+CkreClh+CkruCljeCkrOCksF/gpKHgpL/gpLjgpYfgpK7gpY3gpKzgpLAiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6IuCknOCkqC5f4KSr4KWH4KSs4KWN4KSw4KWBLl/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KS/Ll/gpK7gpIhf4KSc4KWB4KSoX+CknOClgeCksuCkvuCkiC5f4KSF4KSXLl/gpLjgpYfgpKrgpY3gpJ8uX+CkheCkleCljeCkn+Cliy5f4KSo4KWL4KSt4KWHLl/gpKHgpL/gpLjgpYcuIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLgpIbgpIfgpKTgpKzgpL7gpLBf4KS44KWL4KSu4KSs4KS+4KSwX+CkruCkmeCljeCkl+CksuCkrOCkvuCksF/gpKzgpYHgpKfgpKzgpL7gpLBf4KSs4KS/4KS54KS/4KSs4KS+4KSwX+CktuClgeCkleCljeCksOCkrOCkvuCksF/gpLbgpKjgpL/gpKzgpL7gpLAiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoi4KSG4KSH4KSkLl/gpLjgpYvgpK4uX+CkruCkmeCljeCkl+Cksi4=", "base64"));
  res.write(new Buffer("X+CkrOClgeCkpy5f4KSs4KS/4KS54KS/Ll/gpLbgpYHgpJXgpY3gpLAuX+CktuCkqOCkvy4iLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IuCkhi5f4KS44KWLLl/gpK7gpIIuX+CkrOClgS5f4KSs4KS/Ll/gpLbgpYEuX+Ckti4iLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJB4KSV4KWLIGg6bW0g4KSs4KSc4KWHIixMVFM6IkHgpJXgpYsgaDptbTpzcyDgpKzgpJzgpYciLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSwgQeCkleCliyBoOm1tIOCkrOCknOClhyIsTExMTDoiZGRkZCwgRCBNTU1NIFlZWVksIEHgpJXgpYsgaDptbSDgpKzgpJzgpYcifSxwcmVwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9b4KWn4KWo4KWp4KWq4KWr4KWs4KWt4KWu4KWv4KWmXS9nLGZ1bmN0aW9uKHQpe3JldHVybiBuW3RdfSl9LHBvc3Rmb3JtYXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXGQvZyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0pfSxtZXJpZGllbVBhcnNlOi/gpLDgpL7gpKTgpL984KSs4KS/4KS54KS+4KSofOCkpuCkv+CkieCkgeCkuOCli3zgpLjgpL7gpIHgpJ0vLG1lcmlkaWVtSG91cjpmdW5jdGlvbih0LGUpe3JldHVybiAxMj09PXQmJih0PTApLCLgpLDgpL7gpKTgpL8iPT09ZT90PDQ/dDp0KzEyOiLgpKzgpL/gpLngpL7gpKgiPT09ZT90OiLgpKbgpL/gpIngpIHgpLjgpYsiPT09ZT90Pj0xMD90OnQrMTI6IuCkuOCkvuCkgeCknSI9PT1lP3QrMTI6dm9pZCAwfSxtZXJpZGllbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ8Mz8i4KSw4KS+4KSk4KS/Ijp0PDEyPyLgpKzgpL/gpLngpL7gpKgiOnQ8MTY/IuCkpuCkv+CkieCkgeCkuOCliyI6dDwyMD8i4KS44KS+4KSB4KSdIjoi4KSw4KS+4KSk4KS/In0sY2FsZW5kYXI6e3NhbWVEYXk6IlvgpIbgpJxdIExUIixuZXh0RGF5OiJb4KSt4KWL4KSy4KS/XSBMVCIsbmV4dFdlZWs6IlvgpIbgpIngpIHgpKbgpYtdIGRkZGRbLF0gTFQiLGxhc3REYXk6IlvgpLngpL/gpJzgpYtdIExUIixsYXN0V2VlazoiW+Ckl+Ckj+CkleCli10gZGRkZFssXSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToiJXPgpK7gpL4iLHBhc3Q6IiVzIOCkheCkl+CkvuCkoeCkvyIsczoi4KSV4KWH4KS54KWAIOCkleCljeCkt+CkoyIsbToi4KSP4KSVIOCkruCkv+CkqOClh+CknyIsbW06IiVkIOCkruCkv+CkqOClh+CknyIsaDoi4KSP4KSVIOCkmOCko+CljeCkn+CkviIsaGg6IiVkIOCkmOCko+CljeCkn+CkviIsZDoi4KSP4KSVIOCkpuCkv+CkqCIsZGQ6IiVkIOCkpuCkv+CkqCIsTToi4KSP4KSVIOCkruCkueCkv+CkqOCkviIsTU06IiVkIOCkruCkueCkv+CkqOCkviIseToi4KSP4KSVIOCkrOCksOCljeCktyIseXk6IiVkIOCkrOCksOCljeCktyJ9LHdlZWs6e2RvdzowLGRveTo2fX0pO3JldHVybiBpfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPSJqYW4uX2ZlYi5fbXJ0Ll9hcHIuX21laV9qdW4uX2p1bC5fYXVnLl9zZXAuX29rdC5fbm92Ll9kZWMuIi5zcGxpdCgiXyIpLG49Imphbl9mZWJfbXJ0X2Fwcl9tZWlfanVuX2p1bF9hdWdfc2VwX29rdF9ub3ZfZGVjIi5zcGxpdCgiXyIpLGk9dC5kZWZpbmVMb2NhbGUoIm5sIix7bW9udGhzOiJqYW51YXJpX2ZlYnJ1YXJpX21hYXJ0X2FwcmlsX21laV9qdW5pX2p1bGlfYXVndXN0dXNfc2VwdGVtYmVyX29rdG9iZXJfbm92ZW1iZXJfZGVjZW1iZXIiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6ZnVuY3Rpb24odCxpKXtyZXR1cm4vLU1NTS0vLnRlc3QoaSk/blt0Lm1vbnRoKCldOmVbdC5tb250aCgpXX0sd2Vla2RheXM6InpvbmRhZ19tYWFuZGFnX2RpbnNkYWdfd29lbnNkYWdfZG9uZGVyZGFnX3ZyaWpkYWdfemF0ZXJkYWciLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoiem8uX21hLl9kaS5fd28uX2RvLl92ci5femEuIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJab19NYV9EaV9Xb19Eb19Wcl9aYSIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC1NTS1ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQgRCBNTU1NIFlZWVkgSEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW3ZhbmRhYWcgb21dIExUIixuZXh0RGF5OiJbbW9yZ2VuIG9tXSBMVCIsbmV4dFdlZWs6ImRkZGQgW29tXSBMVCIsbGFzdERheToiW2dpc3RlcmVuIG9tXSBMVCIsbGFzdFdlZWs6IlthZmdlbG9wZW5dIGRkZGQgW29tXSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToib3ZlciAlcyIscGFzdDoiJXMgZ2VsZWRlbiIsczoiZWVuIHBhYXIgc2Vjb25kZW4iLG06IsOpw6luIG1pbnV1dCIsbW06IiVkIG1pbnV0ZW4iLGg6IsOpw6luIHV1ciIsaGg6IiVkIHV1ciIsZDoiw6nDqW4gZGFnIixkZDoiJWQgZGFnZW4iLE06IsOpw6luIG1hYW5kIixNTToiJWQgbWFhbmRlbiIseToiw6nDqW4gamFhciIseXk6IiVkIGphYXIifSxvcmRpbmFsUGFyc2U6L1xkezEsMn0oc3RlfGRlKS8sb3JkaW5hbDpmdW5jdGlvbih0KXtyZXR1cm4gdCsoMT09PXR8fDg9PT10fHx0Pj0yMD8ic3RlIjoiZGUiKX0sd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIGl9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoIm5uIix7bW9udGhzOiJqYW51YXJfZmVicnVhcl9tYXJzX2FwcmlsX21haV9qdW5pX2p1bGlfYXVndXN0X3NlcHRlbWJlcl9va3RvYmVyX25vdmVtYmVyX2Rlc2VtYmVyIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiJqYW5fZg==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("SGVpZ2h0PXQuZC5vcmlnSGVpZ2h0fHxuLHQuZC5vcmlnV2lkdGg9dC5kLm9yaWdXaWR0aHx8aTt2YXIgbD10Lm8ubWF4SGVpZ2h0P3QuZ2V0VmFsKHQuby5tYXhIZWlnaHQsImgiKTpudWxsLGM9dC5vLm1heFdpZHRoP3QuZ2V0VmFsKHQuby5tYXhXaWR0aCwidyIpOm51bGwsdT1sJiZsPG9bMF0/bDpvWzBdLGQ9YyYmYzxvWzFdP2M6b1sxXSxoPXQuby5taW5IZWlnaHQ/dC5nZXRWYWwodC5vLm1pbkhlaWdodCwiaCIpOiJhdXRvIjtuPW4/dC5vLmF1dG9SZXNpemUmJm4+dT91Om48aD9oOm46cj9yPnU/dTp0Lm8ubWluSGVpZ2h0JiYiYXV0byIhPT1oJiZyPGg/aDpyOmg7dmFyIHA9dC5vLm1pbldpZHRoP3QuZ2V0VmFsKHQuby5taW5XaWR0aCwidyIpOiJhdXRvIjtpPWk/dC5vLmF1dG9SZXNpemUmJmk+ZD9kOmk8cD9wOmk6cz9zPmQ/ZDp0Lm8ubWluV2lkdGgmJiJhdXRvIiE9PXAmJnM8cD9wOnM6cCx0LmQuY29udGFpbmVyLmNzcyh7aGVpZ2h0Om4sd2lkdGg6aX0pLHQuZC53cmFwLmNzcyh7b3ZlcmZsb3c6cj5ufHxzPmk/ImF1dG8iOiJ2aXNpYmxlIn0pLHQuby5hdXRvUG9zaXRpb24mJnQuc2V0UG9zaXRpb24oKX0sc2V0UG9zaXRpb246ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcyxpPW9bMF0vMi1uLmQuY29udGFpbmVyLm91dGVySGVpZ2h0KCEwKS8yLHM9b1sxXS8yLW4uZC5jb250YWluZXIub3V0ZXJXaWR0aCghMCkvMixhPSJmaXhlZCIhPT1uLmQuY29udGFpbmVyLmNzcygicG9zaXRpb24iKT9yLnNjcm9sbFRvcCgpOjA7bi5vLnBvc2l0aW9uJiYiW29iamVjdCBBcnJheV0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG4uby5wb3NpdGlvbik/KHQ9YSsobi5vLnBvc2l0aW9uWzBdfHxpKSxlPW4uby5wb3NpdGlvblsxXXx8cyk6KHQ9YStpLGU9cyksbi5kLmNvbnRhaW5lci5jc3Moe2xlZnQ6ZSx0b3A6dH0pfSx3YXRjaFRhYjpmdW5jdGlvbihlKXt2YXIgbj10aGlzO2lmKHQoZS50YXJnZXQpLnBhcmVudHMoIi5zaW1wbGVtb2RhbC1jb250YWluZXItbmV3IikubGVuZ3RoPjApe2lmKG4uaW5wdXRzPXQoIjppbnB1dDplbmFibGVkOnZpc2libGU6Zmlyc3QsIDppbnB1dDplbmFibGVkOnZpc2libGU6bGFzdCIsbi5kLmRhdGFbMF0pLCFlLnNoaWZ0S2V5JiZlLnRhcmdldD09PW4uaW5wdXRzW24uaW5wdXRzLmxlbmd0aC0xXXx8ZS5zaGlmdEtleSYmZS50YXJnZXQ9PT1uLmlucHV0c1swXXx8MD09PW4uaW5wdXRzLmxlbmd0aCl7ZS5wcmV2ZW50RGVmYXVsdCgpO3ZhciBpPWUuc2hpZnRLZXk/Imxhc3QiOiJmaXJzdCI7bi5mb2N1cyhpKX19ZWxzZSBlLnByZXZlbnREZWZhdWx0KCksbi5mb2N1cygpfSxvcGVuOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztlLmQuaWZyYW1lJiZlLmQuaWZyYW1lLnNob3coKSx0LmlzRnVuY3Rpb24oZS5vLm9uT3Blbik/ZS5vLm9uT3Blbi5hcHBseShlLFtlLmRdKTooZS5kLm92ZXJsYXkuc2hvdygpLGUuZC5jb250YWluZXIuc2hvdygpLGUuZC5kYXRhLnNob3coKSksZS5vLmZvY3VzJiZlLmZvY3VzKCksZS5iaW5kRXZlbnRzKCl9LGNsb3NlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztpZighZS5kLmRhdGEpcmV0dXJuITE7aWYoZS51bmJpbmRFdmVudHMoKSx0LmlzRnVuY3Rpb24oZS5vLm9uQ2xvc2UpJiYhZS5vY2NiKWUub2NjYj0hMCxlLm8ub25DbG9zZS5hcHBseShlLFtlLmRdKTtlbHNle2lmKGUuZC5wbGFjZWhvbGRlcil7dmFyIG49dCgiI3NpbXBsZW1vZGFsLXBsYWNlaG9sZGVyIik7ZS5vLnBlcnNpc3Q/bi5yZXBsYWNlV2l0aChlLmQuZGF0YS5yZW1vdmVDbGFzcygic2ltcGxlbW9kYWwtZGF0YSIpLmNzcygiZGlzcGxheSIsZS5kaXNwbGF5KSk6KGUuZC5kYXRhLmhpZGUoKS5yZW1vdmUoKSxuLnJlcGxhY2VXaXRoKGUuZC5vcmlnKSl9ZWxzZSBlLmQuZGF0YS5oaWRlKCkucmVtb3ZlKCk7ZS5kLmNvbnRhaW5lci5oaWRlKCkucmVtb3ZlKCksZS5kLm92ZXJsYXkuaGlkZSgpLGUuZC5pZnJhbWUmJmUuZC5pZnJhbWUuaGlkZSgpLnJlbW92ZSgpLGUuZC5vdmVybGF5LnJlbW92ZSgpLGUuZD17fX19fX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMyOCksbig0NzApLG4oNTExKSxuKDU2NildLHI9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXtsaW5lczo5LGxlbmd0aDowLHdpZHRoOjgscmFkaXVzOjEyLGNvcm5lcnM6MSxyb3RhdGU6MjMsZGlyZWN0aW9uOjEsY29sb3I6IiM2NjYiLHNwZWVkOi44LHRyYWlsOjUwLHNoYWRvdzohMSxod2FjY2VsOiExLGNsYXNzTmFtZToiIix6SW5kZXg6MmU5LHRvcDoiYXV0byIsbGVmdDoiYXV0byJ9O3JldHVybiBlLmV4dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXt0aGlzLnNwaW5PcHRpb25zfHwodGhpcy5zcGluT3B0aW9ucz17fSksdC5kZWZhdWx0cyh0aGlzLnNwaW5PcHRpb25zLGkpLGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxyZW5kZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zcGluQXRSZW5kZXJ8fHRoaXMuJGVsLmhpZGUoKSxlLnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuc3BpbkF0UmVuZGVyJiZ0aGlzLnNwaW4oKSx0aGlzfSxzcGluOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGVsLnNwaW4odGhpcy5zcGluT3B0aW9ucykuc2hvdygpLHRoaXN9LGVtcHR5OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy4kZWw7dC5mYWRlT3V0KG4uTE9BRElOR19GQURFLGZ1bmN0aW9uKCl7dC5zcGluKCExKX0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzMyKSxuKDU2NyldLHI9ZnVuY3Rpb24odCxlKXt0LmZuLnNwaW49ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe3RyeXt2YXIgaT10KHRoaXMpLHI9aS5kYXRhKCk7ci5zcGlubmVyJiYoci5zcGlubmVyLnN0b3AoKSxkZWxldGUgci5zcGlubmVyKSxuIT09ITEmJihyLnNwaW5uZXI9bmV3IGUodC5leHRlbmQoe2NvbG9yOmkuY3NzKCJjb2xvciIpfSxuKSkuc3Bpbih0aGlzKSl9Y2F0Y2gobyl7d2luZG93LmNvbnNvbGUmJndpbmRvdy5jb25zb2xlLmVycm9yKG8pfX0pLHRoaXN9fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyOyhmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIG89ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9OyFmdW5jdGlvbihzLGEpeyJvYmplY3QiPT1vKHQpJiZ0LmV4cG9ydHM/dC5leHBvcnRzPWEoKTooaT1hLHI9ImZ1bmN0aW9uIj09dHlwZW9mIGk/aS5jYWxsKGUsbixlLHQpOmksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKSl9KHZvaWQgMCxmdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt2YXIgbixpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodHx8ImRpdiIpO2ZvcihuIGluIGUpaVtuXT1lW25dO3JldHVybiBpfWZ1bmN0aW9uIGUodCl7Zm9yKHZhciBlPTEsbj1hcmd1bWVudHMubGVuZ3RoO2U8bjtlKyspdC5hcHBlbmRDaGlsZChhcmd1bWVudHNbZV0pO3JldHVybiB0fWZ1bmN0aW9uIG4odCxlLG4saSl7dmFyIHI9WyJvcGFjaXR5IixlLH5+KDEwMCp0KSxuLGldLmpvaW4oIi0iKSxvPS4wMStuL2kqMTAwLHM9TWF0aC5tYXgoMS0oMS10KS9lKigxMDAtbyksdCksYT1jLnN1YnN0cmluZygwLGMuaW5kZXhPZigiQW5pbWF0aW9uIikpLnRvTG93ZXJDYXNlKCksbD1hJiYiLSIrYSsiLSJ8fCIiO3JldHVybiBoW3JdfHwodS5pbnNlcnRSdWxlKCJAIitsKyJrZXlmcmFtZXMgIityKyJ7MCV7b3BhY2l0eToiK3MrIn0iK28rIiV7b3BhY2l0eToiK3QrIn0iKyhvKy4wMSkrIiV7b3BhY2l0eToxfSIrKG8rZSklMTAwKyIle29wYWNpdHk6Iit0KyJ9MTAwJXtvcGFjaXR5OiIrcysifX0iLHUuY3NzUnVsZXMubGVuZ3RoKSxoW3JdPTEpLHJ9ZnVuY3Rpb24gaSh0LGUpe3ZhciBuLGkscj10LnN0eWxlO2lmKGU9ZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStlLnNsaWNlKDEpLHZvaWQgMCE9PXJbZV0pcmV0dXJuIGU7Zm9yKGk9MDtpPGQubGVuZ3RoO2krKylpZihuPWRbaV0rZSx2b2lkIDAhPT1yW25dKXJldHVybiBufWZ1bmN0aW9uIHIodCxlKXtmb3IodmFyIG4gaW4gZSl0LnN0eWxlW2kodCxuKXx8bl09ZVtuXTtyZXR1cm4gdH1mdW5jdGlvbiBvKHQpe2Zvcih2YXIgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe3ZhciBuPWFyZ3VtZW50c1tlXTtmb3IodmFyIGkgaW4gbil2b2lkIDA9PT10W2ldJiYodFtpXT1uW2ldKX1yZXR1cm4gdH1mdW5jdGlvbiBzKHQsZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P3Q6dFtlJXQubGVuZ3RoXX1mdW5jdGlvbiBhKHQpe3RoaXMub3B0cz1vKHR8fHt9LGEuZGVmYXVsdHMscCl9ZnVuY3Rpb24gbCgpe2Z1bmN0aW9uIG4oZSxuKXtyZXR1cm4gdCgiPCIrZSsnIHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQuY29tOnZtbCIgY2xhc3M9InNwaW4tdm1sIj4nLG4pfXUuYWRkUnVsZSgiLnNwaW4tdm1sIiwiYmVoYXZpb3I6dXJsKCNkZWZhdWx0I1ZNTCkiKSxhLnByb3RvdHlwZS5saW5lcz1mdW5jdGlvbih0LGkpe2Z1bmN0aW9uIG8oKXtyZXR1cm4gcihuKCJncm91cCIse2Nvb3Jkc2l6ZTp1KyIgIit1LGNvb3Jkb3JpZ2luOi1jKyIgIistY30pLHt3aWR0aDp1LGhlaWdodDp1fSl9ZnVuY3Rpb24gYSh0LGEsbCl7ZShoLGUocihvKCkse3JvdGF0aW9uOjM2MC9pLmxpbmVzKnQrImRlZyIsbGVmdDp+fmF9KSxlKHIobigicm91bmRyZWN0Iix7YXJjc2l6ZTppLmNvcm5lcnN9KSx7d2lkdGg6YyxoZWlnaHQ6aS5zY2FsZSppLndpZHRoLGxlZnQ6aS5zY2FsZSppLnJhZGl1cyx0b3A6LWkuc2NhbGUqaS53aWR0aD4+MSxmaWx0ZXI6bH0pLG4oImZpbGwiLHtjb2xvcjpzKGkuY29sb3IsdCksb3BhY2l0eTppLm9wYWNpdHl9KSxuKCJzdHJva2UiLHtvcGFjaXR5OjB9KSkpKX12YXIgbCxjPWkuc2NhbGUqKGkubGVuZ3RoK2kud2lkdGgpLHU9MippLnNjYWxlKmMsZD0tKGkud2lkdGgraS5sZW5ndGgpKmkuc2NhbGUqMisicHgiLGg9cihvKCkse3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdG9wOmQsbGVmdDpkfSk7aWYoaS5zaGFkb3cpZm9yKGw9MTtsPD1pLmxpbmVzO2wrKylhKGwsLTIsInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CbHVyKHBpeGVscmFkaXVzPTIsbWFrZXNoYWRvdz0xLHNoYWRvd29wYWNpdHk9LjMpIik7Zm9yKGw9MTtsPD1pLmxpbmVzO2wrKylhKGwpO3JldHVybiBlKHQsaCl9LGEucHJvdG90eXBlLm9wYWNpdHk9ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9dC5maXJzdENoaWxkO2k9aS5zaGFkb3cmJmkubGluZXN8fDAsciYmZStpPHIuY2hpbGROb2Rlcy5sZW5ndGgmJihyPXIuY2hpbGROb2Rlc1tlK2ldLHI9ciYmci5maXJzdENoaWxkLHI9ciYmci5maXJzdENoaWxkLHImJihyLm9wYWNpdHk9bikpfX12YXIgYyx1LGQ9WyJ3ZWJraXQiLCJNb3oiLCJtcyIsIk8iXSxoPXt9LHA9e2xpbmVzOjEyLGxlbmd0aDo3LHdpZHRoOjUscmFkaXVzOjEwLHNjYWxlOjEsY29ybmVyczoxLGNvbG9yOiIjMDAwIixvcGFjaXR5Oi4yNSxyb3RhdGU6MCxkaXJlY3Rpb246MSxzcGVlZDoxLHRyYWlsOjEwMCxmcHM6MjAsekluZGV4OjJlOSxjbGFzc05hbWU6InNwaW5uZXIiLHRvcDoiNTAlIixsZWZ0OiI1MCUiLHNoYWRvdzohMSxod2FjY2VsOiExLHBvc2l0aW8=", "base64"));
  res.write(new Buffer("bjoiYWJzb2x1dGUifTtpZihhLmRlZmF1bHRzPXt9LG8oYS5wcm90b3R5cGUse3NwaW46ZnVuY3Rpb24oZSl7dGhpcy5zdG9wKCk7dmFyIG49dGhpcyxpPW4ub3B0cyxvPW4uZWw9dChudWxsLHtjbGFzc05hbWU6aS5jbGFzc05hbWV9KTtpZihyKG8se3Bvc2l0aW9uOmkucG9zaXRpb24sd2lkdGg6MCx6SW5kZXg6aS56SW5kZXgsbGVmdDppLmxlZnQsdG9wOmkudG9wfSksZSYmZS5pbnNlcnRCZWZvcmUobyxlLmZpcnN0Q2hpbGR8fG51bGwpLG8uc2V0QXR0cmlidXRlKCJyb2xlIiwicHJvZ3Jlc3NiYXIiKSxuLmxpbmVzKG8sbi5vcHRzKSwhYyl7dmFyIHMsYT0wLGw9KGkubGluZXMtMSkqKDEtaS5kaXJlY3Rpb24pLzIsdT1pLmZwcyxkPXUvaS5zcGVlZCxoPSgxLWkub3BhY2l0eSkvKGQqaS50cmFpbC8xMDApLHA9ZC9pLmxpbmVzOyFmdW5jdGlvbiBmKCl7YSsrO2Zvcih2YXIgdD0wO3Q8aS5saW5lczt0Kyspcz1NYXRoLm1heCgxLShhKyhpLmxpbmVzLXQpKnApJWQqaCxpLm9wYWNpdHkpLG4ub3BhY2l0eShvLHQqaS5kaXJlY3Rpb24rbCxzLGkpO24udGltZW91dD1uLmVsJiZzZXRUaW1lb3V0KGYsfn4oMWUzL3UpKX0oKX1yZXR1cm4gbn0sc3RvcDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWw7cmV0dXJuIHQmJihjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KSx0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KSx0aGlzLmVsPXZvaWQgMCksdGhpc30sbGluZXM6ZnVuY3Rpb24oaSxvKXtmdW5jdGlvbiBhKGUsbil7cmV0dXJuIHIodCgpLHtwb3NpdGlvbjoiYWJzb2x1dGUiLHdpZHRoOm8uc2NhbGUqKG8ubGVuZ3RoK28ud2lkdGgpKyJweCIsaGVpZ2h0Om8uc2NhbGUqby53aWR0aCsicHgiLGJhY2tncm91bmQ6ZSxib3hTaGFkb3c6bix0cmFuc2Zvcm1PcmlnaW46ImxlZnQiLHRyYW5zZm9ybToicm90YXRlKCIrfn4oMzYwL28ubGluZXMqdStvLnJvdGF0ZSkrImRlZykgdHJhbnNsYXRlKCIrby5zY2FsZSpvLnJhZGl1cysicHgsMCkiLGJvcmRlclJhZGl1czooby5jb3JuZXJzKm8uc2NhbGUqby53aWR0aD4+MSkrInB4In0pfWZvcih2YXIgbCx1PTAsZD0oby5saW5lcy0xKSooMS1vLmRpcmVjdGlvbikvMjt1PG8ubGluZXM7dSsrKWw9cih0KCkse3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdG9wOjErfihvLnNjYWxlKm8ud2lkdGgvMikrInB4Iix0cmFuc2Zvcm06by5od2FjY2VsPyJ0cmFuc2xhdGUzZCgwLDAsMCkiOiIiLG9wYWNpdHk6by5vcGFjaXR5LGFuaW1hdGlvbjpjJiZuKG8ub3BhY2l0eSxvLnRyYWlsLGQrdSpvLmRpcmVjdGlvbixvLmxpbmVzKSsiICIrMS9vLnNwZWVkKyJzIGxpbmVhciBpbmZpbml0ZSJ9KSxvLnNoYWRvdyYmZShsLHIoYSgiIzAwMCIsIjAgMCA0cHggIzAwMCIpLHt0b3A6IjJweCJ9KSksZShpLGUobCxhKHMoby5jb2xvcix1KSwiMCAwIDFweCByZ2JhKDAsMCwwLC4xKSIpKSk7cmV0dXJuIGl9LG9wYWNpdHk6ZnVuY3Rpb24odCxlLG4pe2U8dC5jaGlsZE5vZGVzLmxlbmd0aCYmKHQuY2hpbGROb2Rlc1tlXS5zdHlsZS5vcGFjaXR5PW4pfX0pLCJ1bmRlZmluZWQiIT10eXBlb2YgZG9jdW1lbnQpe3U9ZnVuY3Rpb24oKXt2YXIgbj10KCJzdHlsZSIse3R5cGU6InRleHQvY3NzIn0pO3JldHVybiBlKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF0sbiksbi5zaGVldHx8bi5zdHlsZVNoZWV0fSgpO3ZhciBmPXIodCgiZ3JvdXAiKSx7YmVoYXZpb3I6InVybCgjZGVmYXVsdCNWTUwpIn0pOyFpKGYsInRyYW5zZm9ybSIpJiZmLmFkaj9sKCk6Yz1pKGYsImFuaW1hdGlvbiIpfXJldHVybiBhfSl9KS5jYWxsKGUsbigzNjIpKHQpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oMzMxKSxuKDQ3MSksbig0NzApXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPW4udHBsKCdcdCAgICA8YSBjbGFzcz0iaWNvbi0xNiB7e2NsYXNzTmFtZX19IiBkYXRhLXNlPSJ7e3NlbGVuaXVtSWR9fSI+XHQgICAgICB7eyNpZiBpY29ufX1cdCAgICAgIDxzcGFuIGNsYXNzPSJpY29uIHt7aWNvbn19Ij48L3NwYW4+XHQgICAgICB7ey9pZn19XHQgICAgICB7eyNpZiB0aXRsZX19XHQgICAgICB7e3RpdGxlfX1cdCAgICAgIHt7L2lmfX1cdCAgICAgIHt7I2lmIHN1YnRpdGxlfX1cdCAgICAgICAgPHAgY2xhc3M9Im9wdGlvbi1zdWJ0aXRsZSI+e3tzdWJ0aXRsZX19PC9wPlx0ICAgICAge3svaWZ9fVx0ICAgPC9hPlx0ICAgJyksbz1pLmV4dGVuZCh7dGFnTmFtZToibGkiLGV2ZW50czp7Y2xpY2s6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuYWN0aW9uJiZ0aGlzLmFjdGlvbi5jYWxsKHRoaXMpfX0sY29uc3RydWN0b3I6ZnVuY3Rpb24oKXtpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLiRlbC5hZGRDbGFzcygib2t0YS1kcm9wZG93bi1vcHRpb24gb3B0aW9uIil9LHJlbmRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRlbC5odG1sKHIoe2ljb246dC5yZXN1bHQodGhpcywiaWNvbiIpLGNsYXNzTmFtZTp0LnJlc3VsdCh0aGlzLCJjbGFzc05hbWUiKXx8IiIsdGl0bGU6dC5yZXN1bHQodGhpcywidGl0bGUiKSxzdWJ0aXRsZTp0LnJlc3VsdCh0aGlzLCJzdWJ0aXRsZSIpLHNlbGVuaXVtSWQ6dC5yZXN1bHQodGhpcywic2VsZW5pdW1JZCIpfSkpLHRoaXN9fSk7cmV0dXJuIGkuZXh0ZW5kKHtldmVudHM6eyJjbGljayBhLm9wdGlvbi1zZWxlY3RlZCI6ZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLHQucmVzdWx0KHRoaXMsImRpc2FibGVkIikmJmUuc3RvcFByb3BhZ2F0aW9uKCl9LCJjbGljayAuZHJvcGRvd24tZGlzYWJsZWQiOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpfX0saXRlbXM6W10sY29uc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmNsYXNzTmFtZTt0aGlzLmNsYXNzTmFtZT1udWxsLGkuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuY2xhc3NOYW1lPWUsdGhpcy4kZWwuYWRkQ2xhc3MoImRyb3Bkb3duIG1vcmUtYWN0aW9ucyBmbG9hdC1sIiksdC5lYWNoKHQucmVzdWx0KHRoaXMsIml0ZW1zIiksZnVuY3Rpb24odCl7dGhpcy5hZGRPcHRpb24odCx0aGlzLm9wdGlvbnMpfSx0aGlzKX0sdGVtcGxhdGU6J1x0ICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImxpbmstYnV0dG9uIHt7Y2xhc3NOYW1lfX0gbGluay1idXR0b24taWNvbiBvcHRpb24tc2VsZWN0ZWQgY2VudGVyIj5cdCAgICAgICAge3sjaWYgaWNvbn19XHQgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uIHt7aWNvbn19Ij48L3NwYW4+XHQgICAgICAgIHt7L2lmfX1cdCAgICAgICAgPHNwYW4gY2xhc3M9Im9wdGlvbi1zZWxlY3RlZC10ZXh0Ij57e3RpdGxlfX08L3NwYW4+XHQgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWRtIj48L3NwYW4+XHQgICAgICA8L2E+XHQgICAgICA8ZGl2IGNsYXNzPSJvcHRpb25zIGNsZWFyZml4IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPlx0ICAgICAgPHVsIGNsYXNzPSJva3RhLWRyb3Bkb3duLWxpc3Qgb3B0aW9ucy13cmFwIGNsZWFyZml4Ij48L3VsPlx0ICAgICAgPC9kaXY+XHQgICAgJyxnZXRUZW1wbGF0ZURhdGE6ZnVuY3Rpb24oKXt2YXIgbj1bdC5yZXN1bHQodGhpcywiY2xhc3NOYW1lIil8fCIiLHQucmVzdWx0KHRoaXMsImRpc2FibGVkIik/ImRyb3Bkb3duLWRpc2FibGVkIjoiIl07cmV0dXJue2ljb246dC5yZXN1bHQodGhpcywiaWNvbiIpLGNsYXNzTmFtZTplLnRyaW0obi5qb2luKCIgIikpLHRpdGxlOnQucmVzdWx0KHRoaXMsInRpdGxlIil9fSxhZGRPcHRpb246ZnVuY3Rpb24odCxlKXt0aGlzLmFkZChvLmV4dGVuZCh0KSwidWwub3B0aW9ucy13cmFwIix7b3B0aW9uczplfHx7fX0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oNTIxKV0scj1mdW5jdGlvbih0KXtyZXR1cm4gdC5leHRlbmQoe3NhdmU6Ik9LIixwYXJhbXM6e21pbldpZHRoOjUwMCxtYXhXaWR0aDo3MDAsY2xvc2U6ITB9LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7dC5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5jb250ZW50JiZ0aGlzLmFkZCh0aGlzLmNvbnRlbnQpLHRoaXMubGlzdGVuVG8odGhpcywic2F2ZSIsZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9rfHx0aGlzLm9wdGlvbnMub2s7dCYmdCgpLHRoaXMucmVtb3ZlKCl9KSx0aGlzLmxpc3RlblRvKHRoaXMsImNhbmNlbCIsZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNhbmNlbEZufHx0aGlzLm9wdGlvbnMuY2FuY2VsRm47dCYmdCgpfSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oMzMxKSxuKDQ3MCksbig0ODApXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe2UoZG9jdW1lbnQpLmNsaWNrKGZ1bmN0aW9uKHQpe3ZhciBuPWUodC50YXJnZXQpLGk9KG4uaGFzQ2xhc3MoIm9wdGlvbi1zZWxlY3RlZCIpfHxuLnBhcmVudHMoKS5oYXNDbGFzcygib3B0aW9uLXNlbGVjdGVkIikpJiZuLmNsb3Nlc3QoIi5kcm9wZG93biIpLmxlbmd0aD4wO2l8fGUoIi5kcm9wZG93biAub3B0aW9ucyIpLmZhZGVPdXQoMTAwKX0pO3ZhciByPW4uZXh0ZW5kKHt0YWdOYW1lOiJsaSIsdGVtcGxhdGU6J1x0ICAgICAgPGEgY2xhc3M9Imljb24tMTZ7eyN1bmxlc3MgaWNvbn19IG5vLWljb257ey91bmxlc3N9fSJ7eyNpZiBzZWxlbml1bUlkfX0gZGF0YS1zZT0ie3tzZWxlbml1bUlkfX0ie3svaWZ9fT5cdCAgICAgICAge3sjaWYgaWNvbn19PHNwYW4gY2xhc3M9Imljb24ge3tpY29ufX0iPjwvc3Bhbj57ey9pZn19XHQgICAgICAgIDxwIGNsYXNzPXt7I2lmIHRpdGxlfX0ib3B0aW9uLXRpdGxlInt7ZWxzZX19Im5vLXRpdGxlInt7L2lmfX0+e3t0aXRsZX19PC9wPlx0ICAgICAgICB7eyNpZiBzdWJ0aXRsZX19PHAgY2xhc3M9Im9wdGlvbi1zdWJ0aXRsZSI+e3tzdWJ0aXRsZX19PC9wPnt7L2lmfX1cdCAgICAgIDwvYT5cdCAgICAnLGNsYXNzTmFtZToib2t0YS1kcm9wZG93bi1vcHRpb24gb3B0aW9uIixldmVudHM6e2NsaWNrOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0aGlzLiRlbC5oYXNDbGFzcygib3B0aW9uLWRpc2FibGVkIik/dC5zdG9wUHJvcGFnYXRpb24oKTp0aGlzLm9wdGlvbnMuY2xpY2smJnRoaXMub3B0aW9ucy5jbGljay5jYWxsKHRoaXMpfX0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe2kuYXBwbHlEb1doZW4odGhpcyx0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsImVuYWJsZVdoZW4iLHRoaXMpLHRoaXMudG9nZ2xlRW5hYmxlZCksaS5hcHBseURvV2hlbih0aGlzLHQucmVzdWx0Q3R4KHRoaXMub3B0aW9ucywic2hvd1doZW4iLHRoaXMpLHRoaXMudG9nZ2xlVmlzaWJsZSl9LHBvc3RSZW5kZXI6ZnVuY3Rpb24oKXt0LnNpemUodC5yZXN1bHRDdHgodGhpcy5vcHRpb25zLCJlbmFibGVXaGVuIix0aGlzKSl8fHRoaXMudG9nZ2xlRW5hYmxlZCghMCksdC5zaXplKHQucmVzdWx0Q3R4KHRoaXMub3B0aW9ucywic2hvd1doZW4iLHRoaXMpKXx8dGhpcy50b2dnbGVWaXNpYmxlKCEwKX0sZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7cmV0dXJue2ljb246dC5yZXN1bHRDdHgodGhpcy5vcHRpb25zLCJpY29uIix0aGlzKSx0aXRsZTp0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsInRpdGxlIix0aGlzKSxzdWJ0aXRsZTp0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsInN1YnRpdGxlIix0aGlzKSxzZWxlbml1bUlkOnQucmVzdWx0Q3R4KHRoaXMub3B0aW9ucywic2VsZW5pdW1JZCIsdGhpcyl9fSx0b2dnbGVFbmFibGVkOmZ1bmN0aW9uKGUpe3ZhciBuPWU=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZENsYXNzKHgodGhpcy5vcHRzLmNvbnRhaW5lckNzc0NsYXNzLHRoaXMub3B0cy5lbGVtZW50KSksYih0aGlzLmRyb3Bkb3duLHRoaXMub3B0cy5lbGVtZW50LHRoaXMub3B0cy5hZGFwdERyb3Bkb3duQ3NzQ2xhc3MpLHRoaXMuZHJvcGRvd24uYWRkQ2xhc3MoeCh0aGlzLm9wdHMuZHJvcGRvd25Dc3NDbGFzcyx0aGlzLm9wdHMuZWxlbWVudCkpfSksaS5sZW5ndGgmJmlbMF0uYXR0YWNoRXZlbnQmJmkuZWFjaChmdW5jdGlvbigpe3RoaXMuYXR0YWNoRXZlbnQoIm9ucHJvcGVydHljaGFuZ2UiLHIuX3N5bmMpfSksZT13aW5kb3cuTXV0YXRpb25PYnNlcnZlcnx8d2luZG93LldlYktpdE11dGF0aW9uT2JzZXJ2ZXJ8fHdpbmRvdy5Nb3pNdXRhdGlvbk9ic2VydmVyLGUhPT1uJiYodGhpcy5wcm9wZXJ0eU9ic2VydmVyJiYoZGVsZXRlIHRoaXMucHJvcGVydHlPYnNlcnZlcix0aGlzLnByb3BlcnR5T2JzZXJ2ZXI9bnVsbCksdGhpcy5wcm9wZXJ0eU9ic2VydmVyPW5ldyBlKGZ1bmN0aW9uKGUpe3QuZWFjaChlLHIuX3N5bmMpfSksdGhpcy5wcm9wZXJ0eU9ic2VydmVyLm9ic2VydmUoaS5nZXQoMCkse2F0dHJpYnV0ZXM6ITAsc3VidHJlZTohMX0pKX0sdHJpZ2dlclNlbGVjdDpmdW5jdGlvbihlKXt2YXIgbj10LkV2ZW50KCJzZWxlY3QyLXNlbGVjdGluZyIse3ZhbDp0aGlzLmlkKGUpLG9iamVjdDplLGNob2ljZTplfSk7cmV0dXJuIHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIobiksIW4uaXNEZWZhdWx0UHJldmVudGVkKCl9LHRyaWdnZXJDaGFuZ2U6ZnVuY3Rpb24oZSl7ZT1lfHx7fSxlPXQuZXh0ZW5kKHt9LGUse3R5cGU6ImNoYW5nZSIsdmFsOnRoaXMudmFsKCl9KSx0aGlzLm9wdHMuZWxlbWVudC5kYXRhKCJzZWxlY3QyLWNoYW5nZS10cmlnZ2VyZWQiLCEwKSx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKGUpLHRoaXMub3B0cy5lbGVtZW50LmRhdGEoInNlbGVjdDItY2hhbmdlLXRyaWdnZXJlZCIsITEpLHRoaXMub3B0cy5lbGVtZW50LmNsaWNrKCksdGhpcy5vcHRzLmJsdXJPbkNoYW5nZSYmdGhpcy5vcHRzLmVsZW1lbnQuYmx1cigpfSxpc0ludGVyZmFjZUVuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbmFibGVkSW50ZXJmYWNlPT09ITB9LGVuYWJsZUludGVyZmFjZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX2VuYWJsZWQmJiF0aGlzLl9yZWFkb25seSxlPSF0O3JldHVybiB0IT09dGhpcy5lbmFibGVkSW50ZXJmYWNlJiYodGhpcy5jb250YWluZXIudG9nZ2xlQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWRpc2FibGVkIixlKSx0aGlzLmNsb3NlKCksdGhpcy5lbmFibGVkSW50ZXJmYWNlPXQsITApfSxlbmFibGU6ZnVuY3Rpb24odCl7dD09PW4mJih0PSEwKSx0aGlzLl9lbmFibGVkIT09dCYmKHRoaXMuX2VuYWJsZWQ9dCx0aGlzLm9wdHMuZWxlbWVudC5wcm9wKCJkaXNhYmxlZCIsIXQpLHRoaXMuZW5hYmxlSW50ZXJmYWNlKCkpfSxkaXNhYmxlOmZ1bmN0aW9uKCl7dGhpcy5lbmFibGUoITEpfSxyZWFkb25seTpmdW5jdGlvbih0KXt0PT09biYmKHQ9ITEpLHRoaXMuX3JlYWRvbmx5IT09dCYmKHRoaXMuX3JlYWRvbmx5PXQsdGhpcy5vcHRzLmVsZW1lbnQucHJvcCgicmVhZG9ubHkiLHQpLHRoaXMuZW5hYmxlSW50ZXJmYWNlKCkpfSxvcGVuZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuY29udGFpbmVyJiZ0aGlzLmNvbnRhaW5lci5oYXNDbGFzcygic2VsZWN0Mi1kcm9wZG93bi1vcGVuIil9LHBvc2l0aW9uRHJvcGRvd246ZnVuY3Rpb24oKXt2YXIgZSxuLGkscixvLHM9dGhpcy5kcm9wZG93bixhPXRoaXMuY29udGFpbmVyLGw9YS5vZmZzZXQoKSxjPWEub3V0ZXJIZWlnaHQoITEpLHU9YS5vdXRlcldpZHRoKCExKSxkPXMub3V0ZXJIZWlnaHQoITEpLGg9dCh3aW5kb3cpLHA9aC53aWR0aCgpLGY9aC5oZWlnaHQoKSxtPWguc2Nyb2xsTGVmdCgpK3AsXz1oLnNjcm9sbFRvcCgpK2YsZz1sLnRvcCtjLHY9bC5sZWZ0LHk9ZytkPD1fLGI9bC50b3AtZD49aC5zY3JvbGxUb3AoKSx3PXMub3V0ZXJXaWR0aCghMSksTT1mdW5jdGlvbigpe3JldHVybiB2K3c8PW19LFM9ZnVuY3Rpb24oKXtyZXR1cm4gbC5sZWZ0K20rYS5vdXRlcldpZHRoKCExKT53fSxUPXMuaGFzQ2xhc3MoInNlbGVjdDItZHJvcC1hYm92ZSIpO1Q/KG49ITAsIWImJnkmJihpPSEwLG49ITEpKToobj0hMSwheSYmYiYmKGk9ITAsbj0hMCkpLGkmJihzLmhpZGUoKSxsPXRoaXMuY29udGFpbmVyLm9mZnNldCgpLGM9dGhpcy5jb250YWluZXIub3V0ZXJIZWlnaHQoITEpLHU9dGhpcy5jb250YWluZXIub3V0ZXJXaWR0aCghMSksZD1zLm91dGVySGVpZ2h0KCExKSxtPWguc2Nyb2xsTGVmdCgpK3AsXz1oLnNjcm9sbFRvcCgpK2YsZz1sLnRvcCtjLHY9bC5sZWZ0LHc9cy5vdXRlcldpZHRoKCExKSxzLnNob3coKSx0aGlzLmZvY3VzU2VhcmNoKCkpLHRoaXMub3B0cy5kcm9wZG93bkF1dG9XaWR0aD8obz10KCIuc2VsZWN0Mi1yZXN1bHRzIixzKVswXSxzLmFkZENsYXNzKCJzZWxlY3QyLWRyb3AtYXV0by13aWR0aCIpLHMuY3NzKCJ3aWR0aCIsIiIpLHc9cy5vdXRlcldpZHRoKCExKSsoby5zY3JvbGxIZWlnaHQ9PT1vLmNsaWVudEhlaWdodD8wOkgud2lkdGgpLHc+dT91PXc6dz11LGQ9cy5vdXRlckhlaWdodCghMSkpOnRoaXMuY29udGFpbmVyLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWRyb3AtYXV0by13aWR0aCIpLCJzdGF0aWMiIT09dGhpcy5ib2R5LmNzcygicG9zaXRpb24iKSYmKGU9dGhpcy5ib2R5Lm9mZnNldCgpLGctPWUudG9wLHYtPWUubGVmdCksIU0oKSYmUygpJiYodj1sLmxlZnQrdGhpcy5jb250YWluZXIub3V0ZXJXaWR0aCghMSktdykscj17bGVmdDp2LHdpZHRoOnV9LG4/KHIudG9wPWwudG9wLWQsci5ib3R0b209ImF1dG8iLHRoaXMuY29udGFpbmVyLmFkZENsYXNzKCJzZWxlY3QyLWRyb3AtYWJvdmUiKSxzLmFkZENsYXNzKCJzZWxlY3QyLWRyb3AtYWJvdmUiKSk6KHIudG9wPWcsci5ib3R0b209ImF1dG8iLHRoaXMuY29udGFpbmVyLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWRyb3AtYWJvdmUiKSxzLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWRyb3AtYWJvdmUiKSkscj10LmV4dGVuZChyLHgodGhpcy5vcHRzLmRyb3Bkb3duQ3NzLHRoaXMub3B0cy5lbGVtZW50KSkscy5jc3Mocil9LHNob3VsZE9wZW46ZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4hdGhpcy5vcGVuZWQoKSYmdGhpcy5fZW5hYmxlZCE9PSExJiZ0aGlzLl9yZWFkb25seSE9PSEwJiYoZT10LkV2ZW50KCJzZWxlY3QyLW9wZW5pbmciKSx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKGUpLCFlLmlzRGVmYXVsdFByZXZlbnRlZCgpKX0sY2xlYXJEcm9wZG93bkFsaWdubWVudFByZWZlcmVuY2U6ZnVuY3Rpb24oKXt0aGlzLmNvbnRhaW5lci5yZW1vdmVDbGFzcygic2VsZWN0Mi1kcm9wLWFib3ZlIiksdGhpcy5kcm9wZG93bi5yZW1vdmVDbGFzcygic2VsZWN0Mi1kcm9wLWFib3ZlIil9LG9wZW46ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuc2hvdWxkT3BlbigpJiYodGhpcy5vcGVuaW5nKCksai5vbigibW91c2Vtb3ZlLnNlbGVjdDJFdmVudCIsZnVuY3Rpb24odCl7Ri54PXQucGFnZVgsRi55PXQucGFnZVl9KSwhMCl9LG9wZW5pbmc6ZnVuY3Rpb24oKXt2YXIgZSxuPXRoaXMuY29udGFpbmVyRXZlbnROYW1lLHI9InNjcm9sbC4iK24sbz0icmVzaXplLiIrbixzPSJvcmllbnRhdGlvbmNoYW5nZS4iK247dGhpcy5jb250YWluZXIuYWRkQ2xhc3MoInNlbGVjdDItZHJvcGRvd24tb3BlbiIpLmFkZENsYXNzKCJzZWxlY3QyLWNvbnRhaW5lci1hY3RpdmUiKSx0aGlzLmNsZWFyRHJvcGRvd25BbGlnbm1lbnRQcmVmZXJlbmNlKCksdGhpcy5kcm9wZG93blswXSE9PXRoaXMuYm9keS5jaGlsZHJlbigpLmxhc3QoKVswXSYmdGhpcy5kcm9wZG93bi5kZXRhY2goKS5hcHBlbmRUbyh0aGlzLmJvZHkpLGU9dCgiI3NlbGVjdDItZHJvcC1tYXNrIiksMD09ZS5sZW5ndGgmJihlPXQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IikpLGUuYXR0cigiaWQiLCJzZWxlY3QyLWRyb3AtbWFzayIpLmF0dHIoImNsYXNzIiwic2VsZWN0Mi1kcm9wLW1hc2siKSxlLmhpZGUoKSxlLmFwcGVuZFRvKHRoaXMuYm9keSksZS5vbigibW91c2Vkb3duIHRvdWNoc3RhcnQgY2xpY2siLGZ1bmN0aW9uKG4pe2koZSk7dmFyIHIsbz10KCIjc2VsZWN0Mi1kcm9wIik7by5sZW5ndGg+MCYmKHI9by5kYXRhKCJzZWxlY3QyIiksci5vcHRzLnNlbGVjdE9uQmx1ciYmci5zZWxlY3RIaWdobGlnaHRlZCh7bm9Gb2N1czohMH0pLHIuY2xvc2UoKSxuLnByZXZlbnREZWZhdWx0KCksbi5zdG9wUHJvcGFnYXRpb24oKSl9KSksdGhpcy5kcm9wZG93bi5wcmV2KClbMF0hPT1lWzBdJiZ0aGlzLmRyb3Bkb3duLmJlZm9yZShlKSx0KCIjc2VsZWN0Mi1kcm9wIikucmVtb3ZlQXR0cigiaWQiKSx0aGlzLmRyb3Bkb3duLmF0dHIoImlkIiwic2VsZWN0Mi1kcm9wIiksZS5zaG93KCksdGhpcy5wb3NpdGlvbkRyb3Bkb3duKCksdGhpcy5kcm9wZG93bi5zaG93KCksdGhpcy5wb3NpdGlvbkRyb3Bkb3duKCksdGhpcy5kcm9wZG93bi5hZGRDbGFzcygic2VsZWN0Mi1kcm9wLWFjdGl2ZSIpO3ZhciBhPXRoaXM7dGhpcy5jb250YWluZXIucGFyZW50cygpLmFkZCh3aW5kb3cpLmVhY2goZnVuY3Rpb24oKXt0KHRoaXMpLm9uKG8rIiAiK3IrIiAiK3MsZnVuY3Rpb24odCl7YS5vcGVuZWQoKSYmYS5wb3NpdGlvbkRyb3Bkb3duKCl9KX0pfSxjbG9zZTpmdW5jdGlvbigpe2lmKHRoaXMub3BlbmVkKCkpe3ZhciBlPXRoaXMuY29udGFpbmVyRXZlbnROYW1lLG49InNjcm9sbC4iK2UsaT0icmVzaXplLiIrZSxyPSJvcmllbnRhdGlvbmNoYW5nZS4iK2U7dGhpcy5jb250YWluZXIucGFyZW50cygpLmFkZCh3aW5kb3cpLmVhY2goZnVuY3Rpb24oKXt0KHRoaXMpLm9mZihuKS5vZmYoaSkub2ZmKHIpfSksdGhpcy5jbGVhckRyb3Bkb3duQWxpZ25tZW50UHJlZmVyZW5jZSgpLHQoIiNzZWxlY3QyLWRyb3AtbWFzayIpLmhpZGUoKSx0aGlzLmRyb3Bkb3duLnJlbW92ZUF0dHIoImlkIiksdGhpcy5kcm9wZG93bi5oaWRlKCksdGhpcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoInNlbGVjdDItZHJvcGRvd24tb3BlbiIpLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWNvbnRhaW5lci1hY3RpdmUiKSx0aGlzLnJlc3VsdHMuZW1wdHkoKSxqLm9mZigibW91c2Vtb3ZlLnNlbGVjdDJFdmVudCIpLHRoaXMuY2xlYXJTZWFyY2goKSx0aGlzLnNlYXJjaC5yZW1vdmVDbGFzcygic2VsZWN0Mi1hY3RpdmUiKSx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHQuRXZlbnQoInNlbGVjdDItY2xvc2UiKSl9fSxleHRlcm5hbFNlYXJjaDpmdW5jdGlvbih0KXt0aGlzLm9wZW4oKSx0aGlzLnNlYXJjaC52YWwodCksdGhpcy51cGRhdGVSZXN1bHRzKCExKX0sY2xlYXJTZWFyY2g6ZnVuY3Rpb24oKXt9LGdldE1heGltdW1TZWxlY3Rpb25TaXplOmZ1bmN0aW9uKCl7cmV0dXJuIHgodGhpcy5vcHRzLm1heGltdW1TZWxlY3Rpb25TaXplLHRoaXMub3B0cy5lbGVtZW50KX0sZW5zdXJlSGlnaGxpZ2h0VmlzaWJsZTpmdW5jdGlvbigpe3ZhciBlLG4saSxyLG8scyxhLGwsYz10aGlzLnJlc3VsdHM7aWYobj10aGlzLmhpZ2hsaWdodCgpLCEobjwwKSl7aWYoMD09bilyZXR1cm4gdm9pZCBjLnNjcm9sbFRvcCgwKTtlPXRoaXMuZmluZEhpZ2hsaWdodGFibGVDaG9pY2VzKCkuZmluZCgiLnNlbGVjdDItcmVzdWx0LWxhYmVsIiksaT10KGVbbl0pLGw9KGkub2Zmc2V0KCl8fHt9KS50b3B8fDAscj1sK2kub3V0ZXJIZWlnaHQoITApLG49PT1lLmxlbmd0aC0xJiYoYT1jLmZpbmQoImxpLnNlbGVjdDItbW9yZS1yZXN1bHRzIiksYS5sZW5ndGg+MCYmKHI9YS5vZmZzZXQoKS50b3ArYS5vdXRlckhlaWdodCghMCkpKSxvPWMub2Zmc2V0KCkudG9wK2Mub3V0ZXJIZWlnaHQoITApLHI+byYmYy5zY3JvbGxUb3AoYy5zY3JvbGxUb3AoKSsoci1vKSkscz1sLWMub2Zmc2V0KCkudG9wLHM8MCYmIm5vbmUiIT1pLmNzcygiZGlzcGxheSIpJiZjLnNjcm9sbFRvcChjLnNjcm9sbFRvcCgpK3MpfX0sZmluZEhpZ2hsaWdodGFibGVDaG9pY2VzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVzdWx0cy5maW5kKCIuc2VsZWN0Mi1yZXN1bHQtc2VsZWN0YWJsZTpub3QoLnNlbGVjdDItZGlzYWJsZWQpOm5vdCguc2VsZWN0Mi1zZWxlY3RlZCkiKX0sbW92ZUhpZ2hsaWdodDpmdW5jdGlvbihlKXtmb3IodmFyIG49dGhpcy5maW5kSGlnaGxpZ2h0YWJsZUNob2ljZXMoKSxpPXRoaXMuaGlnaGxpZ2h0KCk7aT4tMSYmaTxuLmxlbmd0aDspe2krPWU7dmFyIHI9dChuW2ldKTtpZihyLmhhc0NsYXNzKCJzZWxlY3QyLXJlc3VsdC1zZWxlY3RhYmxlIikmJiFyLmhhc0NsYXNzKCJzZWxlY3QyLWRpc2FibGVkIikmJiFyLmhhc0NsYXNzKCJzZWxlY3QyLXNlbGVjdGVkIikpe3RoaXMuaGlnaGxpZ2h0KGkpO2JyZWFrfX19LGhpZ2hsaWdodDpmdW5jdGlvbihlKXt2YXIgbixpLHI9dGhpcy5maW5kSGlnaGxpZ2h0YWJsZUNob2ljZXMoKTtyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/cyhyLmZpbHRlcigiLnNlbGVjdDItaGlnaGxpZ2h0ZWQiKVswXSxyLmdldCgpKTooZT49ci5sZW5ndGgmJihlPXIubGVuZ3RoLTEpLGU8MCYmKGU9MCksdGhpcy5yZW1vdmVIaWdobGlnaHQoKSxuPXQocltlXSksbi5hZGRDbGFzcygic2VsZWN0Mi1oaWdobGlnaHRlZCIpLHRoaXMuc2VhcmNoLmF0dHIoImFyaWEtYWN0aXZlZGVzY2VuZGFudCIsbi5maW5kKCIuc2VsZWN0Mi1yZXN1bHQtbGFiZWwiKS5hdHRyKCJpZCIpKSx0aGlzLmVuc3VyZUhpZ2hsaWdodFZpc2libGUoKSx0aGlzLmxpdmVSZWdpb24udGV4dChuLnRleHQoKSksaT1uLmRhdGEoInNlbGVjdDItZGF0YSIpLHZvaWQoaSYmdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih7dHlwZToic2VsZWN0Mi1oaWdobGlnaHQiLHZhbDp0aGlzLmlkKGkpLGNob2ljZTppfSkpKX0scmVtb3ZlSGlnaGxpZ2h0OmZ1bmN0aW9uKCl7dGhpcy5yZXN1bHRzLmZpbmQoIi5zZWxlY3QyLWhpZ2hsaWdodGVkIikucmVtb3ZlQ2xhc3MoInNlbGVjdDItaGlnaGxpZ2h0ZWQiKX0sdG91Y2hNb3ZlZDpmdW5jdGlvbigpe3RoaXMuX3RvdWNoTW92ZWQ9ITB9LGNsZWFyVG91Y2hNb3ZlZDpmdW5jdGlvbigpe3RoaXMuX3RvdWNoTW92ZWQ9ITF9LGNvdW50U2VsZWN0YWJsZVJlc3VsdHM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5maW5kSGlnaGxpZ2h0YWJsZUNob2ljZXMoKS5sZW5ndGh9LGhpZ2hsaWdodFVuZGVyRXZlbnQ6ZnVuY3Rpb24oZSl7dmFyIG49dChlLnRhcmdldCkuY2xvc2VzdCgiLnNlbGVjdDItcmVzdWx0LXNlbGVjdGFibGUiKTtpZihuLmxlbmd0aD4wJiYhbi5pcygiLnNlbGVjdDItaGlnaGxpZ2h0ZWQiKSl7dmFyIGk9dGhpcy5maW5kSGlnaGxpZ2h0YWJsZUNob2ljZXMoKTt0aGlzLmhpZ2hsaWdodChpLmluZGV4KG4pKX1lbHNlIDA9PW4ubGVuZ3RoJiZ0aGlzLnJlbW92ZUhpZ2hsaWdodCgpfSxsb2FkTW9yZUlmTmVlZGVkOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLnJlc3VsdHMsbj1lLmZpbmQoImxpLnNlbGVjdDItbW9yZS1yZXN1bHRzIiksaT10aGlzLnJlc3VsdHNQYWdlKzEscj10aGlzLG89dGhpcy5zZWFyY2gudmFsKCkscz10aGlzLmNvbnRleHQ7MCE9PW4ubGVuZ3RoJiYodD1uLm9mZnNldCgpLnRvcC1lLm9mZnNldCgpLnRvcC1lLmhlaWdodCgpLHQ8PXRoaXMub3B0cy5sb2FkTW9yZVBhZGRpbmcmJihuLmFkZENsYXNzKCJzZWxlY3QyLWFjdGl2ZSIpLHRoaXMub3B0cy5xdWVyeSh7ZWxlbWVudDp0aGlzLm9wdHMuZWxlbWVudCx0ZXJtOm8scGFnZTppLGNvbnRleHQ6cyxtYXRjaGVyOnRoaXMub3B0cy5tYXRjaGVyLGNhbGxiYWNrOnRoaXMuYmluZChmdW5jdGlvbih0KXtyLm9wZW5lZCgpJiYoci5vcHRzLnBvcHVsYXRlUmVzdWx0cy5jYWxsKHRoaXMsZSx0LnJlc3VsdHMse3Rlcm06byxwYWdlOmksY29udGV4dDpzfSksci5wb3N0cHJvY2Vzc1Jlc3VsdHModCwhMSwhMSksdC5tb3JlPT09ITA/KG4uZGV0YWNoKCkuYXBwZW5kVG8oZSkudGV4dCh4KHIub3B0cy5mb3JtYXRMb2FkTW9yZSxyLm9wdHMuZWxlbWVudCxpKzEpKSx3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe3IubG9hZE1vcmVJZk5lZWRlZCgpfSwxMCkpOm4ucmVtb3ZlKCksci5wb3NpdGlvbkRyb3Bkb3duKCksci5yZXN1bHRzUGFnZT1pLHIuY29udGV4dD10LmNvbnRleHQsdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih7dHlwZToic2VsZWN0Mi1sb2FkZWQiLGl0ZW1zOnR9KSl9KX0pKSl9LHRva2VuaXplOmZ1bmN0aW9uKCl7fSx1cGRhdGVSZXN1bHRzOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGkoKXtjLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWFjdGl2ZSIpLGgucG9zaXRpb25Ecm9wZG93bigpLHUuZmluZCgiLnNlbGVjdDItbm8tcmVzdWx0cywuc2VsZWN0Mi1zZWxlY3Rpb24tbGltaXQsLnNlbGVjdDItc2VhcmNoaW5nIikubGVuZ3RoP2gubGl2ZVJlZ2lvbi50ZXh0KHUudGV4dCgpKTpoLmxpdmVSZWdpb24udGV4dChoLm9wdHMuZm9ybWF0TWF0Y2hlcyh1LmZpbmQoIi5zZWxlY3QyLXJlc3VsdC1zZWxlY3RhYmxlIikubGVuZ3RoKSl9ZnVuY3Rpb24gcih0KXt1Lmh0bWwodCk=", "base64"));
  res.write(new Buffer("LGkoKX12YXIgbyxzLGEsYz10aGlzLnNlYXJjaCx1PXRoaXMucmVzdWx0cyxkPXRoaXMub3B0cyxoPXRoaXMscD1jLnZhbCgpLGY9dC5kYXRhKHRoaXMuY29udGFpbmVyLCJzZWxlY3QyLWxhc3QtdGVybSIpO2lmKChlPT09ITB8fCFmfHwhbChwLGYpKSYmKHQuZGF0YSh0aGlzLmNvbnRhaW5lciwic2VsZWN0Mi1sYXN0LXRlcm0iLHApLGU9PT0hMHx8dGhpcy5zaG93U2VhcmNoSW5wdXQhPT0hMSYmdGhpcy5vcGVuZWQoKSkpe2E9Kyt0aGlzLnF1ZXJ5Q291bnQ7dmFyIG09dGhpcy5nZXRNYXhpbXVtU2VsZWN0aW9uU2l6ZSgpO2lmKG0+PTEmJihvPXRoaXMuZGF0YSgpLHQuaXNBcnJheShvKSYmby5sZW5ndGg+PW0mJkwoZC5mb3JtYXRTZWxlY3Rpb25Ub29CaWcsImZvcm1hdFNlbGVjdGlvblRvb0JpZyIpKSlyZXR1cm4gdm9pZCByKCI8bGkgY2xhc3M9J3NlbGVjdDItc2VsZWN0aW9uLWxpbWl0Jz4iK3goZC5mb3JtYXRTZWxlY3Rpb25Ub29CaWcsZC5lbGVtZW50LG0pKyI8L2xpPiIpO2lmKGMudmFsKCkubGVuZ3RoPGQubWluaW11bUlucHV0TGVuZ3RoKXJldHVybiByKEwoZC5mb3JtYXRJbnB1dFRvb1Nob3J0LCJmb3JtYXRJbnB1dFRvb1Nob3J0Iik/IjxsaSBjbGFzcz0nc2VsZWN0Mi1uby1yZXN1bHRzJz4iK3goZC5mb3JtYXRJbnB1dFRvb1Nob3J0LGQuZWxlbWVudCxjLnZhbCgpLGQubWluaW11bUlucHV0TGVuZ3RoKSsiPC9saT4iOiIiKSx2b2lkKGUmJnRoaXMuc2hvd1NlYXJjaCYmdGhpcy5zaG93U2VhcmNoKCEwKSk7aWYoZC5tYXhpbXVtSW5wdXRMZW5ndGgmJmMudmFsKCkubGVuZ3RoPmQubWF4aW11bUlucHV0TGVuZ3RoKXJldHVybiB2b2lkIHIoTChkLmZvcm1hdElucHV0VG9vTG9uZywiZm9ybWF0SW5wdXRUb29Mb25nIik/IjxsaSBjbGFzcz0nc2VsZWN0Mi1uby1yZXN1bHRzJz4iK3goZC5mb3JtYXRJbnB1dFRvb0xvbmcsZC5lbGVtZW50LGMudmFsKCksZC5tYXhpbXVtSW5wdXRMZW5ndGgpKyI8L2xpPiI6IiIpO2QuZm9ybWF0U2VhcmNoaW5nJiYwPT09dGhpcy5maW5kSGlnaGxpZ2h0YWJsZUNob2ljZXMoKS5sZW5ndGgmJnIoIjxsaSBjbGFzcz0nc2VsZWN0Mi1zZWFyY2hpbmcnPiIreChkLmZvcm1hdFNlYXJjaGluZyxkLmVsZW1lbnQpKyI8L2xpPiIpLGMuYWRkQ2xhc3MoInNlbGVjdDItYWN0aXZlIiksdGhpcy5yZW1vdmVIaWdobGlnaHQoKSxzPXRoaXMudG9rZW5pemUoKSxzIT1uJiZudWxsIT1zJiZjLnZhbChzKSx0aGlzLnJlc3VsdHNQYWdlPTEsZC5xdWVyeSh7ZWxlbWVudDpkLmVsZW1lbnQsdGVybTpjLnZhbCgpLHBhZ2U6dGhpcy5yZXN1bHRzUGFnZSxjb250ZXh0Om51bGwsbWF0Y2hlcjpkLm1hdGNoZXIsY2FsbGJhY2s6dGhpcy5iaW5kKGZ1bmN0aW9uKG8pe3ZhciBzO2lmKGE9PXRoaXMucXVlcnlDb3VudCl7aWYoIXRoaXMub3BlbmVkKCkpcmV0dXJuIHZvaWQgdGhpcy5zZWFyY2gucmVtb3ZlQ2xhc3MoInNlbGVjdDItYWN0aXZlIik7aWYoby5oYXNFcnJvciE9PW4mJkwoZC5mb3JtYXRBamF4RXJyb3IsImZvcm1hdEFqYXhFcnJvciIpKXJldHVybiB2b2lkIHIoIjxsaSBjbGFzcz0nc2VsZWN0Mi1hamF4LWVycm9yJz4iK3goZC5mb3JtYXRBamF4RXJyb3IsZC5lbGVtZW50LG8uanFYSFIsby50ZXh0U3RhdHVzLG8uZXJyb3JUaHJvd24pKyI8L2xpPiIpO2lmKHRoaXMuY29udGV4dD1vLmNvbnRleHQ9PT1uP251bGw6by5jb250ZXh0LHRoaXMub3B0cy5jcmVhdGVTZWFyY2hDaG9pY2UmJiIiIT09Yy52YWwoKSYmKHM9dGhpcy5vcHRzLmNyZWF0ZVNlYXJjaENob2ljZS5jYWxsKGgsYy52YWwoKSxvLnJlc3VsdHMpLHMhPT1uJiZudWxsIT09cyYmaC5pZChzKSE9PW4mJm51bGwhPT1oLmlkKHMpJiYwPT09dChvLnJlc3VsdHMpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiBsKGguaWQodGhpcyksaC5pZChzKSl9KS5sZW5ndGgmJnRoaXMub3B0cy5jcmVhdGVTZWFyY2hDaG9pY2VQb3NpdGlvbihvLnJlc3VsdHMscykpLDA9PT1vLnJlc3VsdHMubGVuZ3RoJiZMKGQuZm9ybWF0Tm9NYXRjaGVzLCJmb3JtYXROb01hdGNoZXMiKSlyZXR1cm4gdm9pZCByKCI8bGkgY2xhc3M9J3NlbGVjdDItbm8tcmVzdWx0cyc+Iit4KGQuZm9ybWF0Tm9NYXRjaGVzLGQuZWxlbWVudCxjLnZhbCgpKSsiPC9saT4iKTt1LmVtcHR5KCksaC5vcHRzLnBvcHVsYXRlUmVzdWx0cy5jYWxsKHRoaXMsdSxvLnJlc3VsdHMse3Rlcm06Yy52YWwoKSxwYWdlOnRoaXMucmVzdWx0c1BhZ2UsY29udGV4dDpudWxsfSksby5tb3JlPT09ITAmJkwoZC5mb3JtYXRMb2FkTW9yZSwiZm9ybWF0TG9hZE1vcmUiKSYmKHUuYXBwZW5kKCI8bGkgY2xhc3M9J3NlbGVjdDItbW9yZS1yZXN1bHRzJz4iK2QuZXNjYXBlTWFya3VwKHgoZC5mb3JtYXRMb2FkTW9yZSxkLmVsZW1lbnQsdGhpcy5yZXN1bHRzUGFnZSkpKyI8L2xpPiIpLHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aC5sb2FkTW9yZUlmTmVlZGVkKCl9LDEwKSksdGhpcy5wb3N0cHJvY2Vzc1Jlc3VsdHMobyxlKSxpKCksdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih7dHlwZToic2VsZWN0Mi1sb2FkZWQiLGl0ZW1zOm99KX19KX0pfX0sY2FuY2VsOmZ1bmN0aW9uKCl7dGhpcy5jbG9zZSgpfSxibHVyOmZ1bmN0aW9uKCl7dGhpcy5vcHRzLnNlbGVjdE9uQmx1ciYmdGhpcy5zZWxlY3RIaWdobGlnaHRlZCh7bm9Gb2N1czohMH0pLHRoaXMuY2xvc2UoKSx0aGlzLmNvbnRhaW5lci5yZW1vdmVDbGFzcygic2VsZWN0Mi1jb250YWluZXItYWN0aXZlIiksdGhpcy5zZWFyY2hbMF09PT1kb2N1bWVudC5hY3RpdmVFbGVtZW50JiZ0aGlzLnNlYXJjaC5ibHVyKCksdGhpcy5jbGVhclNlYXJjaCgpLHRoaXMuc2VsZWN0aW9uLmZpbmQoIi5zZWxlY3QyLXNlYXJjaC1jaG9pY2UtZm9jdXMiKS5yZW1vdmVDbGFzcygic2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWZvY3VzIil9LGZvY3VzU2VhcmNoOmZ1bmN0aW9uKCl7bSh0aGlzLnNlYXJjaCl9LHNlbGVjdEhpZ2hsaWdodGVkOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX3RvdWNoTW92ZWQpcmV0dXJuIHZvaWQgdGhpcy5jbGVhclRvdWNoTW92ZWQoKTt2YXIgZT10aGlzLmhpZ2hsaWdodCgpLG49dGhpcy5yZXN1bHRzLmZpbmQoIi5zZWxlY3QyLWhpZ2hsaWdodGVkIiksaT1uLmNsb3Nlc3QoIi5zZWxlY3QyLXJlc3VsdCIpLmRhdGEoInNlbGVjdDItZGF0YSIpO2k/KHRoaXMuaGlnaGxpZ2h0KGUpLHRoaXMub25TZWxlY3QoaSx0KSk6dCYmdC5ub0ZvY3VzJiZ0aGlzLmNsb3NlKCl9LGdldFBsYWNlaG9sZGVyOmZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHRoaXMub3B0cy5lbGVtZW50LmF0dHIoInBsYWNlaG9sZGVyIil8fHRoaXMub3B0cy5lbGVtZW50LmF0dHIoImRhdGEtcGxhY2Vob2xkZXIiKXx8dGhpcy5vcHRzLmVsZW1lbnQuZGF0YSgicGxhY2Vob2xkZXIiKXx8dGhpcy5vcHRzLnBsYWNlaG9sZGVyfHwoKHQ9dGhpcy5nZXRQbGFjZWhvbGRlck9wdGlvbigpKSE9PW4/dC50ZXh0KCk6bil9LGdldFBsYWNlaG9sZGVyT3B0aW9uOmZ1bmN0aW9uKCl7aWYodGhpcy5zZWxlY3Qpe3ZhciBlPXRoaXMuc2VsZWN0LmNoaWxkcmVuKCJvcHRpb24iKS5maXJzdCgpO2lmKHRoaXMub3B0cy5wbGFjZWhvbGRlck9wdGlvbiE9PW4pcmV0dXJuImZpcnN0Ij09PXRoaXMub3B0cy5wbGFjZWhvbGRlck9wdGlvbiYmZXx8ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMub3B0cy5wbGFjZWhvbGRlck9wdGlvbiYmdGhpcy5vcHRzLnBsYWNlaG9sZGVyT3B0aW9uKHRoaXMuc2VsZWN0KTtpZigiIj09PXQudHJpbShlLnRleHQoKSkmJiIiPT09ZS52YWwoKSlyZXR1cm4gZX19LGluaXRDb250YWluZXJXaWR0aDpmdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt2YXIgZSxpLHIsbyxzLGE7aWYoIm9mZiI9PT10aGlzLm9wdHMud2lkdGgpcmV0dXJuIG51bGw7aWYoImVsZW1lbnQiPT09dGhpcy5vcHRzLndpZHRoKXJldHVybiAwPT09dGhpcy5vcHRzLmVsZW1lbnQub3V0ZXJXaWR0aCghMSk/ImF1dG8iOnRoaXMub3B0cy5lbGVtZW50Lm91dGVyV2lkdGgoITEpKyJweCI7aWYoImNvcHkiPT09dGhpcy5vcHRzLndpZHRofHwicmVzb2x2ZSI9PT10aGlzLm9wdHMud2lkdGgpe2lmKGU9dGhpcy5vcHRzLmVsZW1lbnQuYXR0cigic3R5bGUiKSxlIT09bilmb3IoaT1lLnNwbGl0KCI7Iiksbz0wLHM9aS5sZW5ndGg7bzxzO28rPTEpaWYoYT1pW29dLnJlcGxhY2UoL1xzL2csIiIpLHI9YS5tYXRjaCgvXndpZHRoOigoWy0rXT8oWzAtOV0qXC4pP1swLTldKykocHh8ZW18ZXh8JXxpbnxjbXxtbXxwdHxwYykpL2kpLG51bGwhPT1yJiZyLmxlbmd0aD49MSlyZXR1cm4gclsxXTtyZXR1cm4icmVzb2x2ZSI9PT10aGlzLm9wdHMud2lkdGg/KGU9dGhpcy5vcHRzLmVsZW1lbnQuY3NzKCJ3aWR0aCIpLGUuaW5kZXhPZigiJSIpPjA/ZTow", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("KX1uJiZuLmlubmVyVG9vbHRpcCYmKGU9byhuLmlubmVyVG9vbHRpcCksdGhpcy4kKCIuaW5wdXQtdG9vbHRpcCIpLnF0aXAoe2NvbnRlbnQ6ZSxzdHlsZTp7Y2xhc3Nlczoib2t0YS1zaWduLWluLXRvb2x0aXAgcXRpcC1jdXN0b20gcXRpcC1zaGFkb3cifSxwb3NpdGlvbjp7bXk6ImJvdHRvbSBsZWZ0Iix0YXJnZXQ6Im1vdXNlIixhZGp1c3Q6e21ldGhvZDoiZmxpcCIsbW91c2U6ITAseTotNSx4OjV9LHZpZXdwb3J0OnQoImJvZHkiKX19KSl9LGZvY3VzOmZ1bmN0aW9uKCl7aWYoIW4uaXNJRSgpKXJldHVybiBpLnByb3RvdHlwZS5mb2N1cy5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMzApLG4oMzI4KSxuKDMzMSksbig1MDApLG4oNDY2KSxuKDM2MSldLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8pe2Z1bmN0aW9uIHModCxlKXtyZXR1cm4gby51dGMoZSkuem9uZSgiLTA3OjAwIikuZm9ybWF0KHQpfWZ1bmN0aW9uIGEodCl7cmV0dXJuIHQmJnQucmVwbGFjZSgvXlxzK3xccyskL2csIiIpfWZ1bmN0aW9uIGwodCl7cmV0dXJuIDA9PT10LmluZGV4T2YoYyk/dDpjK3R9dmFyIGM9Ii9hc3NldHMiO3JldHVybiB0LnJlZ2lzdGVySGVscGVyKCJpMThuIixmdW5jdGlvbih0KXt2YXIgbixyPWEodC5oYXNoLmNvZGUpLG89YSh0Lmhhc2guYnVuZGxlKSxzPWEodC5oYXNoLmFyZ3VtZW50cyk7cmV0dXJuIHMmJihuPWUubWFwKGEocykuc3BsaXQoIjsiKSxmdW5jdGlvbih0KXt0PWEodCk7dmFyIG4saT10aGlzO3JldHVybiBlLmVhY2godC5zcGxpdCgiLiIpLGZ1bmN0aW9uKHQpe249bj9uW3RdOmlbdF19KSxufSx0aGlzKSksaS5sb2NhbGl6ZShyLG8sbil9KSx0LnJlZ2lzdGVySGVscGVyKCJ4c3JmVG9rZW5JbnB1dCIsZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHQuU2FmZVN0cmluZygnPGlucHV0IHR5cGU9ImhpZGRlbiIgY2xhc3M9ImhpZGUiIG5hbWU9Il94c3JmVG9rZW4iIHZhbHVlPSInK24oIiNfeHNyZlRva2VuIikudGV4dCgpKyciPicpfSksdC5yZWdpc3RlckhlbHBlcigiaW1nIixmdW5jdGlvbihuKXt2YXIgaT0idW5kZWZpbmVkIiE9dHlwZW9mIG9rdGEmJm9rdGEuY2RuVXJsSG9zdG5hbWV8fCIiLHI9ZS5waWNrKG4uaGFzaCxbInNyYyIsImFsdCIsIndpZHRoIiwiaGVpZ2h0IiwiY2xhc3MiLCJ0aXRsZSJdKTtyLnNyYz0iIitpK2woci5zcmMpO3ZhciBvPWUubWFwKHIsZnVuY3Rpb24oZSxuKXtyZXR1cm4gbisnPSInK3QuVXRpbHMuZXNjYXBlRXhwcmVzc2lvbihlKSsnIid9KTtyZXR1cm4gbmV3IHQuU2FmZVN0cmluZygiPGltZyAiK28uam9pbigiICIpKyIvPiIpfSksdC5yZWdpc3RlckhlbHBlcigic2hvcnREYXRlIixlLnBhcnRpYWwocywiTU1NIEREIikpLHQucmVnaXN0ZXJIZWxwZXIoIm1lZGl1bURhdGUiLGUucGFydGlhbChzLCJNTU1NIERELCBZWVlZIikpLHQucmVnaXN0ZXJIZWxwZXIoImxvbmdEYXRlIixlLnBhcnRpYWwocywiTU1NTSBERCwgWVlZWSwgaDptbWEiKSksdC5yZWdpc3RlckhlbHBlcigiZm9ybWF0RGF0ZSIscyksdC5yZWdpc3RlckhlbHBlcigibWFya2Rvd24iLGZ1bmN0aW9uKGUpe3JldHVybiByKHQsZSl9KSx0fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDM2MCksbig1MDUpLG4oNjM4KSxuKDYzOSksbig2NDApLG4oNjQzKSxuKDYzNyksbig2NDQpLG4oNjI3KSxuKDY0MSksbig2MzApLG4oNTAxKV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyxzLGEsbCxjLHUsZCxoKXtmdW5jdGlvbiBwKHQsZSl7cmV0dXJuIF8uZmluZCh0LnN0YXRlTGVzc1JvdXRlSGFuZGxlcnMsZnVuY3Rpb24obil7cmV0dXJuIGU9PT10W25dfSl9ZnVuY3Rpb24gZih0LGUpe3JldHVybiEhdCYmKHQhPT1zfHxlLmdldCgiZmVhdHVyZXMuc2VjdXJpdHlJbWFnZSIpKX1mdW5jdGlvbiBtKHQsZSxuLGkpe3ZhciByPXNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LnRyaWdnZXIoImxvYWRpbmciLCEwKX0sMjAwKTtyZXR1cm4gaC5sb2FkTGFuZ3VhZ2UodC5nZXQoImxhbmd1YWdlQ29kZSIpLGUse2Jhc2VVcmw6bixyZXdyaXRlOml9KS50aGVuKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHIpLHQudHJpZ2dlcigibG9hZGluZyIsITEpfSl9dmFyIF89dC5fLGc9dC4kO3JldHVybiB0LlJvdXRlci5leHRlbmQoe0V2ZW50czplLkV2ZW50cyxpbml0aWFsaXplOmZ1bmN0aW9uKGUpe3RoaXMuc2V0dGluZ3M9bmV3IHIoXy5vbWl0KGUsImVsIiwiYXV0aENsaWVudCIpLHtwYXJzZTohMH0pLHRoaXMuc2V0dGluZ3Muc2V0QXV0aENsaWVudChlLmF1dGhDbGllbnQpLGUuZWx8fHRoaXMuc2V0dGluZ3MuY2FsbEdsb2JhbEVycm9yKG5ldyBkLkNvbmZpZ0Vycm9yKHQubG9jKCJlcnJvci5yZXF1aXJlZC5lbCIpKSksZygiYm9keSA+IGRpdiIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt9KSx0aGlzLmFwcFN0YXRlPW5ldyBsKHtiYXNlVXJsOnRoaXMuc2V0dGluZ3MuZ2V0KCJiYXNlVXJsIiksc2V0dGluZ3M6dGhpcy5zZXR0aW5nc30se3BhcnNlOiEwfSk7dmFyIG49bmV3IGEoe2FwcFN0YXRlOnRoaXMuYXBwU3RhdGV9KTt0LiQoZS5lbCkuYXBwZW5kKG4ucmVuZGVyKCkuJGVsKSx0aGlzLmVsPSIjb2t0YS1zaWduLWluIix0aGlzLmhlYWRlcj1uZXcgbyh7ZWw6dGhpcy5lbCxhcHBTdGF0ZTp0aGlzLmFwcFN0YXRlLHNldHRpbmdzOnRoaXMuc2V0dGluZ3N9KSx0aGlzLmxpc3RlblRvKHRoaXMuYXBwU3RhdGUsImNoYW5nZTp0cmFuc2FjdGlvbkVycm9yIixmdW5jdGlvbih0LGUpe2Mucm91dGVBZnRlckF1dGhTdGF0dXNDaGFuZ2UodGhpcyxlKX0pLHRoaXMubGlzdGVuVG8odGhpcy5hcHBTdGF0ZSwiY2hhbmdlOnRyYW5zYWN0aW9uIixmdW5jdGlvbih0LGUpe2Mucm91dGVBZnRlckF1dGhTdGF0dXNDaGFuZ2UodGhpcyxudWxsLGUuZGF0YSl9KSx0aGlzLmxpc3RlblRvKHRoaXMuYXBwU3RhdGUsIm5hdmlnYXRlIixmdW5jdGlvbih0KXt0aGlzLm5hdmlnYXRlKHQse3RyaWdnZXI6ITB9KX0pfSxleGVjdXRlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5zZXR0aW5ncy5nZXQoInJlY292ZXJ5VG9rZW4iKTtpZihuKXJldHVybiB0aGlzLnNldHRpbmdzLnVuc2V0KCJyZWNvdmVyeVRva2VuIiksdm9pZCB0aGlzLm5hdmlnYXRlKGMuY3JlYXRlUmVjb3ZlcnlVcmwobikse3RyaWdnZXI6ITB9KTt2YXIgaT10aGlzLnNldHRpbmdzLmdldCgic3RhdGVUb2tlbiIpO2lmKGkpcmV0dXJuIHRoaXMuc2V0dGluZ3MudW5zZXQoInN0YXRlVG9rZW4iKSx2b2lkIHRoaXMubmF2aWdhdGUoYy5jcmVhdGVSZWZyZXNoVXJsKGkpLHt0cmlnZ2VyOiEwfSk7dmFyIHI9dGhpcy5hcHBTdGF0ZS5nZXQoInRyYW5zYWN0aW9uIik7cmV0dXJuIHImJnIuZGF0YXx8cCh0aGlzLHQpP3ZvaWQgdC5hcHBseSh0aGlzLGUpOnRoaXMuc2V0dGluZ3MuZ2V0QXV0aENsaWVudCgpLnR4LmV4aXN0cygpP3ZvaWQgdGhpcy5uYXZpZ2F0ZShjLmNyZWF0ZVJlZnJlc2hVcmwoKSx7dHJpZ2dlcjohMH0pOnZvaWQgdGhpcy5uYXZpZ2F0ZSgiIix7dHJpZ2dlcjohMH0pfSxuYXZpZ2F0ZTpmdW5jdGlvbihuLGkpe3JldHVybiB0aGlzLnNldHRpbmdzLmdldCgiZmVhdHVyZXMucm91dGVyIik/dC5Sb3V0ZXIucHJvdG90eXBlLm5hdmlnYXRlLmFwcGx5KHRoaXMsYXJndW1lbnRzKTppJiZpLnRyaWdnZXI/ZS5oaXN0b3J5LmxvYWRVcmwobik6dm9pZCAwfSxyZW5kZXI6ZnVuY3Rpb24odCxlKXtlfHwoZT17fSk7dmFyIG49ZS5CZWFjb24saT1fLmV4dGVuZCh7c2V0dGluZ3M6dGhpcy5zZXR0aW5ncyxhcHBTdGF0ZTp0aGlzLmFwcFN0YXRlfSxfLm9taXQoZSwiQmVhY29uIikpO2lmKHRoaXMuaGVhZGVyLnJlbmRlcmVkKCl8fCh0aGlzLmVsPXRoaXMuaGVhZGVyLnJlbmRlcigpLmdldENvbnRlbnRFbCgpKSwhaC5pc0xvYWRlZCh0aGlzLmFwcFN0YXRlLmdldCgibGFuZ3VhZ2VDb2RlIikpKXJldHVybiBtKHRoaXMuYXBwU3RhdGUsdGhpcy5zZXR0aW5ncy5nZXQoImkxOG4iKSx0aGlzLnNldHRpbmdzLmdldCgiYXNzZXRzLmJhc2VVcmwiKSx0aGlzLnNldHRpbmdzLmdldCgiYXNzZXRzLnJld3JpdGUiKSkudGhlbihfLmJpbmQodGhpcy5yZW5kZXIsdGhpcyx0LGUpKS5kb25lKCk7dmFyIHI9dGhpcy5jb250cm9sbGVyO3RoaXMuY29udHJvbGxlcj1uZXcgdChpKSx0aGlzLmxpc3RlblRvKHRoaXMuY29udHJvbGxlciwiYWxsIix0aGlzLnRyaWdnZXIpLHRoaXMuY29udHJvbGxlci5mZXRjaEluaXRpYWxEYXRhKCkudGhlbihfLmJpbmQoZnVuY3Rpb24oKXtyZXR1cm4gZihuLHRoaXMuc2V0dGluZ3MpfHwobj1udWxsKSx0aGlzLmhlYWRlci5zZXRCZWFjb24obixpKSx0aGlzLmNvbnRyb2xsZXIucmVuZGVyKCksCnI/dS5zd2FwUGFnZXMoeyRwYXJlbnQ6dGhpcy5lbCwkb2xkUm9vdDpyLiRlbCwkbmV3Um9vdDp0aGlzLmNvbnRyb2xsZXIuJGVsLGRpcjpyLnN0YXRlLmdldCgibmF2aWdhdGVEaXIiKSxjdHg6dGhpcyxzdWNjZXNzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5hcHBTdGF0ZS5nZXQoImZsYXNoRXJyb3IiKSxlPXRoaXMuY29udHJvbGxlci5tb2RlbDtyLnJlbW92ZSgpLHIuJGVsLnJlbW92ZSgpLHRoaXMuY29udHJvbGxlci5wb3N0UmVuZGVyQW5pbWF0aW9uKCksdCYmKGUudHJpZ2dlcigiZXJyb3IiLGUse3Jlc3BvbnNlSlNPTjp7ZXJyb3JTdW1tYXJ5OnR9fSksdGhpcy5hcHBTdGF0ZS51bnNldCgiZmxhc2hFcnJvciIpKX19KToodGhpcy5lbC5hcHBlbmQodGhpcy5jb250cm9sbGVyLmVsKSx2b2lkIHRoaXMuY29udHJvbGxlci5wb3N0UmVuZGVyQW5pbWF0aW9uKCkpfSx0aGlzKSkuZmFpbChmdW5jdGlvbigpe3ImJihyLnJlbW92ZSgpLHIuJGVsLnJlbW92ZSgpKX0pLmRvbmUoKX0sc3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZT0hMTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciYmKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJwb3BzdGF0ZSIsXy5iaW5kKGZ1bmN0aW9uKHQpe3RoaXMuY29udHJvbGxlci5iYWNrJiYodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5jb250cm9sbGVyLmJhY2soKSl9LHRoaXMpKSxlPW4uc3VwcG9ydHNQdXNoU3RhdGUoKSksdC5Sb3V0ZXIucHJvdG90eXBlLnN0YXJ0LmNhbGwodGhpcyx7cHVzaFN0YXRlOmV9KX0saGlkZTpmdW5jdGlvbigpe3RoaXMuaGVhZGVyLiRlbC5oaWRlKCl9LHNob3c6ZnVuY3Rpb24oKXt0aGlzLmhlYWRlci4kZWwuc2hvdygpfSxyZW1vdmU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRyb2xsZXIucmVtb3ZlKCksdGhpcy5oZWFkZXIuJGVsLnJlbW92ZSgpLGUuaGlzdG9yeS5zdG9wKCl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpXSxyPWZ1bmN0aW9uKHQpe3ZhciBlPSJjYW4tcmVtb3ZlLWJlYWNvbiI7cmV0dXJuIHQuVmlldy5leHRlbmQoe2NsYXNzTmFtZToiYXV0aC1jb250YWluZXIgbWFpbi1jb250YWluZXIiLGlkOiJva3RhLXNpZ24taW4iLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiYXV0aC1jb250YWluZXIifSxpbml0aWFsaXplOmZ1bmN0aW9uKHQpe3RoaXMubGlzdGVuVG8odC5hcHBTdGF0ZSwiY2hhbmdlOmJlYWNvblR5cGUiLGZ1bmN0aW9uKHQsbil7dGhpcy4kZWwudG9nZ2xlQ2xhc3MoZSwic2VjdXJpdHkiPT09bil9KX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("Ym9vbGVhbiIsITAsITFdfSxkZXJpdmVkOntpc09rdGFGYWN0b3I6e2RlcHM6WyJwcm92aWRlciJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiJPS1RBIj09PXR9fSxmYWN0b3JOYW1lOntkZXBzOlsicHJvdmlkZXIiLCJmYWN0b3JUeXBlIl0sZm46bi5nZXRGYWN0b3JOYW1lfSxmYWN0b3JMYWJlbDp7ZGVwczpbInByb3ZpZGVyIiwiZmFjdG9yVHlwZSIsInZlbmRvck5hbWUiXSxmbjpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIkRFTF9PQVRIIj09PXQ/aTpuLmdldEZhY3RvckxhYmVsKHQsZSl9fSxmYWN0b3JEZXNjcmlwdGlvbjp7ZGVwczpbInByb3ZpZGVyIiwiZmFjdG9yVHlwZSJdLGZuOm4uZ2V0RmFjdG9yRGVzY3JpcHRpb259LHNvcnRPcmRlcjp7ZGVwczpbInByb3ZpZGVyIiwiZmFjdG9yVHlwZSJdLGZuOm4uZ2V0RmFjdG9yU29ydE9yZGVyfSxpY29uQ2xhc3NOYW1lOntkZXBzOlsicHJvdmlkZXIiLCJmYWN0b3JUeXBlIl0sZm46bi5nZXRGYWN0b3JJY29uQ2xhc3NOYW1lfSxzZWN1cml0eVF1ZXN0aW9uOntkZXBzOlsicHJvZmlsZSIsImZhY3RvclR5cGUiXSxmbjpmdW5jdGlvbih0LGUpe3JldHVybiJxdWVzdGlvbiIhPT1lP251bGw6dCYmbi5nZXRTZWN1cml0eVF1ZXN0aW9uTGFiZWwodCl9fSxwaG9uZU51bWJlcjp7ZGVwczpbInByb2ZpbGUiLCJmYWN0b3JUeXBlIl0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4gci5jb250YWlucyhbInNtcyIsImNhbGwiXSxlKT90JiZ0LnBob25lTnVtYmVyOm51bGx9fSxlbWFpbDp7ZGVwczpbInByb2ZpbGUiLCJmYWN0b3JUeXBlIl0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4iZW1haWwiPT09ZT90JiZ0LmVtYWlsOm51bGx9fSxkZXZpY2VOYW1lOntkZXBzOlsicHJvZmlsZSIsImZhY3RvclR5cGUiXSxmbjpmdW5jdGlvbih0LGUpe3JldHVybiJwdXNoIiE9PWU/bnVsbDp0JiZ0Lm5hbWV9fSxlbnJvbGxlZDp7ZGVwczpbInN0YXR1cyJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiJBQ1RJVkUiPT09dH19LHJlcXVpcmVkOntkZXBzOlsiZW5yb2xsbWVudCJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiJSRVFVSVJFRCI9PT10fX0sY2FuVXNlUmVzZW5kOntkZXBzOlsicHJvdmlkZXIiLCJmYWN0b3JUeXBlIl0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4iT0tUQSI9PT10JiZyLmNvbnRhaW5zKFsicHVzaCIsInNtcyIsImNhbGwiLCJlbWFpbCJdLGUpfX0saXNBbnN3ZXJSZXF1aXJlZDp7ZGVwczpbImZhY3RvclR5cGUiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gci5jb250YWlucyhbInNtcyIsImNhbGwiLCJlbWFpbCIsInRva2VuIiwidG9rZW46c29mdHdhcmU6dG90cCIsInF1ZXN0aW9uIl0sdCl9fX0scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc2V0dGluZ3M9dC5zZXR0aW5ncyx0aGlzLmFwcFN0YXRlPXQuYXBwU3RhdGUsdC5yZW1lbWJlckRldmljZT1uLmdldFJlbWVtYmVyRGV2aWNlVmFsdWUodGhpcy5hcHBTdGF0ZSksci5vbWl0KHQsWyJzZXR0aW5ncyIsImFwcFN0YXRlIl0pfSx2YWxpZGF0ZTpmdW5jdGlvbigpe2lmKHRoaXMuZ2V0KCJpc0Fuc3dlclJlcXVpcmVkIikmJiF0aGlzLmdldCgiYW5zd2VyIikpcmV0dXJue2Fuc3dlcjp0LmxvYygibW9kZWwudmFsaWRhdGlvbi5maWVsZC5ibGFuayIpfX0sc2F2ZTpmdW5jdGlvbigpe3ZhciB0PSEhdGhpcy5nZXQoInJlbWVtYmVyRGV2aWNlIik7cmV0dXJuIHRoaXMuZG9UcmFuc2FjdGlvbihmdW5jdGlvbihuKXt2YXIgaT17cmVtZW1iZXJEZXZpY2U6dH07InF1ZXN0aW9uIj09PXRoaXMuZ2V0KCJmYWN0b3JUeXBlIik/aS5hbnN3ZXI9dGhpcy5nZXQoImFuc3dlciIpOmkucGFzc0NvZGU9dGhpcy5nZXQoImFuc3dlciIpO3ZhciBzO2lmKCJNRkFfUkVRVUlSRUQiPT09bi5zdGF0dXMpe3ZhciBhPXIuZmluZFdoZXJlKG4uZmFjdG9ycyx7aWQ6dGhpcy5nZXQoImlkIil9KTtzPWEudmVyaWZ5KGkpfWVsc2UgaWYodGhpcy5nZXQoImNhblVzZVJlc2VuZCIpJiYhdGhpcy5nZXQoImFuc3dlciIpJiZuLnJlc2VuZCl7dmFyIGw9bi5kYXRhLl9saW5rcy5yZXNlbmRbMF07cz1uLnJlc2VuZChsLm5hbWUpfWVsc2Ugcz1uLnZlcmlmeShpKTtyZXR1cm4gdGhpcy50cmlnZ2VyKCJzYXZlIikscy50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiJNRkFfQ0hBTExFTkdFIj09PXQuc3RhdHVzJiZ0LnBvbGw/ZS5kZWxheShvKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHQucG9sbChvKX0pOnR9KS5mYWlsKGZ1bmN0aW9uKHQpe3Rocm93IHR9KX0pfX0pLGE9dC5Db2xsZWN0aW9uLmV4dGVuZCh7bW9kZWw6cyxjb21wYXJhdG9yOiJzb3J0T3JkZXIiLHBhcnNlOmZ1bmN0aW9uKHQpe3RoaXMubGFzdFVzZWRGYWN0b3I9dFswXTt2YXIgZT1yLmZpbmRXaGVyZSh0LHtwcm92aWRlcjoiT0tUQSIsZmFjdG9yVHlwZToicHVzaCJ9KTtpZighZSlyZXR1cm4gdDt2YXIgbj1yLmZpbmRXaGVyZSh0LHtwcm92aWRlcjoiT0tUQSIsZmFjdG9yVHlwZToidG9rZW46c29mdHdhcmU6dG90cCJ9KSxpPW49PT10WzBdLG89ci5yZWR1Y2UodCxmdW5jdGlvbih0LGkpe3ZhciByPSJPS1RBIj09PWkucHJvdmlkZXIsbz1yJiYidG9rZW46c29mdHdhcmU6dG90cCI9PT1pLmZhY3RvclR5cGUsYT1yJiYicHVzaCI9PT1pLmZhY3RvclR5cGUsbD0iQUNUSVZFIiE9PWkuc3RhdHVzLGM9byYmKGx8fCJBQ1RJVkUiPT09ZS5zdGF0dXMpLHU9YSYmbCYmIkFDVElWRSI9PT1uLnN0YXR1cztyZXR1cm4gY3x8dT90OihhJiYoaS5iYWNrdXBGYWN0b3I9bmV3IHMobix7cGFyc2U6ITB9KSksdC5wdXNoKGkpLHQpfSxbXSk7cmV0dXJuIGkmJih0aGlzLmxhc3RVc2VkRmFjdG9yPWUpLG99LGdldERlZmF1bHRGYWN0b3I6ZnVuY3Rpb24oKXt2YXIgdD1yLnBpY2sodGhpcy5sYXN0VXNlZEZhY3RvciwiZmFjdG9yVHlwZSIsInByb3ZpZGVyIik7cmV0dXJuIHRoaXMuZmluZFdoZXJlKHQpfSxnZXRGaXJzdFVuZW5yb2xsZWRSZXF1aXJlZEZhY3RvcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbmRXaGVyZSh7cmVxdWlyZWQ6ITAsZW5yb2xsZWQ6ITF9KX19KTtyZXR1cm57TW9kZWw6cyxDb2xsZWN0aW9uOmF9fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDY0NyksbigzNDYpLG4oNjIyKSxuKDYyMyksbig2MjkpLG4oNjI0KSxuKDY0OCldLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhKXt2YXIgbD10LiQsYz10Ll87cmV0dXJuIHIuZXh0ZW5kKHtjbGFzc05hbWU6Im1mYS12ZXJpZnktZHVvIGR1by1mb3JtIixNb2RlbDp7cHJvcHM6e2hvc3Q6InN0cmluZyIsc2lnbmF0dXJlOiJzdHJpbmciLHBvc3RBY3Rpb246InN0cmluZyIsZmFjdG9ySWQ6InN0cmluZyIsc3RhdGVUb2tlbjoic3RyaW5nIixyZW1lbWJlckRldmljZToiYm9vbGVhbiJ9LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt2YXIgdD1pLmdldFJlbWVtYmVyRGV2aWNlVmFsdWUodGhpcy5hcHBTdGF0ZSk7dGhpcy5zZXQoInJlbWVtYmVyRGV2aWNlIix0KX0sZ2V0SW5pdE9wdGlvbnM6ZnVuY3Rpb24oKXt2YXIgdD0hIXRoaXMuZ2V0KCJyZW1lbWJlckRldmljZSIpO3JldHVybiB0aGlzLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24oZSl7dmFyIG49e3JlbWVtYmVyRGV2aWNlOnR9LGk9Yy5maW5kV2hlcmUoZS5mYWN0b3JzLHtwcm92aWRlcjoiRFVPIixmYWN0b3JUeXBlOiJ3ZWIifSk7cmV0dXJuIGkudmVyaWZ5KG4pLmZhaWwoZnVuY3Rpb24odCl7dGhyb3cgdH0pfSl9LHZlcmlmeTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldCgicG9zdEFjdGlvbiIpLGk9dGhpcy5nZXQoImZhY3RvcklkIikscj10aGlzLG89e2lkOmksc3RhdGVUb2tlbjp0aGlzLmdldCgic3RhdGVUb2tlbiIpLHNpZ19yZXNwb25zZTp0fSxzPXRoaXMuZ2V0KCJyZW1lbWJlckRldmljZSIpO3JldHVybiBuKGwucG9zdChlLG8pKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHIuZG9UcmFuc2FjdGlvbihmdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gcyYmKGU9e3JlbWVtYmVyRGV2aWNlOnN9KSx0LnBvbGwoZSl9KX0pLmZhaWwoZnVuY3Rpb24odCl7ci50cmlnZ2VyKCJlcnJvciIscix0Lnhocil9KX19LEZvcm06e2F1dG9TYXZlOiEwLG5vQnV0dG9uQmFyOiEwLHRpdGxlOmMucGFydGlhbCh0LmxvYywiZmFjdG9yLmR1byIpLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiZmFjdG9yLWR1byJ9LHBvc3RSZW5kZXI6ZnVuY3Rpb24oKXt0aGlzLmFkZCgnPGlmcmFtZSBmcmFtZWJvcmRlcj0iMCIgdGl0bGU9IicrdGhpcy50aXRsZSgpKyciPjwvaWZyYW1lPicpLHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImFsbG93UmVtZW1iZXJEZXZpY2UiKSYmdGhpcy5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAscGxhY2Vob2xkZXI6dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicmVtZW1iZXJEZXZpY2VMYWJlbCIpLGNsYXNzTmFtZToibWFyZ2luLWJ0bS0wIixuYW1lOiJyZW1lbWJlckRldmljZSIsdHlwZToiY2hlY2tib3gifSksZS5pbml0KHtob3N0OnRoaXMubW9kZWwuZ2V0KCJob3N0Iiksc2lnX3JlcXVlc3Q6dGhpcy5tb2RlbC5nZXQoInNpZ25hdHVyZSIpLGlmcmFtZTp0aGlzLiQoImlmcmFtZSIpLmdldCgwKSxwb3N0X2FjdGlvbjpjLmJpbmQodGhpcy5tb2RlbC52ZXJpZnksdGhpcy5tb2RlbCl9KX19LEZvb3RlcjphLGZldGNoSW5pdGlhbERhdGE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiB0aGlzLm1vZGVsLmdldEluaXRPcHRpb25zKCkudGhlbihmdW5jdGlvbihlKXt2YXIgbj1lLmRhdGE7aWYoIShuLl9lbWJlZGRlZCYmbi5fZW1iZWRkZWQuZmFjdG9yJiZuLl9lbWJlZGRlZC5mYWN0b3IuX2VtYmVkZGVkJiZuLl9lbWJlZGRlZC5mYWN0b3IuX2VtYmVkZGVkLnZlcmlmaWNhdGlvbikpdGhyb3cgbmV3IEVycm9yKCJSZXNwb25zZSBkb2VzIG5vdCBoYXZlIGR1byB2ZXJpZmljYXRpb24gb3B0aW9ucyIpO3ZhciBpPW4uX2VtYmVkZGVkLmZhY3Rvci5fZW1iZWRkZWQudmVyaWZpY2F0aW9uO3QubW9kZWwuc2V0KHtob3N0OmkuaG9zdCxzaWduYXR1cmU6aS5zaWduYXR1cmUscG9zdEFjdGlvbjppLl9saW5rcy5jb21wbGV0ZS5ocmVmLGZhY3RvcklkOm4uX2VtYmVkZGVkLmZhY3Rvci5pZCxzdGF0ZVRva2VuOm4uc3RhdGVUb2tlbn0pfSl9LHRyYXBBdXRoUmVzcG9uc2U6ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJpc01mYUNoYWxsZW5nZSIpKXJldHVybiEwfSxiYWNrOmZ1bmN0aW9uKCl7fX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG87ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9LCFmdW5jdGlvbihuLHMpe3I9W10saT1zLG89ImZ1bmN0aW9uIj09dHlwZW9mIGk/aS5hcHBseShlLHIpOmksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0odm9pZCAwLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUpe3Rocm93IG5ldyBFcnJvcigiRHVvIFdlYiBTREsgZXJyb3I6ICIrdCsoZT8iXG5TZWUgIitlKyIgZm9yIG1vcmUgaW5mb3JtYXRpb24iOiIiKSl9ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS8sIiQxLSQyIikudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiBuKHQsbil7cmV0dXJuImRhdGFzZXQiaW4gdD90LmRhdGFzZXRbbl06dC5nZXRBdHRyaWJ1dGUoImRhdGEtIitlKG4pKX1mdW5jdGlvbiBpKHQsZSxuLGkpeyJhZGRFdmVudExpc3RlbmVyImluIHdpbmRvdz90LmFkZEV2ZW50TGlzdGVuZXIoZSxpLCExKTp0LmF0dGFjaEV2ZW50KG4saSl9ZnVuY3Rpb24gcih0LGUsbixpKXsicmVtb3ZlRXZlbnRMaXN0ZW5lciJpbiB3aW5kb3c/dC5yZW1vdmVFdmVudExpc3RlbmVyKGUsaSwhMSk6dC5kZXRhY2hFdmVudChuLGkpfWZ1bmN0aW9uIG8odCl7aShkb2N1bWVudCwiRE9NQ29udGVudExvYWRlZCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsdCl9ZnVuY3Rpb24gcyh0KXtyKGRvY3VtZW50LCJET01Db250ZW50TG9hZGVkIiwib25yZWFkeXN0YXRlY2hhbmdlIix0KX1mdW5jdGlvbiBhKHQpe2kod2luZG93LCJtZXNzYWdlIiwib25tZXNzYWdlIix0KX1mdW5jdGlvbiBsKHQpe3Iod2luZG93LCJtZXNzYWdlIiwib25tZXNzYWdlIix0KX1mdW5jdGlvbiBjKGUpe2lmKGUpezA9PT1lLmluZGV4T2YoIkVSUnwiKSYmdChlLnNwbGl0KCJ8IilbMV0pLGUuaW5kZXhPZigiOiIpIT09LTEmJjI9PT1lLnNwbGl0KCI6IikubGVuZ3RofHx0KCJEdW8gd2FzIGdpdmVuIGEgYmFkIHRva2VuLiAgVGhpcyBtaWdodCBpbmRpY2F0ZSBhIGNvbmZpZ3VyYXRpb24gcHJvYmxlbSB3aXRoIG9uZSBvZiBEdW8ncyBjbGllbnQgbGlicmFyaWVzLiIsImh0dHBzOi8vd3d3LmR1b3NlY3VyaXR5LmNvbS9kb2NzL2R1b3dlYiNmaXJzdC1zdGVwcyIpO3ZhciBuPWUuc3BsaXQoIjoiKTtyZXR1cm4gdj1lLHk9blswXSxiPW5bMV0se3NpZ1JlcXVlc3Q6ZSxkdW9TaWc6blswXSxhcHBTaWc6blsxXX19fWZ1bmN0aW9uIHUoKXtpZih3PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHgpLCF3KXRocm93IG5ldyBFcnJvcignVGhpcyBwYWdlIGRvZXMgbm90IGNvbnRhaW4gYW4gaWZyYW1lIGZvciBEdW8gdG8gdXNlLkFkZCBhbiBlbGVtZW50IGxpa2UgPGlmcmFtZSBpZD0iZHVvX2lmcmFtZSI+PC9pZnJhbWU+IHRvIHRoaXMgcGFnZS4gIFNlZSBodHRwczovL3d3dy5kdW9zZWN1cml0eS5jb20vZG9jcy9kdW93ZWIjMy4tc2hvdy10aGUtaWZyYW1lIGZvciBtb3JlIGluZm9ybWF0aW9uLicpO20oKSxzKHUpfWZ1bmN0aW9uIGQodCl7cmV0dXJuIEJvb2xlYW4odC5vcmlnaW49PT0iaHR0cHM6Ly8iK2cmJiJzdHJpbmciPT10eXBlb2YgdC5kYXRhJiYodC5kYXRhLm1hdGNoKFMpfHx0LmRhdGEubWF0Y2goVCl8fHQuZGF0YS5tYXRjaChrKSkpfWZ1bmN0aW9uIGgodCl7dCYmKHQuaG9zdCYmKGc9dC5ob3N0KSx0LnNpZ19yZXF1ZXN0JiZjKHQuc2lnX3JlcXVlc3QpLHQucG9zdF9hY3Rpb24mJihBPXQucG9zdF9hY3Rpb24pLHQucG9zdF9hcmd1bWVudCYmKEU9dC5wb3N0X2FyZ3VtZW50KSx0LmlmcmFtZSYmKHQuaWZyYW1lLnRhZ05hbWU/dz10LmlmcmFtZToic3RyaW5nIj09dHlwZW9mIHQuaWZyYW1lJiYoeD10LmlmcmFtZSkpLCJmdW5jdGlvbiI9PXR5cGVvZiB0LnN1Ym1pdF9jYWxsYmFjayYmKE09dC5zdWJtaXRfY2FsbGJhY2spKSx3P20oKToodz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCh4KSx3P20oKTpvKHUpKSxzKGgpfWZ1bmN0aW9uIHAodCl7aWYoZCh0KSlpZih0LmRhdGEubWF0Y2goaykpe3ZhciBlPXQuZGF0YS5zdWJzdHJpbmcoIkRVT19PUEVOX1dJTkRPV3wiLmxlbmd0aCk7ZihlKSYmd2luZG93Lm9wZW4oZSwiX3NlbGYiKX1lbHNlIF8odC5kYXRhKSxsKHApfWZ1bmN0aW9uIGYodCl7aWYoIXQpcmV0dXJuITE7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpO2lmKGUuaHJlZj10LCJkdW90cnVzdGVkZW5kcG9pbnRzOiI9PT1lLnByb3RvY29sKXJldHVybiEwO2lmKCJodHRwczoiIT09ZS5wcm90b2NvbClyZXR1cm4hMTtmb3IodmFyIG49MDtuPEwubGVuZ3RoO24rKylpZihlLmhvc3RuYW1lLmVuZHNXaXRoKCIuIitMW25dKXx8ZS5ob3N0bmFtZT09PUxbbl0pcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gbSgpe2d8fChnPW4odywiaG9zdCIpLGd8fHQoIk5vIEFQSSBob3N0bmFtZSBpcyBnaXZlbiBmb3IgRHVvIHRvIHVzZS4gIEJlIHN1cmUgdG8gcGFzcyBhIGBob3N0YCBwYXJhbWV0ZXIgdG8gRHVvLmluaXQsIG9yIHRocm91Z2ggdGhlIGBkYXRhLWhvc3RgIGF0dHJpYnV0ZSBvbiB0aGUgaWZyYW1lIGVsZW1lbnQuIiwiaHR0cHM6Ly93d3cuZHVvc2VjdXJpdHkuY29tL2RvY3MvZHVvd2ViIzMuLXNob3ctdGhlLWlmcmFtZSIpKSx5JiZifHwoYyhuKHcsInNpZ1JlcXVlc3QiKSkseSYmYnx8dCgiTm8gdmFsaWQgc2lnbmVkIHJlcXVlc3QgaXMgZ2l2ZW4uICBCZSBzdXJlIHRvIGdpdmUgdGhlIGBzaWdfcmVxdWVzdGAgcGFyYW1ldGVyIHRvIER1by5pbml0LCBvciB1c2UgdGhlIGBkYXRhLXNpZy1yZXF1ZXN0YCBhdHRyaWJ1dGUgb24gdGhlIGlmcmFtZSBlbGVtZW50LiIsImh0dHBzOi8vd3d3LmR1b3NlY3VyaXR5LmNvbS9kb2NzL2R1b3dlYiMzLi1zaG93LXRoZS1pZnJhbWUiKSksIiI9PT1BJiYoQT1uKHcsInBvc3RBY3Rpb24iKXx8QSksInNpZ19yZXNwb25zZSI9PT1FJiYoRT1uKHcsInBvc3RBcmd1bWVudCIpfHxFKSx3LnNyYz1bImh0dHBzOi8vIixnLCIvZnJhbWUvd2ViL3YxL2F1dGg/dHg9Iix5LCImcGFyZW50PSIsZW5jb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpLCImdj0yLjYiXS5qb2luKCIiKSxhKHApfWZ1bmN0aW9uIF8odCl7QSh0KyI6IitiKX12YXIgZyx2LHksYix3LE0sUz0vXig/OkFVVEh8RU5ST0xMKStcfFtBLVphLXowLTlcK1wvPV0rXHxbQS1aYS16MC05XCtcLz1dKyQvLFQ9L15FUlJcfFtcd1xzXC5cKFwpXSskLyxrPS9eRFVPX09QRU5fV0lORE9XXHwvLEw9WyJkdW8uY29tIiwiZHVvc2VjdXJpdHkuY29tIiwiZHVvbW9iaWxlLnMzLXVzLXdlc3QtMS5hbWF6b25hd3MuY29tIl0seD0iZHVvX2lmcmFtZSIsQT0iIixFPSJzaWdfcmVzcG9uc2UiO3JldHVybntpbml0OmgsX29uUmVhZHk6byxfcGFyc2VTaWdSZXF1ZXN0OmMsX2lzRHVvTWVzc2FnZTpkLF9kb1Bvc3RCYWNrOl99fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDYyOSksbig1MTQpXSxyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10Ll87cmV0dXJuIHQuVmlldy5leHRlbmQoewp0ZW1wbGF0ZTonXHQgICAgICA8YSBocmVmPSIjIiBjbGFzcz0ibGluayB7e2xpbmtDbGFzc05hbWV9fSIgZGF0YS1zZT0ic2lnbm91dC1saW5rIj5cdCAgICAgICAge3tsaW5rVGV4dH19XHQgICAgICA8L2E+XHQgICAgJyxjbGFzc05hbWU6ImF1dGgtZm9vdGVyIGNsZWFyZml4IixldmVudHM6eyJjbGljayBhIjpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCk7dmFyIGk9dGhpczt0aGlzLm1vZGVsLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24odCl7cmV0dXJuIHQuY2FuY2VsKCl9KS50aGVuKGZ1bmN0aW9uKCl7aS5zZXR0aW5ncy5nZXQoInNpZ25PdXRMaW5rIik/bi5yZWRpcmVjdChpLnNldHRpbmdzLmdldCgic2lnbk91dExpbmsiKSk6KGkuc3RhdGUuc2V0KCJuYXZpZ2F0ZURpciIsZS5ESVJFQ1RJT05fQkFDSyksaS5vcHRpb25zLmFwcFN0YXRlLnRyaWdnZXIoIm5hdmlnYXRlIiwiIikpfSl9fSxnZXRUZW1wbGF0ZURhdGE6ZnVuY3Rpb24oKXtyZXR1cm57bGlua0NsYXNzTmFtZTppLmlzVW5kZWZpbmVkKHRoaXMub3B0aW9ucy5saW5rQ2xhc3NOYW1lKT8iZ290byI6dGhpcy5vcHRpb25zLmxpbmtDbGFzc05hbWUsbGlua1RleHQ6dGhpcy5vcHRpb25zLmxpbmtUZXh0fHx0LmxvYygic2lnbm91dCIsImxvZ2luIil9fX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDUzNCksbig2MjUpLG4oNjUyKSxuKDY1NSksbig2NTYpLG4oNjUwKSxuKDY1Nyksbig2NTgpLG4oNjU5KSxuKDY0OCldLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhLGwsYyx1KXtyZXR1cm4gbi5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeSIsaW5pdGlhbGl6ZTpmdW5jdGlvbihuKXt2YXIgaSxkPW4uYXBwU3RhdGUuZ2V0KCJmYWN0b3JzIiksaD1uLmZhY3RvclR5cGUscD1uLnByb3ZpZGVyO3N3aXRjaChoKXtjYXNlInF1ZXN0aW9uIjppPXM7YnJlYWs7Y2FzZSJzbXMiOmNhc2UiY2FsbCI6Y2FzZSJlbWFpbCI6aT1hO2JyZWFrO2Nhc2UidG9rZW4iOmNhc2UidG9rZW46c29mdHdhcmU6dG90cCI6aT1yO2JyZWFrO2Nhc2UidG9rZW46aGFyZHdhcmUiOmk9bzticmVhaztjYXNlInB1c2giOmk9bDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiVW5yZWNvZ25pemVkIGZhY3RvciB0eXBlIil9aWYodGhpcy5tb2RlbD1kLmZpbmRXaGVyZSh7cHJvdmlkZXI6cCxmYWN0b3JUeXBlOmh9KSwhdGhpcy5tb2RlbCl0aHJvdyBuZXcgRXJyb3IoIlVucmVjb2duaXplZCBmYWN0b3IvcHJvdmlkZXIiKTt0aGlzLmFkZExpc3RlbmVycygpLHRoaXMuYWRkKG5ldyBpKHRoaXMudG9KU09OKCkpKSwicHVzaCI9PT1oJiZ0aGlzLm1vZGVsLmdldCgiaXNPa3RhRmFjdG9yIikmJih0aGlzLmFkZChjLHtvcHRpb25zOnttb2RlbDp0aGlzLm1vZGVsLmdldCgiYmFja3VwRmFjdG9yIil9fSksdGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmF1dG9QdXNoIikmJnRoaXMuYWRkKGUse29wdGlvbnM6e21vZGVsOnRoaXMubW9kZWwsbmFtZToiYXV0b1B1c2giLHBsYWNlaG9sZGVyOnQubG9jKCJhdXRvUHVzaCIsImxvZ2luIiksbGFiZWw6ITEsImxhYmVsLXRvcCI6ITEsY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAifX0pLHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImFsbG93UmVtZW1iZXJEZXZpY2UiKSYmdGhpcy5hZGQoZSx7b3B0aW9uczp7bW9kZWw6dGhpcy5tb2RlbCxuYW1lOiJyZW1lbWJlckRldmljZSIscGxhY2Vob2xkZXI6dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicmVtZW1iZXJEZXZpY2VMYWJlbCIpLGxhYmVsOiExLCJsYWJlbC10b3AiOiEwLGNsYXNzTmFtZToibWFyZ2luLWJ0bS0wIn19KSx0aGlzLmxpc3RlblRvKHRoaXMubW9kZWwsImNoYW5nZTpyZW1lbWJlckRldmljZSIsZnVuY3Rpb24odCxlKXt0LmdldCgiYmFja3VwRmFjdG9yIikuc2V0KCJyZW1lbWJlckRldmljZSIsZSl9KSksdGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmhpZGVTaWduT3V0TGlua0luTUZBIil8fHRoaXMuYWRkKG5ldyB1KHRoaXMudG9KU09OKCkpKX0sdHJhcEF1dGhSZXNwb25zZTpmdW5jdGlvbigpe3JldHVybiEoIXRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImlzTWZhQ2hhbGxlbmdlIikmJiF0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJpc01mYVJlcXVpcmVkIikmJigicHVzaCI9PXRoaXMub3B0aW9ucy5mYWN0b3JUeXBlJiYodGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmF1dG9QdXNoIikmJnRoaXMubW9kZWwuZ2V0KCJhdXRvUHVzaCIpP2kuc2V0QXV0b1B1c2hDb29raWUodGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgidXNlcklkIikpOmkucmVtb3ZlQXV0b1B1c2hDb29raWUodGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgidXNlcklkIikpKSwxKSl9LGJhY2s6ZnVuY3Rpb24oKXt9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oNjUxKV0scj1mdW5jdGlvbih0LGUpe3ZhciBuPXQuXztyZXR1cm4gdC5Gb3JtLmV4dGVuZCh7Y2xhc3NOYW1lOiJtZmEtdmVyaWZ5LXF1ZXN0aW9uIixhdXRvU2F2ZTohMCxub0NhbmNlbEJ1dHRvbjohMCxzYXZlOm4ucGFydGlhbCh0LmxvYywibWZhLmNoYWxsZW5nZS52ZXJpZnkiLCJsb2dpbiIpLHNjcm9sbE9uRXJyb3I6ITEsbGF5b3V0OiJvLWZvcm0tdGhlbWUiLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiZmFjdG9yLXF1ZXN0aW9uIn0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3RoaXMudGl0bGU9dGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIiksdGhpcy5hZGRJbnB1dCh7bGFiZWw6dGhpcy5tb2RlbC5nZXQoInNlY3VyaXR5UXVlc3Rpb24iKSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0LmxvYygibWZhLmNoYWxsZW5nZS5hbnN3ZXIucGxhY2Vob2xkZXIiLCJsb2dpbiIpLGNsYXNzTmFtZToiYXV0aC1wYXNzY29kZSIsbmFtZToiYW5zd2VyIix0eXBlOiJwYXNzd29yZCIsaW5wdXQ6ZX0pLHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImFsbG93UmVtZW1iZXJEZXZpY2UiKSYmdGhpcy5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAscGxhY2Vob2xkZXI6dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicmVtZW1iZXJEZXZpY2VMYWJlbCIpLGNsYXNzTmFtZToibWFyZ2luLWJ0bS0wIixuYW1lOiJyZW1lbWJlckRldmljZSIsdHlwZToiY2hlY2tib3gifSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oNjM0KV0scj1mdW5jdGlvbih0LGUpe3JldHVybiBlLmV4dGVuZCh7dGVtcGxhdGU6dC50cGwoJ1x0ICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBwbGFjZWhvbGRlcj0ie3twbGFjZWhvbGRlcn19IiBuYW1lPSJ7e25hbWV9fSIgaWQ9Int7aW5wdXRJZH19IiB2YWx1ZT0ie3t2YWx1ZX19Ii8+XHQgICAgICA8c3BhbiBjbGFzcz0icGFzc3dvcmQtdG9nZ2xlIj5cdCAgICAgICAgPHNwYW4gY2xhc3M9ImJ1dHRvbiBidXR0b24tZGFyayBidXR0b24tc2hvdyI+XHQgICAgICAgICAge3tpMThuIGNvZGU9Im1mYS5jaGFsbGVuZ2UuYW5zd2VyLnNob3dBbnN3ZXIiIGJ1bmRsZT0ibG9naW4ifX08L3NwYW4+XHQgICAgICAgIDxzcGFuIGNsYXNzPSJidXR0b24gYnV0dG9uLWhpZGUiPnt7aTE4biBjb2RlPSJtZmEuY2hhbGxlbmdlLmFuc3dlci5oaWRlQW5zd2VyIiBidW5kbGU9ImxvZ2luIn19PC9zcGFuPlx0ICAgICAgPC9zcGFuPicpLGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLmV2ZW50c1siY2xpY2sgLnBhc3N3b3JkLXRvZ2dsZSAuYnV0dG9uLXNob3ciXT0iX3Nob3dQYXNzd29yZCIsdGhpcy5ldmVudHNbImNsaWNrIC5wYXNzd29yZC10b2dnbGUgLmJ1dHRvbi1oaWRlIl09Il9oaWRlUGFzc3dvcmQiLHRoaXMuZGVsZWdhdGVFdmVudHMoKX0sY2hhbmdlVHlwZTpmdW5jdGlvbih0KXtlLnByb3RvdHlwZS5jaGFuZ2VUeXBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLiQoIi5wYXNzd29yZC10b2dnbGUiKS50b2dnbGVDbGFzcygicGFzc3dvcmQtdG9nZ2xlLW9uIiwicGFzc3dvcmQiIT09dCl9LF9zaG93UGFzc3dvcmQ6ZnVuY3Rpb24oKXt0aGlzLmNoYW5nZVR5cGUoInRleHQiKX0sX2hpZGVQYXNzd29yZDpmdW5jdGlvbigpe3RoaXMuY2hhbmdlVHlwZSgicGFzc3dvcmQiKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig2NTMpLG4oNjU0KV0scj1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCl7by5yZW1vdmVDb29raWUodCx7cGF0aDoiLyJ9KX1mdW5jdGlvbiBpKHQsZSl7by5jb29raWUodCxlLHtleHBpcmVzOmwscGF0aDoiLyJ9KX1mdW5jdGlvbiByKHQpe3JldHVybiBhK2UuZ2V0U3RyaW5nSGFzaCh0KX12YXIgbz10LiQscz0ibG4iLGE9ImF1dG9fcHVzaF8iLGw9MzY1LGM9e307cmV0dXJuIGMuZ2V0Q29va2llVXNlcm5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gby5jb29raWUocyl9LGMuc2V0VXNlcm5hbWVDb29raWU9ZnVuY3Rpb24odCl7aShzLHQpfSxjLnJlbW92ZVVzZXJuYW1lQ29va2llPWZ1bmN0aW9uKCl7bihzKX0sYy5pc0F1dG9QdXNoRW5hYmxlZD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dCYmInRydWUiPT09by5jb29raWUocih0KSl9LGMuc2V0QXV0b1B1c2hDb29raWU9ZnVuY3Rpb24odCl7dm9pZCAwIT09dCYmaShyKHQpLCEwKX0sYy5yZW1vdmVBdXRvUHVzaENvb2tpZT1mdW5jdGlvbih0KXt2b2lkIDAhPT10JiZuKHIodCkpfSxjfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtpPWZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIHQuZ2V0U3RyaW5nSGFzaD1mdW5jdGlvbih0KXtmb3IodmFyIGU9NTM4MSxuPXQubGVuZ3RoO247KWU9MzMqZV50LmNoYXJDb2RlQXQoLS1uKTtyZXR1cm4gZT4+PjB9LHR9LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHIsbzsvKiEKCQkgKiBqUXVlcnkgQ29va2llIFBsdWdpbiB2MS40LjEKCQkgKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZQoJCSAqCgkJICogQ29weXJpZ2h0IDIwMTMgS2xhdXMgSGFydGwKCQkgKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKCQkgKi8KIWZ1bmN0aW9uKHMpe3I9W24oMzMyKV0saT1zLG89ImZ1bmN0aW9uIj09dHlwZW9mIGk/aS5hcHBseShlLHIpOmksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0oZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gYS5yYXc/dDplbmNvZGVVUklDb21wb25lbnQodCl9ZnVuY3Rpb24gbih0KXtyZXR1cm4gYS5yYXc/dDpkZWNvZGVVUklDb21wb25lbnQodCl9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gZShhLmpzb24/SlNPTi5zdHJpbmdpZnkodCk6U3RyaW5nKHQpKX1mdW5jdGlvbiByKHQpezA9PT10LmluZGV4T2YoJyInKSYmKHQ9dC5zbGljZSgxLC0xKS5yZXBsYWNlKC9cXCIvZywnIicpLnJlcGxhY2UoL1xcXFwvZywiXFwiKSk7dHJ5e3JldHVybiB0PWRlY29kZVVSSUNvbXBvbmVudCh0LnJlcGxhY2UocywiICIpKSxhLmpzb24/SlNPTi5wYXJzZSh0KTp0fWNhdGNoKGUpe319ZnVuY3Rpb24gbyhlLG4pe3ZhciBpPWEucmF3P2U6cihlKTtyZXR1cm4gdC5pc0Z1bmN0aW9uKG4pP24oaSk6aX12YXIgcz0vXCsvZyxhPXQuY29va2llPWZ1bmN0aW9uKHIscyxsKXtpZih2b2lkIDAhPT1zJiYhdC5pc0Z1bmN0aW9uKHMpKXtpZihsPXQuZXh0ZW5kKHt9LGEuZGVmYXVsdHMsbCksIm51bWJlciI9PXR5cGVvZiBsLmV4cGlyZXMpe3ZhciBjPWwuZXhwaXJlcyx1PWwuZXhwaXJlcz1uZXcgRGF0ZTt1LnNldFRpbWUoK3UrODY0ZTUqYyl9cmV0dXJuIGRvY3VtZW50LmNvb2tpZT1bZShyKSwiPSIsaShzKSxsLmV4cGlyZXM/IjsgZXhwaXJlcz0iK2wuZXhwaXJlcy50b1VUQ1N0cmluZygpOiIiLGwucGF0aD8iOyBwYXRoPSIrbC5wYXRoOiIiLGwuZG9tYWluPyI7IGRvbWFpbj0iK2wuZG9tYWluOiIiLGwuc2VjdXJlPyI7IHNlY3VyZSI6IiJdLmpvaW4oIiIpfWZvcih2YXIgZD1yP3ZvaWQgMDp7fSxoPWRvY3VtZW50LmNvb2tpZT9kb2N1bWVudC5jb29raWUuc3BsaXQoIjsgIik6W10scD0wLGY9aC5sZW5ndGg7cDxmO3ArKyl7dmFyIG09aFtwXS5zcGxpdCgiPSIpLF89bihtLnNoaWZ0KCkpLGc9bS5qb2luKCI9Iik7aWYociYmcj09PV8pe2Q9byhnLHMpO2JyZWFrfXJ8fHZvaWQgMD09PShnPW8oZykpfHwoZFtfXT1nKX1yZXR1cm4gZH07YS5kZWZhdWx0cz17fSx0LnJlbW92ZUNvb2tpZT1mdW5jdGlvbihlLG4pe3JldHVybiB2b2lkIDAhPT10LmNvb2tpZShlKSYmKHQuY29va2llKGUsIiIsdC5leHRlbmQoe30sbix7ZXhwaXJlczotMX0pKSwhdC5jb29raWUoZSkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig2MzQpXSxyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5fO3JldHVybiB0LkZvcm0uZXh0ZW5kKHtjbGFzc05hbWU6Im1mYS12ZXJpZnktdG90cCIsYXV0b1NhdmU6ITAsbm9DYW5jZWxCdXR0b246ITAsc2F2ZTpuLnBhcnRpYWwodC5sb2MsIm1mYS5jaGFsbGVuZ2UudmVyaWZ5IiwibG9naW4iKSxzY3JvbGxPbkVycm9yOiExLGxheW91dDoiby1mb3JtLXRoZW1lIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImZhY3Rvci10b3RwIn0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciBuPXRoaXMubW9kZWwuZ2V0KCJmYWN0b3JMYWJlbCIpLGk9IlJTQSI9PT10aGlzLm1vZGVsLmdldCgicHJvdmlkZXIiKXx8IkRFTF9PQVRIIj09PXRoaXMubW9kZWwuZ2V0KCJwcm92aWRlciIpO3RoaXMudGl0bGU9bix0aGlzLnN1YnRpdGxlPXQubG9jKCJtZmEuY2hhbGxlbmdlLnRpdGxlIiwibG9naW4iLFtuXSksdGhpcy5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAscGxhY2Vob2xkZXI6dC5sb2MoIm1mYS5jaGFsbGVuZ2UuZW50ZXJDb2RlLnBsYWNlaG9sZGVyIiwibG9naW4iKSxjbGFzc05hbWU6Im8tZm9ybS1maWVsZHNldCBvLWZvcm0tbGFiZWwtdG9wIGF1dGgtcGFzc2NvZGUiLG5hbWU6ImFuc3dlciIsaW5wdXQ6ZSx0eXBlOmk/InBhc3N3b3JkIjoidGV4dCJ9KSx0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJhbGxvd1JlbWVtYmVyRGV2aWNlIikmJnRoaXMuYWRkSW5wdXQoe2xhYmVsOiExLCJsYWJlbC10b3AiOiEwLHBsYWNlaG9sZGVyOnRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoInJlbWVtYmVyRGV2aWNlTGFiZWwiKSxjbGFzc05hbWU6Im1hcmdpbi1idG0tMCIsbmFtZToicmVtZW1iZXJEZXZpY2UiLHR5cGU6ImNoZWNrYm94In0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDYzNCldLHI9ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll87cmV0dXJuIHQuRm9ybS5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeS15dWJpa2V5IixhdXRvU2F2ZTohMCxub0NhbmNlbEJ1dHRvbjohMCxzYXZlOm4ucGFydGlhbCh0LmxvYywibWZhLmNoYWxsZW5nZS52ZXJpZnkiLCJsb2dpbiIpLHNjcm9sbE9uRXJyb3I6ITEsbGF5b3V0OiJvLWZvcm0tdGhlbWUiLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiZmFjdG9yLXl1YmlrZXkifSxpbml0aWFsaXplOmZ1bmN0aW9uKCl7dmFyIG49dGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIik7dGhpcy50aXRsZT1uLHRoaXMuc3VidGl0bGU9dC5sb2MoImZhY3Rvci50b3RwSGFyZC55dWJpa2V5LmRlc2NyaXB0aW9uIiwibG9naW4iKSx0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxjbGFzc05hbWU6Im8tZm9ybS1maWVsZHNldCBvLWZvcm0tbGFiZWwtdG9wIGF1dGgtcGFzc2NvZGUiLG5hbWU6ImFuc3dlciIsaW5wdXQ6ZSx0eXBlOiJwYXNzd29yZCIscGxhY2Vob2xkZXI6dC5sb2MoImZhY3Rvci50b3RwSGFyZC55dWJpa2V5LnBsYWNlaG9sZGVyIiwibG9naW4iKX0pLHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImFsbG93UmVtZW1iZXJEZXZpY2UiKSYmdGhpcy5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAsY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAiLHBsYWNlaG9sZGVyOnRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoInJlbWVtYmVyRGV2aWNlTGFiZWwiKSxuYW1lOiJyZW1lbWJlckRldmljZSIsdHlwZToiY2hlY2tib3gifSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oMzQ2KSxuKDYzNCldLHI9ZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkoZSl7c3dpdGNoKGUpe2Nhc2Uic21zIjpyZXR1cm57YnV0dG9uRGF0YVNlOiJzbXMtc2VuZC1jb2RlIixidXR0b25DbGFzc05hbWU6InNtcy1yZXF1ZXN0LWJ1dHRvbiIsZm9ybVN1Ym1pdDp0LmxvYygibWZhLnNlbmRDb2RlIiwibG9naW4iKSxmb3JtUmV0cnk6dC5sb2MoIm1mYS5yZXNlbmRDb2RlIiwibG9naW4iKSxmb3JtU3VibWl0dGVkOnQubG9jKCJtZmEuc2VudCIsImxvZ2luIiksc3VidGl0bGU6cih7c3VidGl0bGU6dGhpcy5tb2RlbC5nZXQoInBob25lTnVtYmVyIil9KX07Y2FzZSJjYWxsIjpyZXR1cm57YnV0dG9uRGF0YVNlOiJtYWtlLWNhbGwiLGJ1dHRvbkNsYXNzTmFtZToiY2FsbC1yZXF1ZXN0LWJ1dHRvbiIsZm9ybVN1Ym1pdDp0LmxvYygibWZhLmNhbGwiLCJsb2dpbiIpLGZvcm1SZXRyeTp0LmxvYygibWZhLnJlZGlhbCIsImxvZ2luIiksZm9ybVN1Ym1pdHRlZDp0LmxvYygibWZhLmNhbGxpbmciLCJsb2dpbiIpLHN1YnRpdGxlOnIoe3N1YnRpdGxlOnRoaXMubW9kZWwuZ2V0KCJwaG9uZU51bWJlciIpfSl9O2Nhc2UiZW1haWwiOnJldHVybntidXR0b25EYXRhU2U6ImVtYWlsLXNlbmQtY29kZSIsYnV0dG9uQ2xhc3NOYW1lOiJlbWFpbC1yZXF1ZXN0LWJ1dHRvbiIsZm9ybVN1Ym1pdDp0LmxvYygibWZhLnNlbmRFbWFpbCIsImxvZ2luIiksZm9ybVJldHJ5OnQubG9jKCJtZmEucmVzZW5kRW1haWwiLCJsb2dpbiIpLGZvcm1TdWJtaXR0ZWQ6dC5sb2MoIm1mYS5zZW50IiwibG9naW4iKSxzdWJ0aXRsZTpyKHtzdWJ0aXRsZTp0aGlzLm1vZGVsLmdldCgiZW1haWwiKX0pfTtkZWZhdWx0OnJldHVybntidXR0b25EYXRhU2U6IiIsYnV0dG9uQ2xhc3NOYW1lOiIiLGZvcm1TdWJtaXQ6IiIsZm9ybVJldHJ5OiIiLGZvcm1TdWJtaXR0ZWQ6IiJ9fX12YXIgcj10LkhhbmRsZWJhcnMuY29tcGlsZSgiKHt7c3VidGl0bGV9fSkiKSxvPXQuXyxzPTNlNDtyZXR1cm4gdC5Gb3JtLmV4dGVuZCh7Y2xhc3NOYW1lOiJtZmEtdmVyaWZ5LXBhc3Njb2RlIixhdXRvU2F2ZTohMCxub0NhbmNlbEJ1dHRvbjohMCxzYXZlOm8ucGFydGlhbCh0LmxvYywibWZhLmNoYWxsZW5nZS52ZXJpZnkiLCJsb2dpbiIpLHNjcm9sbE9uRXJyb3I6ITEsbGF5b3V0OiJvLWZvcm0tdGhlbWUiLGRpc2FibGVTdWJtaXRCdXR0b246ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb2RlbC5hcHBTdGF0ZS5nZXQoImlzTWZhQ2hhbGxlbmdlIikmJnRoaXMubW9kZWwuZ2V0KCJhbnN3ZXIiKX0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciByPXRoaXM7dGhpcy50aXRsZT10aGlzLm1vZGVsLmdldCgiZmFjdG9yTGFiZWwiKTt2YXIgYT10aGlzLm1vZGVsLmdldCgiZmFjdG9yVHlwZSIpLGw9aS5jYWxsKHRoaXMsYSk7dGhpcy4kZWwuYXR0cigiZGF0YS1zZSIsImZhY3Rvci0iK2EpLHRoaXMuc3VidGl0bGU9bC5zdWJ0aXRsZSx0aGlzLmxpc3RlblRvKHRoaXMubW9kZWwsImVycm9yIixmdW5jdGlvbigpe3RoaXMuY2xlYXJFcnJvcnMoKX0pLHRoaXMuYWRkKHQuY3JlYXRlQnV0dG9uKHthdHRyaWJ1dGVzOnsiZGF0YS0=", "base64"));
  res.write(new Buffer("c2UiOmwuYnV0dG9uRGF0YVNlfSxjbGFzc05hbWU6ImJ1dHRvbiAiK2wuYnV0dG9uQ2xhc3NOYW1lLHRpdGxlOmwuZm9ybVN1Ym1pdCxjbGljazpmdW5jdGlvbigpe3IuY2xlYXJFcnJvcnMoKSx0aGlzLmRpc2FibGUoKSx0aGlzLm9wdGlvbnMudGl0bGU9bC5mb3JtU3VibWl0dGVkLHRoaXMucmVuZGVyKCksdGhpcy5tb2RlbC5zZXQoImFuc3dlciIsIiIpLHRoaXMubW9kZWwuc2F2ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gci5nZXRJbnB1dHMoKS5maXJzdCgpLnJlbmRlcigpLmZvY3VzKCksZS5kZWxheShzKX0pLnRoZW4oby5iaW5kKGZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLnRpdGxlPWwuZm9ybVJldHJ5LHRoaXMuZW5hYmxlKCksdGhpcy5yZW5kZXIoKX0sdGhpcykpfX0pKSx0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0LmxvYygibWZhLmNoYWxsZW5nZS5lbnRlckNvZGUucGxhY2Vob2xkZXIiLCJsb2dpbiIpLGNsYXNzTmFtZToiby1mb3JtLWZpZWxkc2V0IG8tZm9ybS1sYWJlbC10b3AgYXV0aC1wYXNzY29kZSIsbmFtZToiYW5zd2VyIixpbnB1dDpuLHR5cGU6InRleHQifSksdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiYWxsb3dSZW1lbWJlckRldmljZSIpJiZ0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJyZW1lbWJlckRldmljZUxhYmVsIiksY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAiLG5hbWU6InJlbWVtYmVyRGV2aWNlIix0eXBlOiJjaGVja2JveCJ9KX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig2NTIpLG4oMzU2KV0scj1mdW5jdGlvbih0LGUsbil7dmFyIGk9dC5fLHI9dC5IYW5kbGViYXJzLmNvbXBpbGUoInt7ZmFjdG9yTmFtZX19ICh7e3tkZXZpY2VOYW1lfX19KSIpLG89M2U0LHM9JzxkaXYgY2xhc3M9Im9rdGEtZm9ybS1pbmZvYm94LXdhcm5pbmcgaW5mb2JveCBpbmZvYm94LXdhcm5pbmciPlx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gd2FybmluZy0xNiI+PC9zcGFuPlx0ICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3t3YXJuaW5nfX08L3A+XHQgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+JztyZXR1cm4gdC5Gb3JtLmV4dGVuZCh7Y2xhc3NOYW1lOiJtZmEtdmVyaWZ5LXB1c2giLGF1dG9TYXZlOiEwLG5vQ2FuY2VsQnV0dG9uOiEwLHNhdmU6aS5wYXJ0aWFsKHQubG9jLCJva3RhdmVyaWZ5LnNlbmQiLCJsb2dpbiIpLHNjcm9sbE9uRXJyb3I6ITEsbGF5b3V0OiJvLWZvcm0tdGhlbWUiLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiZmFjdG9yLXB1c2gifSxldmVudHM6e3N1Ym1pdDoic3VibWl0In0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3RoaXMuZW5hYmxlZD0hMCx0aGlzLmxpc3RlblRvKHRoaXMub3B0aW9ucy5hcHBTdGF0ZSwiY2hhbmdlOmlzTWZhUmVqZWN0ZWRCeVVzZXIiLGZ1bmN0aW9uKGUsbil7dGhpcy5zZXRTdWJtaXRTdGF0ZShuKSxuJiZ0aGlzLnNob3dFcnJvcih0LmxvYygib2t0YXZlcmlmeS5yZWplY3RlZCIsImxvZ2luIikpfSksdGhpcy5saXN0ZW5Ubyh0aGlzLm9wdGlvbnMuYXBwU3RhdGUsImNoYW5nZTppc01mYVRpbWVvdXQiLGZ1bmN0aW9uKGUsbil7dGhpcy5zZXRTdWJtaXRTdGF0ZShuKSxuJiZ0aGlzLnNob3dFcnJvcih0LmxvYygib2t0YXZlcmlmeS50aW1lb3V0IiwibG9naW4iKSl9KSx0aGlzLmxpc3RlblRvKHRoaXMub3B0aW9ucy5hcHBTdGF0ZSwiY2hhbmdlOmlzTWZhUmVxdWlyZWQiLGZ1bmN0aW9uKHQsZSl7ZSYmKHRoaXMuY2xlYXJFcnJvcnMoKSx0aGlzLmNsZWFyV2FybmluZ3MoKSl9KSx0aGlzLnRpdGxlPXIoe2ZhY3Rvck5hbWU6dGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIiksZGV2aWNlTmFtZTp0aGlzLm1vZGVsLmdldCgiZGV2aWNlTmFtZSIpfSl9LHNldFN1Ym1pdFN0YXRlOmZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMuJGVsLmZpbmQoIi5idXR0b24iKTt0aGlzLmVuYWJsZWQ9ZSxlPyhuLnJlbW92ZUNsYXNzKCJsaW5rLWJ1dHRvbi1kaXNhYmxlZCIpLG4ucHJvcCgidmFsdWUiLHQubG9jKCJva3RhdmVyaWZ5LnNlbmQiLCJsb2dpbiIpKSxuLnByb3AoImRpc2FibGVkIiwhMSkpOihuLmFkZENsYXNzKCJsaW5rLWJ1dHRvbi1kaXNhYmxlZCIpLG4ucHJvcCgidmFsdWUiLHQubG9jKCJva3RhdmVyaWZ5LnNlbnQiLCJsb2dpbiIpKSxuLnByb3AoImRpc2FibGVkIiwhMCkpfSxzdWJtaXQ6ZnVuY3Rpb24odCl7dm9pZCAwIT09dCYmdC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuZW5hYmxlZCYmKHRoaXMuc2V0U3VibWl0U3RhdGUoITEpLHRoaXMuZG9TYXZlKCkpfSxwb3N0UmVuZGVyOmZ1bmN0aW9uKCl7dGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmF1dG9QdXNoIikmJmUuaXNBdXRvUHVzaEVuYWJsZWQodGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgidXNlcklkIikpJiYodGhpcy5tb2RlbC5zZXQoImF1dG9QdXNoIiwhMCksaS5kZWZlcihpLmJpbmQodGhpcy5zdWJtaXQsdGhpcykpKX0sZG9TYXZlOmZ1bmN0aW9uKCl7dmFyIGU7dGhpcy5jbGVhckVycm9ycygpLHRoaXMuY2xlYXJXYXJuaW5ncygpLHRoaXMubW9kZWwuaXNWYWxpZCgpJiYodGhpcy5saXN0ZW5Ub09uY2UodGhpcy5tb2RlbCwiZXJyb3IiLGZ1bmN0aW9uKCl7dGhpcy5zZXRTdWJtaXRTdGF0ZSghMCksdGhpcy5jbGVhcldhcm5pbmdzKCksY2xlYXJUaW1lb3V0KGUpfSksdGhpcy50cmlnZ2VyKCJzYXZlIix0aGlzLm1vZGVsKSxlPW4uY2FsbEFmdGVyVGltZW91dChpLmJpbmQoZnVuY3Rpb24oKXt0aGlzLnNob3dXYXJuaW5nKHQubG9jKCJva3RhdmVyaWZ5Lndhcm5pbmciLCJsb2dpbiIpKX0sdGhpcyksbykpfSxzaG93RXJyb3I6ZnVuY3Rpb24odCl7dGhpcy5jbGVhcldhcm5pbmdzKCksdGhpcy5tb2RlbC50cmlnZ2VyKCJlcnJvciIsdGhpcy5tb2RlbCx7cmVzcG9uc2VKU09OOntlcnJvclN1bW1hcnk6dH19KX0sc2hvd1dhcm5pbmc6ZnVuY3Rpb24odCl7dGhpcy5jbGVhcldhcm5pbmdzKCksdGhpcy5hZGQocywiLm8tZm9ybS1lcnJvci1jb250YWluZXIiLHtvcHRpb25zOnt3YXJuaW5nOnR9fSl9LGNsZWFyV2FybmluZ3M6ZnVuY3Rpb24oKXt0aGlzLiQoIi5va3RhLWZvcm0taW5mb2JveC13YXJuaW5nIikucmVtb3ZlKCl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oNjM0KV0scj1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4obil7bi5hZGREaXZpZGVyKCksbi5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAscGxhY2Vob2xkZXI6dC5sb2MoIm1mYS5jaGFsbGVuZ2UuZW50ZXJDb2RlLnBsYWNlaG9sZGVyIiwibG9naW4iKSxjbGFzc05hbWU6Im8tZm9ybS1maWVsZHNldCBvLWZvcm0tbGFiZWwtdG9wIGlubGluZS1pbnB1dCBhdXRoLXBhc3Njb2RlIixuYW1lOiJhbnN3ZXIiLGlucHV0OmUsdHlwZToidGV4dCJ9KSxuLmFkZCh0LmNyZWF0ZUJ1dHRvbih7YXR0cmlidXRlczp7ImRhdGEtc2UiOiJpbmxpbmUtdG90cC12ZXJpZnkifSxjbGFzc05hbWU6ImJ1dHRvbiBpbmxpbmUtdG90cC12ZXJpZnkiLHRpdGxlOnQubG9jKCJtZmEuY2hhbGxlbmdlLnZlcmlmeSIsImxvZ2luIiksY2xpY2s6ZnVuY3Rpb24oKXtuLm1vZGVsLm1hbmFnZVRyYW5zYWN0aW9uKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIk1GQV9DSEFMTEVOR0UiPT09dC5zdGF0dXMmJnQucHJldj90LnByZXYoKS50aGVuKGZ1bmN0aW9uKHQpe2UodCksbi5tb2RlbC5zYXZlKCl9KTp2b2lkIG4ubW9kZWwuc2F2ZSgpfSl9fSkpLG4uYXQoMSkuZm9jdXMoKX1yZXR1cm4gdC5Gb3JtLmV4dGVuZCh7YXV0b1NhdmU6ITAsbm9CdXR0b25CYXI6ITAsc2Nyb2xsT25FcnJvcjohMSxsYXlvdXQ6Im8tZm9ybS10aGVtZSIsY2xhc3NOYW1lOiJtZmEtdmVyaWZ5LXRvdHAtaW5saW5lIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImZhY3Rvci1pbmxpbmUtdG90cCJ9LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMubGlzdGVuVG8odGhpcy5tb2RlbCwiZXJyb3IiLGZ1bmN0aW9uKCl7dGhpcy5jbGVhckVycm9ycygpfSksdGhpcy5hZGQodC5jcmVhdGVCdXR0b24oe2NsYXNzTmFtZToibGluayIsYXR0cmlidXRlczp7ImRhdGEtc2UiOiJpbmxpbmUtdG90cC1hZGQifSx0aXRsZTp0LmxvYygibWZhLmNoYWxsZW5nZS5vckVudGVyQ29kZSIsImxvZ2luIiksY2xpY2s6ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZSgpLG4oZSl9fSkpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDYyMyksbig2MjQpLG4oNjYxKSxuKDY2Miksbig2NDgpLG4oNjYzKV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyxzKXt2YXIgYT10Ll87cmV0dXJuIGUuZXh0ZW5kKHtjbGFzc05hbWU6Im1mYS12ZXJpZnkgdmVyaWZ5LXdpbmRvd3MtaGVsbG8iLE1vZGVsOntsb2NhbDp7X19hdXRvVHJpZ2dlcmVkX186ImJvb2xlYW4ifSxzYXZlOmZ1bmN0aW9uKCl7aWYoaS5pc0F2YWlsYWJsZSgpKXt0aGlzLnRyaWdnZXIoInJlcXVlc3QiKTt2YXIgdD10aGlzO3JldHVybiB0aGlzLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24oZSl7dmFyIG49YS5maW5kV2hlcmUoZS5mYWN0b3JzLHtmYWN0b3JUeXBlOiJ3ZWJhdXRobiIscHJvdmlkZXI6IkZJRE8ifSk7cmV0dXJuIG4udmVyaWZ5KCkudGhlbihmdW5jdGlvbihyKXt2YXIgbz1yLmZhY3RvcjtyZXR1cm4gaS5nZXRBc3NlcnRpb24oby5jaGFsbGVuZ2Uubm9uY2UsW3tpZDpvLnByb2ZpbGUuY3JlZGVudGlhbElkfV0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG4udmVyaWZ5KHthdXRoZW50aWNhdG9yRGF0YTp0LmF1dGhlbnRpY2F0b3JEYXRhLGNsaWVudERhdGE6dC5jbGllbnREYXRhLHNpZ25hdHVyZURhdGE6dC5zaWduYXR1cmV9KX0pLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHQudHJpZ2dlcigic3luYyIpLHQudHJpZ2dlcigic2lnbkluIiksZX0pLmZhaWwoZnVuY3Rpb24obil7c3dpdGNoKG4ubWVzc2FnZSl7Y2FzZSJBYm9ydEVycm9yIjpjYXNlIk5vdEZvdW5kRXJyb3IiOmNhc2UiTm90U3VwcG9ydGVkRXJyb3IiOnJldHVybiB0LnRyaWdnZXIoImFib3J0IixuLm1lc3NhZ2UpLGV9dGhyb3cgbn0pfSl9KX19fSxGb3JtOnthdXRvU2F2ZTohMCxoYXNTYXZpbmdTdGF0ZTohMSx0aXRsZTphLnBhcnRpYWwodC5sb2MsImZhY3Rvci53aW5kb3dzSGVsbG8iLCJsb2dpbiIpLHN1YnRpdGxlOmZ1bmN0aW9uKCl7cmV0dXJuIGkuaXNBdmFpbGFibGUoKT90LmxvYygidmVyaWZ5LndpbmRvd3NIZWxsby5zdWJ0aXRsZSIsImxvZ2luIik6IiJ9LHNhdmU6YS5wYXJ0aWFsKHQubG9jLCJ2ZXJpZnkud2luZG93c0hlbGxvLnNhdmUiLCJsb2dpbiIpLGN1c3RvbVNhdmluZ1N0YXRlOntzdG9wOiJhYm9ydCJ9LG1vZGVsRXZlbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGkuaXNBdmFpbGFibGUoKT97cmVxdWVzdDoiX3N0YXJ0RW5yb2xsbWVudCIsZXJyb3I6Il9zdG9wRW5yb2xsbWVudCIsYWJvcnQ6Il9zdG9wRW5yb2xsbWVudCIsc2lnbkluOiJfc3VjY2Vzc0Vucm9sbG1lbnQifTp7fX0sbm9CdXR0b25CYXI6ZnVuY3Rpb24oKXtyZXR1cm4haS5pc0F2YWlsYWJsZSgpfSxmb3JtQ2hpbGRyZW46ZnVuY3Rpb24oKXt2YXIgZT1bXTtyZXR1cm4gaS5pc0F2YWlsYWJsZSgpfHxlLnB1c2gobi5WaWV3KHtWaWV3Om5ldyBzKHttZXNzYWdlOnQubG9jKCJlbnJvbGwud2luZG93c0hlbGxvLmVycm9yLm5vdFdpbmRvd3MiLCJsb2dpbiIpfSl9LHtzZWxlY3RvcjoiLm8tZm9ybS1lcnJvci1jb250YWluZXIifSkpLGUucHVzaChuLlZpZXcoe1ZpZXc6bmV3IHIoe21vZGVsOnRoaXMubW9kZWwsdmlzaWJsZTohMX0pfSkpLGV9LHBvc3RSZW5kZXI6ZnVuY3Rpb24oKXsxIT09dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiZmFjdG9ycyIpLmxlbmd0aHx8dGhpcy5tb2RlbC5nZXQoIl9fYXV0b1RyaWdnZXJlZF9fIil8fCh0aGlzLm1vZGVsLnNldCgiX19hdXRvVHJpZ2dlcmVkX18iLCEwKSx0aGlzLm1vZGVsLnNhdmUoKSl9LF9zdGFydEVucm9sbG1lbnQ6ZnVuY3Rpb24oKXt0aGlzLnN1YnRpdGxlPXQubG9jKCJ2ZXJpZnkud2luZG93c0hlbGxvLnN1YnRpdGxlLmxvYWRpbmciLCJsb2dpbiIpLHRoaXMubW9kZWwudHJpZ2dlcigic3Bpbm5lcjpzaG93IiksdGhpcy5fcmVzZXRFcnJvck1lc3NhZ2UoKSx0aGlzLnJlbmRlcigpLHRoaXMuJCgiLm8tZm9ybS1idXR0b24tYmFyIikuYWRkQ2xhc3MoImhpZGUiKX0sX3N0b3BFbnJvbGxtZW50OmZ1bmN0aW9uKGUpe3RoaXMuc3VidGl0bGU9dC5sb2MoInZlcmlmeS53aW5kb3dzSGVsbG8uc3VidGl0bGUiLCJsb2dpbiIpLHRoaXMubW9kZWwudHJpZ2dlcigic3Bpbm5lcjpoaWRlIiksdGhpcy4kKCIuby1mb3JtLWJ1dHRvbi1iYXIiKS5yZW1vdmVDbGFzcygiaGlkZSIpO3ZhciBuO3N3aXRjaChlKXtjYXNlIk5vdEZvdW5kRXJyb3IiOm49dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiZmFjdG9ycyIpLmxlbmd0aD4xP3QubG9jKCJ2ZXJpZnkud2luZG93c0hlbGxvLmVycm9yLm5vdEZvdW5kLnNlbGVjdEFub3RoZXIiLCJsb2dpbiIpOnQubG9jKCJ2ZXJpZnkud2luZG93c0hlbGxvLmVycm9yLm5vdEZvdW5kIiwibG9naW4iKTticmVhaztjYXNlIk5vdFN1cHBvcnRlZEVycm9yIjpuPXQubG9jKCJlbnJvbGwud2luZG93c0hlbGxvLmVycm9yLm5vdENvbmZpZ3VyZWRIdG1sIiwibG9naW4iKX1pZih0aGlzLl9yZXNldEVycm9yTWVzc2FnZSgpLG4pe3ZhciBpPW5ldyBzKHttZXNzYWdlOm59KTt0aGlzLiQoIi5vLWZvcm0tZXJyb3ItY29udGFpbmVyIikuYWRkQ2xhc3MoIm8tZm9ybS1oYXMtZXJyb3JzIiksdGhpcy5hZGQoaSx7c2VsZWN0b3I6Ii5vLWZvcm0tZXJyb3ItY29udGFpbmVyIn0pLHRoaXMuX2Vycm9yTWVzc2FnZVZpZXc9dGhpcy5sYXN0KCl9dGhpcy5yZW5kZXIoKX0sX3N1Y2Nlc3NFbnJvbGxtZW50OmZ1bmN0aW9uKCl7dGhpcy5zdWJ0aXRsZT10LmxvYygidmVyaWZ5LndpbmRvd3NIZWxsby5zdWJ0aXRsZS5zaWduaW5nSW4iLCJsb2dpbiIpLHRoaXMucmVuZGVyKCksdGhpcy4kKCIuby1mb3JtLWJ1dHRvbi1iYXIiKS5hZGRDbGFzcygiaGlkZSIpfSxfcmVzZXRFcnJvck1lc3NhZ2U6ZnVuY3Rpb24oKXt0aGlzLl9lcnJvck1lc3NhZ2VWaWV3JiZ0aGlzLl9lcnJvck1lc3NhZ2VWaWV3LnJlbW92ZSgpLHRoaXMuX2Vycm9yTWVzc2FnZVZpZXc9dm9pZCAwLHRoaXMuY2xlYXJFcnJvcnMoKX19LGJhY2s6ZnVuY3Rpb24oKXt9LEZvb3RlcjpvfSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oMzQ2KV0scj1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCl7cmV0dXJuIG5ldyBlKHQpfWZ1bmN0aW9uIGkodCxlLGkpe2U9ZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3R5cGU6IkZJRE9fMl8wIixhbGdvcml0aG06dC5hbGdvcml0aG19fSk7dmFyIHI9d2luZG93Lm1zQ3JlZGVudGlhbHMubWFrZUNyZWRlbnRpYWwodCxlLGkpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5mcmVlemUoe2NyZWRlbnRpYWw6e2lkOnQuaWR9LHB1YmxpY0tleTpKU09OLnBhcnNlKHQucHVibGljS2V5KSxhdHRlc3RhdGlvbjp0LmF0dGVzdGF0aW9ufSl9KTtyZXR1cm4gbihyKX1mdW5jdGlvbiByKHQsZSl7dmFyIGk9ZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3R5cGU6IkZJRE9fMl8wIixpZDp0LmlkfX0pLHI9e2FjY2VwdDppfSxvPXdpbmRvdy5tc0NyZWRlbnRpYWxzLmdldEFzc2VydGlvbih0LHIpLnRoZW4oZnVuY3Rpb24odCl7dmFyIGU9dC5zaWduYXR1cmU7cmV0dXJuIE9iamVjdC5mcmVlemUoe2NyZWRlbnRpYWw6e2lkOnQuaWR9LGNsaWVudERhdGE6ZS5jbGllbnREYXRhLGF1dGhlbnRpY2F0b3JEYXRhOmUuYXV0aG5yRGF0YSxzaWduYXR1cmU6ZS5zaWduYXR1cmV9KX0pO3JldHVybiBuKG8pfXJldHVybnttYWtlQ3JlZGVudGlhbDppLGdldEFzc2VydGlvbjpyLGlzQXZhaWxhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5oYXNPd25Qcm9wZXJ0eSgibXNDcmVkZW50aWFscyIpfX19LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpXSxyPWZ1bmN0aW9uKHQpe3JldHVybiB0LlZpZXcuZXh0ZW5kKHtjbGFzc05hbWU6Im9rdGEtd2FpdGluZy1zcGlubmVyIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6Im8tZm9ybS1va3RhLXdhaXRpbmctc3Bpbm5lciJ9LG1vZGVsRXZlbnRzOnsic3Bpbm5lcjpzaG93Ijoic2hvdyIsInNwaW5uZXI6aGlkZSI6ImhpZGUifSxpbml0aWFsaXplOmZ1bmN0aW9uKHQpe3QmJnQudmlzaWJsZT09PSExJiZ0aGlzLmhpZGUoKX0sc2hvdzpmdW5jdGlvbigpe3RoaXMuJGVsLnJlbW92ZUNsYXNzKCJoaWRlIil9LGhpZGU6ZnVuY3Rpb24oKXt0aGlzLiRlbC5hZGRDbGFzcygiaGlkZSIpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDQ3MCldLHI9ZnVuY3Rpb24odCxlKXt2YXIgbj0nXHQgICAgPHNwYW4gY2xhc3M9Imljb24gZXJyb3ItMjQiPjwvc3Bhbj5cdCAgICA8aDQ+PHN0cm9uZz57e3ttZXNzYWdlfX19PC9zdHJvbmc+PC9oND5cdCAgJztyZXR1cm4gZS5leHRlbmQoe3RlbXBsYXRlOm4sY2xhc3NOYW1lOiJva3RhLWluZm9ib3gtZXJyb3IgaW5mb2JveCBpbmZvYm94LWVycm9yIGluZm9ib3gtbWQgbWFyZ2luLWJ0bS0yNSIsYXR0cmlidXRlczp7ImRhdGEtc2UiOiJvLWZvcm0tZXJyb3ItaHRtbCJ9LG1lc3NhZ2U6IiIsaW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0JiZ0Lm1lc3NhZ2UmJih0aGlzLm1lc3NhZ2U9dC5tZXNzYWdlKX0sZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7cmV0dXJue21lc3NhZ2U6dGhpcy5tZXNzYWdlfX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig2MjMpLG4oNjI0KSxuKDY0OCksbigzNDYpLG4oNjYzKSxuKDUwNSksbig2NjUpXSxyPWZ1bmN0aW9uKHQsZSxuLGkscixvLHMpe2Z1bmN0aW9uIGEodCxlKXtzd2l0Y2godCl7Y2FzZSAxOnJldHVybiBlPyJ1MmYuZXJyb3Iub3RoZXIub25lRmFjdG9yIjoidTJmLmVycm9yLm90aGVyIjtjYXNlIDI6Y2FzZSAzOnJldHVybiBlPyJ1MmYuZXJyb3IuYmFkUmVxdWVzdC5vbmVGYWN0b3IiOiJ1MmYuZXJyb3IuYmFkUmVxdWVzdCI7Y2FzZSA0OnJldHVybiBlPyJ1MmYuZXJyb3IudW5zdXBwb3J0ZWQub25lRmFjdG9yIjoidTJmLmVycm9yLnVuc3VwcG9ydGVkIjtjYXNlIDU6cmV0dXJuInUyZi5lcnJvci50aW1lb3V0In19dmFyIGw9dC5fO3JldHVybiBlLmV4dGVuZCh7Y2xhc3NOYW1lOiJ2ZXJpZnktdTJmIixNb2RlbDp7c2F2ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRyaWdnZXIoInJlcXVlc3QiKSx0aGlzLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24oZSl7dmFyIG49bC5maW5kV2hlcmUoZS5mYWN0b3JzLHtmYWN0b3JUeXBlOiJ1MmYiLHByb3ZpZGVyOiJGSURPIn0pLGk9dGhpcztyZXR1cm4gbi52ZXJpZnkoKS50aGVuKGZ1bmN0aW9uKGUpe3ZhciBvPWUuZmFjdG9yLHM9by5wcm9maWxlLmFwcElkLGw9W3t2ZXJzaW9uOm8ucHJvZmlsZS52ZXJzaW9uLGtleUhhbmRsZTpvLnByb2ZpbGUuY3JlZGVudGlhbElkfV07aS50cmlnZ2VyKCJyZXF1ZXN0Iik7dmFyIGM9ci5kZWZlcigpO3JldHVybiB1MmYuc2lnbihzLG8uY2hhbGxlbmdlLm5vbmNlLGwsZnVuY3Rpb24oZSl7aWYoaS50cmlnZ2VyKCJlcnJvcnM6Y2xlYXIiKSwhZS5lcnJvckNvZGV8fDA9PT1lLmVycm9yQ29kZSlyZXR1cm4gbi52ZXJpZnkoe2NsaWVudERhdGE6ZS5jbGllbnREYXRhLHNpZ25hdHVyZURhdGE6ZS5zaWduYXR1cmVEYXRhfSkudGhlbihjLnJlc29sdmUpO3ZhciByPTE9PT1pLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJmYWN0b3JzIikubGVuZ3RoO2MucmVqZWN0KHt4aHI6e3Jlc3BvbnNlSlNPTjp7ZXJyb3JTdW1tYXJ5OnQubG9jKGEoZS5lcnJvckNvZGUsciksImxvZ2luIil9fX0pfSksYy5wcm9taXNlfSl9KX19LEZvcm06e2F1dG9TYXZlOiEwLGhhc1NhdmluZ1N0YXRlOiExLHRpdGxlOmwucGFydGlhbCh0LmxvYywiZmFjdG9yLnUyZiIsImxvZ2luIiksY2xhc3NOYW1lOiJ2ZXJpZnktdTJmLWZvcm0iLG5vQ2FuY2VsQnV0dG9uOiEwLHNhdmU6bC5wYXJ0aWFsKHQubG9jLCJ2ZXJpZnkudTJmLnJldHJ5IiwibG9naW4iKSxub0J1dHRvbkJhcjpmdW5jdGlvbigpe3JldHVybiF3aW5kb3cuaGFzT3duUHJvcGVydHkoInUyZiIpfSxtb2RlbEV2ZW50czp7cmVxdWVzdDoiX3N0YXJ0RW5yb2xsbWVudCIsZXJyb3I6Il9zdG9wRW5yb2xsbWVudCJ9LGZvcm1DaGlsZHJlbjpmdW5jdGlvbigpe3ZhciBlPVtdO2lmKHdpbmRvdy5oYXNPd25Qcm9wZXJ0eSgidTJmIikpZS5wdXNoKG4uVmlldyh7VmlldzonXHQgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1MmYtdmVyaWZ5LXRleHQiPlx0ICAgICAgICAgICAgICA8cD57e2kxOG4gY29kZT0idmVyaWZ5LnUyZi5pbnN0cnVjdGlvbnMiIGJ1bmRsZT0ibG9naW4ifX08L3A+XHQgICAgICAgICAgICAgIDxwPnt7aTE4biBjb2RlPSJ2ZXJpZnkudTJmLmluc3RydWN0aW9uc0JsdWV0b290aCIgYnVuZGxlPSJsb2dpbiJ9fTwvcD5cdCAgICAgICAgICAgICAgPGRpdiBkYXRhLXNlPSJ1MmYtd2FpdGluZyIgY2xhc3M9Im9rdGEtd2FpdGluZy1zcGlubmVyIj48L2Rpdj5cdCAgICAgICAgICAgIDwvZGl2Pid9KSk7ZWxzZXt2YXIgaT0idTJmLmVycm9yLm5vdFN1cHBvcnRlZEJyb3dzZXIiO3MuaXNGaXJlZm94KCk/aT0idTJmLmVycm9yLm5vRmlyZWZveEV4dGVuc2lvbiI6MT09PXRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImZhY3RvcnMiKS5sZW5ndGgmJihpPSJ1MmYuZXJyb3Iubm90U3VwcG9ydGVkQnJvd3Nlci5vbmVGYWN0b3IiKSxlLnB1c2gobi5WaWV3KHtWaWV3Om5ldyBvKHttZXNzYWdlOnQubG9jKGksImxvZ2luIil9KX0se3NlbGVjdG9yOiIuby1mb3JtLWVycm9yLWNvbnRhaW5lciJ9KSl9cmV0dXJuIGV9LHBvc3RSZW5kZXI6ZnVuY3Rpb24oKXtsLmRlZmVyKGwuYmluZChmdW5jdGlvbigpe3dpbmRvdy5oYXNPd25Qcm9wZXJ0eSgidTJmIik/dGhpcy5tb2RlbC5zYXZlKCk6dGhpcy4kKCdbZGF0YS1zZT0idTJmLXdhaXRpbmciXScpLmFkZENsYXNzKCJoaWRlIil9LHRoaXMpKX0sX3N0YXJ0RW5yb2xsbWVudDpmdW5jdGlvbigpe3RoaXMuJCgiLm9rdGEtd2FpdGluZy1zcGlubmVyIikucmVtb3ZlQ2xhc3MoImhpZGUiKSx0aGlzLiQoIi5vLWZvcm0tYnV0dG9uLWJhciIpLmhpZGUoKX0sX3N0b3BFbnJvbGxtZW50OmZ1bmN0aW9uKCl7dGhpcy4kKCIub2t0YS13YWl0aW5nLXNwaW5uZXIiKS5hZGRDbGFzcygiaGlkZSIpLHRoaXMuJCgiLm8tZm9ybS1idXR0b24tYmFyIikuc2hvdygpfX0sYmFjazpmdW5jdGlvbigpe30sRm9vdGVyOml9KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUpeyJ1c2Ugc3RyaWN0IjshZnVuY3Rpb24oKXtpZighKCJ1MmYiaW4gd2luZG93KSYmImNocm9tZSJpbiB3aW5kb3cpe3ZhciB0LGU9d2luZG93LnUyZj17fTtlLkVYVEVOU0lPTl9JRD0ia21lbmRmYXBnZ2plaG9kbmRmbG1tZ2FnZGJhbWhuZmQiLGUuTWVzc2FnZVR5cGVzPXtVMkZfUkVHSVNURVJfUkVRVUVTVDoidTJmX3JlZ2lzdGVyX3JlcXVlc3QiLFUyRl9SRUdJU1RFUl9SRVNQT05TRToidTJmX3JlZ2lzdGVyX3Jlc3BvbnNlIixVMkZfU0lHTl9SRVFVRVNUOiJ1MmZfc2lnbl9yZXF1ZXN0IixVMkZfU0lHTl9SRVNQT05TRToidTJmX3NpZ25fcmVzcG9uc2UiLFUyRl9HRVRfQVBJX1ZFUlNJT05fUkVRVUVTVDoidTJmX2dldF9hcGlfdmVyc2lvbl9yZXF1ZXN0IixVMkZfR0VUX0FQSV9WRVJTSU9OX1JFU1BPTlNFOiJ1MmZfZ2V0X2FwaV92ZXJzaW9uX3Jlc3BvbnNlIn0sZS5FcnJvckNvZGVzPXtPSzowLE9USEVSX0VSUk9SOjEsQkFEX1JFUVVFU1Q6MixDT05GSUdVUkFUSU9OX1VOU1VQUE9SVEVEOjMsREVWSUNFX0lORUxJR0lCTEU6NCxUSU1FT1VUOjV9LGUuVTJmUmVxdWVzdCxlLlUyZlJlc3BvbnNlLGUuRXJyb3IsZS5UcmFuc3BvcnQsZS5UcmFuc3BvcnRzLGUuU2lnblJlcXVlc3QsZS5TaWduUmVzcG9uc2UsZS5SZWdpc3RlclJlcXVlc3QsZS5SZWdpc3RlclJlc3BvbnNlLGUuUmVnaXN0ZXJlZEtleSxlLkdldEpzQXBpVmVyc2lvblJlc3BvbnNlLGUuZ2V0TWVzc2FnZVBvcnQ9ZnVuY3Rpb24odCl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjaHJvbWUmJmNocm9tZS5ydW50aW1lKXt2YXIgbj17dHlwZTplLk1lc3NhZ2VUeXBlcy5VMkZfU0lHTl9SRVFVRVNULHNpZ25SZXF1ZXN0czpbXX07Y2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoZS5FWFRFTlNJT05fSUQsbixmdW5jdGlvbigpe2Nocm9tZS5ydW50aW1lLmxhc3RFcnJvcj9lLmdldElmcmFtZVBvcnRfKHQpOmUuZ2V0Q2hyb21lUnVudGltZVBvcnRfKHQpfSl9ZWxzZSBlLmlzQW5kcm9pZENocm9tZV8oKT9lLmdldEF1dGhlbnRpY2F0b3JQb3J0Xyh0KTplLmlzSW9zQ2hyb21lXygpP2UuZ2V0SW9zUG9ydF8odCk6ZS5nZXRJZnJhbWVQb3J0Xyh0KX0sZS5pc0FuZHJvaWRDaHJvbWVfPWZ1bmN0aW9uKCl7dmFyIHQ9bmF2aWdhdG9yLnVzZXJBZ2VudDtyZXR1cm4gdC5pbmRleE9mKCJDaHJvbWUiKSE9LTEmJnQuaW5kZXhPZigiQW5kcm9pZCIpIT0tMX0sZS5pc0lvc0Nocm9tZV89ZnVuY3Rpb24oKXtyZXR1cm4gJC5pbkFycmF5KG5hdmlnYXRvci5wbGF0Zm9ybSxbImlQaG9uZSIsImlQYWQiLCJpUG9kIl0pPi0xfSxlLmdldENocm9tZVJ1bnRpbWVQb3J0Xz1mdW5jdGlvbih0KXt2YXIgbj1jaHJvbWUucnVudGltZS5jb25uZWN0KGUuRVhURU5TSU9OX0lELHtpbmNsdWRlVGxzQ2hhbm5lbElkOiEwfSk7c2V0VGltZW91dChmdW5jdGlvbigpe3QobmV3IGUuV3JhcHBlZENocm9tZVJ1bnRpbWVQb3J0XyhuKSl9LDApfSxlLmdldEF1dGhlbnRpY2F0b3JQb3J0Xz1mdW5jdGlvbih0KXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dChuZXcgZS5XcmFwcGVkQXV0aGVudGljYXRvclBvcnRfKX0sMCl9LGUuZ2V0SW9zUG9ydF89ZnVuY3Rpb24odCl7c2V0VGltZW91dChmdW5jdGlvbigpe3QobmV3IGUuV3JhcHBlZElvc1BvcnRfKX0sMCl9LGUuV3JhcHBlZENocm9tZVJ1bnRpbWVQb3J0Xz1mdW5jdGlvbih0KXt0aGlzLnBvcnRfPXR9LGUuZm9ybWF0U2lnblJlcXVlc3RfPWZ1bmN0aW9uKG4saSxyLG8scyl7aWYodm9pZCAwPT09dHx8dDwxLjEpe2Zvcih2YXIgYT1bXSxsPTA7bDxyLmxlbmd0aDtsKyspYVtsXT17dmVyc2lvbjpyW2xdLnZlcnNpb24sY2hhbGxlbmdlOmksa2V5SGFuZGxlOnJbbF0ua2V5SGFuZGxlLGFwcElkOm59O3JldHVybnt0eXBlOmUuTWVzc2FnZVR5cGVzLlUyRl9TSUdOX1JFUVVFU1Qsc2lnblJlcXVlc3RzOmEsdGltZW91dFNlY29uZHM6byxyZXF1ZXN0SWQ6c319cmV0dXJue3R5cGU6ZS5NZXNzYWdlVHlwZXMuVTJGX1NJR05fUkVRVUVTVCxhcHBJZDpuLGNoYWxsZW5nZTppLHJlZ2lzdGVyZWRLZXlzOnIsdGltZW91dFNlY29uZHM6byxyZXF1ZXN0SWQ6c319LGUuZm9ybWF0UmVnaXN0ZXJSZXF1ZXN0Xz1mdW5jdGlvbihuLGkscixvLHMpe2lmKHZvaWQgMD09PXR8fHQ8MS4xKXtmb3IodmFyIGE9MDthPHIubGVuZ3RoO2ErKylyW2FdLmFwcElkPW47Zm9yKHZhciBsPVtdLGE9MDthPGkubGVuZ3RoO2ErKylsW2FdPXt2ZXJzaW9uOmlbYV0udmVyc2lvbixjaGFsbGVuZ2U6clswXSxrZXlIYW5kbGU6aVthXS5rZXlIYW5kbGUsYXBwSWQ6bn07cmV0dXJue3R5cGU6ZS5NZXNzYWdlVHlwZXMuVTJGX1JFR0lTVEVSX1JFUVVFU1Qsc2lnblJlcXVlc3RzOmwscmVnaXN0ZXJSZXF1ZXN0czpyLHRpbWVvdXRTZWNvbmRzOm8scmVxdWVzdElkOnN9fXJldHVybnt0eXBlOmUuTWVzc2FnZVR5cGVzLlUyRl9SRUdJU1RFUl9SRVFVRVNULGFwcElkOm4scmVnaXN0ZXJSZXF1ZXN0czpyLHJlZ2lzdGVyZWRLZXlzOmksdGltZW91dFNlY29uZHM6byxyZXF1ZXN0SWQ6c319LGUuV3JhcHBlZENocm9tZVJ1bnRpbWVQb3J0Xy5wcm90b3R5cGUucG9zdE1lc3NhZ2U9ZnVuY3Rpb24odCl7dGhpcy5wb3J0Xy5wb3N0TWVzc2FnZSh0KX0sZS5XcmFwcGVkQ2hyb21lUnVudGltZVBvcnRfLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC50b0xvd2VyQ2FzZSgpOyJtZXNzYWdlIj09bnx8Im9ubWVzc2FnZSI9PW4/dGhpcy5wb3J0Xy5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoZnVuY3Rpb24odCl7ZSh7ZGF0YTp0fSl9KTpjb25zb2xlLmVycm9yKCJXcmFwcGVkQ2hyb21lUnVudGltZVBvcnQgb25seSBzdXBwb3J0cyBvbk1lc3NhZ2UiKX0sZS5XcmFwcGVkQXV0aGVudGljYXRvclBvcnRfPWZ1bmN0aW9uKCl7dGhpcy5yZXF1ZXN0SWRfPS0xLHRoaXMucmVxdWVzdE9iamVjdF89bnVsbH0sZS5XcmFwcGVkQXV0aGVudGljYXRvclBvcnRfLnByb3RvdHlwZS5wb3N0TWVzc2FnZT1mdW5jdGlvbih0KXt2YXIgbj1lLldyYXBwZWRBdXRoZW50aWNhdG9yUG9ydF8uSU5URU5UX1VSTF9CQVNFXysiO1MucmVxdWVzdD0iK2VuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeSh0KSkrIjtlbmQiO2RvY3VtZW50LmxvY2F0aW9uPW59LGUuV3JhcHBlZEF1dGhlbnRpY2F0b3JQb3J0Xy5wcm90b3R5cGUuZ2V0UG9ydFR5cGU9ZnVuY3Rpb24oKXtyZXR1cm4iV3JhcHBlZEF1dGhlbnRpY2F0b3JQb3J0XyJ9LGUuV3JhcHBlZEF1dGhlbnRpY2F0b3JQb3J0Xy5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3ZhciBuPXQudG9Mb3dlckNhc2UoKTtpZigibWVzc2FnZSI9PW4pe3ZhciBpPXRoaXM7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGkub25SZXF1ZXN0VXBkYXRlXy5iaW5kKGksZSksITEpfWVsc2UgY29uc29sZS5lcnJvcigiV3JhcHBlZEF1dGhlbnRpY2F0b3JQb3J0IG9ubHkgc3VwcG9ydHMgbWVzc2FnZSIpfSxlLldyYXBwZWRBdXRoZW50aWNhdG9yUG9ydF8ucHJvdG90eXBlLm9uUmVxdWVzdFVwZGF0ZV89ZnVuY3Rpb24odCxlKXt2YXIgbj1KU09OLnBhcnNlKGUuZGF0YSksaT0obi5pbnRlbnRVUkwsbi5lcnJvckNvZGUsbnVsbCk7bi5oYXNPd25Qcm9wZXJ0eSgiZGF0YSIpJiYoaT1KU09OLnBhcnNlKG4uZGF0YSkpLHQoe2RhdGE6aX0pfSxlLldyYXBwZWRBdXRoZW50aWNhdG9yUG9ydF8uSU5URU5UX1VSTF9CQVNFXz0iaW50ZW50OiNJbnRlbnQ7YWN0aW9uPWNvbS5nb29nbGUuYW5kcm9pZC5hcHBzLmF1dGhlbnRpY2F0b3IuQVVUSEVOVElDQVRFIixlLldyYXBwZWRJb3NQb3J0Xz1mdW5jdGlvbigpe30sZS5XcmFwcGVk", "base64"));
  res.write(new Buffer("SW9zUG9ydF8ucHJvdG90eXBlLnBvc3RNZXNzYWdlPWZ1bmN0aW9uKHQpe3ZhciBlPUpTT04uc3RyaW5naWZ5KHQpLG49InUyZjovL2F1dGg/IitlbmNvZGVVUkkoZSk7bG9jYXRpb24ucmVwbGFjZShuKX0sZS5XcmFwcGVkSW9zUG9ydF8ucHJvdG90eXBlLmdldFBvcnRUeXBlPWZ1bmN0aW9uKCl7cmV0dXJuIldyYXBwZWRJb3NQb3J0XyJ9LGUuV3JhcHBlZElvc1BvcnRfLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC50b0xvd2VyQ2FzZSgpOyJtZXNzYWdlIiE9PW4mJmNvbnNvbGUuZXJyb3IoIldyYXBwZWRJb3NQb3J0IG9ubHkgc3VwcG9ydHMgbWVzc2FnZSIpfSxlLmdldElmcmFtZVBvcnRfPWZ1bmN0aW9uKHQpe3ZhciBuPSJjaHJvbWUtZXh0ZW5zaW9uOi8vIitlLkVYVEVOU0lPTl9JRCxpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlmcmFtZSIpO2kuc3JjPW4rIi91MmYtY29tbXMuaHRtbCIsaS5zZXRBdHRyaWJ1dGUoInN0eWxlIiwiZGlzcGxheTpub25lIiksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpKTt2YXIgcj1uZXcgTWVzc2FnZUNoYW5uZWwsbz1mdW5jdGlvbihlKXsicmVhZHkiPT1lLmRhdGE/KHIucG9ydDEucmVtb3ZlRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbyksdChyLnBvcnQxKSk6Y29uc29sZS5lcnJvcignRmlyc3QgZXZlbnQgb24gaWZyYW1lIHBvcnQgd2FzIG5vdCAicmVhZHkiJyl9O3IucG9ydDEuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsbyksci5wb3J0MS5zdGFydCgpLGkuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24oKXtpLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2UoImluaXQiLG4sW3IucG9ydDJdKX0pfSxlLkVYVEVOU0lPTl9USU1FT1VUX1NFQz0zMCxlLnBvcnRfPW51bGwsZS53YWl0aW5nRm9yUG9ydF89W10sZS5yZXFDb3VudGVyXz0wLGUuY2FsbGJhY2tNYXBfPXt9LGUuZ2V0UG9ydFNpbmdsZXRvbl89ZnVuY3Rpb24odCl7ZS5wb3J0Xz90KGUucG9ydF8pOigwPT1lLndhaXRpbmdGb3JQb3J0Xy5sZW5ndGgmJmUuZ2V0TWVzc2FnZVBvcnQoZnVuY3Rpb24odCl7Zm9yKGUucG9ydF89dCxlLnBvcnRfLmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGUucmVzcG9uc2VIYW5kbGVyXyk7ZS53YWl0aW5nRm9yUG9ydF8ubGVuZ3RoOyllLndhaXRpbmdGb3JQb3J0Xy5zaGlmdCgpKGUucG9ydF8pfSksZS53YWl0aW5nRm9yUG9ydF8ucHVzaCh0KSl9LGUucmVzcG9uc2VIYW5kbGVyXz1mdW5jdGlvbih0KXt2YXIgbj10LmRhdGEsaT1uLnJlcXVlc3RJZDtpZighaXx8IWUuY2FsbGJhY2tNYXBfW2ldKXJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIlVua25vd24gb3IgbWlzc2luZyByZXF1ZXN0SWQgaW4gcmVzcG9uc2UuIik7dmFyIHI9ZS5jYWxsYmFja01hcF9baV07ZGVsZXRlIGUuY2FsbGJhY2tNYXBfW2ldLHIobi5yZXNwb25zZURhdGEpfSxlLnNpZ249ZnVuY3Rpb24obixpLHIsbyxzKXt2b2lkIDA9PT10P2UuZ2V0QXBpVmVyc2lvbihmdW5jdGlvbihhKXt0PXZvaWQgMD09PWEuanNfYXBpX3ZlcnNpb24/MDphLmpzX2FwaV92ZXJzaW9uLGNvbnNvbGUubG9nKCJFeHRlbnNpb24gSlMgQVBJIFZlcnNpb246ICIsdCksZS5zZW5kU2lnblJlcXVlc3QobixpLHIsbyxzKX0pOmUuc2VuZFNpZ25SZXF1ZXN0KG4saSxyLG8scyl9LGUuc2VuZFNpZ25SZXF1ZXN0PWZ1bmN0aW9uKHQsbixpLHIsbyl7ZS5nZXRQb3J0U2luZ2xldG9uXyhmdW5jdGlvbihzKXt2YXIgYT0rK2UucmVxQ291bnRlcl87ZS5jYWxsYmFja01hcF9bYV09cjt2YXIgbD0idW5kZWZpbmVkIiE9dHlwZW9mIG8/bzplLkVYVEVOU0lPTl9USU1FT1VUX1NFQyxjPWUuZm9ybWF0U2lnblJlcXVlc3RfKHQsbixpLGwsYSk7cy5wb3N0TWVzc2FnZShjKX0pfSxlLnJlZ2lzdGVyPWZ1bmN0aW9uKG4saSxyLG8scyl7dm9pZCAwPT09dD9lLmdldEFwaVZlcnNpb24oZnVuY3Rpb24oYSl7dD12b2lkIDA9PT1hLmpzX2FwaV92ZXJzaW9uPzA6YS5qc19hcGlfdmVyc2lvbixjb25zb2xlLmxvZygiRXh0ZW5zaW9uIEpTIEFQSSBWZXJzaW9uOiAiLHQpLGUuc2VuZFJlZ2lzdGVyUmVxdWVzdChuLGkscixvLHMpfSk6ZS5zZW5kUmVnaXN0ZXJSZXF1ZXN0KG4saSxyLG8scyl9LGUuc2VuZFJlZ2lzdGVyUmVxdWVzdD1mdW5jdGlvbih0LG4saSxyLG8pe2UuZ2V0UG9ydFNpbmdsZXRvbl8oZnVuY3Rpb24ocyl7dmFyIGE9KytlLnJlcUNvdW50ZXJfO2UuY2FsbGJhY2tNYXBfW2FdPXI7dmFyIGw9InVuZGVmaW5lZCIhPXR5cGVvZiBvP286ZS5FWFRFTlNJT05fVElNRU9VVF9TRUMsYz1lLmZvcm1hdFJlZ2lzdGVyUmVxdWVzdF8odCxpLG4sbCxhKTtzLnBvc3RNZXNzYWdlKGMpfSl9LGUuZ2V0QXBpVmVyc2lvbj1mdW5jdGlvbih0LG4pe2UuZ2V0UG9ydFNpbmdsZXRvbl8oZnVuY3Rpb24oaSl7aWYoaS5nZXRQb3J0VHlwZSl7dmFyIHI7c3dpdGNoKGkuZ2V0UG9ydFR5cGUoKSl7Y2FzZSJXcmFwcGVkSW9zUG9ydF8iOmNhc2UiV3JhcHBlZEF1dGhlbnRpY2F0b3JQb3J0XyI6cj0xLjE7YnJlYWs7ZGVmYXVsdDpyPTB9cmV0dXJuIHZvaWQgdCh7anNfYXBpX3ZlcnNpb246cn0pfXZhciBvPSsrZS5yZXFDb3VudGVyXztlLmNhbGxiYWNrTWFwX1tvXT10O3ZhciBzPXt0eXBlOmUuTWVzc2FnZVR5cGVzLlUyRl9HRVRfQVBJX1ZFUlNJT05fUkVRVUVTVCx0aW1lb3V0U2Vjb25kczoidW5kZWZpbmVkIiE9dHlwZW9mIG4/bjplLkVYVEVOU0lPTl9USU1FT1VUX1NFQyxyZXF1ZXN0SWQ6b307aS5wb3N0TWVzc2FnZShzKX0pfX19KCl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzU3KSxuKDYyMyksbig2MjkpLG4oNjI3KSxuKDU2Miksbig2NjcpLG4oNjY4KV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyxzKXt2YXIgYT10Ll87cmV0dXJuIGUuZXh0ZW5kKHtjbGFzcw==", "base64"));
  res.write(new Buffer("TmFtZToiZW5yb2xsLWNob2ljZXMiLHN0YXRlOntwYWdlVHlwZTpudWxsfSxNb2RlbDp7fSxGb3JtOntub0NhbmNlbEJ1dHRvbjohMCx0aXRsZTphLnBhcnRpYWwodC5sb2MsImVucm9sbC5jaG9pY2VzLnRpdGxlIiwibG9naW4iKSxub0J1dHRvbkJhcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YXRlLmdldCgicGFnZVR5cGUiKT09PW4uQUxMX09QVElPTkFMX05PTkVfRU5ST0xMRUR9LHN1YnRpdGxlOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuc3RhdGUuZ2V0KCJwYWdlVHlwZSIpKXtjYXNlIG4uQUxMX09QVElPTkFMX1NPTUVfRU5ST0xMRUQ6Y2FzZSBuLkhBU19SRVFVSVJFRF9BTExfUkVRVUlSRURfRU5ST0xMRUQ6cmV0dXJuIHQubG9jKCJlbnJvbGwuY2hvaWNlcy5vcHRpb25hbCIsImxvZ2luIik7ZGVmYXVsdDpyZXR1cm4gdC5sb2MoImVucm9sbC5jaG9pY2VzLmRlc2NyaXB0aW9uIiwibG9naW4iKX19LHNhdmU6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5zdGF0ZS5nZXQoInBhZ2VUeXBlIikpe2Nhc2Ugbi5BTExfT1BUSU9OQUxfU09NRV9FTlJPTExFRDpjYXNlIG4uSEFTX1JFUVVJUkVEX0FMTF9SRVFVSVJFRF9FTlJPTExFRDpyZXR1cm4gdC5sb2MoImVucm9sbC5jaG9pY2VzLnN1Ym1pdC5maW5pc2giLCJsb2dpbiIpO2Nhc2Ugbi5IQVNfUkVRVUlSRURfTk9ORV9FTlJPTExFRDpyZXR1cm4gdC5sb2MoImVucm9sbC5jaG9pY2VzLnN1Ym1pdC5jb25maWd1cmUiLCJsb2dpbiIpO2Nhc2Ugbi5IQVNfUkVRVUlSRURfU09NRV9SRVFVSVJFRF9FTlJPTExFRDpyZXR1cm4gdC5sb2MoImVucm9sbC5jaG9pY2VzLnN1Ym1pdC5uZXh0IiwibG9naW4iKTtkZWZhdWx0OnJldHVybiIifX0saW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0aGlzLmxpc3RlblRvKHRoaXMsInNhdmUiLGZ1bmN0aW9uKCl7dmFyIGU7c3dpdGNoKHRoaXMuc3RhdGUuZ2V0KCJwYWdlVHlwZSIpKXtjYXNlIG4uSEFTX1JFUVVJUkVEX05PTkVfRU5ST0xMRUQ6Y2FzZSBuLkhBU19SRVFVSVJFRF9TT01FX1JFUVVJUkVEX0VOUk9MTEVEOmU9dC5hcHBTdGF0ZS5nZXQoImZhY3RvcnMiKS5nZXRGaXJzdFVuZW5yb2xsZWRSZXF1aXJlZEZhY3RvcigpLHQuYXBwU3RhdGUudHJpZ2dlcigibmF2aWdhdGUiLGkuY3JlYXRlRW5yb2xsRmFjdG9yVXJsKGUuZ2V0KCJwcm92aWRlciIpLGUuZ2V0KCJmYWN0b3JUeXBlIikpKTticmVhaztkZWZhdWx0OnJldHVybiB0aGlzLm1vZGVsLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24odCl7cmV0dXJuIHQuc2tpcCgpfSl9fSl9LHByZVJlbmRlcjpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImZhY3RvcnMiKTtzd2l0Y2godGhpcy5zdGF0ZS5nZXQoInBhZ2VUeXBlIikpe2Nhc2Ugbi5IQVNfUkVRVUlSRURfTk9ORV9FTlJPTExFRDpjYXNlIG4uSEFTX1JFUVVJUkVEX1NPTUVfUkVRVUlSRURfRU5ST0xMRUQ6dGhpcy5hZGQobmV3IHM=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("dHJ1Y3Rpb25zIix0ZW1wbGF0ZTonXHQgICAgICA8cCBjbGFzcz0iaW5zdHJ1Y3Rpb25zLXRpdGxlIj57e3RpdGxlfX08L3A+XHQgICAgICA8c3BhbiBjbGFzcz0iYXBwLWxvZ28ge3thcHBJY29ufX0iPjwvc3Bhbj5cdCAgICAgIDxwIGNsYXNzPSJpbnN0cnVjdGlvbnMiPnt7e2FwcFN0b3JlTGlua1RleHR9fX08L3A+XHQgICAgJyxpbml0aWFsaXplOmZ1bmN0aW9uKCl7dGhpcy5saXN0ZW5Ubyh0aGlzLm1vZGVsLCJjaGFuZ2U6X19kZXZpY2VUeXBlX18iLHRoaXMucmVuZGVyKX0sZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7dmFyIG4saSxyLHM9ZS5nZXRGYWN0b3JMYWJlbCh0aGlzLm1vZGVsLmdldCgiX19wcm92aWRlcl9fIiksdGhpcy5tb2RlbC5nZXQoIl9fZmFjdG9yVHlwZV9fIikpO3JldHVybiByPW8uU1RPUkVbdGhpcy5tb2RlbC5nZXQoIl9fZGV2aWNlVHlwZV9fIildLCJHT09HTEUiPT09dGhpcy5tb2RlbC5nZXQoIl9fcHJvdmlkZXJfXyIpPyhuPW8uR09PR0xFW3RoaXMubW9kZWwuZ2V0KCJfX2RldmljZVR5cGVfXyIpXSxpPSJnb29nbGUtYXV0aC0zOCIpOihuPW8uT0tUQVt0aGlzLm1vZGVsLmdldCgiX19kZXZpY2VUeXBlX18iKV0saT0ib2t0YS12ZXJpZnktMzgiKSx7dGl0bGU6dC5sb2MoImVucm9sbC50b3RwLmluc3RhbGxBcHAiLCJsb2dpbiIsW3NdKSxhcHBTdG9yZUxpbmtUZXh0OnQubG9jKCJlbnJvbGwudG90cC5kb3dubG9hZEFwcCIsImxvZ2luIixbbixzLHJdKSxhcHBJY29uOml9fX0pLGQ9bi5leHRlbmQoe2NsYXNzTmFtZToiZW5yb2xsLXRvdHAiLE1vZGVsOmZ1bmN0aW9uKCl7cmV0dXJue2xvY2FsOntfX2RldmljZVR5cGVfXzoic3RyaW5nIixfX2ZhY3RvclR5cGVfXzpbInN0cmluZyIsITEsdGhpcy5vcHRpb25zLmZhY3RvclR5cGVdLF9fcHJvdmlkZXJfXzpbInN0cmluZyIsITEsdGhpcy5vcHRpb25zLnByb3ZpZGVyXX0sc2F2ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24odCl7dmFyIGU9bC5maW5kV2hlcmUodC5mYWN0b3JzLHtmYWN0b3JUeXBlOnRoaXMuZ2V0KCJfX2ZhY3RvclR5cGVfXyIpLHByb3ZpZGVyOnRoaXMuZ2V0KCJfX3Byb3ZpZGVyX18iKX0pO3JldHVybiBlLmVucm9sbCgpfSl9fX0sRm9ybTp7dGl0bGU6ZnVuY3Rpb24oKXt2YXIgbj1lLmdldEZhY3RvckxhYmVsKHRoaXMubW9kZWwuZ2V0KCJfX3Byb3ZpZGVyX18iKSx0aGlzLm1vZGVsLmdldCgiX19mYWN0b3JUeXBlX18iKSk7cmV0dXJuIHQubG9jKCJlbnJvbGwudG90cC50aXRsZSIsImxvZ2luIixbbl0pfSxzdWJ0aXRsZTpsLnBhcnRpYWwodC5sb2MsImVucm9sbC50b3RwLnNlbGVjdERldmljZSIsImxvZ2luIiksYXV0b1NhdmU6ITAsbm9CdXR0b25CYXI6ITAsYXR0cmlidXRlczp7ImRhdGEtc2UiOiJzdGVwLWRldmljZS10eXBlIn0sZm9ybUNoaWxkcmVuOmZ1bmN0aW9uKCl7dmFyIGU9e0FQUExFOiIiLEFORFJPSUQ6IiJ9O3RoaXMuc2V0dGluZ3MuZ2V0KCJmZWF0dXJlcy53aW5kb3dzVmVyaWZ5IikmJiJPS1RBIj09PXRoaXMubW9kZWwuZ2V0KCJfX3Byb3ZpZGVyX18iKT9lLldJTkRPV1M9IiI6IkdPT0dMRSI9PT10aGlzLm1vZGVsLmdldCgiX19wcm92aWRlcl9fIikmJihlLkJMQUNLQkVSUlk9IiIpO3ZhciBuPVtpLklucHV0KHtuYW1lOiJfX2RldmljZVR5cGVfXyIsdHlwZToicmFkaW8iLG9wdGlvbnM6ZSxjbGFzc05hbWU6ImRldmljZS10eXBlLWlucHV0In0pLGkuRGl2aWRlcih7c2hvd1doZW46Y30pLGkuVmlldyh7Vmlldzp1LHNob3dXaGVuOmN9KSxpLlRvb2xiYXIoe25vQ2FuY2VsQnV0dG9uOiEwLHNhdmU6dC5sb2MoIm9mb3JtLm5leHQiLCJsb2dpbiIpLHNob3dXaGVuOmN9KV07cmV0dXJuIG59fSxGb290ZXI6YX0pO3JldHVybiBkfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7ISh0LmV4cG9ydHM9e09LVEE6e0FQUExFOiJodHRwczovL2l0dW5lcy5hcHBsZS5jb20vdXMvYXBwL29rdGEtdmVyaWZ5L2lkNDkwMTc5NDA1IixBTkRST0lEOiJodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9Y29tLm9rdGEuYW5kcm9pZC5hdXRoIixXSU5ET1dTOiJodHRwOi8vd3d3LndpbmRvd3NwaG9uZS5jb20vZW4tdXMvc3RvcmUvYXBwL29rdGEtdmVyaWZ5LzlkZjBlMmM0LTczMDEtNDExZi04MGU1LTYyZmNmNjY3OTY2NiJ9LEdPT0dMRTp7QVBQTEU6Imh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS91cy9hcHAvZ29vZ2xlLWF1dGhlbnRpY2F0b3IvaWQzODg0OTc2MDUiLEFORFJPSUQ6Imh0dHBzOi8vcGxheS5nb29nbGUuY29tL3N0b3JlL2FwcHMvZGV0YWlscz9pZD1jb20uZ29vZ2xlLmFuZHJvaWQuYXBwcy5hdXRoZW50aWNhdG9yMiIsQkxBQ0tCRVJSWToiaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vYWNjb3VudHMvYW5zd2VyLzEwNjY0NDcifSxTVE9SRTp7QVBQTEU6IkFwcCBTdG9yZSIsQU5EUk9JRDoiR29vZ2xlIFBsYXkgU3RvcmUiLFdJTkRPV1M6IldpbmRvd3MgU3RvcmUiLEJMQUNLQkVSUlk6IkJsYWNrYmVycnkgV29ybGQgU3RvcmUifX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig2MjIpLG4oNjI3KV0scj1mdW5jdGlvbih0LGUsbil7dmFyIGk9dC5fO3JldHVybiB0LlZpZXcuZXh0ZW5kKHtjbGFzc05hbWU6InNjYW4taW5zdHJ1Y3Rpb25zIGNsZWFyZml4Iix0ZW1wbGF0ZTonXHQgICAgICA8ZGl2IGNsYXNzPSJzY2FuLWluc3RydWN0aW9ucy1kZXRhaWxzLXdyYXBwZXIiPlx0ICAgICAgICAgIDxkaXYgY2xhc3M9InNjYW4taW5zdHJ1Y3Rpb25zLWRldGFpbHMiPlx0ICAgICAgICAgICAgICA8cD57e2luc3RydWN0aW9uc319PC9wPlx0ICAgICAgICAgIDwvZGl2Plx0ICAgICAgPC9kaXY+XHQgIA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YXRpdmUsITApLG1hdGNoZXJzPVtmdW5jdGlvbihlbGVtLGNvbnRleHQseG1sKXt2YXIgcmV0PSFsZWFkaW5nUmVsYXRpdmUmJih4bWx8fGNvbnRleHQhPT1vdXRlcm1vc3RDb250ZXh0KXx8KChjaGVja0NvbnRleHQ9Y29udGV4dCkubm9kZVR5cGU/bWF0Y2hDb250ZXh0KGVsZW0sY29udGV4dCx4bWwpOm1hdGNoQW55Q29udGV4dChlbGVtLGNvbnRleHQseG1sKSk7cmV0dXJuIGNoZWNrQ29udGV4dD1udWxsLHJldH1dO2k8bGVuO2krKylpZihtYXRjaGVyPUV4cHIucmVsYXRpdmVbdG9rZW5zW2ldLnR5cGVdKW1hdGNoZXJzPVthZGRDb21iaW5hdG9yKGVsZW1lbnRNYXRjaGVyKG1hdGNoZXJzKSxtYXRjaGVyKV07ZWxzZXtpZihtYXRjaGVyPUV4cHIuZmlsdGVyW3Rva2Vuc1tpXS50eXBlXS5hcHBseShudWxsLHRva2Vuc1tpXS5tYXRjaGVzKSxtYXRjaGVyW2V4cGFuZG9dKXtmb3Ioaj0rK2k7ajxsZW4mJiFFeHByLnJlbGF0aXZlW3Rva2Vuc1tqXS50eXBlXTtqKyspO3JldHVybiBzZXRNYXRjaGVyKGk+MSYmZWxlbWVudE1hdGNoZXIobWF0Y2hlcnMpLGk+MSYmdG9TZWxlY3Rvcih0b2tlbnMuc2xpY2UoMCxpLTEpLmNvbmNhdCh7dmFsdWU6IiAiPT09dG9rZW5zW2ktMl0udHlwZT8iKiI6IiJ9KSkucmVwbGFjZShydHJpbSwiJDEiKSxtYXRjaGVyLGk8aiYmbWF0Y2hlckZyb21Ub2tlbnModG9rZW5zLnNsaWNlKGksaikpLGo8bGVuJiZtYXRjaGVyRnJvbVRva2Vucyh0b2tlbnM9dG9rZW5zLnNsaWNlKGopKSxqPGxlbiYmdG9TZWxlY3Rvcih0b2tlbnMpKX1tYXRjaGVycy5wdXNoKG1hdGNoZXIpfXJldHVybiBlbGVtZW50TWF0Y2hlcihtYXRjaGVycyl9ZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKGVsZW1lbnRNYXRjaGVycyxzZXRNYXRjaGVycyl7dmFyIGJ5U2V0PXNldE1hdGNoZXJzLmxlbmd0aD4wLGJ5RWxlbWVudD1lbGVtZW50TWF0Y2hlcnMubGVuZ3RoPjAsc3VwZXJNYXRjaGVyPWZ1bmN0aW9uKHNlZWQsY29udGV4dCx4bWwscmVzdWx0cyxvdXRlcm1vc3Qpe3ZhciBlbGVtLGosbWF0Y2hlcixtYXRjaGVkQ291bnQ9MCxpPSIwIix1bm1hdGNoZWQ9c2VlZCYmW10sc2V0TWF0Y2hlZD1bXSxjb250ZXh0QmFja3VwPW91dGVybW9zdENvbnRleHQsZWxlbXM9c2VlZHx8YnlFbGVtZW50JiZFeHByLmZpbmQuVEFHKCIqIixvdXRlcm1vc3QpLGRpcnJ1bnNVbmlxdWU9ZGlycnVucys9bnVsbD09Y29udGV4dEJhY2t1cD8xOk1hdGgucmFuZG9tKCl8fC4xLGxlbj1lbGVtcy5sZW5ndGg7Zm9yKG91dGVybW9zdCYmKG91dGVybW9zdENvbnRleHQ9Y29udGV4dD09PWRvY3VtZW50fHxjb250ZXh0fHxvdXRlcm1vc3QpO2khPT1sZW4mJm51bGwhPShlbGVtPWVsZW1zW2ldKTtpKyspe2lmKGJ5RWxlbWVudCYmZWxlbSl7Zm9yKGo9MCxjb250ZXh0fHxlbGVtLm93bmVyRG9jdW1lbnQ9PT1kb2N1bWVudHx8KHNldERvY3VtZW50KGVsZW0pLHhtbD0hZG9jdW1lbnRJc0hUTUwpO21hdGNoZXI9ZWxlbWVudE1hdGNoZXJzW2orK107KWlmKG1hdGNoZXIoZWxlbSxjb250ZXh0fHxkb2N1bWVudCx4bWwpKXtyZXN1bHRzLnB1c2goZWxlbSk7YnJlYWt9b3V0ZXJtb3N0JiYoZGlycnVucz1kaXJydW5zVW5pcXVlKX1ieVNldCYmKChlbGVtPSFtYXRjaGVyJiZlbGVtKSYmbWF0Y2hlZENvdW50LS0sc2VlZCYmdW5tYXRjaGVkLnB1c2goZWxlbSkpfWlmKG1hdGNoZWRDb3VudCs9aSxieVNldCYmaSE9PW1hdGNoZWRDb3VudCl7Zm9yKGo9MDttYXRjaGVyPXNldE1hdGNoZXJzW2orK107KW1hdGNoZXIodW5tYXRjaGVkLHNldE1hdGNoZWQsY29udGV4dCx4bWwpO2lmKHNlZWQpe2lmKG1hdGNoZWRDb3VudD4wKWZvcig7aS0tOyl1bm1hdGNoZWRbaV18fHNldE1hdGNoZWRbaV18fChzZXRNYXRjaGVkW2ldPXBvcC5jYWxsKHJlc3VsdHMpKTtzZXRNYXRjaGVkPWNvbmRlbnNlKHNldE1hdGNoZWQpfXB1c2guYXBwbHkocmVzdWx0cyxzZXRNYXRjaGVkKSxvdXRlcm1vc3QmJiFzZWVkJiZzZXRNYXRjaGVkLmxlbmd0aD4wJiZtYXRjaGVkQ291bnQrc2V0TWF0Y2hlcnMubGVuZ3RoPjEmJlNpenpsZS51bmlxdWVTb3J0KHJlc3VsdHMpfXJldHVybiBvdXRlcm1vc3QmJihkaXJydW5zPWRpcnJ1bnNVbmlxdWUsb3V0ZXJtb3N0Q29udGV4dD1jb250ZXh0QmFja3VwKSx1bm1hdGNoZWR9O3JldHVybiBieVNldD9tYXJrRnVuY3Rpb24oc3VwZXJNYXRjaGVyKTpzdXBlck1hdGNoZXJ9dmFyIGksc3VwcG9ydCxFeHByLGdldFRleHQsaXNYTUwsdG9rZW5pemUsY29tcGlsZSxzZWxlY3Qsb3V0ZXJtb3N0Q29udGV4dCxzb3J0SW5wdXQsaGFzRHVwbGljYXRlLHNldERvY3VtZW50LGRvY3VtZW50LGRvY0VsZW0sZG9jdW1lbnRJc0hUTUwscmJ1Z2d5UVNBLHJidWdneU1hdGNoZXMsbWF0Y2hlcyxjb250YWlucyxleHBhbmRvPSJzaXp6bGUiKzEqbmV3IERhdGUscHJlZmVycmVkRG9jPXdpbmRvdy5kb2N1bWVudCxkaXJydW5zPTAsZG9uZT0wLGNsYXNzQ2FjaGU9Y3JlYXRlQ2FjaGUoKSx0b2tlbkNhY2hlPWNyZWF0ZUNhY2hlKCksY29tcGlsZXJDYWNoZT1jcmVhdGVDYWNoZSgpLHNvcnRPcmRlcj1mdW5jdGlvbihhLGIpe3JldHVybiBhPT09YiYmKGhhc0R1cGxpY2F0ZT0hMCksMH0sTUFYX05FR0FUSVZFPTE8PDMxLGhhc093bj17fS5oYXNPd25Qcm9wZXJ0eSxhcnI9W10scG9wPWFyci5wb3AscHVzaF9uYXRpdmU9YXJyLnB1c2gscHVzaD1hcnIucHVzaCxzbGljZT1hcnIuc2xpY2UsaW5kZXhPZj1mdW5jdGlvbihsaXN0LGVsZW0pe2Zvcih2YXIgaT0wLGxlbj1saXN0Lmxlbmd0aDtpPGxlbjtpKyspaWYobGlzdFtpXT09PWVsZW0pcmV0dXJuIGk7cmV0dXJuLTF9LGJvb2xlYW5zPSJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZCIsd2hpdGVzcGFjZT0iW1xceDIwXFx0XFxyXFxuXFxmXSIsaWRlbnRpZmllcj0iKD86XFxcXC58W1xcdy1dfFteXFx4MDAtXFx4YTBdKSsiLGF0dHJpYnV0ZXM9IlxcWyIrd2hpdGVzcGFjZSsiKigiK2lkZW50aWZpZXIrIikoPzoiK3doaXRlc3BhY2UrIiooWypeJHwhfl0/PSkiK3doaXRlc3BhY2UrIiooPzonKCg/OlxcXFwufFteXFxcXCddKSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcInwoIitpZGVudGlmaWVyKyIpKXwpIit3aGl0ZXNwYWNlKyIqXFxdIixwc2V1ZG9zPSI6KCIraWRlbnRpZmllcisiKSg/OlxcKCgoJygoPzpcXFxcLnxbXlxcXFwnXSkqKSd8XCIoKD86XFxcXC58W15cXFxcXCJdKSopXCIpfCgoPzpcXFxcLnxbXlxcXFwoKVtcXF1dfCIrYXR0cmlidXRlcysiKSopfC4qKVxcKXwpIixyd2hpdGVzcGFjZT1uZXcgUmVnRXhwKHdoaXRlc3BhY2UrIisiLCJnIikscnRyaW09bmV3IFJlZ0V4cCgiXiIrd2hpdGVzcGFjZSsiK3woKD86XnxbXlxcXFxdKSg/OlxcXFwuKSopIit3aGl0ZXNwYWNlKyIrJCIsImciKSxyY29tbWE9bmV3IFJlZ0V4cCgiXiIrd2hpdGVzcGFjZSsiKiwiK3doaXRlc3BhY2UrIioiKSxyY29tYmluYXRvcnM9bmV3IFJlZ0V4cCgiXiIrd2hpdGVzcGFjZSsiKihbPit+XXwiK3doaXRlc3BhY2UrIikiK3doaXRlc3BhY2UrIioiKSxyYXR0cmlidXRlUXVvdGVzPW5ldyBSZWdFeHAoIj0iK3doaXRlc3BhY2UrIiooW15cXF0nXCJdKj8pIit3aGl0ZXNwYWNlKyIqXFxdIiwiZyIpLHJwc2V1ZG89bmV3IFJlZ0V4cChwc2V1ZG9zKSxyaWRlbnRpZmllcj1uZXcgUmVnRXhwKCJeIitpZGVudGlmaWVyKyIkIiksbWF0Y2hFeHByPXtJRDpuZXcgUmVnRXhwKCJeIygiK2lkZW50aWZpZXIrIikiKSxDTEFTUzpuZXcgUmVnRXhwKCJeXFwuKCIraWRlbnRpZmllcisiKSIpLFRBRzpuZXcgUmVnRXhwKCJeKCIraWRlbnRpZmllcisifFsqXSkiKSxBVFRSOm5ldyBSZWdFeHAoIl4iK2F0dHJpYnV0ZXMpLFBTRVVETzpuZXcgUmVnRXhwKCJeIitwc2V1ZG9zKSxDSElMRDpuZXcgUmVnRXhwKCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXCgiK3doaXRlc3BhY2UrIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiK3doaXRlc3BhY2UrIiooPzooWystXXwpIit3aGl0ZXNwYWNlKyIqKFxcZCspfCkpIit3aGl0ZXNwYWNlKyIqXFwpfCkiLCJpIiksYm9vbDpuZXcgUmVnRXhwKCJeKD86Iitib29sZWFucysiKSQiLCJpIiksbmVlZHNDb250ZXh0Om5ldyBSZWdFeHAoIl4iK3doaXRlc3BhY2UrIipbPit+XXw6KGV2ZW58b2RkfGVxfGd0fGx0fG50aHxmaXJzdHxsYXN0KSg/OlxcKCIrd2hpdGVzcGFjZSsiKigoPzotXFxkKT9cXGQqKSIrd2hpdGVzcGFjZSsiKlxcKXwpKD89W14tXXwkKSIsImkiKX0scmlucHV0cz0vXig/Omlu", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.end();

  return __filename;
};
