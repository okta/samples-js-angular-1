var path = require("path");

/**
 * GET /assets/js/mvc/loginpage/initLoginPage.pack.273bf8f5bce0e96ec53703a7d04945f5.js
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: * / *
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0yH_le7ZQQw24ioj80y_kSQ; t=default; JSESSIONID=FC08AD459E01024D5B6C6A1D8FE25E22
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"1493321-1508692684000\"");
  res.setHeader("last-modified", "Sun, 22 Oct 2017 17:18:04 GMT");
  res.setHeader("content-type", "text/javascript");
  res.setHeader("content-length", "1493321");
  res.setHeader("date", "Mon, 23 Oct 2017 18:59:26 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("dmFyIE9rdGFMb2dpbj1Pa3RhTG9naW58fHt9O09rdGFMb2dpbi5pbml0TG9naW5QYWdlPWZ1bmN0aW9uKG1vZHVsZXMpe2Z1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpe2lmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKXJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO3ZhciBtb2R1bGU9aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF09e2V4cG9ydHM6e30saWQ6bW9kdWxlSWQsbG9hZGVkOiExfTtyZXR1cm4gbW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cyxtb2R1bGUsbW9kdWxlLmV4cG9ydHMsX193ZWJwYWNrX3JlcXVpcmVfXyksbW9kdWxlLmxvYWRlZD0hMCxtb2R1bGUuZXhwb3J0c312YXIgaW5zdGFsbGVkTW9kdWxlcz17fTtyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5tPW1vZHVsZXMsX193ZWJwYWNrX3JlcXVpcmVfXy5jPWluc3RhbGxlZE1vZHVsZXMsX193ZWJwYWNrX3JlcXVpcmVfXy5wPSIiLF9fd2VicGFja19yZXF1aXJlX18oMCl9KFtmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXsidXNlIHN0cmljdCI7dmFyIE9rdGFTaWduSW49X193ZWJwYWNrX3JlcXVpcmVfXygxMSksVXRpbD1fX3dlYnBhY2tfcmVxdWlyZV9fKDMpLEFjY291bnRDaG9vc2VyPV9fd2VicGFja19yZXF1aXJlX18oMTMpLGluaXRNb2JpbGVTU089X193ZWJwYWNrX3JlcXVpcmVfXygxKSwkPV9fd2VicGFja19yZXF1aXJlX18oMiksXz1fX3dlYnBhY2tfcmVxdWlyZV9fKDcpO19fd2VicGFja19yZXF1aXJlX18oMTQpLG1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKGNvbmZpZyl7ZnVuY3Rpb24gaW52b2tlRXh0ZXJuYWxDYWxsYmFjayhyZXMpe2lmKHVzZUV4dGVybmFsQ2FsbEJhY2spdHJ5e3ZhciByZXN1bHQ9IlNVQ0NFU1MiPT09cmVzLnN0YXR1cz8xOjA7d2luZG93LmV4dGVybmFsLk9rdGFXaWRnZXRDYWxsYmFjayhyZXN1bHQpfWNhdGNoKGVycil7fX1mdW5jdGlvbiBzdWNjZXNzRnVuYyhyZXMpe3JldHVybiB1c2VFeHRlcm5hbENhbGxCYWNrP3ZvaWQgaW52b2tlRXh0ZXJuYWxDYWxsYmFjayhyZXMpOmNvbmZpZy5pc01vYmlsZUNsaWVudExvZ2luP3ZvaWQgd2luZG93LndlYmtpdC5tZXNzYWdlSGFuZGxlcnMubG9naW5NZXNzYWdlLnBvc3RNZXNzYWdlKHt0b2tlbjpyZXMuc2Vzc2lvbi50b2tlbn0pOmNvbmZpZy5yZXBvc3Q/dm9pZCBVdGlsLnBvc3RUb1VybChjb25maWcuc2lnbkluLmJhc2VVcmwrIi9sb2dpbi9zZXNzaW9uQ29va2llUmVkaXJlY3Q/Y2hlY2tBY2NvdW50U2V0dXBDb21wbGV0ZT10cnVlJnJlcG9zdD10cnVlJnRva2VuPSIrZW5jb2RlVVJJQ29tcG9uZW50KHJlcy5zZXNzaW9uLnRva2VuKSsiJnJlZGlyZWN0VXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KGNvbmZpZy5mcm9tVXJpKSwkKCJib2R5IikpOmNvbmZpZy5hdm9pZERvdWJsZVJlcXVlc3RNU0lvc0FwcCYmVXRpbC51c2VyQWdlbnRJc0lvczEwKG5hdmlnYXRvci51c2VyQWdlbnQpP3ZvaWQgaGFja1JlZGlyZWN0V2l0aFBvcnRBZGRlZE9yUmVtb3ZlZChyZXMpOnZvaWQoY29uZmlnLnNpZ25Jbi5mZWF0dXJlcy5jb25zZW50JiZyZXMuc3RlcFVwP3Jlcy5zdGVwVXAuZmluaXNoKCk6cmVzLnNlc3Npb24uc2V0Q29va2llQW5kUmVkaXJlY3QoY29uZmlnLnJlZGlyZWN0VXJpKSl9ZnVuY3Rpb24gaGFja1JlZGlyZWN0V2l0aFBvcnRBZGRlZE9yUmVtb3ZlZChyZXMpe3ZhciBoYWNrSG9zdG5hbWVVcmw9VXRpbC5iYXNlVXJsV2l0aFBvcnRBZGRlZE9yUmVtb3ZlZChjb25maWcuc2lnbkluLmJhc2VVcmwpLHF1ZXJ5UGFyYW1zPVV0aWwudG9RdWVyeVBhcmFtcyh7Y2hlY2tBY2NvdW50U2V0dXBDb21wbGV0ZTohMCx0b2tlbjpyZXMuc2Vzc2lvbi50b2tlbixyZWRpcmVjdFVybDpjb25maWcucmVkaXJlY3RVcmksbW9kaWZpZWRCYXNlVXJsOiEwfSksaGFja1JlZGlyZWN0VXJsPWhhY2tIb3N0bmFtZVVybCsiL2xvZ2luL3Nlc3Npb25Db29raWVSZWRpcmVjdCIrcXVlcnlQYXJhbXM7d2luZG93LmxvY2F0aW9uPWhhY2tSZWRpcmVjdFVybH1mdW5jdGlvbiBub3RpZnlBY2NvdW50Q2hvb3NlcihyZXMsYWNjb3VudENob29zZXIpe3ZhciBzdWNjZXNzPV8ucGFydGlhbChzdWNjZXNzRnVuYyxyZXMpO2FjY291bnRDaG9vc2VyP2FjY291bnRDaG9vc2VyLmxvZ2luKHJlcy51c2VyLnByb2ZpbGUsc3VjY2Vzcyk6c3VjY2VzcygpfWZ1bmN0aW9uIHByb2Nlc3NDcmVkcyhjcmVkcyl7aWYoaXNDaHJvbWVPcyl7dXNlcm5hbWU9Y3JlZHMudXNlcm5hbWU7dmFyIGRldGFpbHM9e3Rva2VuOmNyZWRzLnVzZXJuYW1lLHVzZXI6Y3JlZHMudXNlcm5hbWUscGFzc3dvcmRCeXRlczpjcmVkcy5wYXNzd29yZCxrZXlUeXBlOiJLRVlfVFlQRV9QQVNTV09SRF9QTEFJTiJ9OyJwZW5kaW5nIiE9PWNocm9tZU9zQWRkLnN0YXRlKCkmJihjaHJvbWVPc0FkZD0kLkRlZmVycmVkKCkpLHdhaXRGb3JDaHJvbWVPc0NhbGxiYWNrPSEwLGdvb2dsZS5wcmluY2lwYWwuYWRkKGRldGFpbHMsZnVuY3Rpb24oKXtjaHJvbWVPc0FkZC5yZXNvbHZlKCl9KX19dmFyIHVzZXJuYW1lLGlzQ2hyb21lT3M9ITEsY2hyb21lT3NBZGQ9JC5EZWZlcnJlZCgpLGNocm9tZU9zQ29tcGxldGU9JC5EZWZlcnJlZCgpLHdhaXRGb3JDaHJvbWVPc0NhbGxiYWNrPSExLHVzZUV4dGVybmFsQ2FsbEJhY2s9ITE7dHJ5e3VzZUV4dGVybmFsQ2FsbEJhY2s9d2luZG93LmV4dGVybmFsJiYiT2t0YVdpZGdldENhbGxiYWNrImluIHdpbmRvdy5leHRlcm5hbH1jYXRjaChlKXt9dmFyIG92ZXJyaWRlcz1jb25maWcuc2lnbkluLmkxOG5bY29uZmlnLnNpZ25Jbi5sYW5ndWFnZV07Xy5lYWNoKG92ZXJyaWRlcyxmdW5jdGlvbih2YWx1ZSxsYWJlbCl7dmFsdWV8fGRlbGV0ZSBvdmVycmlkZXNbbGFiZWxdfSksY29uZmlnLnNpZ25Jbi5hc3NldHMucmV3cml0ZT1VdGlsLmFzc2V0UmV3cml0ZSxjb25maWcuc2lnbkluLmZlYXR1cmVzLnJvdXRlcj1VdGlsLnN1cHBvcnRzUm91dGVyKCk7dmFyIGFjY291bnRDaG9vc2VyO2NvbmZpZy5wdWJsaXNoVG9BY2NvdW50Q2hvb3NlciYmKGFjY291bnRDaG9vc2VyPW5ldyBBY2NvdW50Q2hvb3Nlcih7ZGlzY292ZXJ5VXJsOmNvbmZpZy5hY2NvdW50Q2hvb3NlckRpc2NvdmVyeVVybH0pKSxjb25maWcuZW5hYmxlVXJsRml4Rm9yRW1iZWRkZWRCcm93c2VycyYmVXRpbC5pc0xvZ2luVXJsU3RhbGUoY29uZmlnLmxvZ2luUGFnZVVybFJlZGlyZWN0LGxvY2F0aW9uLmhyZWYpJiZVdGlsLmFkanVzdFVybFBhdGgoY29uZmlnLmxvZ2luUGFnZVVybFJlZGlyZWN0KTt2YXIgb2t0YVNpZ25Jbj1uZXcgT2t0YVNpZ25Jbihjb25maWcuc2lnbkluKTtva3RhU2lnbkluLnJlbmRlckVsKHtlbDpjb25maWcuc2lnbkluLmVsLHByb2Nlc3NDcmVkczpwcm9jZXNzQ3JlZHN9LGZ1bmN0aW9uKHJlcyl7cmV0dXJuIlNVQ0NFU1MiIT09cmVzLnN0YXR1cz92b2lkIGludm9rZUV4dGVybmFsQ2FsbGJhY2socmVzKTp2b2lkKGNvbmZpZy5oYXNDaHJvbWVPU0ZlYXR1cmUmJmlzQ2hyb21lT3MmJndhaXRGb3JDaHJvbWVPc0NhbGxiYWNrPygkLndoZW4oY2hyb21lT3NBZGQpLnRoZW4oZnVuY3Rpb24oKXtnb29nbGUucHJpbmNpcGFsLmNvbXBsZXRlKHt0b2tlbjp1c2VybmFtZX0sZnVuY3Rpb24oKXtjaHJvbWVPc0NvbXBsZXRlLnJlc29sdmUoKX0pfSksJC53aGVuKGNocm9tZU9zQWRkLGNocm9tZU9zQ29tcGxldGUpLnRoZW4oZnVuY3Rpb24oKXtub3RpZnlBY2NvdW50Q2hvb3NlcihyZXMsYWNjb3VudENob29zZXIpfSkpOm5vdGlmeUFjY291bnRDaG9vc2VyKHJlcyxhY2NvdW50Q2hvb3NlcikpfSksVXRpbC5jbGVhckJlZW5Ub0hvbWVQYWdlKCksVXRpbC5yZXNldEF1dG9MYXVuY2goKSxjb25maWcuaXNNb2JpbGVTU08mJmluaXRNb2JpbGVTU08oY29uZmlnLnJlZGlyZWN0VXJpLGNvbmZpZy5saW5rUGFyYW1zKSxjb25maWcuaGFzQ2hyb21lT1NGZWF0dXJlJiZnb29nbGUmJmdvb2dsZS5wcmluY2lwYWwuaW5pdGlhbGl6ZShmdW5jdGlvbigpe2lzQ2hyb21lT3M9ITB9KSxjb25maWcuc2hvd0xpbmtUb0FwcFN0b3JlJiYkLnNtYXJ0YmFubmVyKHt0aXRsZToiT2t0YSBNb2JpbGUiLGF1dGhvcjoiT2t0YSwgSW5jLiJ9KSxjb25maWcucHJldmVudEJyb3dzZXJGcm9tU2F2aW5nT2t0YVBhc3N3b3JkJiZva3RhU2lnbkluLm9uKCJwYWdlUmVuZGVyZWQiLGZ1bmN0aW9uKCl7dmFyIHBhc3N3b3JkRmllbGRzPSQoIiNva3RhLXNpZ24taW4gOnBhc3N3b3JkIik7cGFzc3dvcmRGaWVsZHMubGVuZ3RoPjAmJlV0aWwuYWRkUGFzc3dvcmRKYW1tZXJzKCQoIiNva3RhLXNpZ24taW4gZm9ybSIpKX0pfX0sZnVuY3Rpb24obW9kdWxlLGV4cG9ydHMsX193ZWJwYWNrX3Jl", "base64"));
  res.write(new Buffer("cXVpcmVfXyl7dmFyIF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18sX19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX187X19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXz1bX193ZWJwYWNrX3JlcXVpcmVfXygyKSxfX3dlYnBhY2tfcmVxdWlyZV9fKDMpLF9fd2VicGFja19yZXF1aXJlX18oNCldLF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fPWZ1bmN0aW9uKCQsVXRpbCxIYW5kbGViYXJzKXt2YXIgdHBsPUhhbmRsZWJhcnMuY29tcGlsZSx0b2tlblRwbD10cGwoIi9vYXV0aDIvdG9rZW4/Y2xpZW50X2lkPXt7Y2xpZW50SWR9fSZncmFudF90eXBlPXNlc3Npb24mY29kZT17e2NsaWVudENvZGV9fSIpLGNvZGVUcGw9dHBsKCIvb2F1dGgyL2NvZGU/Y2xpZW50X2lkPXt7Y2xpZW50SWR9fSIpLG9rdGFTU09UcGw9dHBsKCJva3Rhc3NvOi8vdjEvb2F1dGgvdmFsaWRhdGUve3t1c2VyQ29kZX19Iiksb2t0YVVuaXZlcnNhbExpbmtUcGw9dHBsKCJ7e2RvbWFpbn19L2F1dGgvb2t0YW1vYmlsZS8/c2l0ZU5hbWU9e3tzaXRlTmFtZX19Jm9yZz17e29yZ319JnVzZXJOYW1lPXt7dXNlck5hbWV9fSZhcHBOYW1lPXt7YXBwTmFtZX19JmFwcEV4dGVybmFsS2V5PXt7YXBwRXh0ZXJuYWxLZXl9fSZhcHBMaW5rSWQ9e3thcHBMaW5rSWR9fSZ1c2VyQ29kZT17e3VzZXJDb2RlfX0mdGltZW91dEludGVydmFsPXt7dGltZW91dEludGVydmFsfX0mZm9yY2VEZXZpY2VUcnVzdD17e2ZvcmNlRGV2aWNlVHJ1c3R9fSIpLG1vYmlsZUxpbms9Imh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS91cy9hcHAvb2t0YS1tb2JpbGUvaWQ1ODA3MDkyNTE/bXQ9OCI7cmV0dXJuIGZ1bmN0aW9uKGZyb21VcmkscGFyYW1zKXtmdW5jdGlvbiBzaG93U2NyZWVuKHNjcmVlbklkKXskLmVhY2goc2NyZWVucyxmdW5jdGlvbihrZXksdmFsKXskKCIjIit2YWwpLnRvZ2dsZSh2YWw9PT1zY3JlZW5JZCl9KX1mdW5jdGlvbiBoaWRlTG9hZGluZ1NjcmVlbihzY3JlZW5JZCl7JCgiIyIrc2NyZWVuSWQpLmhpZGUoKX1mdW5jdGlvbiB1c2VyQ29kZVN1Y2Nlc3NDYWxsYmFjayh1c2VyQ29kZSl7d2luZG93LmxvY2F0aW9uLmhyZWY9b2t0YVNTT1RwbCh7dXNlckNvZGU6dXNlckNvZGV9KX1mdW5jdGlvbiB1c2VyQ29kZVN1Y2Nlc3NDYWxsYmFja0ZvclVpbnZlcnNhbExpbmsobGlua1BhcmFtcyl7dmFyIGxpbms9b2t0YVVuaXZlcnNhbExpbmtUcGwoe2RvbWFpbjpsaW5rUGFyYW1zLmRvbWFpbixzaXRlTmFtZTpsaW5rUGFyYW1zLnNpdGVOYW1lLG9yZzpsaW5rUGFyYW1zLm9yZyx1c2VyTmFtZTpsaW5rUGFyYW1zLnVzZXJOYW1lLGFwcE5hbWU6bGlua1BhcmFtcy5hcHBOYW1lLGFwcEV4dGVybmFsS2V5OmxpbmtQYXJhbXMuYXBwRXh0ZXJuYWxLZXksYXBwTGlua0lkOmxpbmtQYXJhbXMuYXBwTGlua0lkLHVzZXJDb2RlOmxpbmtQYXJhbXMudXNlckNvZGUsZm9yY2VEZXZpY2VUcnVzdDpsaW5rUGFyYW1zLmZvcmNlRGV2aWNlVHJ1c3QsdGltZW91dEludGVydmFsOm9rdGFNb2JpbGUudGltZW91dEludGVydmFsfSkrIiZyZWRpcmVjdFVybD0iK2VuY29kZVVSSUNvbXBvbmVudChsaW5rUGFyYW1zLnJlZGlyZWN0VXJsKTt3aW5kb3cubG9jYXRpb24uaHJlZj1saW5rfWZ1bmN0aW9uIHBvbGxPbk9BdXRoQ29kZSgpe2lmKCFva3RhTW9iaWxlLm1hbnVhbExvZ2luKXt2YXIgY3VycmVudFRpbWVNcz1EYXRlLm5vdygpO3ZvaWQgMCE9PXRpbWVvdXRUaW1lTXMmJmN1cnJlbnRUaW1lTXM+dGltZW91dFRpbWVNcyYmc2hvd1NjcmVlbihzY3JlZW5zLmVycm9yU2NyZWVuSWQpLCh2b2lkIDA9PT1va3RhTW9iaWxlLnRpbWVvdXRUaW1lTXN8fGN1cnJlbnRUaW1lTXM8PXRpbWVvdXRUaW1lTXMrMTAqb2t0YU1vYmlsZS50aW1lb3V0SW50ZXJ2YWwpJiYkLmFqYXgoe3R5cGU6IlBPU1QiLHVybDp0b2tlblRwbCh7Y2xpZW50SWQ6b2t0YU1vYmlsZS5jbGllbnRJZCxjbGllbnRDb2RlOm9rdGFNb2JpbGUuY2xpZW50Q29kZX0pLGRhdGFUeXBlOiJqc29uIixzdWNjZXNzOmZ1bmN0aW9uKGRhdGEpe2RhdGEuc2Vzc2lvbiYmZGF0YS5zZXNzaW9uLmxlbmd0aD4wP1V0aWwucG9zdFRvVXJsKGZyb21VcmksJCgiYm9keSIpKTpzZXRUaW1lb3V0KHBvbGxPbk9BdXRoQ29kZSxva3RhTW9iaWxlLnBvbGxJbnRlcnZhbCl9LGVycm9yOmZ1bmN0aW9uKCl7c2V0VGltZW91dChwb2xsT25PQXV0aENvZGUsb2t0YU1vYmlsZS5wb2xsSW50ZXJ2YWwpfX0pfX1mdW5jdGlvbiByZXF1ZXN0T0F1dGhDb2RlKCl7dGltZW91dFRpbWVNcz1EYXRlLm5vdygpK29rdGFNb2JpbGUudGltZW91dEludGVydmFsLCQuYWpheCh7dHlwZToiUE9TVCIsdXJsOmNvZGVUcGwoe2NsaWVudElkOm9rdGFNb2JpbGUuY2xpZW50SWR9KSxkYXRhVHlwZToianNvbiIsc3VjY2VzczpmdW5jdGlvbihkYXRhKXtva3RhTW9iaWxlLmNsaWVudENvZGU9ZGF0YS5jbGllbnRfY29kZSxva3RhTW9iaWxlLnVzZXJDb2RlPWRhdGEudXNlcl9jb2RlLHNob3dTY3JlZW4oc2NyZWVucy5vcGVuaW5nU2NyZWVuSWQpLHNldFRpbWVvdXQocG9sbE9uT0F1dGhDb2RlLG9rdGFNb2JpbGUucG9sbEludGVydmFsKSx1c2VyQ29kZVN1Y2Nlc3NDYWxsYmFjayhkYXRhLnVzZXJfY29kZSl9LGVycm9yOmZ1bmN0aW9uKCl7c2hvd1NjcmVlbihzY3JlZW5zLmVycm9yU2NyZWVuSWQpfX0pfWZ1bmN0aW9uIHJlcXVlc3RPQXV0aENvZGVGb3JVaW52ZXJzYWxMaW5rKCl7dGltZW91dFRpbWVNcz1EYXRlLm5vdygpK29rdGFNb2JpbGUudGltZW91dEludGVydmFsLCQuYWpheCh7dHlwZToiUE9TVCIsdXJsOmNvZGVUcGwoe2NsaWVudElkOm9rdGFNb2JpbGUuY2xpZW50SWR9KSxkYXRhVHlwZToianNvbiIsc3VjY2VzczpmdW5jdGlvbihkYXRhKXtva3RhTW9iaWxlLmNsaWVudENvZGU9ZGF0YS5jbGllbnRfY29kZSxva3RhTW9iaWxlLnVzZXJDb2RlPWRhdGEudXNlcl9jb2RlLGxpbmtQYXJhbXMudXNlckNvZGU9ZGF0YS51c2VyX2NvZGUsc2V0VGltZW91dChwb2xsT25PQXV0aENvZGUsb2t0YU1vYmlsZS5wb2xsSW50ZXJ2YWwpLCQoIiNtb2JpbGVEZXZpY2VUcnVzdExvZ2luQnV0dG9uIikuY2xpY2sobGF1bmNoT2t0YU1vYmlsZUZvclVuaXZlcnNhbExpbmspLCQoIiNtb2JpbGVEZXZpY2VUcnVzdEV4cGlyZWRMb2dpbkJ1dHRvbiIpLmNsaWNrKHB1cmVMYXVuY2hPa3RhTW9iaWxlRm9yVW5pdmVyc2FsTGluayl9LGVycm9yOmZ1bmN0aW9uKCl7c2hvd1NjcmVlbihzY3JlZW5zLmVycm9yU2NyZWVuSWQpfX0pfWZ1bmN0aW9uIGxhdW5jaE9rdGFNb2JpbGVGb3JVbml2ZXJzYWxMaW5rKCl7c2hvd1NjcmVlbihzY3JlZW5zLmxvYWRpbmdTY3JlZW5JZCksdXNlckNvZGVTdWNjZXNzQ2FsbGJhY2tGb3JVaW52ZXJzYWxMaW5rKGxpbmtQYXJhbXMpfWZ1bmN0aW9uIHB1cmVMYXVuY2hPa3RhTW9iaWxlRm9yVW5pdmVyc2FsTGluaygpe3Nob3dTY3JlZW4oc2NyZWVucy5sb2FkaW5nU2NyZWVuSWQpLHVzZXJDb2RlU3VjY2Vzc0NhbGxiYWNrRm9yVWludmVyc2FsTGluayhsaW5rUGFyYW1zKX1mdW5jdGlvbiBzaG93VHJhZGl0aW9uYWxMb2dpbigpe3Nob3dTY3JlZW4oKSxva3RhTW9iaWxlLm1hbnVhbExvZ2luPSEwLCQoIiNzaWduaW4tY29udGFpbmVyIikuc2hvdygpLCQoIiNtb2JpbGVTU09fb3ZlcmxheSIpLmhpZGUoKX1mdW5jdGlvbiBpbml0KCl7aGlkZUxvYWRpbmdTY3JlZW4oc2NyZWVucy5lbnRyeUxvYWRpbmdTY3JlZW5JZCksb2t0YU1vYmlsZS5yZXF1aXJlVXNlclRyaWdnZXI9PT0hMT8oc2hvd1NjcmVlbihzY3JlZW5zLm9wZW5pbmdTY3JlZW5JZCkscmVxdWVzdE9BdXRoQ29kZSgpKTpsaW5rUGFyYW1zJiZsaW5rUGFyYW1zLmRvbWFpbj9yZXF1ZXN0T0F1dGhDb2RlRm9yVWludmVyc2FsTGluaygpOiQoIiNtb2JpbGVTU09Mb2dpbkJ1dHRvbiIpLmNsaWNrKHJlcXVlc3RPQXV0aENvZGUpLCQoIiNnZXRPa3RhTW9iaWxlQnV0dG9uIikuY2xpY2soZnVuY3Rpb24oKXt3aW5kb3cubG9jYXRpb24uaHJlZj1tb2JpbGVMaW5rfSksJCgiI3RyYWRpdGlvbmFsTG9naW5CdXR0b24sICNyZXR1cm5Ub0xvZ2luQnV0dG9uIikuY2xpY2soc2hvd1RyYWRpdGlvbmFsTG9naW4pfXZhciB0aW1lb3V0VGltZU1zLGxpbmtQYXJhbXM9cGFyYW1zLG9rdGFNb2JpbGU9e2NsaWVudENvZGU6dm9pZCAwLHVzZXJDb2RlOnZvaWQgMCxwb2xsSW50ZXJ2YWw6NWUzLHRpbWVvdXRJbnRlcnZhbDo2ZTUsY2xpZW50SWQ6ImNhcGh4Y1FLUE9WT0lKVUdBWElDIixyZXF1aXJlVXNlclRyaWdnZXI6ITAsbWFudWFsTG9naW46ITF9LHNjcmVlbnM9e2VudHJ5TG9hZGluZ1NjcmVlbklkOiJtb2JpbGVTU09fZW50cnlfbG9hZGluZyIsYWNjZXNzU2NyZWVuSWQ6Im1vYmlsZVNTT19hY2Nlc3MiLG9wZW5pbmdTY3JlZW5JZDoibW9iaWxlU1NPX29wZW5pbmciLGxvYWRpbmdTY3JlZW5JZDoibW9iaWxlU1NPX2xvYWRpbmciLHRyYWRpdGlvbmFsTG9naW5TY3JlZW5JZDoibW9iaWxlU1NPX3RyYWRpdGlvbmFsTG9naW4iLGVycm9yU2NyZWVuSWQ6Im1vYmlsZVNTT19lcnJvciJ9OyQoaW5pdCl9fS5hcHBseShleHBvcnRzLF9fV0VCUEFDS19BTURfREVGSU5FX0FSUkFZX18pLCEodm9pZCAwIT09X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18mJihtb2R1bGUuZXhwb3J0cz1fX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyxfX3dlYnBhY2tfcmVxdWlyZV9fKXt2YXIgX19XRUJQQUNLX0FNRF9ERUZJTkVfQVJSQVlfXyxfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzsvKiEKCSAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjEuMTIuNAoJICogaHR0cDovL2pxdWVyeS5jb20vCgkgKgoJICogSW5jbHVkZXMgU2l6emxlLmpzCgkgKiBodHRwOi8vc2l6emxlanMuY29tLwoJICoKCSAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCgkgKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKCSAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKCSAqCgkgKiBEYXRlOiAyMDE2LTA1LTIwVDE3OjE3WgoJICovCiFmdW5jdGlvbihnbG9iYWwsZmFjdG9yeSl7Im9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJiJvYmplY3QiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9Z2xvYmFsLmRvY3VtZW50P2ZhY3RvcnkoZ2xvYmFsLCEwKTpmdW5jdGlvbih3KXtpZighdy5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnQiKTtyZXR1cm4gZmFjdG9yeSh3KX06ZmFjdG9yeShnbG9iYWwpfSgidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz93aW5kb3c6dGhpcyxmdW5jdGlvbih3aW5kb3csbm9HbG9iYWwpe2Z1bmN0aW9uIGlzQXJyYXlMaWtlKG9iail7dmFyIGxlbmd0aD0hIW9iaiYmImxlbmd0aCJpbiBvYmomJm9iai5sZW5ndGgsdHlwZT1qUXVlcnkudHlwZShvYmopO3JldHVybiJmdW5jdGlvbiIhPT10eXBlJiYhalF1ZXJ5LmlzV2luZG93KG9iaikmJigiYXJyYXkiPT09dHlwZXx8MD09PWxlbmd0aHx8Im51bWJlciI9PXR5cGVvZiBsZW5ndGgmJmxlbmd0aD4wJiZsZW5ndGgtMSBpbiBvYmopfWZ1bmN0aW9uIHdpbm5vdyhlbGVtZW50cyxxdWFsaWZpZXIsbm90KXtpZihqUXVlcnkuaXNGdW5jdGlvbihxdWFsaWZpZXIpKXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cyxmdW5jdGlvbihlbGVtLGkpe3JldHVybiEhcXVhbGlmaWVyLmNhbGwoZWxlbSxpLGVsZW0pIT09bm90fSk7aWYocXVhbGlmaWVyLm5vZGVUeXBlKXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cyxmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbT09PXF1YWxpZmllciE9PW5vdH0pO2lmKCJzdHJpbmciPT10eXBlb2YgcXVhbGlmaWVyKXtpZihyaXNTaW1wbGUudGVzdChxdWFsaWZpZXIpKXJldHVybiBqUXVlcnkuZmlsdGVyKHF1YWxpZmllcixlbGVtZW50cyxub3QpO3F1YWxpZmllcj1qUXVlcnkuZmlsdGVyKHF1YWxpZmllcixlbGVtZW50cyl9cmV0dXJuIGpRdWVyeS5ncmVwKGVsZW1lbnRzLGZ1bmN0aW9uKGVsZW0pe3JldHVybiBqUXVlcnkuaW5BcnJheShlbGVtLHF1YWxpZmllcik+LTEhPT1ub3R9KX1mdW5jdGlvbiBzaWJsaW5nKGN1cixkaXIpe2RvIGN1cj1jdXJbZGlyXTt3aGlsZShjdXImJjEhPT1jdXIubm9kZVR5cGUpO3JldHVybiBjdXJ9ZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyhvcHRpb25zKXt2YXIgb2JqZWN0PXt9O3JldHVybiBqUXVlcnkuZWFjaChvcHRpb25zLm1hdGNoKHJub3R3aGl0ZSl8fFtdLGZ1bmN0aW9uKF8sZmxhZyl7b2JqZWN0W2ZsYWddPSEwfSksb2JqZWN0fWZ1bmN0aW9uIGRldGFjaCgpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXI/KGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGNvbXBsZXRlZCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLGNvbXBsZXRlZCkpOihkb2N1bWVudC5kZXRhY2hFdmVudCgib25yZWFkeXN0YXRlY2hhbmdlIixjb21wbGV0ZWQpLHdpbmRvdy5kZXRhY2hFdmVudCgib25sb2FkIixjb21wbGV0ZWQpKX1mdW5jdGlvbiBjb21wbGV0ZWQoKXsoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcnx8ImxvYWQiPT09d2luZG93LmV2ZW50LnR5cGV8fCJjb21wbGV0ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlKSYmKGRldGFjaCgpLGpRdWVyeS5yZWFkeSgpKX1mdW5jdGlvbiBkYXRhQXR0cihlbGVtLGtleSxkYXRhKXtpZih2b2lkIDA9PT1kYXRhJiYxPT09ZWxlbS5ub2RlVHlwZSl7dmFyIG5hbWU9ImRhdGEtIitrZXkucmVwbGFjZShybXVsdGlEYXNoLCItJDEiKS50b0xvd2VyQ2FzZSgpO2lmKGRhdGE9ZWxlbS5nZXRBdHRyaWJ1dGUobmFtZSksInN0cmluZyI9PXR5cGVvZiBkYXRhKXt0cnl7ZGF0YT0idHJ1ZSI9PT1kYXRhfHwiZmFsc2UiIT09ZGF0YSYmKCJudWxsIj09PWRhdGE/bnVsbDorZGF0YSsiIj09PWRhdGE/K2RhdGE6cmJyYWNlLnRlc3QoZGF0YSk/alF1ZXJ5LnBhcnNlSlNPTihkYXRhKTpkYXRhKX1jYXRjaChlKXt9alF1ZXJ5LmRhdGEoZWxlbSxrZXksZGF0YSl9ZWxzZSBkYXRhPXZvaWQgMH1yZXR1cm4gZGF0YX1mdW5jdGlvbiBpc0VtcHR5RGF0YU9iamVjdChvYmope3ZhciBuYW1lO2ZvcihuYW1lIGluIG9iailpZigoImRhdGEiIT09bmFtZXx8IWpRdWVyeS5pc0VtcHR5T2JqZWN0KG9ialtuYW1lXSkpJiYidG9KU09OIiE9PW5hbWUpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gaW50ZXJuYWxEYXRhKGVsZW0sbmFtZSxkYXRhLHB2dCl7aWYoYWNjZXB0RGF0YShlbGVtKSl7dmFyIHJldCx0aGlzQ2FjaGUsaW50ZXJuYWxLZXk9alF1ZXJ5LmV4cGFuZG8saXNOb2RlPWVsZW0ubm9kZVR5cGUsY2FjaGU9aXNOb2RlP2pRdWVyeS5jYWNoZTplbGVtLGlkPWlzTm9kZT9lbGVtW2ludGVybmFsS2V5XTplbGVtW2ludGVybmFsS2V5XSYmaW50ZXJuYWxLZXk7aWYoaWQmJmNhY2hlW2lkXSYmKHB2dHx8Y2FjaGVbaWRdLmRhdGEpfHx2b2lkIDAhPT1kYXRhfHwic3RyaW5nIiE9dHlwZW9mIG5hbWUpcmV0dXJuIGlkfHwoaWQ9aXNOb2RlP2VsZW1baW50ZXJuYWxLZXldPWRlbGV0ZWRJZHMucG9wKCl8fGpRdWVyeS5ndWlkKys6aW50ZXJuYWxLZXkpLGNhY2hlW2lkXXx8KGNhY2hlW2lkXT1pc05vZGU/e306e3RvSlNPTjpqUXVlcnkubm9vcH0pLCJvYmplY3QiIT10eXBlb2YgbmFtZSYmImZ1bmN0aW9uIiE9dHlwZW9mIG5hbWV8fChwdnQ/Y2FjaGVbaWRdPWpRdWVyeS5leHRlbmQoY2FjaGVbaWRdLG5hbWUpOmNhY2hlW2lkXS5kYXRhPWpRdWVyeS5leHRlbmQoY2FjaGVbaWRdLmRhdGEsbmFtZSkpLHRoaXNDYWNoZT1jYWNoZVtpZF0scHZ0fHwodGhpc0NhY2hlLmRhdGF8fCh0aGlzQ2FjaGUuZGF0YT17fSksdGhpc0NhY2hlPXRoaXNDYWNoZS5kYXRhKSx2b2lkIDAhPT1kYXRhJiYodGhpc0NhY2hlW2pRdWVyeS5jYW1lbENhc2UobmFtZSldPWRhdGEpLCJzdHJpbmciPT10eXBlb2YgbmFtZT8ocmV0PXRoaXNDYWNoZVtuYW1lXSxudWxsPT1yZXQmJihyZXQ9dGhpc0NhY2hlW2pRdWVyeS5jYW1lbENhc2UobmFtZSldKSk6cmV0PXRoaXNDYWNoZSxyZXR9fWZ1bmN0aW9uIGludGVybmFsUmVtb3ZlRGF0YShlbGVtLG5hbWUscHZ0KXtpZihhY2NlcHREYXRhKGVsZW0pKXt2YXIgdGhpc0NhY2hlLGksaXNOb2RlPWVsZW0ubm9kZVR5cGUsY2FjaGU9aXNOb2RlP2pRdWVyeS5jYWNoZTplbGVtLGlkPWlzTm9kZT9lbGVtW2pRdWVyeS5leHBhbmRvXTpqUXVlcnkuZXhwYW5kbztpZihjYWNoZVtpZF0pe2lmKG5hbWUmJih0aGlzQ2FjaGU9cHZ0P2NhY2hlW2lkXTpjYWNoZVtpZF0uZGF0YSkpe2pRdWVyeS5pc0FycmF5KG5hbWUpP25hbWU9bmFtZS5jb25jYXQoalF1ZXJ5Lm1hcChuYW1lLGpRdWVyeS5jYW1lbENhc2UpKTpuYW1lIGluIHRoaXNDYWNoZT9uYW1lPVtuYW1lXToobmFtZT1qUXVlcnkuY2FtZWxDYXNlKG5hbWUpLG5hbWU9bmFtZSBpbiB0aGlzQ2FjaGU/W25hbWVdOm5hbWUuc3BsaXQoIiAiKSksaT1uYW1lLmxlbmd0aDtmb3IoO2ktLTspZGVsZXRlIHRoaXNDYWNoZVtuYW1lW2ldXTtpZihwdnQ/IWlzRW1wdHlEYXRhT2JqZWN0KHRoaXNDYWNoZSk6IWpRdWVyeS5pc0VtcHR5T2JqZWN0KHRoaXNDYWNoZSkpcmV0dXJufShwdnR8fChkZWxldGUgY2FjaGVbaWRdLmRhdGEsaXNFbXB0eURhdGFPYmplY3QoY2FjaGVbaWRdKSkpJiYoaXNOb2RlP2pRdWVyeS5jbGVhbkRhdGEoW2VsZW1dLCEwKTpzdXBwb3J0LmRlbGV0ZUV4cGFuZG98fGNhY2hlIT1jYWNoZS53aW5kb3c/ZGVsZXRlIGNhY2hlW2lkXTpjYWNoZVtpZF09dm9pZCAwKX19fWZ1bmN0aW9uIGFkanVzdENTUyhlbGVtLHByb3AsdmFsdWVQYXJ0cyx0d2Vlbil7dmFyIGFkanVzdGVkLHNjYWxlPTEsbWF4SXRlcmF0aW9ucz0yMCxjdXJyZW50VmFsdWU9dHdlZW4/ZnVuY3Rpb24oKXtyZXR1cm4gdHdlZW4uY3VyKCl9OmZ1bmN0aW9uKCl7cmV0dXJuIGpRdWVyeS5jc3MoZWxlbSxwcm9wLCIiKX0saW5pdGlhbD1jdXJyZW50VmFsdWUoKSx1bml0PXZhbHVlUGFydHMmJnZhbHVlUGFydHNbM118fChqUXVlcnkuY3NzTnVtYmVyW3Byb3BdPyIiOiJweCIpLGluaXRpYWxJblVuaXQ9KGpRdWVyeS5jc3NOdW1iZXJbcHJvcF18fCJweCIhPT11bml0JiYraW5pdGlhbCkmJnJjc3NOdW0uZXhlYyhqUXVlcnkuY3NzKGVsZW0scHJvcCkpO2lmKGluaXRpYWxJblVuaXQmJmluaXRpYWxJblVuaXRbM10hPT11bml0KXt1bml0PXVuaXR8fGluaXRpYWxJblVuaXRbM10sdmFsdWVQYXJ0cz12YWx1ZVBhcnRzfHxbXSxpbml0aWFsSW5Vbml0PStpbml0aWFsfHwxO2RvIHNjYWxlPXNjYWxlfHwiLjUiLGluaXRpYWxJblVuaXQvPXNjYWxlLGpRdWVyeS5zdHlsZShlbGVtLHByb3AsaW5pdGlhbEluVW5pdCt1bml0KTt3aGlsZShzY2FsZSE9PShzY2FsZT1jdXJyZW50VmFsdWUoKS9pbml0aWFsKSYmMSE9PXNjYWxlJiYtLW1heEl0ZXJhdGlvbnMpfXJldHVybiB2YWx1ZVBhcnRzJiYoaW5pdGlhbEluVW5pdD0raW5pdGlhbEluVW5pdHx8K2luaXRpYWx8fDAsYWRqdXN0ZWQ9dmFsdWVQYXJ0c1sxXT9pbml0aWFsSW5Vbml0Kyh2YWx1ZVBhcnRzWzFdKzEpKnZhbHVlUGFydHNbMl06K3ZhbHVlUGFydHNbMl0sdHdlZW4mJih0d2Vlbi51bml0PXVuaXQsdHdlZW4uc3RhcnQ9aW5pdGlhbEluVW5pdCx0d2Vlbi5lbmQ9YWRqdXN0ZWQpKSxhZGp1c3RlZH1mdW5jdGlvbiBjcmVhdGVTYWZlRnJhZ21lbnQoZG9jdW1lbnQpe3ZhciBsaXN0PW5vZGVOYW1lcy5zcGxpdCgifCIpLHNhZmVGcmFnPWRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtpZihzYWZlRnJhZy5jcmVhdGVFbGVtZW50KWZvcig7bGlzdC5sZW5ndGg7KXNhZmVGcmFnLmNyZWF0ZUVsZW1lbnQobGlzdC5wb3AoKSk7cmV0dXJuIHNhZmVGcmFnfWZ1bmN0aW9uIGdldEFsbChjb250ZXh0LHRhZyl7dmFyIGVsZW1zLGVsZW0saT0wLGZvdW5kPSJ1bmRlZmluZWQiIT10eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZT9jb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ3x8IioiKToidW5kZWZpbmVkIiE9dHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbD9jb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwodGFnfHwiKiIpOnZvaWQgMDtpZighZm91bmQpZm9yKGZvdW5kPVtdLGVsZW1zPWNvbnRleHQuY2hpbGROb2Rlc3x8Y29udGV4dDtudWxsIT0oZWxlbT1lbGVtc1tpXSk=", "base64"));
  res.write(new Buffer("O2krKykhdGFnfHxqUXVlcnkubm9kZU5hbWUoZWxlbSx0YWcpP2ZvdW5kLnB1c2goZWxlbSk6alF1ZXJ5Lm1lcmdlKGZvdW5kLGdldEFsbChlbGVtLHRhZykpO3JldHVybiB2b2lkIDA9PT10YWd8fHRhZyYmalF1ZXJ5Lm5vZGVOYW1lKGNvbnRleHQsdGFnKT9qUXVlcnkubWVyZ2UoW2NvbnRleHRdLGZvdW5kKTpmb3VuZH1mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKGVsZW1zLHJlZkVsZW1lbnRzKXtmb3IodmFyIGVsZW0saT0wO251bGwhPShlbGVtPWVsZW1zW2ldKTtpKyspalF1ZXJ5Ll9kYXRhKGVsZW0sImdsb2JhbEV2YWwiLCFyZWZFbGVtZW50c3x8alF1ZXJ5Ll9kYXRhKHJlZkVsZW1lbnRzW2ldLCJnbG9iYWxFdmFsIikpfWZ1bmN0aW9uIGZpeERlZmF1bHRDaGVja2VkKGVsZW0pe3JjaGVja2FibGVUeXBlLnRlc3QoZWxlbS50eXBlKSYmKGVsZW0uZGVmYXVsdENoZWNrZWQ9ZWxlbS5jaGVja2VkKX1mdW5jdGlvbiBidWlsZEZyYWdtZW50KGVsZW1zLGNvbnRleHQsc2NyaXB0cyxzZWxlY3Rpb24saWdub3JlZCl7Zm9yKHZhciBqLGVsZW0sY29udGFpbnMsdG1wLHRhZyx0Ym9keSx3cmFwLGw9ZWxlbXMubGVuZ3RoLHNhZmU9Y3JlYXRlU2FmZUZyYWdtZW50KGNvbnRleHQpLG5vZGVzPVtdLGk9MDtpPGw7aSsrKWlmKGVsZW09ZWxlbXNbaV0sZWxlbXx8MD09PWVsZW0paWYoIm9iamVjdCI9PT1qUXVlcnkudHlwZShlbGVtKSlqUXVlcnkubWVyZ2Uobm9kZXMsZWxlbS5ub2RlVHlwZT9bZWxlbV06ZWxlbSk7ZWxzZSBpZihyaHRtbC50ZXN0KGVsZW0pKXtmb3IodG1wPXRtcHx8c2FmZS5hcHBlbmRDaGlsZChjb250ZXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpKSx0YWc9KHJ0YWdOYW1lLmV4ZWMoZWxlbSl8fFsiIiwiIl0pWzFdLnRvTG93ZXJDYXNlKCksd3JhcD13cmFwTWFwW3RhZ118fHdyYXBNYXAuX2RlZmF1bHQsdG1wLmlubmVySFRNTD13cmFwWzFdK2pRdWVyeS5odG1sUHJlZmlsdGVyKGVsZW0pK3dyYXBbMl0saj13cmFwWzBdO2otLTspdG1wPXRtcC5sYXN0Q2hpbGQ7aWYoIXN1cHBvcnQubGVhZGluZ1doaXRlc3BhY2UmJnJsZWFkaW5nV2hpdGVzcGFjZS50ZXN0KGVsZW0pJiZub2Rlcy5wdXNoKGNvbnRleHQuY3JlYXRlVGV4dE5vZGUocmxlYWRpbmdXaGl0ZXNwYWNlLmV4ZWMoZWxlbSlbMF0pKSwhc3VwcG9ydC50Ym9keSlmb3IoZWxlbT0idGFibGUiIT09dGFnfHxydGJvZHkudGVzdChlbGVtKT8iPHRhYmxlPiIhPT13cmFwWzFdfHxydGJvZHkudGVzdChlbGVtKT8wOnRtcDp0bXAuZmlyc3RDaGlsZCxqPWVsZW0mJmVsZW0uY2hpbGROb2Rlcy5sZW5ndGg7ai0tOylqUXVlcnkubm9kZU5hbWUodGJvZHk9ZWxlbS5jaGlsZE5vZGVzW2pdLCJ0Ym9keSIpJiYhdGJvZHkuY2hpbGROb2Rlcy5sZW5ndGgmJmVsZW0ucmVtb3ZlQ2hpbGQodGJvZHkpO2ZvcihqUXVlcnkubWVyZ2Uobm9kZXMsdG1wLmNoaWxkTm9kZXMpLHRtcC50ZXh0Q29udGVudD0iIjt0bXAuZmlyc3RDaGlsZDspdG1wLnJlbW92ZUNoaWxkKHRtcC5maXJzdENoaWxkKTt0bXA9c2FmZS5sYXN0Q2hpbGR9ZWxzZSBub2Rlcy5wdXNoKGNvbnRleHQuY3JlYXRlVGV4dE5vZGUoZWxlbSkpO2Zvcih0bXAmJnNhZmUucmVtb3ZlQ2hpbGQodG1wKSxzdXBwb3J0LmFwcGVuZENoZWNrZWR8fGpRdWVyeS5ncmVwKGdldEFsbChub2RlcywiaW5wdXQiKSxmaXhEZWZhdWx0Q2hlY2tlZCksaT0wO2VsZW09bm9kZXNbaSsrXTspaWYoc2VsZWN0aW9uJiZqUXVlcnkuaW5BcnJheShlbGVtLHNlbGVjdGlvbik+LTEpaWdub3JlZCYmaWdub3JlZC5wdXNoKGVsZW0pO2Vsc2UgaWYoY29udGFpbnM9alF1ZXJ5LmNvbnRhaW5zKGVsZW0ub3duZXJEb2N1bWVudCxlbGVtKSx0bXA9Z2V0QWxsKHNhZmUuYXBwZW5kQ2hpbGQoZWxlbSksInNjcmlwdCIpLGNvbnRhaW5zJiZzZXRHbG9iYWxFdmFsKHRtcCksc2NyaXB0cylmb3Ioaj0wO2VsZW09dG1wW2orK107KXJzY3JpcHRUeXBlLnRlc3QoZWxlbS50eXBlfHwiIikmJnNjcmlwdHMucHVzaChlbGVtKTtyZXR1cm4gdG1wPW51bGwsc2FmZX1mdW5jdGlvbiByZXR1cm5UcnVlKCl7cmV0dXJuITB9ZnVuY3Rpb24gcmV0dXJuRmFsc2UoKXtyZXR1cm4hMX1mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpe3RyeXtyZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudH1jYXRjaChlcnIpe319ZnVuY3Rpb24gb24oZWxlbSx0eXBlcyxzZWxlY3RvcixkYXRhLGZuLG9uZSl7dmFyIG9yaWdGbix0eXBlO2lmKCJvYmplY3QiPT10eXBlb2YgdHlwZXMpeyJzdHJpbmciIT10eXBlb2Ygc2VsZWN0b3ImJihkYXRhPWRhdGF8fHNlbGVjdG9yLHNlbGVjdG9yPXZvaWQgMCk7Zm9yKHR5cGUgaW4gdHlwZXMpb24oZWxlbSx0eXBlLHNlbGVjdG9yLGRhdGEsdHlwZXNbdHlwZV0sb25lKTtyZXR1cm4gZWxlbX1pZihudWxsPT1kYXRhJiZudWxsPT1mbj8oZm49c2VsZWN0b3IsZGF0YT1zZWxlY3Rvcj12b2lkIDApOm51bGw9PWZuJiYoInN0cmluZyI9PXR5cGVvZiBzZWxlY3Rvcj8oZm49ZGF0YSxkYXRhPXZvaWQgMCk6KGZuPWRhdGEsZGF0YT1zZWxlY3RvcixzZWxlY3Rvcj12b2lkIDApKSxmbj09PSExKWZuPXJldHVybkZhbHNlO2Vsc2UgaWYoIWZuKXJldHVybiBlbGVtO3JldHVybiAxPT09b25lJiYob3JpZ0ZuPWZuLGZuPWZ1bmN0aW9uKGV2ZW50KXtyZXR1cm4galF1ZXJ5KCkub2ZmKGV2ZW50KSxvcmlnRm4uYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmbi5ndWlkPW9yaWdGbi5ndWlkfHwob3JpZ0ZuLmd1aWQ9alF1ZXJ5Lmd1aWQrKykpLGVsZW0uZWFjaChmdW5jdGlvbigpe2pRdWVyeS5ldmVudC5hZGQodGhpcyx0eXBlcyxmbixkYXRhLHNlbGVjdG9yKX0pfWZ1bmN0aW9uIG1hbmlwdWxhdGlvblRhcmdldChlbGVtLGNvbnRlbnQpe3JldHVybiBqUXVlcnkubm9kZU5hbWUoZWxlbSwidGFibGUiKSYmalF1ZXJ5Lm5vZGVOYW1lKDExIT09Y29udGVudC5ub2RlVHlwZT9jb250ZW50OmNvbnRlbnQuZmlyc3RDaGlsZCwidHIiKT9lbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0Ym9keSIpWzBdfHxlbGVtLmFwcGVuZENoaWxkKGVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0Ym9keSIpKTplbGVtfWZ1bmN0aW9uIGRpc2FibGVTY3JpcHQoZWxlbSl7cmV0dXJuIGVsZW0udHlwZT0obnVsbCE9PWpRdWVyeS5maW5kLmF0dHIoZWxlbSwidHlwZSIpKSsiLyIrZWxlbS50eXBlLGVsZW19ZnVuY3Rpb24gcmVzdG9yZVNjcmlwdChlbGVtKXt2YXIgbWF0Y2g9cnNjcmlwdFR5cGVNYXNrZWQuZXhlYyhlbGVtLnR5cGUpO3JldHVybiBtYXRjaD9lbGVtLnR5cGU9bWF0Y2hbMV06ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoInR5cGUiKSxlbGVtfWZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KHNyYyxkZXN0KXtpZigxPT09ZGVzdC5ub2RlVHlwZSYmalF1ZXJ5Lmhhc0RhdGEoc3JjKSl7dmFyIHR5cGUsaSxsLG9sZERhdGE9alF1ZXJ5Ll9kYXRhKHNyYyksY3VyRGF0YT1qUXVlcnkuX2RhdGEoZGVzdCxvbGREYXRhKSxldmVudHM9b2xkRGF0YS5ldmVudHM7aWYoZXZlbnRzKXtkZWxldGUgY3VyRGF0YS5oYW5kbGUsY3VyRGF0YS5ldmVudHM9e307Zm9yKHR5cGUgaW4gZXZlbnRzKWZvcihpPTAsbD1ldmVudHNbdHlwZV0ubGVuZ3RoO2k8bDtpKyspalF1ZXJ5LmV2ZW50LmFkZChkZXN0LHR5cGUsZXZlbnRzW3R5cGVdW2ldKX1jdXJEYXRhLmRhdGEmJihjdXJEYXRhLmRhdGE9alF1ZXJ5LmV4dGVuZCh7fSxjdXJEYXRhLmRhdGEpKX19ZnVuY3Rpb24gZml4Q2xvbmVOb2RlSXNzdWVzKHNyYyxkZXN0KXt2YXIgbm9kZU5hbWUsZSxkYXRhO2lmKDE9PT1kZXN0Lm5vZGVUeXBlKXtpZihub2RlTmFtZT1kZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksIXN1cHBvcnQubm9DbG9uZUV2ZW50JiZkZXN0W2pRdWVyeS5leHBhbmRvXSl7ZGF0YT1qUXVlcnkuX2RhdGEoZGVzdCk7Zm9yKGUgaW4gZGF0YS5ldmVudHMpalF1ZXJ5LnJlbW92ZUV2ZW50KGRlc3QsZSxkYXRhLmhhbmRsZSk7ZGVzdC5yZW1vdmVBdHRyaWJ1dGUoalF1ZXJ5LmV4cGFuZG8pfSJzY3JpcHQiPT09bm9kZU5hbWUmJmRlc3QudGV4dCE9PXNyYy50ZXh0PyhkaXNhYmxlU2NyaXB0KGRlc3QpLnRleHQ9c3JjLnRleHQscmVzdG9yZVNjcmlwdChkZXN0KSk6Im9iamVjdCI9PT1ub2RlTmFtZT8oZGVzdC5wYXJlbnROb2RlJiYoZGVzdC5vdXRlckhUTUw9c3JjLm91dGVySFRNTCksc3VwcG9ydC5odG1sNUNsb25lJiZzcmMuaW5uZXJIVE1MJiYhalF1ZXJ5LnRyaW0oZGVzdC5pbm5lckhUTUwpJiYoZGVzdC5pbm5lckhUTUw9c3JjLmlubmVySFRNTCkpOiJpbnB1dCI9PT1ub2RlTmFtZSYmcmNoZWNrYWJsZVR5cGUudGVzdChzcmMudHlwZSk/KGRlc3QuZGVmYXVsdENoZWNrZWQ9ZGVzdC5jaGVja2VkPXNyYy5jaGVja2VkLGRlc3QudmFsdWUhPT1zcmMudmFsdWUmJihkZXN0LnZhbHVlPXNyYy52YWx1ZSkpOiJvcHRpb24iPT09bm9kZU5hbWU/ZGVzdC5kZWZhdWx0U2VsZWN0ZWQ9ZGVzdC5zZWxlY3RlZD1zcmMuZGVmYXVsdFNlbGVjdGVkOiJpbnB1dCIhPT1ub2RlTmFtZSYmInRleHRhcmVhIiE9PW5vZGVOYW1lfHwoZGVzdC5kZWZhdWx0VmFsdWU9c3JjLmRlZmF1bHRWYWx1ZSl9fWZ1bmN0aW9uIGRvbU1hbmlwKGNvbGxlY3Rpb24sYXJncyxjYWxsYmFjayxpZ25vcmVkKXthcmdzPWNvbmNhdC5hcHBseShbXSxhcmdzKTt2YXIgZmlyc3Qsbm9kZSxoYXNTY3JpcHRzLHNjcmlwdHMsZG9jLGZyYWdtZW50LGk9MCxsPWNvbGxlY3Rpb24ubGVuZ3RoLGlOb0Nsb25lPWwtMSx2YWx1ZT1hcmdzWzBdLGlzRnVuY3Rpb249alF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpO2lmKGlzRnVuY3Rpb258fGw+MSYmInN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmIXN1cHBvcnQuY2hlY2tDbG9uZSYmcmNoZWNrZWQudGVzdCh2YWx1ZSkpcmV0dXJuIGNvbGxlY3Rpb24uZWFjaChmdW5jdGlvbihpbmRleCl7dmFyIHNlbGY9Y29sbGVjdGlvbi5lcShpbmRleCk7aXNGdW5jdGlvbiYmKGFyZ3NbMF09dmFsdWUuY2FsbCh0aGlzLGluZGV4LHNlbGYuaHRtbCgpKSksZG9tTWFuaXAoc2VsZixhcmdzLGNhbGxiYWNrLGlnbm9yZWQpfSk7aWYobCYmKGZyYWdtZW50PWJ1aWxkRnJhZ21lbnQoYXJncyxjb2xsZWN0aW9uWzBdLm93bmVyRG9jdW1lbnQsITEsY29sbGVjdGlvbixpZ25vcmVkKSxmaXJzdD1mcmFnbWVudC5maXJzdENoaWxkLDE9PT1mcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCYmKGZyYWdtZW50PWZpcnN0KSxmaXJzdHx8aWdub3JlZCkpe2ZvcihzY3JpcHRzPWpRdWVyeS5tYXAoZ2V0QWxsKGZyYWdtZW50LCJzY3JpcHQiKSxkaXNhYmxlU2NyaXB0KSxoYXNTY3JpcHRzPXNjcmlwdHMubGVuZ3RoO2k8bDtpKyspbm9kZT1mcmFnbWVudCxpIT09aU5vQ2xvbmUmJihub2RlPWpRdWVyeS5jbG9uZShub2RlLCEwLCEwKSxoYXNTY3JpcHRzJiZqUXVlcnkubWVyZ2Uoc2NyaXB0cyxnZXRBbGwobm9kZSwic2NyaXB0IikpKSxjYWxsYmFjay5jYWxsKGNvbGxlY3Rpb25baV0sbm9kZSxpKTtpZihoYXNTY3JpcHRzKWZvcihkb2M9c2NyaXB0c1tzY3JpcHRzLmxlbmd0aC0xXS5vd25lckRvY3VtZW50LGpRdWVyeS5tYXAoc2NyaXB0cyxyZXN0b3JlU2NyaXB0KSxpPTA7aTxoYXNTY3JpcHRzO2krKylub2RlPXNjcmlwdHNbaV0scnNjcmlwdFR5cGUudGVzdChub2RlLnR5cGV8fCIiKSYmIWpRdWVyeS5fZGF0YShub2RlLCJnbG9iYWxFdmFsIikmJmpRdWVyeS5jb250YWlucyhkb2Msbm9kZSkmJihub2RlLnNyYz9qUXVlcnkuX2V2YWxVcmwmJmpRdWVyeS5fZXZhbFVybChub2RlLnNyYyk6alF1ZXJ5Lmdsb2JhbEV2YWwoKG5vZGUudGV4dHx8bm9kZS50ZXh0Q29udGVudHx8bm9kZS5pbm5lckhUTUx8fCIiKS5yZXBsYWNlKHJjbGVhblNjcmlwdCwiIik=", "base64"));
  res.write(new Buffer("KSk7ZnJhZ21lbnQ9Zmlyc3Q9bnVsbH1yZXR1cm4gY29sbGVjdGlvbn1mdW5jdGlvbiByZW1vdmUoZWxlbSxzZWxlY3RvcixrZWVwRGF0YSl7Zm9yKHZhciBub2RlLGVsZW1zPXNlbGVjdG9yP2pRdWVyeS5maWx0ZXIoc2VsZWN0b3IsZWxlbSk6ZWxlbSxpPTA7bnVsbCE9KG5vZGU9ZWxlbXNbaV0pO2krKylrZWVwRGF0YXx8MSE9PW5vZGUubm9kZVR5cGV8fGpRdWVyeS5jbGVhbkRhdGEoZ2V0QWxsKG5vZGUpKSxub2RlLnBhcmVudE5vZGUmJihrZWVwRGF0YSYmalF1ZXJ5LmNvbnRhaW5zKG5vZGUub3duZXJEb2N1bWVudCxub2RlKSYmc2V0R2xvYmFsRXZhbChnZXRBbGwobm9kZSwic2NyaXB0IikpLG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKSk7cmV0dXJuIGVsZW19ZnVuY3Rpb24gYWN0dWFsRGlzcGxheShuYW1lLGRvYyl7dmFyIGVsZW09alF1ZXJ5KGRvYy5jcmVhdGVFbGVtZW50KG5hbWUpKS5hcHBlbmRUbyhkb2MuYm9keSksZGlzcGxheT1qUXVlcnkuY3NzKGVsZW1bMF0sImRpc3BsYXkiKTtyZXR1cm4gZWxlbS5kZXRhY2goKSxkaXNwbGF5fWZ1bmN0aW9uIGRlZmF1bHREaXNwbGF5KG5vZGVOYW1lKXt2YXIgZG9jPWRvY3VtZW50LGRpc3BsYXk9ZWxlbWRpc3BsYXlbbm9kZU5hbWVdO3JldHVybiBkaXNwbGF5fHwoZGlzcGxheT1hY3R1YWxEaXNwbGF5KG5vZGVOYW1lLGRvYyksIm5vbmUiIT09ZGlzcGxheSYmZGlzcGxheXx8KGlmcmFtZT0oaWZyYW1lfHxqUXVlcnkoIjxpZnJhbWUgZnJhbWVib3JkZXI9JzAnIHdpZHRoPScwJyBoZWlnaHQ9JzAnLz4iKSkuYXBwZW5kVG8oZG9jLmRvY3VtZW50RWxlbWVudCksZG9jPShpZnJhbWVbMF0uY29udGVudFdpbmRvd3x8aWZyYW1lWzBdLmNvbnRlbnREb2N1bWVudCkuZG9jdW1lbnQsZG9jLndyaXRlKCksZG9jLmNsb3NlKCksZGlzcGxheT1hY3R1YWxEaXNwbGF5KG5vZGVOYW1lLGRvYyksaWZyYW1lLmRldGFjaCgpKSxlbGVtZGlzcGxheVtub2RlTmFtZV09ZGlzcGxheSksZGlzcGxheX1mdW5jdGlvbiBhZGRHZXRIb29rSWYoY29uZGl0aW9uRm4saG9va0ZuKXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGNvbmRpdGlvbkZuKCk/dm9pZCBkZWxldGUgdGhpcy5nZXQ6KHRoaXMuZ2V0PWhvb2tGbikuYXBwbHkodGhpcyxhcmd1bWVudHMpfX19ZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUobmFtZSl7aWYobmFtZSBpbiBlbXB0eVN0eWxlKXJldHVybiBuYW1lO2Zvcih2YXIgY2FwTmFtZT1uYW1lLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK25hbWUuc2xpY2UoMSksaT1jc3NQcmVmaXhlcy5sZW5ndGg7aS0tOylpZihuYW1lPWNzc1ByZWZpeGVzW2ldK2NhcE5hbWUsbmFtZSBpbiBlbXB0eVN0eWxlKXJldHVybiBuYW1lfWZ1bmN0aW9uIHNob3dIaWRlKGVsZW1lbnRzLHNob3cpe2Zvcih2YXIgZGlzcGxheSxlbGVtLGhpZGRlbix2YWx1ZXM9W10saW5kZXg9MCxsZW5ndGg9ZWxlbWVudHMubGVuZ3RoO2luZGV4PGxlbmd0aDtpbmRleCsrKWVsZW09ZWxlbWVudHNbaW5kZXhdLGVsZW0uc3R5bGUmJih2YWx1ZXNbaW5kZXhdPWpRdWVyeS5fZGF0YShlbGVtLCJvbGRkaXNwbGF5IiksZGlzcGxheT1lbGVtLnN0eWxlLmRpc3BsYXksc2hvdz8odmFsdWVzW2luZGV4XXx8Im5vbmUiIT09ZGlzcGxheXx8KGVsZW0uc3R5bGUuZGlzcGxheT0iIiksIiI9PT1lbGVtLnN0eWxlLmRpc3BsYXkmJmlzSGlkZGVuKGVsZW0pJiYodmFsdWVzW2luZGV4XT1qUXVlcnkuX2RhdGEoZWxlbSwib2xkZGlzcGxheSIsZGVmYXVsdERpc3BsYXkoZWxlbS5ub2RlTmFtZSkpKSk6KGhpZGRlbj1pc0hpZGRlbihlbGVtKSwoZGlzcGxheSYmIm5vbmUiIT09ZGlzcGxheXx8IWhpZGRlbikmJmpRdWVyeS5fZGF0YShlbGVtLCJvbGRkaXNwbGF5IixoaWRkZW4/ZGlzcGxheTpqUXVlcnkuY3NzKGVsZW0sImRpc3BsYXkiKSkpKTtmb3IoaW5kZXg9MDtpbmRleDxsZW5ndGg7aW5kZXgrKyllbGVtPWVsZW1lbnRzW2luZGV4XSxlbGVtLnN0eWxlJiYoc2hvdyYmIm5vbmUiIT09ZWxlbS5zdHlsZS5kaXNwbGF5JiYiIiE9PWVsZW0uc3R5bGUuZGlzcGxheXx8KGVsZW0uc3R5bGUuZGlzcGxheT1zaG93P3ZhbHVlc1tpbmRleF18fCIiOiJub25lIikpO3JldHVybiBlbGVtZW50c31mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlcihlbGVtLHZhbHVlLHN1YnRyYWN0KXt2YXIgbWF0Y2hlcz1ybnVtc3BsaXQuZXhlYyh2YWx1ZSk7cmV0dXJuIG1hdGNoZXM/TWF0aC5tYXgoMCxtYXRjaGVzWzFdLShzdWJ0cmFjdHx8MCkpKyhtYXRjaGVzWzJdfHwicHgiKTp2YWx1ZX1mdW5jdGlvbiBhdWdtZW50V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEsaXNCb3JkZXJCb3gsc3R5bGVzKXtmb3IodmFyIGk9ZXh0cmE9PT0oaXNCb3JkZXJCb3g/ImJvcmRlciI6ImNvbnRlbnQiKT80OiJ3aWR0aCI9PT1uYW1lPzE6MCx2YWw9MDtpPDQ7aSs9MikibWFyZ2luIj09PWV4dHJhJiYodmFsKz1qUXVlcnkuY3NzKGVsZW0sZXh0cmErY3NzRXhwYW5kW2ldLCEwLHN0eWxlcykpLGlzQm9yZGVyQm94PygiY29udGVudCI9PT1leHRyYSYmKHZhbC09alF1ZXJ5LmNzcyhlbGVtLCJwYWRkaW5nIitjc3NFeHBhbmRbaV0sITAsc3R5bGVzKSksIm1hcmdpbiIhPT1leHRyYSYmKHZhbC09alF1ZXJ5LmNzcyhlbGVtLCJib3JkZXIiK2Nzc0V4cGFuZFtpXSsiV2lkdGgiLCEwLHN0eWxlcykpKToodmFsKz1qUXVlcnkuY3NzKGVsZW0sInBhZGRpbmciK2Nzc0V4cGFuZFtpXSwhMCxzdHlsZXMpLCJwYWRkaW5nIiE9PWV4dHJhJiYodmFsKz1qUXVlcnkuY3NzKGVsZW0sImJvcmRlciIrY3NzRXhwYW5kW2ldKyJXaWR0aCIsITAsc3R5bGVzKSkpO3JldHVybiB2YWx9ZnVuY3Rpb24gZ2V0V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEpe3ZhciB2YWx1ZUlzQm9yZGVyQm94PSEwLHZhbD0id2lkdGgiPT09bmFtZT9lbGVtLg==", "base64"));
  res.write(new Buffer("b2Zmc2V0V2lkdGg6ZWxlbS5vZmZzZXRIZWlnaHQsc3R5bGVzPWdldFN0eWxlcyhlbGVtKSxpc0JvcmRlckJveD1zdXBwb3J0LmJveFNpemluZyYmImJvcmRlci1ib3giPT09alF1ZXJ5LmNzcyhlbGVtLCJib3hTaXppbmciLCExLHN0eWxlcyk7aWYodmFsPD0wfHxudWxsPT12YWwpe2lmKHZhbD1jdXJDU1MoZWxlbSxuYW1lLHN0eWxlcyksKHZhbDwwfHxudWxsPT12YWwpJiYodmFsPWVsZW0uc3R5bGVbbmFtZV0pLHJudW1ub25weC50ZXN0KHZhbCkpcmV0dXJuIHZhbDt2YWx1ZUlzQm9yZGVyQm94PWlzQm9yZGVyQm94JiYoc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpfHx2YWw9PT1lbGVtLnN0eWxlW25hbWVdKSx2YWw9cGFyc2VGbG9hdCh2YWwpfHwwfXJldHVybiB2YWwrYXVnbWVudFdpZHRoT3JIZWlnaHQoZWxlbSxuYW1lLGV4dHJhfHwoaXNCb3JkZXJCb3g/ImJvcmRlciI6ImNvbnRlbnQiKSx2YWx1ZUlzQm9yZGVyQm94LHN0eWxlcykrInB4In1mdW5jdGlvbiBUd2VlbihlbGVtLG9wdGlvbnMscHJvcCxlbmQsZWFzaW5nKXtyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KGVsZW0sb3B0aW9ucyxwcm9wLGVuZCxlYXNpbmcpfWZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCl7cmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZnhOb3c9dm9pZCAwfSksZnhOb3c9alF1ZXJ5Lm5vdygpfWZ1bmN0aW9uIGdlbkZ4KHR5cGUsaW5jbHVkZVdpZHRoKXt2YXIgd2hpY2gsYXR0cnM9e2hlaWdodDp0eXBlfSxpPTA7Zm9yKGluY2x1ZGVXaWR0aD1pbmNsdWRlV2lkdGg/MTowO2k8NDtpKz0yLWluY2x1ZGVXaWR0aCl3aGljaD1jc3NFeHBhbmRbaV0sYXR0cnNbIm1hcmdpbiIrd2hpY2hdPWF0dHJzWyJwYWRkaW5nIit3aGljaF09dHlwZTtyZXR1cm4gaW5jbHVkZVdpZHRoJiYoYXR0cnMub3BhY2l0eT1hdHRycy53aWR0aD10eXBlKSxhdHRyc31mdW5jdGlvbiBjcmVhdGVUd2Vlbih2YWx1ZSxwcm9wLGFuaW1hdGlvbil7Zm9yKHZhciB0d2Vlbixjb2xsZWN0aW9uPShBbmltYXRpb24udHdlZW5lcnNbcHJvcF18fFtdKS5jb25jYXQoQW5pbWF0aW9uLnR3ZWVuZXJzWyIqIl0pLGluZGV4PTAsbGVuZ3RoPWNvbGxlY3Rpb24ubGVuZ3RoO2luZGV4PGxlbmd0aDtpbmRleCsrKWlmKHR3ZWVuPWNvbGxlY3Rpb25baW5kZXhdLmNhbGwoYW5pbWF0aW9uLHByb3AsdmFsdWUpKXJldHVybiB0d2Vlbn1mdW5jdGlvbiBkZWZhdWx0UHJlZmlsdGVyKGVsZW0scHJvcHMsb3B0cyl7dmFyIHByb3AsdmFsdWUsdG9nZ2xlLHR3ZWVuLGhvb2tzLG9sZGZpcmUsZGlzcGxheSxjaGVja0Rpc3BsYXksYW5pbT10aGlzLG9yaWc9e30sc3R5bGU9ZWxlbS5zdHlsZSxoaWRkZW49ZWxlbS5ub2RlVHlwZSYmaXNIaWRkZW4oZWxlbSksZGF0YVNob3c9alF1ZXJ5Ll9kYXRhKGVsZW0sImZ4c2hvdyIpO29wdHMucXVldWV8fChob29rcz1qUXVlcnkuX3F1ZXVlSG9va3MoZWxlbSwiZngiKSxudWxsPT1ob29rcy51bnF1ZXVlZCYmKGhvb2tzLnVucXVldWVkPTAsb2xkZmlyZT1ob29rcy5lbXB0eS5maXJlLGhvb2tzLmVtcHR5LmZpcmU9ZnVuY3Rpb24oKXtob29rcy51bnF1ZXVlZHx8b2xkZmlyZSgpfSksaG9va3MudW5xdWV1ZWQrKyxhbmltLmFsd2F5cyhmdW5jdGlvbigpe2FuaW0uYWx3YXlzKGZ1bmN0aW9uKCl7aG9va3MudW5xdWV1ZWQtLSxqUXVlcnkucXVldWUoZWxlbSwiZngiKS5sZW5ndGh8fGhvb2tzLmVtcHR5LmZpcmUoKX0pfSkpLDE9PT1lbGVtLm5vZGVUeXBlJiYoImhlaWdodCJpbiBwcm9wc3x8IndpZHRoImluIHByb3BzKSYmKG9wdHMub3ZlcmZsb3c9W3N0eWxlLm92ZXJmbG93LHN0eWxlLm92ZXJmbG93WCxzdHlsZS5vdmVyZmxvd1ldLGRpc3BsYXk9alF1ZXJ5LmNzcyhlbGVtLCJkaXNwbGF5IiksY2hlY2tEaXNwbGF5PSJub25lIj09PWRpc3BsYXk/alF1ZXJ5Ll9kYXRhKGVsZW0sIm9sZGRpc3BsYXkiKXx8ZGVmYXVsdERpc3BsYXkoZWxlbS5ub2RlTmFtZSk6ZGlzcGxheSwiaW5saW5lIj09PWNoZWNrRGlzcGxheSYmIm5vbmUiPT09alF1ZXJ5LmNzcyhlbGVtLCJmbG9hdCIpJiYoc3VwcG9ydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0JiYiaW5saW5lIiE9PWRlZmF1bHREaXNwbGF5KGVsZW0ubm9kZU5hbWUpP3N0eWxlLnpvb209MTpzdHlsZS5kaXNwbGF5PSJpbmxpbmUtYmxvY2siKSksb3B0cy5vdmVyZmxvdyYmKHN0eWxlLm92ZXJmbG93PSJoaWRkZW4iLHN1cHBvcnQuc2hyaW5rV3JhcEJsb2NrcygpfHxhbmltLmFsd2F5cyhmdW5jdGlvbigpe3N0eWxlLm92ZXJmbG93PW9wdHMub3ZlcmZsb3dbMF0sc3R5bGUub3ZlcmZsb3dYPW9wdHMub3ZlcmZsb3dbMV0sc3R5bGUub3ZlcmZsb3dZPW9wdHMub3ZlcmZsb3dbMl19KSk7Zm9yKHByb3AgaW4gcHJvcHMpaWYodmFsdWU9cHJvcHNbcHJvcF0scmZ4dHlwZXMuZXhlYyh2YWx1ZSkpe2lmKGRlbGV0ZSBwcm9wc1twcm9wXSx0b2dnbGU9dG9nZ2xlfHwidG9nZ2xlIj09PXZhbHVlLHZhbHVlPT09KGhpZGRlbj8iaGlkZSI6InNob3ciKSl7aWYoInNob3ciIT09dmFsdWV8fCFkYXRhU2hvd3x8dm9pZCAwPT09ZGF0YVNob3dbcHJvcF0pY29udGludWU7aGlkZGVuPSEwfW9yaWdbcHJvcF09ZGF0YVNob3cmJmRhdGFTaG93W3Byb3BdfHxqUXVlcnkuc3R5bGUoZWxlbSxwcm9wKX1lbHNlIGRpc3BsYXk9dm9pZCAwO2lmKGpRdWVyeS5pc0VtcHR5T2JqZWN0KG9yaWcpKSJpbmxpbmUiPT09KCJub25lIj09PWRpc3BsYXk/ZGVmYXVsdERpc3BsYXkoZWxlbS5ub2RlTmFtZSk6ZGlzcGxheSkmJihzdHlsZS5kaXNwbGF5PWRpc3BsYXkpO2Vsc2V7ZGF0YVNob3c/ImhpZGRlbiJpbiBkYXRhU2hvdyYmKGhpZGRlbj1kYXRhU2hvdy5oaWRkZW4pOmRhdGFTaG93PWpRdWVyeS5fZGF0YShlbGVtLCJmeHNob3ciLHt9KSx0b2dnbGUmJihkYXRhU2hvdy5oaWRkZW49IWhpZGRlbiksaGlkZGVuP2pRdWVyeShlbGVtKS5zaG93KCk6YW5pbS5kb25lKGZ1bmN0aW9uKCl7alF1ZXJ5KGVsZW0pLmhpZGUoKX0pLGFuaW0uZG9uZShmdW5jdGlvbigpe3ZhciBwcm9wO2pRdWVyeS5fcmVtb3ZlRGF0YShlbGVtLCJmeHNob3ciKTtmb3IocHJvcCBpbiBvcmlnKWpRdWVyeS5zdHlsZShlbGVtLHByb3Asb3JpZ1twcm9wXSl9KTtmb3IocHJvcCBpbiBvcmlnKXR3ZWVuPWNyZWF0ZVR3ZWVuKGhpZGRlbj9kYXRhU2hvd1twcm9wXTowLHByb3AsYW5pbSkscHJvcCBpbiBkYXRhU2hvd3x8KGRhdGFTaG93W3Byb3BdPXR3ZWVuLnN0YXJ0LGhpZGRlbiYmKHR3ZWVuLmVuZD10d2Vlbi5zdGFydCx0d2Vlbi5zdGFydD0id2lkdGgiPT09cHJvcHx8ImhlaWdodCI9PT1wcm9wPzE6MCkpfX1mdW5jdGlvbiBwcm9wRmlsdGVyKHByb3BzLHNwZWNpYWxFYXNpbmcpe3ZhciBpbmRleCxuYW1lLGVhc2luZyx2YWx1ZSxob29rcztmb3IoaW5kZXggaW4gcHJvcHMpaWYobmFtZT1qUXVlcnkuY2FtZWxDYXNlKGluZGV4KSxlYXNpbmc9c3BlY2lhbEVhc2luZ1tuYW1lXSx2YWx1ZT1wcm9wc1tpbmRleF0salF1ZXJ5LmlzQXJyYXkodmFsdWUpJiYoZWFzaW5nPXZhbHVlWzFdLHZhbHVlPXByb3BzW2luZGV4XT12YWx1ZVswXSksaW5kZXghPT1uYW1lJiYocHJvcHNbbmFtZV09dmFsdWUsZGVsZXRlIHByb3BzW2luZGV4XSksaG9va3M9alF1ZXJ5LmNzc0hvb2tzW25hbWVdLGhvb2tzJiYiZXhwYW5kImluIGhvb2tzKXt2YWx1ZT1ob29rcy5leHBhbmQodmFsdWUpLGRlbGV0ZSBwcm9wc1tuYW1lXTtmb3IoaW5kZXggaW4gdmFsdWUpaW5kZXggaW4gcHJvcHN8fChwcm9wc1tpbmRleF09dmFsdWVbaW5kZXhdLHNwZWNpYWxFYXNpbmdbaW5kZXhdPWVhc2luZyl9ZWxzZSBzcGVjaWFsRWFzaW5nW25hbWVdPWVhc2luZ31mdW5jdGlvbiBBbmltYXRpb24oZWxlbSxwcm9wZXJ0aWVzLG9wdGlvbnMpe3ZhciByZXN1bHQsc3RvcHBlZCxpbmRleD0wLGxlbmd0aD1BbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsZGVmZXJyZWQ9alF1ZXJ5LkRlZmVycmVkKCkuYWx3YXlzKGZ1bmN0aW9uKCl7ZGVsZXRlIHRpY2suZWxlbX0pLHRpY2s9ZnVuY3Rpb24oKXtpZihzdG9wcGVkKXJldHVybiExO2Zvcih2YXIgY3VycmVudFRpbWU9ZnhOb3d8fGNyZWF0ZUZ4Tm93KCkscmVtYWluaW5nPU1hdGgubWF4KDAsYW5pbWF0aW9uLnN0YXJ0VGltZSthbmltYXRpb24uZHVyYXRpb24tY3VycmVudFRpbWUpLHRlbXA9cmVtYWluaW5nL2FuaW1hdGlvbi5kdXJhdGlvbnx8MCxwZXJjZW50PTEtdGVtcCxpbmRleD0wLGxlbmd0aD1hbmltYXRpb24udHdlZW5zLmxlbmd0aDtpbmRleDxsZW5ndGg7aW5kZXgrKylhbmltYXRpb24udHdlZW5zW2luZGV4XS5ydW4ocGVyY2VudCk7cmV0dXJuIGRlZmVycmVkLm5vdGlmeVdpdGgoZWxlbSxbYW5pbWF0aW9uLHBlcmNlbnQscmVtYWluaW5nXSkscGVyY2VudDwxJiZsZW5ndGg/cmVtYWluaW5nOihkZWZlcnJlZC5yZXNvbHZlV2l0aChlbGVtLFthbmltYXRpb25dKSwhMSl9LGFuaW1hdGlvbj1kZWZlcnJlZC5wcm9taXNlKHtlbGVtOmVsZW0scHJvcHM6alF1ZXJ5LmV4dGVuZCh7fSxwcm9wZXJ0aWVzKSxvcHRzOmpRdWVyeS5leHRlbmQoITAse3NwZWNpYWxFYXNpbmc6e30sZWFzaW5nOmpRdWVyeS5lYXNpbmcuX2RlZmF1bHR9LG9wdGlvbnMpLG9yaWdpbmFsUHJvcGVydGllczpwcm9wZXJ0aWVzLG9yaWdpbmFsT3B0aW9uczpvcHRpb25zLHN0YXJ0VGltZTpmeE5vd3x8Y3JlYXRlRnhOb3coKSxkdXJhdGlvbjpvcHRpb25zLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihwcm9wLGVuZCl7dmFyIHR3ZWVuPWpRdWVyeS5Ud2VlbihlbGVtLGFuaW1hdGlvbi5vcHRzLHByb3AsZW5kLGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmdbcHJvcF18fGFuaW1hdGlvbi5vcHRzLmVhc2luZyk7cmV0dXJuIGFuaW1hdGlvbi50d2VlbnMucHVzaCh0d2VlbiksdHdlZW59LHN0b3A6ZnVuY3Rpb24oZ290b0VuZCl7dmFyIGluZGV4PTAsbGVuZ3RoPWdvdG9FbmQ/YW5pbWF0aW9uLnR3ZWVucy5sZW5ndGg6MDtpZihzdG9wcGVkKXJldHVybiB0aGlzO2ZvcihzdG9wcGVkPSEwO2luZGV4PGxlbmd0aDtpbmRleCsrKWFuaW1hdGlvbi50d2VlbnNbaW5kZXhdLnJ1bigxKTtyZXR1cm4gZ290b0VuZD8oZGVmZXJyZWQubm90aWZ5V2l0aChlbGVtLFthbmltYXRpb24sMSwwXSksZGVmZXJyZWQucmVzb2x2ZVdpdGgoZWxlbSxbYW5pbWF0aW9uLGdvdG9FbmRdKSk6ZGVmZXJyZWQucmVqZWN0V2l0aChlbGVtLFthbmltYXRpb24sZ290b0VuZF0pLHRoaXN9fSkscHJvcHM9YW5pbWF0aW9uLnByb3BzO2Zvcihwcm9wRmlsdGVyKHByb3BzLGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcpO2luZGV4PGxlbmd0aDtpbmRleCsrKWlmKHJlc3VsdD1BbmltYXRpb24ucHJlZmlsdGVyc1tpbmRleF0uY2FsbChhbmltYXRpb24sZWxlbSxwcm9wcyxhbmltYXRpb24ub3B0cykpcmV0dXJuIGpRdWVyeS5pc0Z1bmN0aW9uKHJlc3VsdC5zdG9wKSYmKGpRdWVyeS5fcXVldWVIb29rcyhhbmltYXRpb24uZWxlbSxhbmltYXRpb24ub3B0cy5xdWV1ZSkuc3RvcD1qUXVlcnkucHJveHkocmVzdWx0LnN0b3AscmVzdWx0KSkscmVzdWx0O3JldHVybiBqUXVlcnkubWFwKHByb3BzLGNyZWF0ZVR3ZWVuLGFuaW1hdGlvbiksalF1ZXJ5LmlzRnVuY3Rpb24oYW5pbWF0aW9uLm9wdHMuc3RhcnQpJiZhbmltYXRpb24ub3B0cy5zdGFydC5jYWxsKGVsZW0sYW5pbWF0aW9uKSxqUXVlcnkuZngudGltZXIoalF1ZXJ5LmV4dGVuZCh0aWNrLHtlbGVtOmVsZW0sYW5pbTphbmltYXRpb24scXVldWU6YW5pbWF0aW9uLm9wdHMucXVldWV9KSksYW5pbWF0aW9uLnByb2dyZXNzKGFuaW1hdGlvbi5vcHRzLnByb2dyZXNzKS5kb25lKGFuaW1hdGlvbi5vcHRzLmRvbmU=", "base64"));
  res.write(new Buffer("LGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlKS5mYWlsKGFuaW1hdGlvbi5vcHRzLmZhaWwpLmFsd2F5cyhhbmltYXRpb24ub3B0cy5hbHdheXMpfWZ1bmN0aW9uIGdldENsYXNzKGVsZW0pe3JldHVybiBqUXVlcnkuYXR0cihlbGVtLCJjbGFzcyIpfHwiIn1mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoc3RydWN0dXJlKXtyZXR1cm4gZnVuY3Rpb24oZGF0YVR5cGVFeHByZXNzaW9uLGZ1bmMpeyJzdHJpbmciIT10eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uJiYoZnVuYz1kYXRhVHlwZUV4cHJlc3Npb24sZGF0YVR5cGVFeHByZXNzaW9uPSIqIik7dmFyIGRhdGFUeXBlLGk9MCxkYXRhVHlwZXM9ZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2gocm5vdHdoaXRlKXx8W107aWYoalF1ZXJ5LmlzRnVuY3Rpb24oZnVuYykpZm9yKDtkYXRhVHlwZT1kYXRhVHlwZXNbaSsrXTspIisiPT09ZGF0YVR5cGUuY2hhckF0KDApPyhkYXRhVHlwZT1kYXRhVHlwZS5zbGljZSgxKXx8IioiLChzdHJ1Y3R1cmVbZGF0YVR5cGVdPXN0cnVjdHVyZVtkYXRhVHlwZV18fFtdKS51bnNoaWZ0KGZ1bmMpKTooc3RydWN0dXJlW2RhdGFUeXBlXT1zdHJ1Y3R1cmVbZGF0YVR5cGVdfHxbXSkucHVzaChmdW5jKX19ZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoc3RydWN0dXJlLG9wdGlvbnMsb3JpZ2luYWxPcHRpb25zLGpxWEhSKXtmdW5jdGlvbiBpbnNwZWN0KGRhdGFUeXBlKXt2YXIgc2VsZWN0ZWQ7cmV0dXJuIGluc3BlY3RlZFtkYXRhVHlwZV09ITAsalF1ZXJ5LmVhY2goc3RydWN0dXJlW2RhdGFUeXBlXXx8W10sZnVuY3Rpb24oXyxwcmVmaWx0ZXJPckZhY3Rvcnkpe3ZhciBkYXRhVHlwZU9yVHJhbnNwb3J0PXByZWZpbHRlck9yRmFjdG9yeShvcHRpb25zLG9yaWdpbmFsT3B0aW9ucyxqcVhIUik7cmV0dXJuInN0cmluZyIhPXR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0fHxzZWVraW5nVHJhbnNwb3J0fHxpbnNwZWN0ZWRbZGF0YVR5cGVPclRyYW5zcG9ydF0/c2Vla2luZ1RyYW5zcG9ydD8hKHNlbGVjdGVkPWRhdGFUeXBlT3JUcmFuc3BvcnQpOnZvaWQgMDoob3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdChkYXRhVHlwZU9yVHJhbnNwb3J0KSxpbnNwZWN0KGRhdGFUeXBlT3JUcmFuc3BvcnQpLCExKX0pLHNlbGVjdGVkfXZhciBpbnNwZWN0ZWQ9e30sc2Vla2luZ1RyYW5zcG9ydD1zdHJ1Y3R1cmU9PT10cmFuc3BvcnRzO3JldHVybiBpbnNwZWN0KG9wdGlvbnMuZGF0YVR5cGVzWzBdKXx8IWluc3BlY3RlZFsiKiJdJiZpbnNwZWN0KCIqIil9ZnVuY3Rpb24gYWpheEV4dGVuZCh0YXJnZXQsc3JjKXt2YXIgZGVlcCxrZXksZmxhdE9wdGlvbnM9alF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9uc3x8e307Zm9yKGtleSBpbiBzcmMpdm9pZCAwIT09c3JjW2tleV0mJigoZmxhdE9wdGlvbnNba2V5XT90YXJnZXQ6ZGVlcHx8KGRlZXA9e30pKVtrZXldPXNyY1trZXldKTtyZXR1cm4gZGVlcCYmalF1ZXJ5LmV4dGVuZCghMCx0YXJnZXQsZGVlcCksdGFyZ2V0fWZ1bmN0aW9uIGFqYXhIYW5kbGVSZXNwb25zZXMocyxqcVhIUixyZXNwb25zZXMpe2Zvcih2YXIgZmlyc3REYXRhVHlwZSxjdCxmaW5hbERhdGFUeXBlLHR5cGUsY29udGVudHM9cy5jb250ZW50cyxkYXRhVHlwZXM9cy5kYXRhVHlwZXM7IioiPT09ZGF0YVR5cGVzWzBdOylkYXRhVHlwZXMuc2hpZnQoKSx2b2lkIDA9PT1jdCYmKGN0PXMubWltZVR5cGV8fGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCJDb250ZW50LVR5cGUiKSk7aWYoY3QpZm9yKHR5cGUgaW4gY29udGVudHMpaWYoY29udGVudHNbdHlwZV0mJmNvbnRlbnRzW3R5cGVdLnRlc3QoY3QpKXtkYXRhVHlwZXMudW5zaGlmdCh0eXBlKTticmVha31pZihkYXRhVHlwZXNbMF1pbiByZXNwb25zZXMpZmluYWxEYXRhVHlwZT1kYXRhVHlwZXNbMF07ZWxzZXtmb3IodHlwZSBpbiByZXNwb25zZXMpe2lmKCFkYXRhVHlwZXNbMF18fHMuY29udmVydGVyc1t0eXBlKyIgIitkYXRhVHlwZXNbMF1dKXtmaW5hbERhdGFUeXBlPXR5cGU7YnJlYWt9Zmlyc3REYXRhVHlwZXx8KGZpcnN0RGF0YVR5cGU9dHlwZSl9ZmluYWxEYXRhVHlwZT1maW5hbERhdGFUeXBlfHxmaXJzdERhdGFUeXBlfWlmKGZpbmFsRGF0YVR5cGUpcmV0dXJuIGZpbmFsRGF0YVR5cGUhPT1kYXRhVHlwZXNbMF0mJmRhdGFUeXBlcy51bnNoaWZ0KGZpbmFsRGF0YVR5cGUpLHJlc3BvbnNlc1tmaW5hbERhdGFUeXBlXX1mdW5jdGlvbiBhamF4Q29udmVydChzLHJlc3BvbnNlLGpxWEhSLGlzU3VjY2Vzcyl7dmFyIGNvbnYyLGN1cnJlbnQsY29udix0bXAscHJldixjb252ZXJ0ZXJzPXt9LGRhdGFUeXBlcz1zLmRhdGFUeXBlcy5zbGljZSgpO2lmKGRhdGFUeXBlc1sxXSlmb3IoY29udiBpbiBzLmNvbnZlcnRlcnMpY29udmVydGVyc1tjb252LnRvTG93ZXJDYXNlKCldPXMuY29udmVydGVyc1tjb252XTtmb3IoY3VycmVudD1kYXRhVHlwZXMuc2hpZnQoKTtjdXJyZW50OylpZihzLnJlc3BvbnNlRmllbGRzW2N1cnJlbnRdJiYoanFYSFJbcy5yZXNwb25zZUZpZWxkc1tjdXJyZW50XV09cmVzcG9uc2UpLCFwcmV2JiZpc1N1Y2Nlc3MmJnMuZGF0YUZpbHRlciYmKHJlc3BvbnNlPXMuZGF0YUZpbHRlcihyZXNwb25zZSxzLmRhdGFUeXBlKSkscHJldj1jdXJyZW50LGN1cnJlbnQ9ZGF0YVR5cGVzLnNoaWZ0KCkpaWYoIioiPT09Y3VycmVudCljdXJyZW50PXByZXY7ZWxzZSBpZigiKiIhPT1wcmV2JiZwcmV2IT09Y3VycmVudCl7aWYoY29udj1jb252ZXJ0ZXJzW3ByZXYrIiAiK2N1cnJlbnRdfHxjb252ZXJ0ZXJzWyIqICIrY3VycmVudF0sIWNvbnYpZm9yKGNvbnYyIGluIGNvbnZlcnRlcnMpaWYodG1wPWNvbnYyLnNwbGl0KCIgIiksdG1wWzFdPT09Y3VycmVudCYmKGNvbnY9Y29udmVydGVyc1twcmV2KyIgIit0bQ==", "base64"));
  res.write(new Buffer("cFswXV18fGNvbnZlcnRlcnNbIiogIit0bXBbMF1dKSl7Y29udj09PSEwP2NvbnY9Y29udmVydGVyc1tjb252Ml06Y29udmVydGVyc1tjb252Ml0hPT0hMCYmKGN1cnJlbnQ9dG1wWzBdLGRhdGFUeXBlcy51bnNoaWZ0KHRtcFsxXSkpO2JyZWFrfWlmKGNvbnYhPT0hMClpZihjb252JiZzWyJ0aHJvd3MiXSlyZXNwb25zZT1jb252KHJlc3BvbnNlKTtlbHNlIHRyeXtyZXNwb25zZT1jb252KHJlc3BvbnNlKX1jYXRjaChlKXtyZXR1cm57c3RhdGU6InBhcnNlcmVycm9yIixlcnJvcjpjb252P2U6Ik5vIGNvbnZlcnNpb24gZnJvbSAiK3ByZXYrIiB0byAiK2N1cnJlbnR9fX1yZXR1cm57c3RhdGU6InN1Y2Nlc3MiLGRhdGE6cmVzcG9uc2V9fWZ1bmN0aW9uIGdldERpc3BsYXkoZWxlbSl7cmV0dXJuIGVsZW0uc3R5bGUmJmVsZW0uc3R5bGUuZGlzcGxheXx8alF1ZXJ5LmNzcyhlbGVtLCJkaXNwbGF5Iil9ZnVuY3Rpb24gZmlsdGVySGlkZGVuKGVsZW0pe2lmKCFqUXVlcnkuY29udGFpbnMoZWxlbS5vd25lckRvY3VtZW50fHxkb2N1bWVudCxlbGVtKSlyZXR1cm4hMDtmb3IoO2VsZW0mJjE9PT1lbGVtLm5vZGVUeXBlOyl7aWYoIm5vbmUiPT09Z2V0RGlzcGxheShlbGVtKXx8ImhpZGRlbiI9PT1lbGVtLnR5cGUpcmV0dXJuITA7ZWxlbT1lbGVtLnBhcmVudE5vZGV9cmV0dXJuITF9ZnVuY3Rpb24gYnVpbGRQYXJhbXMocHJlZml4LG9iaix0cmFkaXRpb25hbCxhZGQpe3ZhciBuYW1lO2lmKGpRdWVyeS5pc0FycmF5KG9iaikpalF1ZXJ5LmVhY2gob2JqLGZ1bmN0aW9uKGksdil7dHJhZGl0aW9uYWx8fHJicmFja2V0LnRlc3QocHJlZml4KT9hZGQocHJlZml4LHYpOmJ1aWxkUGFyYW1zKHByZWZpeCsiWyIrKCJvYmplY3QiPT10eXBlb2YgdiYmbnVsbCE9dj9pOiIiKSsiXSIsdix0cmFkaXRpb25hbCxhZGQpfSk7ZWxzZSBpZih0cmFkaXRpb25hbHx8Im9iamVjdCIhPT1qUXVlcnkudHlwZShvYmopKWFkZChwcmVmaXgsb2JqKTtlbHNlIGZvcihuYW1lIGluIG9iailidWlsZFBhcmFtcyhwcmVmaXgrIlsiK25hbWUrIl0iLG9ialtuYW1lXSx0cmFkaXRpb25hbCxhZGQpfWZ1bmN0aW9uIGNyZWF0ZVN0YW5kYXJkWEhSKCl7dHJ5e3JldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0fWNhdGNoKGUpe319ZnVuY3Rpb24gY3JlYXRlQWN0aXZlWEhSKCl7dHJ5e3JldHVybiBuZXcgd2luZG93LkFjdGl2ZVhPYmplY3QoIk1pY3Jvc29mdC5YTUxIVFRQIil9Y2F0Y2goZSl7fX1mdW5jdGlvbiBnZXRXaW5kb3coZWxlbSl7cmV0dXJuIGpRdWVyeS5pc1dpbmRvdyhlbGVtKT9lbGVtOjk9PT1lbGVtLm5vZGVUeXBlJiYoZWxlbS5kZWZhdWx0Vmlld3x8ZWxlbS5wYXJlbnRXaW5kb3cpfXZhciBkZWxldGVkSWRzPVtdLGRvY3VtZW50PXdpbmRvdy5kb2N1bWVudCxzbGljZT1kZWxldGVkSWRzLnNsaWNlLGNvbmNhdD1kZWxldGVkSWRzLmNvbmNhdCxwdXNoPWRlbGV0ZWRJZHMucHVzaCxpbmRleE9mPWRlbGV0ZWRJZHMuaW5kZXhPZixjbGFzczJ0eXBlPXt9LHRvU3RyaW5nPWNsYXNzMnR5cGUudG9TdHJpbmcsaGFzT3duPWNsYXNzMnR5cGUuaGFzT3duUHJvcGVydHksc3VwcG9ydD17fSx2ZXJzaW9uPSIxLjEyLjQiLGpRdWVyeT1mdW5jdGlvbihzZWxlY3Rvcixjb250ZXh0KXtyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KHNlbGVjdG9yLGNvbnRleHQpfSxydHJpbT0vXltcc1x1RkVGRlx4QTBdK3xbXHNcdUZFRkZceEEwXSskL2cscm1zUHJlZml4PS9eLW1zLS8scmRhc2hBbHBoYT0vLShbXGRhLXpdKS9naSxmY2FtZWxDYXNlPWZ1bmN0aW9uKGFsbCxsZXR0ZXIpe3JldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKX07alF1ZXJ5LmZuPWpRdWVyeS5wcm90b3R5cGU9e2pxdWVyeTp2ZXJzaW9uLGNvbnN0cnVjdG9yOmpRdWVyeSxzZWxlY3RvcjoiIixsZW5ndGg6MCx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHNsaWNlLmNhbGwodGhpcyl9LGdldDpmdW5jdGlvbihudW0pe3JldHVybiBudWxsIT1udW0/bnVtPDA/dGhpc1tudW0rdGhpcy5sZW5ndGhdOnRoaXNbbnVtXTpzbGljZS5jYWxsKHRoaXMpfSxwdXNoU3RhY2s6ZnVuY3Rpb24oZWxlbXMpe3ZhciByZXQ9alF1ZXJ5Lm1lcmdlKHRoaXMuY29uc3RydWN0b3IoKSxlbGVtcyk7cmV0dXJuIHJldC5wcmV2T2JqZWN0PXRoaXMscmV0LmNvbnRleHQ9dGhpcy5jb250ZXh0LHJldH0sZWFjaDpmdW5jdGlvbihjYWxsYmFjayl7cmV0dXJuIGpRdWVyeS5lYWNoKHRoaXMsY2FsbGJhY2spfSxtYXA6ZnVuY3Rpb24oY2FsbGJhY2spe3JldHVybiB0aGlzLnB1c2hTdGFjayhqUXVlcnkubWFwKHRoaXMsZnVuY3Rpb24oZWxlbSxpKXtyZXR1cm4gY2FsbGJhY2suY2FsbChlbGVtLGksZWxlbSl9KSl9LHNsaWNlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHNsaWNlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgtMSl9LGVxOmZ1bmN0aW9uKGkpe3ZhciBsZW49dGhpcy5sZW5ndGgsaj0raSsoaTwwP2xlbjowKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soaj49MCYmajxsZW4/W3RoaXNbal1dOltdKX0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJldk9iamVjdHx8dGhpcy5jb25zdHJ1Y3RvcigpfSxwdXNoOnB1c2gsc29ydDpkZWxldGVkSWRzLnNvcnQsc3BsaWNlOmRlbGV0ZWRJZHMuc3BsaWNlfSxqUXVlcnkuZXh0ZW5kPWpRdWVyeS5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgc3JjLGNvcHlJc0FycmF5LGNvcHksbmFtZSxvcHRpb25zLGNsb25lLHRhcmdldD1hcmd1bWVudHNbMF18fHt9LGk9MSxsZW5ndGg9YXJndW1lbnRzLmxlbmd0aCxkZWVwPSExO2ZvcigiYm9vbGVhbiI9PXR5cGVvZiB0YXJnZXQmJihkZWVwPXRhcmdldCx0YXJnZXQ9YXJndW1lbnRzW2ldfHx7fSxpKyspLCJvYmplY3QiPT10eXBlb2YgdGFyZ2V0fHxqUXVlcnkuaXNGdW5jdGlvbih0YXJnZXQpfHwodGFyZ2V0PXt9KSxpPT09bGVuZ3RoJiYodGFyZ2V0PXRoaXMsaS0tKTtpPGxlbmd0aDtpKyspaWYobnVsbCE9KG9wdGlvbnM9YXJndW1lbnRzW2ldKSlmb3IobmFtZSBpbiBvcHRpb25zKXNyYz10YXJnZXRbbmFtZV0sY29weT1vcHRpb25zW25hbWVdLHRhcmdldCE9PWNvcHkmJihkZWVwJiZjb3B5JiYoalF1ZXJ5LmlzUGxhaW5PYmplY3QoY29weSl8fChjb3B5SXNBcnJheT1qUXVlcnkuaXNBcnJheShjb3B5KSkpPyhjb3B5SXNBcnJheT8oY29weUlzQXJyYXk9ITEsY2xvbmU9c3JjJiZqUXVlcnkuaXNBcnJheShzcmMpP3NyYzpbXSk6Y2xvbmU9c3JjJiZqUXVlcnkuaXNQbGFpbk9iamVjdChzcmMpP3NyYzp7fSx0YXJnZXRbbmFtZV09alF1ZXJ5LmV4dGVuZChkZWVwLGNsb25lLGNvcHkpKTp2b2lkIDAhPT1jb3B5JiYodGFyZ2V0W25hbWVdPWNvcHkpKTtyZXR1cm4gdGFyZ2V0fSxqUXVlcnkuZXh0ZW5kKHtleHBhbmRvOiJqUXVlcnkiKyh2ZXJzaW9uK01hdGgucmFuZG9tKCkpLnJlcGxhY2UoL1xEL2csIiIpLGlzUmVhZHk6ITAsZXJyb3I6ZnVuY3Rpb24obXNnKXt0aHJvdyBuZXcgRXJyb3IobXNnKX0sbm9vcDpmdW5jdGlvbigpe30saXNGdW5jdGlvbjpmdW5jdGlvbihvYmope3JldHVybiJmdW5jdGlvbiI9PT1qUXVlcnkudHlwZShvYmopfSxpc0FycmF5OkFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKG9iail7cmV0dXJuImFycmF5Ij09PWpRdWVyeS50eXBlKG9iail9LGlzV2luZG93OmZ1bmN0aW9uKG9iail7cmV0dXJuIG51bGwhPW9iaiYmb2JqPT1vYmoud2luZG93fSxpc051bWVyaWM6ZnVuY3Rpb24ob2JqKXt2YXIgcmVhbFN0cmluZ09iaj1vYmomJm9iai50b1N0cmluZygpO3JldHVybiFqUXVlcnkuaXNBcnJheShvYmopJiZyZWFsU3RyaW5nT2JqLXBhcnNlRmxvYXQocmVhbFN0cmluZ09iaikrMT49MH0saXNFbXB0eU9iamVjdDpmdW5jdGlvbihvYmope3ZhciBuYW1lO2ZvcihuYW1lIGluIG9iailyZXR1cm4hMTtyZXR1cm4hMH0saXNQbGFpbk9iamVjdDpmdW5jdGlvbihvYmope3ZhciBrZXk7aWYoIW9ianx8Im9iamVjdCIhPT1qUXVlcnkudHlwZShvYmopfHxvYmoubm9kZVR5cGV8fGpRdWVyeS5pc1dpbmRvdyhvYmopKXJldHVybiExO3RyeXtpZihvYmouY29uc3RydWN0b3ImJiFoYXNPd24uY2FsbChvYmosImNvbnN0cnVjdG9yIikmJiFoYXNPd24uY2FsbChvYmouY29uc3RydWN0b3IucHJvdG90eXBlLCJpc1Byb3RvdHlwZU9mIikpcmV0dXJuITF9Y2F0Y2goZSl7cmV0dXJuITF9aWYoIXN1cHBvcnQub3duRmlyc3QpZm9yKGtleSBpbiBvYmopcmV0dXJuIGhhc093bi5jYWxsKG9iaixrZXkpO2ZvcihrZXkgaW4gb2JqKTtyZXR1cm4gdm9pZCAwPT09a2V5fHxoYXNPd24uY2FsbChvYmosa2V5KX0sdHlwZTpmdW5jdGlvbihvYmope3JldHVybiBudWxsPT1vYmo/b2JqKyIiOiJvYmplY3QiPT10eXBlb2Ygb2JqfHwiZnVuY3Rpb24iPT10eXBlb2Ygb2JqP2NsYXNzMnR5cGVbdG9TdHJpbmcuY2FsbChvYmopXXx8Im9iamVjdCI6dHlwZW9mIG9ian0sZ2xvYmFsRXZhbDpmdW5jdGlvbihkYXRhKXtkYXRhJiZqUXVlcnkudHJpbShkYXRhKSYmKHdpbmRvdy5leGVjU2NyaXB0fHxmdW5jdGlvbihkYXRhKXt3aW5kb3cuZXZhbC5jYWxsKHdpbmRvdyxkYXRhKX0pKGRhdGEpfSxjYW1lbENhc2U6ZnVuY3Rpb24oc3RyaW5nKXtyZXR1cm4gc3RyaW5nLnJlcGxhY2Uocm1zUHJlZml4LCJtcy0iKS5yZXBsYWNlKHJkYXNoQWxwaGEsZmNhbWVsQ2FzZSl9LG5vZGVOYW1lOmZ1bmN0aW9uKGVsZW0sbmFtZSl7cmV0dXJuIGVsZW0ubm9kZU5hbWUmJmVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PW5hbWUudG9Mb3dlckNhc2UoKX0sZWFjaDpmdW5jdGlvbihvYmosY2FsbGJhY2spe3ZhciBsZW5ndGgsaT0wO2lmKGlzQXJyYXlMaWtlKG9iaikpZm9yKGxlbmd0aD1vYmoubGVuZ3RoO2k8bGVuZ3RoJiZjYWxsYmFjay5jYWxsKG9ialtpXSxpLG9ialtpXSkhPT0hMTtpKyspO2Vsc2UgZm9yKGkgaW4gb2JqKWlmKGNhbGxiYWNrLmNhbGwob2JqW2ldLGksb2JqW2ldKT09PSExKWJyZWFrO3JldHVybiBvYmp9LHRyaW06ZnVuY3Rpb24odGV4dCl7cmV0dXJuIG51bGw9PXRleHQ/IiI6KHRleHQrIiIpLnJlcGxhY2UocnRyaW0sIiIpfSxtYWtlQXJyYXk6ZnVuY3Rpb24oYXJyLHJlc3VsdHMpe3ZhciByZXQ9cmVzdWx0c3x8W107cmV0dXJuIG51bGwhPWFyciYmKGlzQXJyYXlMaWtlKE9iamVjdChhcnIpKT9qUXVlcnkubWVyZ2UocmV0LCJzdHJpbmciPT10eXBlb2YgYXJyP1thcnJdOmFycik6cHVzaC5jYWxsKHJldCxhcnIpKSxyZXR9LGluQXJyYXk6ZnVuY3Rpb24oZWxlbSxhcnIsaSl7dmFyIGxlbjtpZihhcnIpe2lmKGluZGV4T2YpcmV0dXJuIGluZGV4T2YuY2FsbChhcnIsZWxlbSxpKTtmb3IobGVuPWFyci5sZW5ndGgsaT1pP2k8MD9NYXRoLm1heCgwLGxlbitpKTppOjA7aTxsZW47aSsrKWlmKGkgaW4gYXJyJiZhcnJbaV09PT1lbGVtKXJldHVybiBpfXJldHVybi0xfSxtZXJnZTpmdW5jdGlvbihmaXJzdCxzZWNvbmQpe2Zvcih2YXIgbGVuPStzZWNvbmQubGVuZ3RoLGo9MCxpPWZpcnN0Lmxlbmd0aDtqPGxlbjspZmlyc3RbaSsrXT1zZWNvbmRbaisrXTtpZihsZW4hPT1sZW4pZm9yKDt2b2lkIDAhPT1zZWNvbmRbal07KWZpcnN0W2krK109c2Vjb25kW2orK107cmV0dXJuIGZpcnN0Lmxlbmd0aD1pLGZpcnN0fSxncmVwOmZ1bmN0aW9uKGVsZW1zLGNhbGxiYWNrLGludmVydCl7Zm9yKHZhciBjYWxsYmFja0ludmVyc2UsbWF0Y2hlcz1bXSxpPTAsbGVuZ3RoPWVsZW1zLmxlbmd0aCxjYWxsYmFja0V4cGVjdD0haW52ZXJ0O2k8bGVuZ3RoO2krKyljYWxsYmFja0ludmVyc2U9IWNhbGxiYWM=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("LGRpcnJ1bnM9MCxkb25lPTAsY2xhc3NDYWNoZT1jcmVhdGVDYWNoZSgpLHRva2VuQ2FjaGU9Y3JlYXRlQ2FjaGUoKSxjb21waWxlckNhY2hlPWNyZWF0ZUNhY2hlKCksc29ydE9yZGVyPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGE9PT1iJiYoaGFzRHVwbGljYXRlPSEwKSwwfSxNQVhfTkVHQVRJVkU9MTw8MzEsaGFzT3duPXt9Lmhhc093blByb3BlcnR5LGFycj1bXSxwb3A9YXJyLnBvcCxwdXNoX25hdGl2ZT1hcnIucHVzaCxwdXNoPWFyci5wdXNoLHNsaWNlPWFyci5zbGljZSxpbmRleE9mPWZ1bmN0aW9uKGxpc3QsZWxlbSl7Zm9yKHZhciBpPTAsbGVuPWxpc3QubGVuZ3RoO2k8bGVuO2krKylpZihsaXN0W2ldPT09ZWxlbSlyZXR1cm4gaTtyZXR1cm4tMX0sYm9vbGVhbnM9ImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkIix3aGl0ZXNwYWNlPSJbXFx4MjBcXHRcXHJcXG5cXGZdIixpZGVudGlmaWVyPSIoPzpcXFxcLnxbXFx3LV18W15cXHgwMC1cXHhhMF0pKyIsYXR0cmlidXRlcz0iXFxbIit3aGl0ZXNwYWNlKyIqKCIraWRlbnRpZmllcisiKSg/OiIrd2hpdGVzcGFjZSsiKihbKl4kfCF+XT89KSIrd2hpdGVzcGFjZSsiKig/OicoKD86XFxcXC58W15cXFxcJ10pKiknfFwiKCg/OlxcXFwufFteXFxcXFwiXSkqKVwifCgiK2lkZW50aWZpZXIrIikpfCkiK3doaXRlc3BhY2UrIipcXF0iLHBzZXVkb3M9IjooIitpZGVudGlmaWVyKyIpKD86XFwoKCgnKCg/OlxcXFwufFteXFxcXCddKSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcIil8KCg/OlxcXFwufFteXFxcXCgpW1xcXV18IithdHRyaWJ1dGVzKyIpKil8LiopXFwpfCkiLHJ3aGl0ZXNwYWNlPW5ldyBSZWdFeHAod2hpdGVzcGFjZSsiKyIsImciKSxydHJpbT1uZXcgUmVnRXhwKCJeIit3aGl0ZXNwYWNlKyIrfCgoPzpefFteXFxcXF0pKD86XFxcXC4pKikiK3doaXRlc3BhY2UrIiskIiwiZyIpLHJjb21tYT1uZXcgUmVnRXhwKCJeIit3aGl0ZXNwYWNlKyIqLCIrd2hpdGVzcGFjZSsiKiIpLHJjb21iaW5hdG9ycz1uZXcgUmVnRXhwKCJeIit3aGl0ZXNwYWNlKyIqKFs+K35dfCIrd2hpdGVzcGFjZSsiKSIrd2hpdGVzcGFjZSsiKiIpLHJhdHRyaWJ1dGVRdW90ZXM9bmV3IFJlZ0V4cCgiPSIrd2hpdGVzcGFjZSsiKihbXlxcXSdcIl0qPykiK3doaXRlc3BhY2UrIipcXF0iLCJnIikscnBzZXVkbz1uZXcgUmVnRXhwKHBzZXVkb3MpLHJpZGVudGlmaWVyPW5ldyBSZWdFeHAoIl4iK2lkZW50aWZpZXIrIiQiKSxtYXRjaEV4cHI9e0lEOm5ldyBSZWdFeHAoIl4jKCIraWRlbnRpZmllcisiKSIpLENMQVNTOm5ldyBSZWdFeHAoIl5cXC4oIitpZGVudGlmaWVyKyIpIiksVEFHOm5ldyBSZWdFeHAoIl4oIitpZGVudGlmaWVyKyJ8WypdKSIpLEFUVFI6bmV3IFJlZ0V4cCgiXiIrYXR0cmlidXRlcyksUFNFVURPOm5ldyBSZWdFeHAoIl4iK3BzZXVkb3MpLENISUxEOm5ldyBSZWdFeHAoIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcKCIrd2hpdGVzcGFjZSsiKihldmVufG9kZHwoKFsrLV18KShcXGQqKW58KSIrd2hpdGVzcGFjZSsiKig/OihbKy1dfCkiK3doaXRlc3BhY2UrIiooXFxkKyl8KSkiK3doaXRlc3BhY2UrIipcXCl8KSIsImkiKSxib29sOm5ldyBSZWdFeHAoIl4oPzoiK2Jvb2xlYW5zKyIpJCIsImkiKSxuZWVkc0NvbnRleHQ6bmV3IFJlZ0V4cCgiXiIrd2hpdGVzcGFjZSsiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFwoIit3aGl0ZXNwYWNlKyIqKCg/Oi1cXGQpP1xcZCopIit3aGl0ZXNwYWNlKyIqXFwpfCkoPz1bXi1dfCQpIiwiaSIpfSxyaW5wdXRzPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2kscmhlYWRlcj0vXmhcZCQvaSxybmF0aXZlPS9eW157XStce1xzKlxbbmF0aXZlIFx3LyxycXVpY2tFeHByPS9eKD86IyhbXHctXSspfChcdyspfFwuKFtcdy1dKykpJC8scnNpYmxpbmc9L1srfl0vLHJlc2NhcGU9Lyd8XFwvZyxydW5lc2NhcGU9bmV3IFJlZ0V4cCgiXFxcXChbXFxkYS1mXXsxLDZ9Iit3aGl0ZXNwYWNlKyI/fCgiK3doaXRlc3BhY2UrIil8LikiLCJpZyIpLGZ1bmVzY2FwZT1mdW5jdGlvbihfLGVzY2FwZWQsZXNjYXBlZFdoaXRlc3BhY2Upe3ZhciBoaWdoPSIweCIrZXNjYXBlZC02NTUzNjtyZXR1cm4gaGlnaCE9PWhpZ2h8fGVzY2FwZWRXaGl0ZXNwYWNlP2VzY2FwZWQ6aGlnaDwwP1N0cmluZy5mcm9tQ2hhckNvZGUoaGlnaCs2NTUzNik6U3RyaW5nLmZyb21DaGFyQ29kZShoaWdoPj4xMHw1NTI5NiwxMDIzJmhpZ2h8NTYzMjApfSx1bmxvYWRIYW5kbGVyPWZ1bmN0aW9uKCl7c2V0RG9jdW1lbnQoKX07dHJ5e3B1c2guYXBwbHkoYXJyPXNsaWNlLmNhbGwocHJlZmVycmVkRG9jLmNoaWxkTm9kZXMpLHByZWZlcnJlZERvYy5jaGlsZE5vZGVzKSxhcnJbcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMubGVuZ3RoXS5ub2RlVHlwZX1jYXRjaChlKXtwdXNoPXthcHBseTphcnIubGVuZ3RoP2Z1bmN0aW9uKHRhcmdldCxlbHMpe3B1c2hfbmF0aXZlLmFwcGx5KHRhcmdldCxzbGljZS5jYWxsKGVscykpfTpmdW5jdGlvbih0YXJnZXQsZWxzKXtmb3IodmFyIGo9dGFyZ2V0Lmxlbmd0aCxpPTA7dGFyZ2V0W2orK109ZWxzW2krK107KTt0YXJnZXQubGVuZ3RoPWotMX19fXN1cHBvcnQ9U2l6emxlLnN1cHBvcnQ9e30saXNYTUw9U2l6emxlLmlzWE1MPWZ1bmN0aW9uKGVsZW0pe3ZhciBkb2N1bWVudEVsZW1lbnQ9ZWxlbSYmKGVsZW0ub3duZXJEb2N1bWVudHx8ZWxlbSkuZG9jdW1lbnRFbGVtZW50O3JldHVybiEhZG9jdW1lbnRFbGVtZW50JiYiSFRNTCIhPT1kb2N1bWVudA==", "base64"));
  res.write(new Buffer("RWxlbWVudC5ub2RlTmFtZX0sc2V0RG9jdW1lbnQ9U2l6emxlLnNldERvY3VtZW50PWZ1bmN0aW9uKG5vZGUpe3ZhciBoYXNDb21wYXJlLHBhcmVudCxkb2M9bm9kZT9ub2RlLm93bmVyRG9jdW1lbnR8fG5vZGU6cHJlZmVycmVkRG9jO3JldHVybiBkb2MhPT1kb2N1bWVudCYmOT09PWRvYy5ub2RlVHlwZSYmZG9jLmRvY3VtZW50RWxlbWVudD8oZG9jdW1lbnQ9ZG9jLGRvY0VsZW09ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGRvY3VtZW50SXNIVE1MPSFpc1hNTChkb2N1bWVudCksKHBhcmVudD1kb2N1bWVudC5kZWZhdWx0VmlldykmJnBhcmVudC50b3AhPT1wYXJlbnQmJihwYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcj9wYXJlbnQuYWRkRXZlbnRMaXN0ZW5lcigidW5sb2FkIix1bmxvYWRIYW5kbGVyLCExKTpwYXJlbnQuYXR0YWNoRXZlbnQmJnBhcmVudC5hdHRhY2hFdmVudCgib251bmxvYWQiLHVubG9hZEhhbmRsZXIpKSxzdXBwb3J0LmF0dHJpYnV0ZXM9YXNzZXJ0KGZ1bmN0aW9uKGRpdil7cmV0dXJuIGRpdi5jbGFzc05hbWU9ImkiLCFkaXYuZ2V0QXR0cmlidXRlKCJjbGFzc05hbWUiKX0pLHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWU9YXNzZXJ0KGZ1bmN0aW9uKGRpdil7cmV0dXJuIGRpdi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVDb21tZW50KCIiKSksIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpLmxlbmd0aH0pLHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZT1ybmF0aXZlLnRlc3QoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSksc3VwcG9ydC5nZXRCeUlkPWFzc2VydChmdW5jdGlvbihkaXYpe3JldHVybiBkb2NFbGVtLmFwcGVuZENoaWxkKGRpdikuaWQ9ZXhwYW5kbywhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWV8fCFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZShleHBhbmRvKS5sZW5ndGh9KSxzdXBwb3J0LmdldEJ5SWQ/KEV4cHIuZmluZC5JRD1mdW5jdGlvbihpZCxjb250ZXh0KXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQmJmRvY3VtZW50SXNIVE1MKXt2YXIgbT1jb250ZXh0LmdldEVsZW1lbnRCeUlkKGlkKTtyZXR1cm4gbT9bbV06W119fSxFeHByLmZpbHRlci5JRD1mdW5jdGlvbihpZCl7dmFyIGF0dHJJZD1pZC5yZXBsYWNlKHJ1bmVzY2FwZSxmdW5lc2NhcGUpO3JldHVybiBmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoImlkIik9PT1hdHRySWR9fSk6KGRlbGV0ZSBFeHByLmZpbmQuSUQsRXhwci5maWx0ZXIuSUQ9ZnVuY3Rpb24oaWQpe3ZhciBhdHRySWQ9aWQucmVwbGFjZShydW5lc2NhcGUsZnVuZXNjYXBlKTtyZXR1cm4gZnVuY3Rpb24oZWxlbSl7dmFyIG5vZGU9InVuZGVmaW5lZCIhPXR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUmJmVsZW0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKTtyZXR1cm4gbm9kZSYmbm9kZS52YWx1ZT09PWF0dHJJZH19KSxFeHByLmZpbmQuVEFHPXN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWU/ZnVuY3Rpb24odGFnLGNvbnRleHQpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZT9jb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZyk6c3VwcG9ydC5xc2E/Y29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKHRhZyk6dm9pZCAwfTpmdW5jdGlvbih0YWcsY29udGV4dCl7dmFyIGVsZW0sdG1wPVtdLGk9MCxyZXN1bHRzPWNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGFnKTtpZigiKiI9PT10YWcpe2Zvcig7ZWxlbT1yZXN1bHRzW2krK107KTE9PT1lbGVtLm5vZGVUeXBlJiZ0bXAucHVzaChlbGVtKTtyZXR1cm4gdG1wfXJldHVybiByZXN1bHRzfSxFeHByLmZpbmQuQ0xBU1M9c3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lJiZmdW5jdGlvbihjbGFzc05hbWUsY29udGV4dCl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmRvY3VtZW50SXNIVE1MKXJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoY2xhc3NOYW1lKX0scmJ1Z2d5TWF0Y2hlcz1bXSxyYnVnZ3lRU0E9W10sKHN1cHBvcnQucXNhPXJuYXRpdmUudGVzdChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKSkmJihhc3NlcnQoZnVuY3Rpb24oZGl2KXtkb2NFbGVtLmFwcGVuZENoaWxkKGRpdikuaW5uZXJIVE1MPSI8YSBpZD0nIitleHBhbmRvKyInPjwvYT48c2VsZWN0IGlkPSciK2V4cGFuZG8rIi1cclxcJyBtc2FsbG93Y2FwdHVyZT0nJz48b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PiIsZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIlttc2FsbG93Y2FwdHVyZV49JyddIikubGVuZ3RoJiZyYnVnZ3lRU0EucHVzaCgiWypeJF09Iit3aGl0ZXNwYWNlKyIqKD86Jyd8XCJcIikiKSxkaXYucXVlcnlTZWxlY3RvckFsbCgiW3NlbGVjdGVkXSIpLmxlbmd0aHx8cmJ1Z2d5UVNBLnB1c2goIlxcWyIrd2hpdGVzcGFjZSsiKig/OnZhbHVlfCIrYm9vbGVhbnMrIikiKSxkaXYucXVlcnlTZWxlY3RvckFsbCgiW2lkfj0iK2V4cGFuZG8rIi1dIikubGVuZ3RofHxyYnVnZ3lRU0EucHVzaCgifj0iKSxkaXYucXVlcnlTZWxlY3RvckFsbCgiOmNoZWNrZWQiKS5sZW5ndGh8fHJidWdneVFTQS5wdXNoKCI6Y2hlY2tlZCIpLGRpdi5xdWVyeVNlbGVjdG9yQWxsKCJhIyIrZXhwYW5kbysiKyoiKS5sZW5ndGh8fHJidWdneVFTQS5wdXNoKCIuIy4rWyt+XSIpfSksYXNzZXJ0KGZ1bmN0aW9uKGRpdil7dmFyIGlucHV0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImlucHV0Iik7aW5wdXQuc2V0QXR0cmlidXRlKCJ0eXBlIiwiaGlkZGVuIiksZGl2LmFwcGVuZENoaWxkKGlucHV0KS5zZXRBdHRyaWJ1dGUoIm5hbWUiLCJEIiksZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoIltuYW1lPWRdIikubGVuZ3RoJiZyYnVnZ3lRU0EucHVzaCgibmFtZSIrd2hpdGVzcGFjZSsiKlsqXiR8IX5dPz0iKSxkaXYucXVlcnlTZWxlY3RvckFsbCgiOmVuYWJsZWQiKS5sZW5ndGh8fHJidWdneVFTQS5wdXNoKCI6ZW5hYmxlZCIsIjpkaXNhYmxlZCIpLGRpdi5xdWVyeVNlbGVjdG9yQWxsKCIqLDp4IikscmJ1Z2d5UVNBLnB1c2goIiwuKjoiKX0pKSwoc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3I9cm5hdGl2ZS50ZXN0KG1hdGNoZXM9ZG9jRWxlbS5tYXRjaGVzfHxkb2NFbGVtLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3J8fGRvY0VsZW0ub01hdGNoZXNTZWxlY3Rvcnx8ZG9jRWxlbS5tc01hdGNoZXNTZWxlY3RvcikpJiZhc3NlcnQoZnVuY3Rpb24oZGl2KXtzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoPW1hdGNoZXMuY2FsbChkaXYsImRpdiIpLG1hdGNoZXMuY2FsbChkaXYsIltzIT0nJ106eCIpLHJidWdneU1hdGNoZXMucHVzaCgiIT0iLHBzZXVkb3MpfSkscmJ1Z2d5UVNBPXJidWdneVFTQS5sZW5ndGgmJm5ldyBSZWdFeHAocmJ1Z2d5UVNBLmpvaW4oInwiKSkscmJ1Z2d5TWF0Y2hlcz1yYnVnZ3lNYXRjaGVzLmxlbmd0aCYmbmV3IFJlZ0V4cChyYnVnZ3lNYXRjaGVzLmpvaW4oInwiKSksaGFzQ29tcGFyZT1ybmF0aXZlLnRlc3QoZG9jRWxlbS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiksY29udGFpbnM9aGFzQ29tcGFyZXx8cm5hdGl2ZS50ZXN0KGRvY0VsZW0uY29udGFpbnMpP2Z1bmN0aW9uKGEsYil7dmFyIGFkb3duPTk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEsYnVwPWImJmIucGFyZW50Tm9kZTtyZXR1cm4gYT09PWJ1cHx8ISghYnVwfHwxIT09YnVwLm5vZGVUeXBlfHwhKGFkb3duLmNvbnRhaW5zP2Fkb3duLmNvbnRhaW5zKGJ1cCk6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiYmMTYmYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihidXApKSl9OmZ1bmN0aW9uKGEsYil7aWYoYilmb3IoO2I9Yi5wYXJlbnROb2RlOylpZihiPT09YSlyZXR1cm4hMDtyZXR1cm4hMX0sc29ydE9yZGVyPWhhc0NvbXBhcmU/ZnVuY3Rpb24oYSxiKXtpZihhPT09YilyZXR1cm4gaGFzRHVwbGljYXRlPSEwLDA7dmFyIGNvbXBhcmU9IWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24tIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247cmV0dXJuIGNvbXBhcmU/Y29tcGFyZTooY29tcGFyZT0oYS5vd25lckRvY3VtZW50fHxhKT09PShiLm93bmVyRG9jdW1lbnR8fGIpP2EuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYik6MSwxJmNvbXBhcmV8fCFzdXBwb3J0LnNvcnREZXRhY2hlZCYmYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihhKT09PWNvbXBhcmU/YT09PWRvY3VtZW50fHxhLm93bmVyRG9jdW1lbnQ9PT1wcmVmZXJyZWREb2MmJmNvbnRhaW5zKHByZWZlcnJlZERvYyxhKT8tMTpiPT09ZG9jdW1lbnR8fGIub3duZXJEb2N1bWVudD09PXByZWZlcnJlZERvYyYmY29udGFpbnMocHJlZmVycmVkRG9jLGIpPzE6c29ydElucHV0P2luZGV4T2Yoc29ydElucHV0LGEpLWluZGV4T2Yoc29ydElucHV0LGIpOjA6NCZjb21wYXJlPy0xOjEpfTpmdW5jdGlvbihhLGIpe2lmKGE9PT1iKXJldHVybiBoYXNEdXBsaWNhdGU9ITAsMDt2YXIgY3VyLGk9MCxhdXA9YS5wYXJlbnROb2RlLGJ1cD1iLnBhcmVudE5vZGUsYXA9W2FdLGJwPVtiXTtpZighYXVwfHwhYnVwKXJldHVybiBhPT09ZG9jdW1lbnQ/LTE6Yj09PWRvY3VtZW50PzE6YXVwPy0xOmJ1cD8xOnNvcnRJbnB1dD9pbmRleE9mKHNvcnRJbnB1dCxhKS1pbmRleE9mKHNvcnRJbnB1dCxiKTowO2lmKGF1cD09PWJ1cClyZXR1cm4gc2libGluZ0NoZWNrKGEsYik7Zm9yKGN1cj1hO2N1cj1jdXIucGFyZW50Tm9kZTspYXAudW5zaGlmdChjdXIpO2ZvcihjdXI9YjtjdXI9Y3VyLnBhcmVudE5vZGU7KWJwLnVuc2hpZnQoY3VyKTtmb3IoO2FwW2ldPT09YnBbaV07KWkrKztyZXR1cm4gaT9zaWJsaW5nQ2hlY2soYXBbaV0sYnBbaV0pOmFwW2ldPT09cHJlZmVycmVkRG9jPy0xOmJwW2ldPT09cHJlZmVycmVkRG9jPzE6MH0sZG9jdW1lbnQpOmRvY3VtZW50fSxTaXp6bGUubWF0Y2hlcz1mdW5jdGlvbihleHByLGVsZW1lbnRzKXtyZXR1cm4gU2l6emxlKGV4cHIsbnVsbCxudWxsLGVsZW1lbnRzKX0sU2l6emxlLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihlbGVtLGV4cHIpe2lmKChlbGVtLm93bmVyRG9jdW1lbnR8fGVsZW0pIT09ZG9jdW1lbnQmJnNldERvY3VtZW50KGVsZW0pLGV4cHI9ZXhwci5yZXBsYWNlKHJhdHRyaWJ1dGVRdW90ZXMsIj0nJDEnXSIpLHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yJiZkb2N1bWVudElzSFRNTCYmIWNvbXBpbGVyQ2FjaGVbZXhwcisiICJdJiYoIXJidWdneU1hdGNoZXN8fCFyYnVnZ3lNYXRjaGVzLnRlc3QoZXhwcikpJiYoIXJidWdneVFTQXx8IXJidWdneVFTQS50ZXN0KGV4cHIpKSl0cnl7dmFyIHJldD1tYXRjaGVzLmNhbGwoZWxlbSxleHByKTtpZihyZXR8fHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2h8fGVsZW0uZG9jdW1lbnQmJjExIT09ZWxlbS5kb2N1bWVudC5ub2RlVHlwZSlyZXR1cm4gcmV0fWNhdGNoKGUpe31yZXR1cm4gU2l6emxlKGV4cHIsZG9jdW1lbnQsbnVsbCxbZWxlbV0pLmxlbmd0aD4wfSxTaXp6bGUuY29udGFpbnM9ZnVuY3Rpb24oY29udGV4dCxlbGVtKXtyZXR1cm4oY29udGV4dC5vd25lckRvY3VtZW50fHxjb250ZXh0KSE9PWRvY3VtZW50JiZzZXREb2N1bWVudChjb250ZXh0KSxjb250YWlucyhjb250ZXh0LGVsZW0pfSxTaXp6bGUuYXR0cj1mdW5jdGlvbihlbGVtLG5hbWUpeyhlbGVtLm93bmVyRG9jdW1lbnR8fGVsZW0pIT09ZG9jdW1lbnQmJnNldERvY3VtZW50KGVsZW0pO3ZhciBmbj1FeHByLmF0dHJIYW5kbGVbbmFtZS50b0xvd2VyQ2FzZSgpXSw=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("cnkuaW5BcnJheShhcmcsbGlzdCxpbmRleCkpPi0xOylsaXN0LnNwbGljZShpbmRleCwxKSxpbmRleDw9ZmlyaW5nSW5kZXgmJmZpcmluZ0luZGV4LS19KSx0aGlzfSxoYXM6ZnVuY3Rpb24oZm4pe3JldHVybiBmbj9qUXVlcnkuaW5BcnJheShmbixsaXN0KT4tMTpsaXN0Lmxlbmd0aD4wfSxlbXB0eTpmdW5jdGlvbigpe3JldHVybiBsaXN0JiYobGlzdD1bXSksdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBsb2NrZWQ9cXVldWU9W10sbGlzdD1tZW1vcnk9IiIsdGhpc30sZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hbGlzdH0sbG9jazpmdW5jdGlvbigpe3JldHVybiBsb2NrZWQ9ITAsbWVtb3J5fHxzZWxmLmRpc2FibGUoKSx0aGlzfSxsb2NrZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWxvY2tlZH0sZmlyZVdpdGg6ZnVuY3Rpb24oY29udGV4dCxhcmdzKXtyZXR1cm4gbG9ja2VkfHwoYXJncz1hcmdzfHxbXSxhcmdzPVtjb250ZXh0LGFyZ3Muc2xpY2U/YXJncy5zbGljZSgpOmFyZ3NdLHF1ZXVlLnB1c2goYXJncyksZmlyaW5nfHxmaXJlKCkpLHRoaXN9LGZpcmU6ZnVuY3Rpb24oKXtyZXR1cm4gc2VsZi5maXJlV2l0aCh0aGlzLGFyZ3VtZW50cyksdGhpc30sZmlyZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hIWZpcmVkfX07cmV0dXJuIHNlbGZ9LGpRdWVyeS5leHRlbmQoe0RlZmVycmVkOmZ1bmN0aW9uKGZ1bmMpe3ZhciB0dXBsZXM9W1sicmVzb2x2ZSIsImRvbmUiLGpRdWVyeS5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksInJlc29sdmVkIl0sWyJyZWplY3QiLCJmYWlsIixqUXVlcnkuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLCJyZWplY3RlZCJdLFsibm90aWZ5IiwicHJvZ3Jlc3MiLGpRdWVyeS5DYWxsYmFja3MoIm1lbW9yeSIpXV0sc3RhdGU9InBlbmRpbmciLHByb21pc2U9e3N0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHN0YXRlfSxhbHdheXM6ZnVuY3Rpb24oKXtyZXR1cm4gZGVmZXJyZWQuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSx0aGVuOmZ1bmN0aW9uKCl7dmFyIGZucz1hcmd1bWVudHM7cmV0dXJuIGpRdWVyeS5EZWZlcnJlZChmdW5jdGlvbihuZXdEZWZlcil7alF1ZXJ5LmVhY2godHVwbGVzLGZ1bmN0aW9uKGksdHVwbGUpe3ZhciBmbj1qUXVlcnkuaXNGdW5jdGlvbihmbnNbaV0pJiZmbnNbaV07ZGVmZXJyZWRbdHVwbGVbMV1dKGZ1bmN0aW9uKCl7dmFyIHJldHVybmVkPWZuJiZmbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuZWQmJmpRdWVyeS5pc0Z1bmN0aW9uKHJldHVybmVkLnByb21pc2UpP3JldHVybmVkLnByb21pc2UoKS5wcm9ncmVzcyhuZXdEZWZlci5ub3RpZnkpLmRvbmUobmV3RGVmZXIucmVzb2x2ZSkuZmFpbChuZXdEZWZlci5yZWplY3QpOm5ld0RlZmVyW3R1cGxlWzBdKyJXaXRoIl0odGhpcz09PXByb21pc2U/bmV3RGVmZXIucHJvbWlzZSgpOnRoaXMsZm4/W3JldHVybmVkXTphcmc=", "base64"));
  res.write(new Buffer("dW1lbnRzKX0pfSksZm5zPW51bGx9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24ob2JqKXtyZXR1cm4gbnVsbCE9b2JqP2pRdWVyeS5leHRlbmQob2JqLHByb21pc2UpOnByb21pc2V9fSxkZWZlcnJlZD17fTtyZXR1cm4gcHJvbWlzZS5waXBlPXByb21pc2UudGhlbixqUXVlcnkuZWFjaCh0dXBsZXMsZnVuY3Rpb24oaSx0dXBsZSl7dmFyIGxpc3Q9dHVwbGVbMl0sc3RhdGVTdHJpbmc9dHVwbGVbM107cHJvbWlzZVt0dXBsZVsxXV09bGlzdC5hZGQsc3RhdGVTdHJpbmcmJmxpc3QuYWRkKGZ1bmN0aW9uKCl7c3RhdGU9c3RhdGVTdHJpbmd9LHR1cGxlc1sxXmldWzJdLmRpc2FibGUsdHVwbGVzWzJdWzJdLmxvY2spLGRlZmVycmVkW3R1cGxlWzBdXT1mdW5jdGlvbigpe3JldHVybiBkZWZlcnJlZFt0dXBsZVswXSsiV2l0aCJdKHRoaXM9PT1kZWZlcnJlZD9wcm9taXNlOnRoaXMsYXJndW1lbnRzKSx0aGlzfSxkZWZlcnJlZFt0dXBsZVswXSsiV2l0aCJdPWxpc3QuZmlyZVdpdGh9KSxwcm9taXNlLnByb21pc2UoZGVmZXJyZWQpLGZ1bmMmJmZ1bmMuY2FsbChkZWZlcnJlZCxkZWZlcnJlZCksZGVmZXJyZWR9LHdoZW46ZnVuY3Rpb24oc3Vib3JkaW5hdGUpe3ZhciBwcm9ncmVzc1ZhbHVlcyxwcm9ncmVzc0NvbnRleHRzLHJlc29sdmVDb250ZXh0cyxpPTAscmVzb2x2ZVZhbHVlcz1zbGljZS5jYWxsKGFyZ3VtZW50cyksbGVuZ3RoPXJlc29sdmVWYWx1ZXMubGVuZ3RoLHJlbWFpbmluZz0xIT09bGVuZ3RofHxzdWJvcmRpbmF0ZSYmalF1ZXJ5LmlzRnVuY3Rpb24oc3Vib3JkaW5hdGUucHJvbWlzZSk/bGVuZ3RoOjAsZGVmZXJyZWQ9MT09PXJlbWFpbmluZz9zdWJvcmRpbmF0ZTpqUXVlcnkuRGVmZXJyZWQoKSx1cGRhdGVGdW5jPWZ1bmN0aW9uKGksY29udGV4dHMsdmFsdWVzKXtyZXR1cm4gZnVuY3Rpb24odmFsdWUpe2NvbnRleHRzW2ldPXRoaXMsdmFsdWVzW2ldPWFyZ3VtZW50cy5sZW5ndGg+MT9zbGljZS5jYWxsKGFyZ3VtZW50cyk6dmFsdWUsdmFsdWVzPT09cHJvZ3Jlc3NWYWx1ZXM/ZGVmZXJyZWQubm90aWZ5V2l0aChjb250ZXh0cyx2YWx1ZXMpOi0tcmVtYWluaW5nfHxkZWZlcnJlZC5yZXNvbHZlV2l0aChjb250ZXh0cyx2YWx1ZXMpfX07aWYobGVuZ3RoPjEpZm9yKHByb2dyZXNzVmFsdWVzPW5ldyBBcnJheShsZW5ndGgpLHByb2dyZXNzQ29udGV4dHM9bmV3IEFycmF5KGxlbmd0aCkscmVzb2x2ZUNvbnRleHRzPW5ldyBBcnJheShsZW5ndGgpO2k8bGVuZ3RoO2krKylyZXNvbHZlVmFsdWVzW2ldJiZqUXVlcnkuaXNGdW5jdGlvbihyZXNvbHZlVmFsdWVzW2ldLnByb21pc2UpP3Jlc29sdmVWYWx1ZXNbaV0ucHJvbWlzZSgpLnByb2dyZXNzKHVwZGF0ZUZ1bmMoaSxwcm9ncmVzc0NvbnRleHRzLHByb2dyZXNzVmFsdWVzKSkuZG9uZSh1cGRhdGVGdW5jKGkscmVzb2x2ZUNvbnRleHRzLHJlc29sdmVWYWx1ZXMpKS5mYWlsKGRlZmVycmVkLnJlamVjdCk6LS1yZW1haW5pbmc7cmV0dXJuIHJlbWFpbmluZ3x8ZGVmZXJyZWQucmVzb2x2ZVdpdGgocmVzb2x2ZUNvbnRleHRzLHJlc29sdmVWYWx1ZXMpLGRlZmVycmVkLnByb21pc2UoKX19KTt2YXIgcmVhZHlMaXN0O2pRdWVyeS5mbi5yZWFkeT1mdW5jdGlvbihmbil7cmV0dXJuIGpRdWVyeS5yZWFkeS5wcm9taXNlKCkuZG9uZShmbiksdGhpc30salF1ZXJ5LmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxob2xkUmVhZHk6ZnVuY3Rpb24oaG9sZCl7aG9sZD9qUXVlcnkucmVhZHlXYWl0Kys6alF1ZXJ5LnJlYWR5KCEwKX0scmVhZHk6ZnVuY3Rpb24od2FpdCl7KHdhaXQ9PT0hMD8tLWpRdWVyeS5yZWFkeVdhaXQ6alF1ZXJ5LmlzUmVhZHkpfHwoalF1ZXJ5LmlzUmVhZHk9ITAsd2FpdCE9PSEwJiYtLWpRdWVyeS5yZWFkeVdhaXQ+MHx8KHJlYWR5TGlzdC5yZXNvbHZlV2l0aChkb2N1bWVudCxbalF1ZXJ5XSksalF1ZXJ5LmZuLnRyaWdnZXJIYW5kbGVyJiYoalF1ZXJ5KGRvY3VtZW50KS50cmlnZ2VySGFuZGxlcigicmVhZHkiKSxqUXVlcnkoZG9jdW1lbnQpLm9mZigicmVhZHkiKSkpKX19KSxqUXVlcnkucmVhZHkucHJvbWlzZT1mdW5jdGlvbihvYmope2lmKCFyZWFkeUxpc3QpaWYocmVhZHlMaXN0PWpRdWVyeS5EZWZlcnJlZCgpLCJjb21wbGV0ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlfHwibG9hZGluZyIhPT1kb2N1bWVudC5yZWFkeVN0YXRlJiYhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsKXdpbmRvdy5zZXRUaW1lb3V0KGpRdWVyeS5yZWFkeSk7ZWxzZSBpZihkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGNvbXBsZXRlZCksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGNvbXBsZXRlZCk7ZWxzZXtkb2N1bWVudC5hdHRhY2hFdmVudCgib25yZWFkeXN0YXRlY2hhbmdlIixjb21wbGV0ZWQpLHdpbmRvdy5hdHRhY2hFdmVudCgib25sb2FkIixjb21wbGV0ZWQpO3ZhciB0b3A9ITE7dHJ5e3RvcD1udWxsPT13aW5kb3cuZnJhbWVFbGVtZW50JiZkb2N1bWVudC5kb2N1bWVudEVsZW1lbnR9Y2F0Y2goZSl7fXRvcCYmdG9wLmRvU2Nyb2xsJiYhZnVuY3Rpb24gZG9TY3JvbGxDaGVjaygpe2lmKCFqUXVlcnkuaXNSZWFkeSl7dHJ5e3RvcC5kb1Njcm9sbCgibGVmdCIpfWNhdGNoKGUpe3JldHVybiB3aW5kb3cuc2V0VGltZW91dChkb1Njcm9sbENoZWNrLDUwKX1kZXRhY2goKSxqUXVlcnkucmVhZHkoKX19KCl9cmV0dXJuIHJlYWR5TGlzdC5wcm9taXNlKG9iail9LGpRdWVyeS5yZWFkeS5wcm9taXNlKCk7dmFyIGk7Zm9yKGkgaW4galF1ZXJ5KHN1cHBvcnQpKWJyZWFrO3N1cHBvcnQub3duRmlyc3Q9IjAiPT09aSxzdXBwb3J0LmlubGluZUJsb2NrTmVlZHNMYXlvdXQ9ITEsalF1ZXJ5KGZ1bmN0aW9uKCl7dmFyIHZhbCxkaXYsYm9keQ==", "base64"));
  res.write(new Buffer("LGNvbnRhaW5lcjtib2R5PWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0sYm9keSYmYm9keS5zdHlsZSYmKGRpdj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSxjb250YWluZXI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksY29udGFpbmVyLnN0eWxlLmNzc1RleHQ9InBvc2l0aW9uOmFic29sdXRlO2JvcmRlcjowO3dpZHRoOjA7aGVpZ2h0OjA7dG9wOjA7bGVmdDotOTk5OXB4Iixib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcikuYXBwZW5kQ2hpbGQoZGl2KSwidW5kZWZpbmVkIiE9dHlwZW9mIGRpdi5zdHlsZS56b29tJiYoZGl2LnN0eWxlLmNzc1RleHQ9ImRpc3BsYXk6aW5saW5lO21hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MXB4O3dpZHRoOjFweDt6b29tOjEiLHN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dD12YWw9Mz09PWRpdi5vZmZzZXRXaWR0aCx2YWwmJihib2R5LnN0eWxlLnpvb209MSkpLGJvZHkucmVtb3ZlQ2hpbGQoY29udGFpbmVyKSl9KSxmdW5jdGlvbigpe3ZhciBkaXY9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7c3VwcG9ydC5kZWxldGVFeHBhbmRvPSEwO3RyeXtkZWxldGUgZGl2LnRlc3R9Y2F0Y2goZSl7c3VwcG9ydC5kZWxldGVFeHBhbmRvPSExfWRpdj1udWxsfSgpO3ZhciBhY2NlcHREYXRhPWZ1bmN0aW9uKGVsZW0pe3ZhciBub0RhdGE9alF1ZXJ5Lm5vRGF0YVsoZWxlbS5ub2RlTmFtZSsiICIpLnRvTG93ZXJDYXNlKCldLG5vZGVUeXBlPStlbGVtLm5vZGVUeXBlfHwxO3JldHVybigxPT09bm9kZVR5cGV8fDk9PT1ub2RlVHlwZSkmJighbm9EYXRhfHxub0RhdGEhPT0hMCYmZWxlbS5nZXRBdHRyaWJ1dGUoImNsYXNzaWQiKT09PW5vRGF0YSl9LHJicmFjZT0vXig/Olx7W1x3XFddKlx9fFxbW1x3XFddKlxdKSQvLHJtdWx0aURhc2g9LyhbQS1aXSkvZztqUXVlcnkuZXh0ZW5kKHtjYWNoZTp7fSxub0RhdGE6eyJhcHBsZXQgIjohMCwiZW1iZWQgIjohMCwib2JqZWN0ICI6ImNsc2lkOkQyN0NEQjZFLUFFNkQtMTFjZi05NkI4LTQ0NDU1MzU0MDAwMCJ9LGhhc0RhdGE6ZnVuY3Rpb24oZWxlbSl7cmV0dXJuIGVsZW09ZWxlbS5ub2RlVHlwZT9qUXVlcnkuY2FjaGVbZWxlbVtqUXVlcnkuZXhwYW5kb11dOmVsZW1balF1ZXJ5LmV4cGFuZG9dLCEhZWxlbSYmIWlzRW1wdHlEYXRhT2JqZWN0KGVsZW0pfSxkYXRhOmZ1bmN0aW9uKGVsZW0sbmFtZSxkYXRhKXtyZXR1cm4gaW50ZXJuYWxEYXRhKGVsZW0sbmFtZSxkYXRhKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihlbGVtLG5hbWUpe3JldHVybiBpbnRlcm5hbFJlbW92ZURhdGEoZWxlbSxuYW1lKX0sX2RhdGE6ZnVuY3Rpb24oZWxlbSxuYW1lLGRhdGEpe3JldHVybiBpbnRlcm5hbERhdGEoZWxlbSxuYW1lLGRhdGEsITApfSxfcmVtb3ZlRGF0YTpmdW5jdGlvbihlbGVtLG5hbWUpe3JldHVybiBpbnRlcm5hbFJlbW92ZURhdGE=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("aChpZCkpfX19KSxqUXVlcnkuZm4uZXh0ZW5kKHtkb21NYW5pcDpkb21NYW5pcCxkZXRhY2g6ZnVuY3Rpb24oc2VsZWN0b3Ipe3JldHVybiByZW1vdmUodGhpcyxzZWxlY3RvciwhMCl9LHJlbW92ZTpmdW5jdGlvbihzZWxlY3Rvcil7cmV0dXJuIHJlbW92ZSh0aGlzLHNlbGVjdG9yKX0sdGV4dDpmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGFjY2Vzcyh0aGlzLGZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdm9pZCAwPT09dmFsdWU/alF1ZXJ5LnRleHQodGhpcyk6dGhpcy5lbXB0eSgpLmFwcGVuZCgodGhpc1swXSYmdGhpc1swXS5vd25lckRvY3VtZW50fHxkb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUodmFsdWUpKX0sbnVsbCx2YWx1ZSxhcmd1bWVudHMubGVuZ3RoKX0sYXBwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIGRvbU1hbmlwKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGVsZW0pe2lmKDE9PT10aGlzLm5vZGVUeXBlfHwxMT09PXRoaXMubm9kZVR5cGV8fDk9PT10aGlzLm5vZGVUeXBlKXt2YXIgdGFyZ2V0PW1hbmlwdWxhdGlvblRhcmdldCh0aGlzLGVsZW0pO3RhcmdldC5hcHBlbmRDaGlsZChlbGVtKX19KX0scHJlcGVuZDpmdW5jdGlvbigpe3JldHVybiBkb21NYW5pcCh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihlbGVtKXtpZigxPT09dGhpcy5ub2RlVHlwZXx8MTE9PT10aGlzLm5vZGVUeXBlfHw5PT09dGhpcy5ub2RlVHlwZSl7dmFyIHRhcmdldD1tYW5pcHVsYXRpb25UYXJnZXQodGhpcyxlbGVtKTt0YXJnZXQuaW5zZXJ0QmVmb3JlKGVsZW0sdGFyZ2V0LmZpcnN0Q2hpbGQpfX0pfSxiZWZvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gZG9tTWFuaXAodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oZWxlbSl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW0sdGhpcyl9KX0sYWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gZG9tTWFuaXAodGhpcyxhcmd1bWVudHMsZnVuY3Rpb24oZWxlbSl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW0sdGhpcy5uZXh0U2libGluZyl9KX0sZW1wdHk6ZnVuY3Rpb24oKXtmb3IodmFyIGVsZW0saT0wO251bGwhPShlbGVtPXRoaXNbaV0pO2krKyl7Zm9yKDE9PT1lbGVtLm5vZGVUeXBlJiZqUXVlcnkuY2xlYW5EYXRhKGdldEFsbChlbGVtLCExKSk7ZWxlbS5maXJzdENoaWxkOyllbGVtLnJlbW92ZUNoaWxkKGVsZW0uZmlyc3RDaGlsZCk7ZWxlbS5vcHRpb25zJiZqUXVlcnkubm9kZU5hbWUoZWxlbSwic2VsZWN0IikmJihlbGVtLm9wdGlvbnMubGVuZ3RoPTApfXJldHVybiB0aGlzfSxjbG9uZTpmdW5jdGlvbihkYXRhQW5kRXZlbnRzLGRlZXBEYXRhQW5kRXZlbnRzKXtyZXR1cm4gZGF0YUFuZEV2ZW50cz1udWxsIT1kYXRhQW5kRXZlbnRzJiZkYXRhQW5kRXZlbnRzLGRlZXBEYXRhQW5kRXZlbnRzPW51bGw9PWRlZXBEYXRhQW5kRXZlbnRzP2RhdGFBbmRFdmVudHM6ZGVlcERhdGFBbmRFdmVudHMsdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4galF1ZXJ5LmNsb25lKHRoaXMsZGF0YUFuZEV2ZW50cyxkZWVwRGF0YUFuZEV2ZW50cyl9KX0saHRtbDpmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIGFjY2Vzcyh0aGlzLGZ1bmN0aW9uKHZhbHVlKXt2YXIgZWxlbT10aGlzWzBdfHx7fSxpPTAsbD10aGlzLmxlbmd0aDtpZih2b2lkIDA9PT12YWx1ZSlyZXR1cm4gMT09PWVsZW0ubm9kZVR5cGU/ZWxlbS5pbm5lckhUTUwucmVwbGFjZShyaW5saW5lalF1ZXJ5LCIiKTp2b2lkIDA7aWYoInN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmIXJub0lubmVyaHRtbC50ZXN0KHZhbHVlKSYmKHN1cHBvcnQuaHRtbFNlcmlhbGl6ZXx8IXJub3NoaW1jYWNoZS50ZXN0KHZhbHVlKSkmJihzdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlfHwhcmxlYWRpbmdXaGl0ZXNwYWNlLnRlc3QodmFsdWUpKSYmIXdyYXBNYXBbKHJ0YWdOYW1lLmV4ZWModmFsdWUpfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7dmFsdWU9alF1ZXJ5Lmh0bWxQcmVmaWx0ZXIodmFsdWUpO3RyeXtmb3IoO2k8bDtpKyspZWxlbT10aGlzW2ldfHx7fSwxPT09ZWxlbS5ub2RlVHlwZSYmKGpRdWVyeS5jbGVhbkRhdGEoZ2V0QWxsKGVsZW0sITEpKSxlbGVtLmlubmVySFRNTD12YWx1ZSk7ZWxlbT0wfWNhdGNoKGUpe319ZWxlbSYmdGhpcy5lbXB0eSgpLmFwcGVuZCh2YWx1ZSl9LG51bGwsdmFsdWUsYXJndW1lbnRzLmxlbmd0aCl9LHJlcGxhY2VXaXRoOmZ1bmN0aW9uKCl7dmFyIGlnbm9yZWQ9W107cmV0dXJuIGRvbU1hbmlwKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGVsZW0pe3ZhciBwYXJlbnQ9dGhpcy5wYXJlbnROb2RlO2pRdWVyeS5pbkFycmF5KHRoaXMsaWdub3JlZCk8MCYmKGpRdWVyeS5jbGVhbkRhdGEoZ2V0QWxsKHRoaXMpKSxwYXJlbnQmJnBhcmVudC5yZXBsYWNlQ2hpbGQoZWxlbSx0aGlzKSl9LGlnbm9yZWQpfX0pLGpRdWVyeS5lYWNoKHthcHBlbmRUbzoiYXBwZW5kIixwcmVwZW5kVG86InByZXBlbmQiLGluc2VydEJlZm9yZToiYmVmb3JlIixpbnNlcnRBZnRlcjoiYWZ0ZXIiLHJlcGxhY2VBbGw6InJlcGxhY2VXaXRoIn0sZnVuY3Rpb24obmFtZSxvcmlnaW5hbCl7alF1ZXJ5LmZuW25hbWVdPWZ1bmN0aW9uKHNlbGVjdG9yKXtmb3IodmFyIGVsZW1zLGk9MCxyZXQ9W10saW5zZXJ0PWpRdWVyeShzZWxlY3RvciksbGFzdD1pbnNlcnQubGVuZ3RoLTE7aTw9bGFzdDtpKyspZWxlbXM9aT09PWxhc3Q/dGhpczp0aGlzLmNsb25lKCEwKSxqUXVlcnkoaW5zZXJ0W2ldKVtvcmlnaW5hbF0oZWxlbXMpLHB1c2guYXBwbHkocmV0LGVsZW1zLmdldCgpKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2socmV0KX19KTt2YXIgaWZyYW1lLGVsZW1kaXNwbGF5PXtIVE1MOiJibG9jayIsQk9EWToiYmxvY2sifSxybWFyZ2luPS9ebWFyZ2luLyxybnVtbm9ucHg9bmV3IFJlZw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("b24oZWxlbSx2YWx1ZSxleHRyYSl7dmFyIHN0eWxlcz1leHRyYSYmZ2V0U3R5bGVzKGVsZW0pO3JldHVybiBzZXRQb3NpdGl2ZU51bWJlcihlbGVtLHZhbHVlLGV4dHJhP2F1Z21lbnRXaWR0aE9ySGVpZ2h0KGVsZW0sbmFtZSxleHRyYSxzdXBwb3J0LmJveFNpemluZyYmImJvcmRlci1ib3giPT09alF1ZXJ5LmNzcyhlbGVtLCJib3hTaXppbmciLCExLHN0eWxlcyksc3R5bGVzKTowKX19fSksc3VwcG9ydC5vcGFjaXR5fHwoalF1ZXJ5LmNzc0hvb2tzLm9wYWNpdHk9e2dldDpmdW5jdGlvbihlbGVtLGNvbXB1dGVkKXtyZXR1cm4gcm9wYWNpdHkudGVzdCgoY29tcHV0ZWQmJmVsZW0uY3VycmVudFN0eWxlP2VsZW0uY3VycmVudFN0eWxlLmZpbHRlcjplbGVtLnN0eWxlLmZpbHRlcil8fCIiKT8uMDEqcGFyc2VGbG9hdChSZWdFeHAuJDEpKyIiOmNvbXB1dGVkPyIxIjoiIn0sc2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUpe3ZhciBzdHlsZT1lbGVtLnN0eWxlLGN1cnJlbnRTdHlsZT1lbGVtLmN1cnJlbnRTdHlsZSxvcGFjaXR5PWpRdWVyeS5pc051bWVyaWModmFsdWUpPyJhbHBoYShvcGFjaXR5PSIrMTAwKnZhbHVlKyIpIjoiIixmaWx0ZXI9Y3VycmVudFN0eWxlJiZjdXJyZW50U3R5bGUuZmlsdGVyfHxzdHlsZS5maWx0ZXJ8fCIiO3N0eWxlLnpvb209MSwodmFsdWU+PTF8fCIiPT09dmFsdWUpJiYiIj09PWpRdWVyeS50cmltKGZpbHRlci5yZXBsYWNlKHJhbHBoYSwiIikpJiZzdHlsZS5yZW1vdmVBdHRyaWJ1dGUmJihzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoImZpbHRlciIpLCIiPT09dmFsdWV8fGN1cnJlbnRTdHlsZSYmIWN1cnJlbnRTdHlsZS5maWx0ZXIpfHwoc3R5bGUuZmlsdGVyPXJhbHBoYS50ZXN0KGZpbHRlcik/ZmlsdGVyLnJlcGxhY2UocmFscGhhLG9wYWNpdHkpOmZpbHRlcisiICIrb3BhY2l0eSl9fSksalF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0PWFkZEdldEhvb2tJZihzdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQsZnVuY3Rpb24oZWxlbSxjb21wdXRlZCl7aWYoY29tcHV0ZWQpcmV0dXJuIHN3YXAoZWxlbSx7ZGlzcGxheToiaW5saW5lLWJsb2NrIn0sY3VyQ1NTLFtlbGVtLCJtYXJnaW5SaWdodCJdKX0pLGpRdWVyeS5jc3NIb29rcy5tYXJnaW5MZWZ0PWFkZEdldEhvb2tJZihzdXBwb3J0LnJlbGlhYmxlTWFyZ2luTGVmdCxmdW5jdGlvbihlbGVtLGNvbXB1dGVkKXtpZihjb21wdXRlZClyZXR1cm4ocGFyc2VGbG9hdChjdXJDU1MoZWxlbSwibWFyZ2luTGVmdCIpKXx8KGpRdWVyeS5jb250YWlucyhlbGVtLm93bmVyRG9jdW1lbnQsZWxlbSk/ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0LXN3YXAoZWxlbSx7bWFyZ2luTGVmdDowfSxmdW5jdGlvbigpe3JldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnR9KTowKSkrInB4In0pLGpRdWVyeS5lYWNoKHttYXJnaW46IiIscGFkZGluZzoiIixib3JkZXI6IldpZHRoIn0sZnVuY3Rpb24ocHJlZml4LHN1ZmZpeCl7alF1ZXJ5LmNzc0hvb2tzW3ByZWZpeCtzdWZmaXhdPXtleHBhbmQ6ZnVuY3Rpb24odmFsdWUpe2Zvcih2YXIgaT0wLGV4cGFuZGVkPXt9LHBhcnRzPSJzdHJpbmciPT10eXBlb2YgdmFsdWU/dmFsdWUuc3BsaXQoIiAiKTpbdmFsdWVdO2k8NDtpKyspZXhwYW5kZWRbcHJlZml4K2Nzc0V4cGFuZFtpXStzdWZmaXhdPXBhcnRzW2ldfHxwYXJ0c1tpLTJdfHxwYXJ0c1swXTtyZXR1cm4gZXhwYW5kZWR9fSxybWFyZ2luLnRlc3QocHJlZml4KXx8KGpRdWVyeS5jc3NIb29rc1twcmVmaXgrc3VmZml4XS5zZXQ9c2V0UG9zaXRpdmVOdW1iZXIpfSksalF1ZXJ5LmZuLmV4dGVuZCh7Y3NzOmZ1bmN0aW9uKG5hbWUsdmFsdWUpe3JldHVybiBhY2Nlc3ModGhpcyxmdW5jdGlvbihlbGVtLG5hbWUsdmFsdWUpe3ZhciBzdHlsZXMsbGVuLG1hcD17fSxpPTA7aWYoalF1ZXJ5LmlzQXJyYXkobmFtZSkpe2ZvcihzdHlsZXM9Z2V0U3R5bGVzKGVsZW0pLGxlbj1uYW1lLmxlbmd0aDtpPGxlbjtpKyspbWFwW25hbWVbaV1dPWpRdWVyeS5jc3MoZWxlbSxuYW1lW2ldLCExLHN0eWxlcyk7cmV0dXJuIG1hcH1yZXR1cm4gdm9pZCAwIT09dmFsdWU/alF1ZXJ5LnN0eWxlKGVsZW0sbmFtZSx2YWx1ZSk6alF1ZXJ5LmNzcyhlbGVtLG5hbWUpfSxuYW1lLHZhbHVlLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHNob3c6ZnVuY3Rpb24oKXtyZXR1cm4gc2hvd0hpZGUodGhpcywhMCl9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gc2hvd0hpZGUodGhpcyl9LHRvZ2dsZTpmdW5jdGlvbihzdGF0ZSl7cmV0dXJuImJvb2xlYW4iPT10eXBlb2Ygc3RhdGU/c3RhdGU/dGhpcy5zaG93KCk6dGhpcy5oaWRlKCk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7aXNIaWRkZW4odGhpcyk/alF1ZXJ5KHRoaXMpLnNob3coKTpqUXVlcnkodGhpcykuaGlkZSgpfSl9fSksalF1ZXJ5LlR3ZWVuPVR3ZWVuLFR3ZWVuLnByb3RvdHlwZT17Y29uc3RydWN0b3I6VHdlZW4saW5pdDpmdW5jdGlvbihlbGVtLG9wdGlvbnMscHJvcCxlbmQsZWFzaW5nLHVuaXQpe3RoaXMuZWxlbT1lbGVtLHRoaXMucHJvcD1wcm9wLHRoaXMuZWFzaW5nPWVhc2luZ3x8alF1ZXJ5LmVhc2luZy5fZGVmYXVsdCx0aGlzLm9wdGlvbnM9b3B0aW9ucyx0aGlzLnN0YXJ0PXRoaXMubm93PXRoaXMuY3VyKCksdGhpcy5lbmQ9ZW5kLHRoaXMudW5pdD11bml0fHwoalF1ZXJ5LmNzc051bWJlcltwcm9wXT8iIjoicHgiKX0sY3VyOmZ1bmN0aW9uKCl7dmFyIGhvb2tzPVR3ZWVuLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiBob29rcyYmaG9va3MuZ2V0P2hvb2tzLmdldCh0aGlzKTpUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KHRoaXMpfSxydW46ZnVuY3Rpb24ocGVyY2VudCl7dmFyIGVhc2VkLGhvb2tzPVR3ZWVuLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiB0aGlzLm9wdGlvbnMuZA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YXIgbmFtZSxwcm9wTmFtZSxpPTAsYXR0ck5hbWVzPXZhbHVlJiZ2YWx1ZS5tYXRjaChybm90d2hpdGUpO2lmKGF0dHJOYW1lcyYmMT09PWVsZW0ubm9kZVR5cGUpZm9yKDtuYW1lPWF0dHJOYW1lc1tpKytdOylwcm9wTmFtZT1qUXVlcnkucHJvcEZpeFtuYW1lXXx8bmFtZSxqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QobmFtZSk/Z2V0U2V0SW5wdXQmJmdldFNldEF0dHJpYnV0ZXx8IXJ1c2VEZWZhdWx0LnRlc3QobmFtZSk/ZWxlbVtwcm9wTmFtZV09ITE6ZWxlbVtqUXVlcnkuY2FtZWxDYXNlKCJkZWZhdWx0LSIrbmFtZSldPWVsZW1bcHJvcE5hbWVdPSExOmpRdWVyeS5hdHRyKGVsZW0sbmFtZSwiIiksZWxlbS5yZW1vdmVBdHRyaWJ1dGUoZ2V0U2V0QXR0cmlidXRlP25hbWU6cHJvcE5hbWUpfX0pLGJvb2xIb29rPXtzZXQ6ZnVuY3Rpb24oZWxlbSx2YWx1ZSxuYW1lKXtyZXR1cm4gdmFsdWU9PT0hMT9qUXVlcnkucmVtb3ZlQXR0cihlbGVtLG5hbWUpOmdldFNldElucHV0JiZnZXRTZXRBdHRyaWJ1dGV8fCFydXNlRGVmYXVsdC50ZXN0KG5hbWUpP2VsZW0uc2V0QXR0cmlidXRlKCFnZXRTZXRBdHRyaWJ1dGUmJmpRdWVyeS5wcm9wRml4W25hbWVdfHxuYW1lLG5hbWUpOmVsZW1balF1ZXJ5LmNhbWVsQ2FzZSgiZGVmYXVsdC0iK25hbWUpXT1lbGVtW25hbWVdPSEwLG5hbWV9fSxqUXVlcnkuZWFjaChqUXVlcnkuZXhwci5tYXRjaC5ib29sLnNvdXJjZS5tYXRjaCgvXHcrL2cpLGZ1bmN0aW9uKGksbmFtZSl7dmFyIGdldHRlcj1hdHRySGFuZGxlW25hbWVdfHxqUXVlcnkuZmluZC5hdHRyO2dldFNldElucHV0JiZnZXRTZXRBdHRyaWJ1dGV8fCFydXNlRGVmYXVsdC50ZXN0KG5hbWUpP2F0dHJIYW5kbGVbbmFtZV09ZnVuY3Rpb24oZWxlbSxuYW1lLGlzWE1MKXt2YXIgcmV0LGhhbmRsZTtyZXR1cm4gaXNYTUx8fChoYW5kbGU9YXR0ckhhbmRsZVtuYW1lXSxhdHRySGFuZGxlW25hbWVdPXJldCxyZXQ9bnVsbCE9Z2V0dGVyKGVsZW0sbmFtZSxpc1hNTCk/bmFtZS50b0xvd2VyQ2FzZSgpOm51bGwsYXR0ckhhbmRsZVtuYW1lXT1oYW5kbGUpLHJldH06YXR0ckhhbmRsZVtuYW1lXT1mdW5jdGlvbihlbGVtLG5hbWUsaXNYTUwpe2lmKCFpc1hNTClyZXR1cm4gZWxlbVtqUXVlcnkuY2FtZWxDYXNlKCJkZWZhdWx0LSIrbmFtZSldP25hbWUudG9Mb3dlckNhc2UoKTpudWxsfX0pLGdldFNldElucHV0JiZnZXRTZXRBdHRyaWJ1dGV8fChqUXVlcnkuYXR0ckhvb2tzLnZhbHVlPXtzZXQ6ZnVuY3Rpb24oZWxlbSx2YWx1ZSxuYW1lKXtyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKGVsZW0sImlucHV0Iik/dm9pZChlbGVtLmRlZmF1bHRWYWx1ZT12YWx1ZSk6bm9kZUhvb2smJm5vZGVIb29rLnNldChlbGVtLHZhbHVlLG5hbWUpfX0pLGdldFNldEF0dHJpYnV0ZXx8KG5vZGVIb29rPXtzZXQ6ZnVuY3Rpb24oZWxlbSx2YWx1ZSxuYW1lKXt2YXIgcmV0PWVsZW0uZ2V0QXR0cmlidXRlTm9kZShuYW1lKTtpZihyZXR8fGVsZW0uc2V0QXR0cmlidXRlTm9kZShyZXQ9ZWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZShuYW1lKSkscmV0LnZhbHVlPXZhbHVlKz0iIiwidmFsdWUiPT09bmFtZXx8dmFsdWU9PT1lbGVtLmdldEF0dHJpYnV0ZShuYW1lKSlyZXR1cm4gdmFsdWV9fSxhdHRySGFuZGxlLmlkPWF0dHJIYW5kbGUubmFtZT1hdHRySGFuZGxlLmNvb3Jkcz1mdW5jdGlvbihlbGVtLG5hbWUsaXNYTUwpe3ZhciByZXQ7aWYoIWlzWE1MKXJldHVybihyZXQ9ZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSYmIiIhPT1yZXQudmFsdWU/cmV0LnZhbHVlOm51bGx9LGpRdWVyeS52YWxIb29rcy5idXR0b249e2dldDpmdW5jdGlvbihlbGVtLG5hbWUpe3ZhciByZXQ9ZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpO2lmKHJldCYmcmV0LnNwZWNpZmllZClyZXR1cm4gcmV0LnZhbHVlfSxzZXQ6bm9kZUhvb2suc2V0fSxqUXVlcnkuYXR0ckhvb2tzLmNvbnRlbnRlZGl0YWJsZT17c2V0OmZ1bmN0aW9uKGVsZW0sdmFsdWUsbmFtZSl7bm9kZUhvb2suc2V0KGVsZW0sIiIhPT12YWx1ZSYmdmFsdWUsbmFtZSl9fSxqUXVlcnkuZWFjaChbIndpZHRoIiwiaGVpZ2h0Il0sZnVuY3Rpb24oaSxuYW1lKXtqUXVlcnkuYXR0ckhvb2tzW25hbWVdPXtzZXQ6ZnVuY3Rpb24oZWxlbSx2YWx1ZSl7aWYoIiI9PT12YWx1ZSlyZXR1cm4gZWxlbS5zZXRBdHRyaWJ1dGUobmFtZSwiYXV0byIpLHZhbHVlfX19KSksc3VwcG9ydC5zdHlsZXx8KGpRdWVyeS5hdHRySG9va3Muc3R5bGU9e2dldDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbS5zdHlsZS5jc3NUZXh0fHx2b2lkIDB9LHNldDpmdW5jdGlvbihlbGVtLHZhbHVlKXtyZXR1cm4gZWxlbS5zdHlsZS5jc3NUZXh0PXZhbHVlKyIifX0pO3ZhciByZm9jdXNhYmxlPS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbnxvYmplY3QpJC9pLHJjbGlja2FibGU9L14oPzphfGFyZWEpJC9pO2pRdWVyeS5mbi5leHRlbmQoe3Byb3A6ZnVuY3Rpb24obmFtZSx2YWx1ZSl7cmV0dXJuIGFjY2Vzcyh0aGlzLGpRdWVyeS5wcm9wLG5hbWUsdmFsdWUsYXJndW1lbnRzLmxlbmd0aD4xKX0scmVtb3ZlUHJvcDpmdW5jdGlvbihuYW1lKXtyZXR1cm4gbmFtZT1qUXVlcnkucHJvcEZpeFtuYW1lXXx8bmFtZSx0aGlzLmVhY2goZnVuY3Rpb24oKXt0cnl7dGhpc1tuYW1lXT12b2lkIDAsZGVsZXRlIHRoaXNbbmFtZV19Y2F0Y2goZSl7fX0pfX0pLGpRdWVyeS5leHRlbmQoe3Byb3A6ZnVuY3Rpb24oZWxlbSxuYW1lLHZhbHVlKXt2YXIgcmV0LGhvb2tzLG5UeXBlPWVsZW0ubm9kZVR5cGU7aWYoMyE9PW5UeXBlJiY4IT09blR5cGUmJjIhPT1uVHlwZSlyZXR1cm4gMT09PW5UeXBlJiZqUXVlcnkuaXNYTUxEb2MoZWxlbSl8fChuYW1lPWpRdWVyeS5wcm9wRml4W25hbWVdfHxuYW1lLGhvb2tzPWpRdWVyeS5wcm9wSG9va3NbbmFtZV0pLHZvaWQgMCE9PXZhbHVlP2hvb2tzJiYic2V0ImluIGhvb2tzJiZ2b2lkIDAhPT0ocmV0PWhvb2tzLnNldChlbGVtLHZhbHVlLG5hbWUpKT9yZXQ6ZWxlbVtuYW1lXT12YWx1ZTpob29rcyYmImdldCJpbiBob29rcyYmbnVsbCE9PShyZXQ9aG9va3MuZ2V0KGVsZW0sbmFtZSkpP3JldDplbGVtW25hbWVdfSxwcm9wSG9va3M6e3RhYkluZGV4OntnZXQ6ZnVuY3Rpb24oZWxlbSl7dmFyIHRhYmluZGV4PWpRdWVyeS5maW5kLmF0dHIoZWxlbSwidGFiaW5kZXgiKTtyZXR1cm4gdGFiaW5kZXg/cGFyc2VJbnQodGFiaW5kZXgsMTApOnJmb2N1c2FibGUudGVzdChlbGVtLm5vZGVOYW1lKXx8cmNsaWNrYWJsZS50ZXN0KGVsZW0ubm9kZU5hbWUpJiZlbGVtLmhyZWY/MDotMX19fSxwcm9wRml4OnsiZm9yIjoiaHRtbEZvciIsImNsYXNzIjoiY2xhc3NOYW1lIn19KSxzdXBwb3J0LmhyZWZOb3JtYWxpemVkfHxqUXVlcnkuZWFjaChbImhyZWYiLCJzcmMiXSxmdW5jdGlvbihpLG5hbWUpe2pRdWVyeS5wcm9wSG9va3NbbmFtZV09e2dldDpmdW5jdGlvbihlbGVtKXtyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUobmFtZSw0KX19fSksc3VwcG9ydC5vcHRTZWxlY3RlZHx8KGpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQ9e2dldDpmdW5jdGlvbihlbGVtKXt2YXIgcGFyZW50PWVsZW0ucGFyZW50Tm9kZTtyZXR1cm4gcGFyZW50JiYocGFyZW50LnNlbGVjdGVkSW5kZXgscGFyZW50LnBhcmVudE5vZGUmJnBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXgpLG51bGx9LHNldDpmdW5jdGlvbihlbGVtKXt2YXIgcGFyZW50PWVsZW0ucGFyZW50Tm9kZTtwYXJlbnQmJihwYXJlbnQuc2VsZWN0ZWRJbmRleCxwYXJlbnQucGFyZW50Tm9kZSYmcGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCl9fSksalF1ZXJ5LmVhY2goWyJ0YWJJbmRleCIsInJlYWRPbmx5IiwibWF4TGVuZ3RoIiwiY2VsbFNwYWNpbmciLCJjZWxsUGFkZGluZyIsInJvd1NwYW4iLCJjb2xTcGFuIiwidXNlTWFwIiwiZnJhbWVCb3JkZXIiLCJjb250ZW50RWRpdGFibGUiXSxmdW5jdGlvbigpe2pRdWVyeS5wcm9wRml4W3RoaXMudG9Mb3dlckNhc2UoKV09dGhpc30pLHN1cHBvcnQuZW5jdHlwZXx8KGpRdWVyeS5wcm9wRml4LmVuY3R5cGU9ImVuY29kaW5nIik7dmFyIHJjbGFzcz0vW1x0XHJcblxmXS9nO2pRdWVyeS5mbi5leHRlbmQoe2FkZENsYXNzOmZ1bmN0aW9uKHZhbHVlKXt2YXIgY2xhc3NlcyxlbGVtLGN1cixjdXJWYWx1ZSxjbGF6eixqLGZpbmFsVmFsdWUsaT0wO2lmKGpRdWVyeS5pc0Z1bmN0aW9uKHZhbHVlKSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGope2pRdWVyeSh0aGlzKS5hZGRDbGFzcyh2YWx1ZS5jYWxsKHRoaXMsaixnZXRDbGFzcyh0aGlzKSkpfSk7aWYoInN0cmluZyI9PXR5cGVvZiB2YWx1ZSYmdmFsdWUpZm9yKGNsYXNzZXM9dmFsdWUubWF0Y2gocm5vdHdoaXRlKXx8W107ZWxlbT10aGlzW2krK107KWlmKGN1clZhbHVlPWdldENsYXNzKGVsZW0pLGN1cj0xPT09ZWxlbS5ub2RlVHlwZSYmKCIgIitjdXJWYWx1ZSsiICIpLnJlcGxhY2UocmNsYXNzLCIgIikpe2ZvcihqPTA7Y2xheno9Y2xhc3Nlc1tqKytdOyljdXIuaW5kZXhPZigiICIrY2xhenorIiAiKTwwJiYoY3VyKz1jbGF6eisiICIpO2ZpbmFsVmFsdWU9alF1ZXJ5LnRyaW0oY3VyKSxjdXJWYWx1ZSE9PWZpbmFsVmFsdWUmJmpRdWVyeS5hdHRyKGVsZW0sImNsYXNzIixmaW5hbFZhbHVlKX1yZXR1cm4gdGhpc30scmVtb3ZlQ2xhc3M6ZnVuY3Rpb24odmFsdWUpe3ZhciBjbGFzc2VzLGVsZW0sY3VyLGN1clZhbHVlLGNsYXp6LGosZmluYWxWYWx1ZSxpPTA7aWYoalF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oail7alF1ZXJ5KHRoaXMpLnJlbW92ZUNsYXNzKHZhbHVlLmNhbGwodGhpcyxqLGdldENsYXNzKHRoaXMpKSl9KTtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5hdHRyKCJjbGFzcyIsIiIpO2lmKCJzdHJpbmciPT10eXBlb2YgdmFsdWUmJnZhbHVlKWZvcihjbGFzc2VzPXZhbHVlLm1hdGNoKHJub3R3aGl0ZSl8fFtdO2VsZW09dGhpc1tpKytdOylpZihjdXJWYWx1ZT1nZXRDbGFzcyhlbGVtKSxjdXI9MT09PWVsZW0ubm9kZVR5cGUmJigiICIrY3VyVmFsdWUrIiAiKS5yZXBsYWNlKHJjbGFzcywiICIpKXtmb3Ioaj0wO2NsYXp6PWNsYXNzZXNbaisrXTspZm9yKDtjdXIuaW5kZXhPZigiICIrY2xhenorIiAiKT4tMTspY3VyPWN1ci5yZXBsYWNlKCIgIitjbGF6eisiICIsIiAiKTtmaW5hbFZhbHVlPWpRdWVyeS50cmltKGN1ciksY3VyVmFsdWUhPT1maW5hbFZhbHVlJiZqUXVlcnkuYXR0cihlbGVtLCJjbGFzcyIsZmluYWxWYWx1ZSl9cmV0dXJuIHRoaXN9LHRvZ2dsZUNsYXNzOmZ1bmN0aW9uKHZhbHVlLHN0YXRlVmFsKXt2YXIgdHlwZT10eXBlb2YgdmFsdWU7cmV0dXJuImJvb2xlYW4iPT10eXBlb2Ygc3RhdGVWYWwmJiJzdHJpbmciPT09dHlwZT9zdGF0ZVZhbD90aGlzLmFkZENsYXNzKHZhbHVlKTp0aGlzLnJlbW92ZUNsYXNzKHZhbHVlKTpqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGkpe2pRdWVyeSh0aGlzKS50b2dnbGVDbGFzcyh2YWx1ZS5jYWxsKHRoaXMsaSxnZXRDbGFzcyh0aGlzKSxzdGF0ZVZhbCksc3RhdGVWYWwpfSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGNsYXNzTmFtZSxpLHNlbGYsY2xhc3NOYW1lcztpZigic3RyaW5nIj09PXR5cGUpZm9yKGk9MCxzZWxmPWpRdWVyeSh0aGlzKSxjbGFzc05hbWVzPXZhbHVlLm1hdGNoKHJub3R3aGl0ZSl8fFtdO2NsYXNzTmFtZT1jbGFzc05hbWVzW2krK107KXNlbGYuaGFzQ2xhc3MoY2xhc3NOYW1lKT9zZWxmLnJlbW92ZUNsYXNzKGNsYXNzTmFtZSk6c2VsZi5hZGRDbGFzcyhjbGE=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("dGhpcy5pc0xvY2FsP2NyZWF0ZUFjdGl2ZVhIUigpOmRvY3VtZW50LmRvY3VtZW50TW9kZT44P2NyZWF0ZVN0YW5kYXJkWEhSKCk6L14oZ2V0fHBvc3R8aGVhZHxwdXR8ZGVsZXRlfG9wdGlvbnMpJC9pLnRlc3QodGhpcy50eXBlKSYmY3JlYXRlU3RhbmRhcmRYSFIoKXx8Y3JlYXRlQWN0aXZlWEhSKCl9OmNyZWF0ZVN0YW5kYXJkWEhSO3ZhciB4aHJJZD0wLHhockNhbGxiYWNrcz17fSx4aHJTdXBwb3J0ZWQ9alF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKTt3aW5kb3cuYXR0YWNoRXZlbnQmJndpbmRvdy5hdHRhY2hFdmVudCgib251bmxvYWQiLGZ1bmN0aW9uKCl7Zm9yKHZhciBrZXkgaW4geGhyQ2FsbGJhY2tzKXhockNhbGxiYWNrc1trZXldKHZvaWQgMCwhMCl9KSxzdXBwb3J0LmNvcnM9ISF4aHJTdXBwb3J0ZWQmJiJ3aXRoQ3JlZGVudGlhbHMiaW4geGhyU3VwcG9ydGVkLHhoclN1cHBvcnRlZD1zdXBwb3J0LmFqYXg9ISF4aHJTdXBwb3J0ZWQseGhyU3VwcG9ydGVkJiZqUXVlcnkuYWpheFRyYW5zcG9ydChmdW5jdGlvbihvcHRpb25zKXtpZighb3B0aW9ucy5jcm9zc0RvbWFpbnx8c3VwcG9ydC5jb3JzKXt2YXIgY2FsbGJhY2s7cmV0dXJue3NlbmQ6ZnVuY3Rpb24oaGVhZGVycyxjb21wbGV0ZSl7dmFyIGkseGhyPW9wdGlvbnMueGhyKCksaWQ9Kyt4aHJJZDtpZih4aHIub3BlbihvcHRpb25zLnR5cGUsb3B0aW9ucy51cmwsb3B0aW9ucy5hc3luYyxvcHRpb25zLnVzZXJuYW1lLG9wdGlvbnMucGFzc3dvcmQpLG9wdGlvbnMueGhyRmllbGRzKWZvcihpIGluIG9wdGlvbnMueGhyRmllbGRzKXhocltpXT1vcHRpb25zLnhockZpZWxkc1tpXTtvcHRpb25zLm1pbWVUeXBlJiZ4aHIub3ZlcnJpZGVNaW1lVHlwZSYmeGhyLm92ZXJyaWRlTWltZVR5cGUob3B0aW9ucy5taW1lVHlwZSksb3B0aW9ucy5jcm9zc0RvbWFpbnx8aGVhZGVyc1siWC1SZXF1ZXN0ZWQtV2l0aCJdfHwoaGVhZGVyc1siWC1SZXF1ZXN0ZWQtV2l0aCJdPSJYTUxIdHRwUmVxdWVzdCIpO2ZvcihpIGluIGhlYWRlcnMpdm9pZCAwIT09aGVhZGVyc1tpXSYmeGhyLnNldFJlcXVlc3RIZWFkZXIoaSxoZWFkZXJzW2ldKyIiKTt4aHIuc2VuZChvcHRpb25zLmhhc0NvbnRlbnQmJm9wdGlvbnMuZGF0YXx8bnVsbCksY2FsbGJhY2s9ZnVuY3Rpb24oXyxpc0Fib3J0KXt2YXIgc3RhdHVzLHN0YXR1c1RleHQscmVzcG9uc2VzO2lmKGNhbGxiYWNrJiYoaXNBYm9ydHx8ND09PXhoci5yZWFkeVN0YXRlKSlpZihkZWxldGUgeGhyQ2FsbGJhY2tzW2lkXSxjYWxsYmFjaz12b2lkIDAseGhyLm9ucmVhZHlzdGF0ZWNoYW5nZT1qUXVlcnkubm9vcCxpc0Fib3J0KTQhPT14aHIucmVhZHlTdGF0ZSYmeGhyLmFib3J0KCk7ZWxzZXtyZXNwb25zZXM9e30sc3RhdHVzPXhoci5zdGF0dXMsInN0cmluZyI9PXR5cGVvZiB4aHIucmVzcG9uc2VUZXh0JiYocmVzcG9uc2VzLnRleHQ9eGhyLnJlc3BvbnNlVGV4dCk7dHJ5e3N0YXR1c1RleHQ9eGhyLnN0YXR1c1RleHR9Y2F0Y2goZSl7c3RhdHVzVGV4dD0iIn1zdGF0dXN8fCFvcHRpb25zLmlzTG9jYWx8fG9wdGlvbnMuY3Jvc3NEb21haW4/MTIyMz09PXN0YXR1cyYmKHN0YXR1cz0yMDQpOnN0YXR1cz1yZXNwb25zZXMudGV4dD8yMDA6NDA0fXJlc3BvbnNlcyYmY29tcGxldGUoc3RhdHVzLHN0YXR1c1RleHQscmVzcG9uc2VzLHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSl9LG9wdGlvbnMuYXN5bmM/ND09PXhoci5yZWFkeVN0YXRlP3dpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrKTp4aHIub25yZWFkeXN0YXRlY2hhbmdlPXhockNhbGxiYWNrc1tpZF09Y2FsbGJhY2s6Y2FsbGJhY2soKX0sYWJvcnQ6ZnVuY3Rpb24oKXtjYWxsYmFjayYmY2FsbGJhY2sodm9pZCAwLCEwKX19fX0pLGpRdWVyeS5hamF4U2V0dXAoe2FjY2VwdHM6e3NjcmlwdDoidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHQifSxjb250ZW50czp7c2NyaXB0Oi9cYig/OmphdmF8ZWNtYSlzY3JpcHRcYi99LGNvbnZlcnRlcnM6eyJ0ZXh0IHNjcmlwdCI6ZnVuY3Rpb24odGV4dCl7cmV0dXJuIGpRdWVyeS5nbG9iYWxFdmFsKHRleHQpLHRleHR9fX0pLGpRdWVyeS5hamF4UHJlZmlsdGVyKCJzY3JpcHQiLGZ1bmN0aW9uKHMpe3ZvaWQgMD09PXMuY2FjaGUmJihzLmNhY2hlPSExKSxzLmNyb3NzRG9tYWluJiYocy50eXBlPSJHRVQiLHMuZ2xvYmFsPSExKX0pLGpRdWVyeS5hamF4VHJhbnNwb3J0KCJzY3JpcHQiLGZ1bmN0aW9uKHMpe2lmKHMuY3Jvc3NEb21haW4pe3ZhciBzY3JpcHQsaGVhZD1kb2N1bWVudC5oZWFkfHxqUXVlcnkoImhlYWQiKVswXXx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O3JldHVybntzZW5kOmZ1bmN0aW9uKF8sY2FsbGJhY2spe3NjcmlwdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKSxzY3JpcHQuYXN5bmM9ITAscy5zY3JpcHRDaGFyc2V0JiYoc2NyaXB0LmNoYXJzZXQ9cy5zY3JpcHRDaGFyc2V0KSxzY3JpcHQuc3JjPXMudXJsLHNjcmlwdC5vbmxvYWQ9c2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbihfLGlzQWJvcnQpeyhpc0Fib3J0fHwhc2NyaXB0LnJlYWR5U3RhdGV8fC9sb2FkZWR8Y29tcGxldGUvLnRlc3Qoc2NyaXB0LnJlYWR5U3RhdGUpKSYmKHNjcmlwdC5vbmxvYWQ9c2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsLHNjcmlwdC5wYXJlbnROb2RlJiZzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzY3JpcHQpLHNjcmlwdD1udWxsLGlzQWJvcnR8fGNhbGxiYWNrKDIwMCwic3VjY2VzcyIpKX0saGVhZC5pbnNlcnRCZWZvcmUoc2NyaXB0LGhlYWQuZmlyc3RDaGlsZCl9LGFib3J0OmZ1bmN0aW9uKCl7c2NyaXB0JiZzY3JpcHQub25sb2FkKHZvaWQgMCwhMCl9fX19KTt2YXIgb2xkQ2FsbGJhY2tzPVtdLHJqc29ucD0vKD0pXD8oPz0mfCQpfFw/XD8vO2pRdWVyeS5hamF4U2V0dXAoe2pzb25wOiJjYWxsYmFjayIsanNvbnBDYWxsYmFjazpmdW5jdGlvbigpe3ZhciBjYWxsYmFjaz1vbGRDYWxsYmFja3MucG9wKCl8fGpRdWVyeS5leHBhbmRvKyJfIitub25jZSsrO3JldHVybiB0aGlzW2NhbGxiYWNrXT0hMCxjYWxsYmFja319KSxqUXVlcnkuYWpheFByZWZpbHRlcigianNvbiBqc29ucCIsZnVuY3Rpb24ocyxvcmlnaW5hbFNldHRpbmdzLGpxWEhSKXt2YXIgY2FsbGJhY2tOYW1lLG92ZXJ3cml0dGVuLHJlc3BvbnNlQ29udGFpbmVyLGpzb25Qcm9wPXMuanNvbnAhPT0hMSYmKHJqc29ucC50ZXN0KHMudXJsKT8idXJsIjoic3RyaW5nIj09dHlwZW9mIHMuZGF0YSYmMD09PShzLmNvbnRlbnRUeXBlfHwiIikuaW5kZXhPZigiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIikmJnJqc29ucC50ZXN0KHMuZGF0YSkmJiJkYXRhIik7aWYoanNvblByb3B8fCJqc29ucCI9PT1zLmRhdGFUeXBlc1swXSlyZXR1cm4gY2FsbGJhY2tOYW1lPXMuanNvbnBDYWxsYmFjaz1qUXVlcnkuaXNGdW5jdGlvbihzLmpzb25wQ2FsbGJhY2spP3MuanNvbnBDYWxsYmFjaygpOnMuanNvbnBDYWxsYmFjayxqc29uUHJvcD9zW2pzb25Qcm9wXT1zW2pzb25Qcm9wXS5yZXBsYWNlKHJqc29ucCwiJDEiK2NhbGxiYWNrTmFtZSk6cy5qc29ucCE9PSExJiYocy51cmwrPShycXVlcnkudGVzdChzLnVybCk/IiYiOiI/Iikrcy5qc29ucCsiPSIrY2FsbGJhY2tOYW1lKSxzLmNvbnZlcnRlcnNbInNjcmlwdCBqc29uIl09ZnVuY3Rpb24oKXtyZXR1cm4gcmVzcG9uc2VDb250YWluZXJ8fGpRdWVyeS5lcnJvcihjYWxsYmFja05hbWUrIiB3YXMgbm90IGNhbGxlZCIpLHJlc3BvbnNlQ29udGFpbmVyWzBdfSxzLmRhdGFUeXBlc1swXT0ianNvbiIsb3ZlcndyaXR0ZW49d2luZG93W2NhbGxiYWNrTmFtZV0sd2luZG93W2NhbGxiYWNrTmFtZV09ZnVuY3Rpb24oKXtyZXNwb25zZUNvbnRhaW5lcj1hcmd1bWVudHN9LGpxWEhSLmFsd2F5cyhmdW5jdGlvbigpe3ZvaWQgMD09PW92ZXJ3cml0dGVuP2pRdWVyeSh3aW5kb3cpLnJlbW92ZVByb3AoY2FsbGJhY2tOYW1lKTp3aW5kb3dbY2FsbGJhY2tOYW1lXT1vdmVyd3JpdHRlbixzW2NhbGxiYWNrTmFtZV0mJihzLmpzb25wQ2FsbGJhY2s9b3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrLG9sZENhbGxiYWNrcy5wdXNoKGNhbGxiYWNrTmFtZSkpLHJlc3BvbnNlQ29udGFpbmVyJiZqUXVlcnkuaXNGdW5jdGlvbihvdmVyd3JpdHRlbikmJm92ZXJ3cml0dGVuKHJlc3BvbnNlQ29udGFpbmVyWzBdKSxyZXNwb25zZUNvbnRhaW5lcj1vdmVyd3JpdHRlbj12b2lkIDB9KSwic2NyaXB0In0pLGpRdWVyeS5wYXJzZUhUTUw9ZnVuY3Rpb24oZGF0YSxjb250ZXh0LGtlZXBTY3JpcHRzKXtpZighZGF0YXx8InN0cmlu", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("N10sMTQ6WzIsN10sMTU6WzIsN10sMTk6WzIsN10sMjk6WzIsN10sMzQ6WzIsN10sMzk6WzIsN10sNDQ6WzIsN10sNDc6WzIsN10sNDg6WzIsN10sNTE6WzIsN10sNTU6WzIsN10sNjA6WzIsN119LHs1OlsyLDhdLDE0OlsyLDhdLDE1OlsyLDhdLDE5OlsyLDhdLDI5OlsyLDhdLDM0OlsyLDhdLDM5OlsyLDhdLDQ0OlsyLDhdLDQ3OlsyLDhdLDQ4OlsyLDhdLDUxOlsyLDhdLDU1OlsyLDhdLDYwOlsyLDhdfSx7NTpbMiw5XSwxNDpbMiw5XSwxNTpbMiw5XSwxOTpbMiw5XSwyOTpbMiw5XSwzNDpbMiw5XSwzOTpbMiw5XSw0NDpbMiw5XSw0NzpbMiw5XSw0ODpbMiw5XSw1MTpbMiw5XSw1NTpbMiw5XSw2MDpbMiw5XX0sezIwOjI1LDcyOlsxLDM1XSw3ODoyNiw3OToyNyw4MDpbMSwyOF0sODE6WzEsMjldLDgyOlsxLDMwXSw4MzpbMSwzMV0sODQ6WzEsMzJdLDg1OlsxLDM0XSw4NjozM30sezIwOjM2LDcyOlsxLDM1XSw3ODoyNiw3OToyNyw4MDpbMSwyOF0sODE6WzEsMjldLDgyOlsxLDMwXSw4MzpbMSwzMV0sODQ6WzEsMzJdLDg1OlsxLDM0XSw4NjozM30sezQ6MzcsNjozLDE0OlsyLDQ2XSwxNTpbMiw0Nl0sMTk6WzIsNDZdLDI5OlsyLDQ2XSwzNDpbMiw0Nl0sMzk6WzIsNDZdLDQ0OlsyLDQ2XSw0NzpbMiw0Nl0sNDg6WzIsNDZdLDUxOlsyLDQ2XSw1NTpbMiw0Nl0sNjA6WzIsNDZdfSx7NDozOCw2OjMsMTQ6WzIsNDZdLDE1OlsyLDQ2XSwxOTpbMiw0Nl0sMjk6WzIsNDZdLDM0OlsyLDQ2XSw0NDpbMiw0Nl0sNDc6WzIsNDZdLDQ4OlsyLDQ2XSw1MTpbMiw0Nl0sNTU6WzIsNDZdLDYwOlsyLDQ2XX0sezEzOjQwLDE1OlsxLDIwXSwxNzozOX0sezIwOjQyLDU2OjQxLDY0OjQzLDY1OlsxLDQ0XSw3MjpbMSwzNV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHs0OjQ1LDY6MywxNDpbMiw0Nl0sMTU6WzIsNDZdLDE5OlsyLDQ2XSwyOTpbMiw0Nl0sMzQ6WzIsNDZdLDQ3OlsyLDQ2XSw0ODpbMiw0Nl0sNTE6WzIsNDZdLDU1OlsyLDQ2XSw2MDpbMiw0Nl19LHs1OlsyLDEwXSwxNDpbMiwxMF0sMTU6WzIsMTBdLDE4OlsyLDEwXSwxOTpbMiwxMF0sMjk6WzIsMTBdLDM0OlsyLDEwXSwzOTpbMiwxMF0sNDQ6WzIsMTBdLDQ3OlsyLDEwXSw0ODpbMiwxMF0sNTE6WzIsMTBdLDU1OlsyLDEwXSw2MDpbMiwxMF19LHsyMDo0Niw3MjpbMSwzNV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHsyMDo0Nyw3MjpbMSwzNV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHsyMDo0OCw3MjpbMSwzNV0sNzg6MjYsNzk6MjcsODA6WzEsMjhdLDgxOlsxLDI5XSw4MjpbMSwzMF0sODM6WzEsMzFdLDg0OlsxLDMyXSw4NTpbMSwzNF0sODY6MzN9LHsyMDo0Miw1Njo0OSw2NDo0Myw2NTpbMSw0NF0sNzI6WzEsMzVdLDc4OjI2LDc5OjI3LDgwOlsxLDI4XSw4MTpbMSwyOV0sODI6WzEsMzBdLDgzOlsxLDMxXSw4NDpbMSwzMl0sODU6WzEsMzRdLDg2OjMzfSx7MzM6WzIsNzhdLDQ5OjUwLDY1OlsyLDc4XSw3MjpbMiw3OF0sODA6WzIsNzhdLDgxOlsyLDc4XSw4MjpbMiw3OF0sODM6WzIsNzhdLDg0OlsyLDc4XSw4NTpbMiw3OF19LHsyMzpbMiwzM10sMzM6WzIsMzNdLDU0OlsyLDMzXSw2NTpbMiwzM10sNjg6WzIsMzNdLDcyOlsyLDMzXSw3NTpbMiwzM10sODA6WzIsMzNdLDgxOlsyLDMzXSw4MjpbMiwzM10sODM6WzIsMzNdLDg0OlsyLDMzXSw4NTpbMiwzM119LHsyMzpbMiwzNF0sMzM6WzIsMzRdLDU0OlsyLDM0XSw2NTpbMiwzNF0sNjg6WzIsMzRdLDcyOlsyLDM0XSw3NTpbMiwzNF0sODA6WzIsMzRdLDgxOlsyLDM0XSw4MjpbMiwzNF0sODM6WzIsMzRdLDg0OlsyLDM0XSw4NTpbMiwzNF19LHsyMzpbMiwzNV0sMzM6WzIsMzVdLDU0OlsyLDM1XSw2NTpbMiwzNV0sNjg6WzIsMzVdLDcyOlsyLDM1XSw3NTpbMiwzNV0sODA6WzIsMzVdLDgxOlsyLDM1XSw4MjpbMiwzNV0sODM6WzIsMzVdLDg0OlsyLDM1XSw4NTpbMiwzNV19LHsyMzpbMiwzNl0sMzM6WzIsMzZdLDU0OlsyLDM2XSw2NTpbMiwzNl0sNjg6WzIsMzZdLDcyOlsyLDM2XSw3NTpbMiwzNl0sODA6WzIsMzZdLDgxOlsyLDM2XSw4MjpbMiwzNl0sODM6WzIsMzZdLDg0OlsyLDM2XSw4NTpbMiwzNl19LHsyMzpbMiwzN10sMzM6WzIsMzddLDU0OlsyLDM3XSw2NTpbMiwzN10sNjg6WzIsMzddLDcyOlsyLDM3XSw3NTpbMiwzN10sODA6WzIsMzddLDgxOlsyLDM3XSw4MjpbMiwzN10sODM6WzIsMzddLDg0OlsyLDM3XSw4NTpbMiwzN119LHsyMzpbMiwzOF0sMzM6WzIsMzhdLDU0OlsyLDM4XSw2NTpbMiwzOF0sNjg6WzIsMzhdLDcyOlsyLDM4XSw3NTpbMiwzOF0sODA6WzIsMzhdLDgxOlsyLDM4XSw4MjpbMiwzOF0sODM6WzIsMzhdLDg0OlsyLDM4XSw4NTpbMiwzOF19LHsyMzpbMiwzOV0sMzM6WzIsMzldLDU0OlsyLDM5XSw2NTpbMiwzOV0sNjg6WzIsMzldLDcyOlsyLDM5XSw3NTpbMiwzOV0sODA6WzIsMzldLDgxOlsyLDM5XSw4MjpbMiwzOV0sODM6WzIsMzldLDg0OlsyLDM5XSw4NTpbMiwzOV19LHsyMzpbMiw0M10sMzM6WzIsNDNdLDU0OlsyLDQzXSw2NTpbMiw0M10sNjg6WzIsNDNdLDcyOlsyLDQzXSw3NTpbMiw0M10sODA6WzIsNDNdLDgxOlsyLDQzXSw4MjpbMiw0M10sODM6WzIsNDNdLDg0OlsyLDQzXSw4NTpbMiw0M10sODc6WzEsNTFdfSx7NzI6WzEsMzVdLDg2OjUyfSx7MjM6WzIsNDVdLDMzOlsyLDQ1XSw1NDpbMiw0NV0sNjU6WzIsNDVdLDY4OlsyLDQ1XSw3MjpbMiw0NV0sNzU6WzIsNDVdLDgwOlsyLDQ1XSw4MTpbMiw0NV0sODI6WzIsNDVdLDgzOlsyLDQ1XSw4NDpbMiw0NV0sOA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZGVudHx8IiI7dGhpcy5vcHRpb25zLnByZXZlbnRJbmRlbnQmJmluZGVudCYmKHRoaXMub3Bjb2RlKCJhcHBlbmRDb250ZW50IixpbmRlbnQpLGluZGVudD0iIiksdGhpcy5vcGNvZGUoImludm9rZVBhcnRpYWwiLGlzRHluYW1pYyxwYXJ0aWFsTmFtZSxpbmRlbnQpLHRoaXMub3Bjb2RlKCJhcHBlbmQiKX0sUGFydGlhbEJsb2NrU3RhdGVtZW50OmZ1bmN0aW9uKHBhcnRpYWxCbG9jayl7dGhpcy5QYXJ0aWFsU3RhdGVtZW50KHBhcnRpYWxCbG9jayl9LE11c3RhY2hlU3RhdGVtZW50OmZ1bmN0aW9uKG11c3RhY2hlKXt0aGlzLlN1YkV4cHJlc3Npb24obXVzdGFjaGUpLG11c3RhY2hlLmVzY2FwZWQmJiF0aGlzLm9wdGlvbnMubm9Fc2NhcGU/dGhpcy5vcGNvZGUoImFwcGVuZEVzY2FwZWQiKTp0aGlzLm9wY29kZSgiYXBwZW5kIil9LERlY29yYXRvcjpmdW5jdGlvbihkZWNvcmF0b3Ipe3RoaXMuRGVjb3JhdG9yQmxvY2soZGVjb3JhdG9yKX0sQ29udGVudFN0YXRlbWVudDpmdW5jdGlvbihjb250ZW50KXtjb250ZW50LnZhbHVlJiZ0aGlzLm9wY29kZSgiYXBwZW5kQ29udGVudCIsY29udGVudC52YWx1ZSl9LENvbW1lbnRTdGF0ZW1lbnQ6ZnVuY3Rpb24oKXt9LFN1YkV4cHJlc3Npb246ZnVuY3Rpb24oc2V4cHIpe3RyYW5zZm9ybUxpdGVyYWxUb1BhdGgoc2V4cHIpO3ZhciB0eXBlPXRoaXMuY2xhc3NpZnlTZXhwcihzZXhwcik7InNpbXBsZSI9PT10eXBlP3RoaXMuc2ltcGxlU2V4cHIoc2V4cHIpOiJoZWxwZXIiPT09dHlwZT90aGlzLmhlbHBlclNleHByKHNleHByKTp0aGlzLmFtYmlndW91c1NleHByKHNleHByKX0sYW1iaWd1b3VzU2V4cHI6ZnVuY3Rpb24oc2V4cHIscHJvZ3JhbSxpbnZlcnNlKXt2YXIgcGF0aD1zZXhwci5wYXRoLG5hbWU9cGF0aC5wYXJ0c1swXSxpc0Jsb2NrPW51bGwhPXByb2dyYW18fG51bGwhPWludmVyc2U7dGhpcy5vcGNvZGUoImdldENvbnRleHQiLHBhdGguZGVwdGgpLHRoaXMub3Bjb2RlKCJwdXNoUHJvZ3JhbSIscHJvZ3JhbSksdGhpcy5vcGNvZGUoInB1c2hQcm9ncmFtIixpbnZlcnNlKSxwYXRoLnN0cmljdD0hMCx0aGlzLmFjY2VwdChwYXRoKSx0aGlzLm9wY29kZSgiaW52b2tlQW1iaWd1b3VzIixuYW1lLGlzQmxvY2spfSxzaW1wbGVTZXhwcjpmdW5jdGlvbihzZXhwcil7dmFyIHBhdGg9c2V4cHIucGF0aDtwYXRoLnN0cmljdD0hMCx0aGlzLmFjY2VwdChwYXRoKSx0aGlzLm9wY29kZSgicmVzb2x2ZVBvc3NpYmxlTGFtYmRhIil9LGhlbHBlclNleHByOmZ1bmN0aW9uKHNleHByLHByb2dyYW0saW52ZXJzZSl7dmFyIHBhcmFtcz10aGlzLnNldHVwRnVsbE11c3RhY2hlUGFyYW1zKHNleHByLHByb2dyYW0saW52ZXJzZSkscGF0aD1zZXhwci5wYXRoLG5hbWU9cGF0aC5wYXJ0c1swXTtpZih0aGlzLm9wdGlvbnMua25vd25IZWxwZXJzW25hbWVdKXRoaXMub3Bjb2RlKCJpbnZva2VLbm93bkhlbHBlciIscGFyYW1zLmxlbmd0aCxuYW1lKTtlbHNle2lmKHRoaXMub3B0aW9ucy5rbm93bkhlbHBlcnNPbmx5KXRocm93IG5ldyBfZXhjZXB0aW9uMlsiZGVmYXVsdCJdKCJZb3Ugc3BlY2lmaWVkIGtub3duSGVscGVyc09ubHksIGJ1dCB1c2VkIHRoZSB1bmtub3duIGhlbHBlciAiK25hbWUsc2V4cHIpO3BhdGguc3RyaWN0PSEwLHBhdGguZmFsc3k9ITAsdGhpcy5hY2NlcHQocGF0aCksdGhpcy5vcGNvZGUoImludm9rZUhlbHBlciIscGFyYW1zLmxlbmd0aCxwYXRoLm9yaWdpbmFsLF9hc3QyWyJkZWZhdWx0Il0uaGVscGVycy5zaW1wbGVJZChwYXRoKSl9fSxQYXRoRXhwcmVzc2lvbjpmdW5jdGlvbihwYXRoKXt0aGlzLmFkZERlcHRoKHBhdGguZGVwdGgpLHRoaXMub3Bjb2RlKCJnZXRDb250ZXh0IixwYXRoLmRlcHRoKTt2YXIgbmFtZT1wYXRoLnBhcnRzWzBdLHNjb3BlZD1fYXN0MlsiZGVmYXVsdCJdLmhlbHBlcnMuc2NvcGVkSWQocGF0aCksYmxvY2tQYXJhbUlkPSFwYXRoLmRlcHRoJiYhc2NvcGVkJiZ0aGlzLmJsb2NrUGFyYW1JbmRleChuYW1lKTtibG9ja1BhcmFtSWQ/dGhpcy5vcGNvZGUoImxvb2t1cEJsb2NrUGFyYW0iLGJsb2NrUGFyYW1JZCxwYXRoLnBhcnRzKTpuYW1lP3BhdGguZGF0YT8odGhpcy5vcHRpb25zLmRhdGE9ITAsdGhpcy5vcGNvZGUoImxvb2t1cERhdGEiLHBhdGguZGVwdGgscGF0aC5wYXJ0cyxwYXRoLnN0cmljdCkpOnRoaXMub3Bjb2RlKCJsb29rdXBPbkNvbnRleHQiLHBhdGgucGFydHMscGF0aC5mYWxzeSxwYXRoLnN0cmljdCxzY29wZWQpOnRoaXMub3Bjb2RlKCJwdXNoQ29udGV4dCIpfSxTdHJpbmdMaXRlcmFsOmZ1bmN0aW9uKHN0cmluZyl7dGhpcy5vcGNvZGUoInB1c2hTdHJpbmciLHN0cmluZy52YWx1ZSl9LE51bWJlckxpdGVyYWw6ZnVuY3Rpb24obnVtYmVyKXt0aGlzLm9wY29kZSgicHVzaExpdGVyYWwiLG51bWJlci52YWx1ZSl9LEJvb2xlYW5MaXRlcmFsOmZ1bmN0aW9uKGJvb2wpe3RoaXMub3Bjb2RlKCJwdXNoTGl0ZXJhbCIsYm9vbC52YWx1ZSl9LFVuZGVmaW5lZExpdGVyYWw6ZnVuY3Rpb24oKXt0aGlzLm9wY29kZSgicHVzaExpdGVyYWwiLCJ1bmRlZmluZWQiKX0sTnVsbExpdGVyYWw6ZnVuY3Rpb24oKXt0aGlzLm9wY29kZSgicHVzaExpdGVyYWwiLCJudWxsIil9LEhhc2g6ZnVuY3Rpb24oaGFzaCl7dmFyIHBhaXJzPWhhc2gucGFpcnMsaT0wLGw9cGFpcnMubGVuZ3RoO2Zvcih0aGlzLm9wY29kZSgicHVzaEhhc2giKTtpPGw7aSsrKXRoaXMucHVzaFBhcmFtKHBhaXJzW2ldLnZhbHVlKTtmb3IoO2ktLTspdGhpcy5vcGNvZGUoImFzc2lnblRvSGFzaCIscGFpcnNbaV0ua2V5KTt0aGlzLm9wY29kZSgicG9wSGFzaCIpfSxvcGNvZGU6ZnVuY3Rpb24obmFtZSl7dGhpcy5vcGNvZGVzLnB1c2goe29wY29kZTpuYW1lLGFyZ3M6c2xpY2UuY2FsbChhcmd1bWVudHMsMSksbG9jOnRoaXMuc291cmNlTm9kZVswXS5sb2N9KX0sYQ==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("b29rdXA9X3RoaXMubmFtZUxvb2t1cChjdXJyZW50LHBhcnRzW2ldLHR5cGUpO3JldHVybiBmYWxzeT9bIiAmJiAiLGxvb2t1cF06WyIgIT0gbnVsbCA/ICIsbG9va3VwLCIgOiAiLGN1cnJlbnRdfSl9LHJlc29sdmVQb3NzaWJsZUxhbWJkYTpmdW5jdGlvbigpe3RoaXMucHVzaChbdGhpcy5hbGlhc2FibGUoImNvbnRhaW5lci5sYW1iZGEiKSwiKCIsdGhpcy5wb3BTdGFjaygpLCIsICIsdGhpcy5jb250ZXh0TmFtZSgwKSwiKSJdKX0scHVzaFN0cmluZ1BhcmFtOmZ1bmN0aW9uKHN0cmluZyx0eXBlKXt0aGlzLnB1c2hDb250ZXh0KCksdGhpcy5wdXNoU3RyaW5nKHR5cGUpLCJTdWJFeHByZXNzaW9uIiE9PXR5cGUmJigic3RyaW5nIj09dHlwZW9mIHN0cmluZz90aGlzLnB1c2hTdHJpbmcoc3RyaW5nKTp0aGlzLnB1c2hTdGFja0xpdGVyYWwoc3RyaW5nKSl9LGVtcHR5SGFzaDpmdW5jdGlvbihvbWl0RW1wdHkpe3RoaXMudHJhY2tJZHMmJnRoaXMucHVzaCgie30iKSx0aGlzLnN0cmluZ1BhcmFtcyYmKHRoaXMucHVzaCgie30iKSx0aGlzLnB1c2goInt9IikpLHRoaXMucHVzaFN0YWNrTGl0ZXJhbChvbWl0RW1wdHk/InVuZGVmaW5lZCI6Int9Iil9LHB1c2hIYXNoOmZ1bmN0aW9uKCl7dGhpcy5oYXNoJiZ0aGlzLmhhc2hlcy5wdXNoKHRoaXMuaGFzaCksdGhpcy5oYXNoPXt2YWx1ZXM6W10sdHlwZXM6W10sY29udGV4dHM6W10saWRzOltdfX0scG9wSGFzaDpmdW5jdGlvbigpe3ZhciBoYXNoPXRoaXMuaGFzaDt0aGlzLmhhc2g9dGhpcy5oYXNoZXMucG9wKCksdGhpcy50cmFja0lkcyYmdGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbChoYXNoLmlkcykpLHRoaXMuc3RyaW5nUGFyYW1zJiYodGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbChoYXNoLmNvbnRleHRzKSksdGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbChoYXNoLnR5cGVzKSkpLHRoaXMucHVzaCh0aGlzLm9iamVjdExpdGVyYWwoaGFzaC52YWx1ZXMpKX0scHVzaFN0cmluZzpmdW5jdGlvbihzdHJpbmcpe3RoaXMucHVzaFN0YWNrTGl0ZXJhbCh0aGlzLnF1b3RlZFN0cmluZyhzdHJpbmcpKX0scHVzaExpdGVyYWw6ZnVuY3Rpb24odmFsdWUpe3RoaXMucHVzaFN0YWNrTGl0ZXJhbCh2YWx1ZSl9LHB1c2hQcm9ncmFtOmZ1bmN0aW9uKGd1aWQpe251bGwhPWd1aWQ/dGhpcy5wdXNoU3RhY2tMaXRlcmFsKHRoaXMucHJvZ3JhbUV4cHJlc3Npb24oZ3VpZCkpOnRoaXMucHVzaFN0YWNrTGl0ZXJhbChudWxsKX0scmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24ocGFyYW1TaXplLG5hbWUpe3ZhciBmb3VuZERlY29yYXRvcj10aGlzLm5hbWVMb29rdXAoImRlY29yYXRvcnMiLG5hbWUsImRlY29yYXRvciIpLG9wdGlvbnM9dGhpcy5zZXR1cEhlbHBlckFyZ3MobmFtZSxwYXJhbVNpemUpO3RoaXMuZGVjb3JhdG9ycy5wdXNoKFsiZm4gPSAiLHRoaXMuZGVjb3JhdG9ycy5mdW5jdGlvbkNhbGwoZm91bmREZWNvcmF0b3IsIiIsWyJmbiIsInByb3BzIiwiY29udGFpbmVyIixvcHRpb25zXSksIiB8fCBmbjsiXSl9LGludm9rZUhlbHBlcjpmdW5jdGlvbihwYXJhbVNpemUsbmFtZSxpc1NpbXBsZSl7dmFyIG5vbkhlbHBlcj10aGlzLnBvcFN0YWNrKCksaGVscGVyPXRoaXMuc2V0dXBIZWxwZXIocGFyYW1TaXplLG5hbWUpLHNpbXBsZT1pc1NpbXBsZT9baGVscGVyLm5hbWUsIiB8fCAiXToiIixsb29rdXA9WyIoIl0uY29uY2F0KHNpbXBsZSxub25IZWxwZXIpO3RoaXMub3B0aW9ucy5zdHJpY3R8fGxvb2t1cC5wdXNoKCIgfHwgIix0aGlzLmFsaWFzYWJsZSgiaGVscGVycy5oZWxwZXJNaXNzaW5nIikpLGxvb2t1cC5wdXNoKCIpIiksdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChsb29rdXAsImNhbGwiLGhlbHBlci5jYWxsUGFyYW1zKSl9LGludm9rZUtub3duSGVscGVyOmZ1bmN0aW9uKHBhcmFtU2l6ZSxuYW1lKXt2YXIgaGVscGVyPXRoaXMuc2V0dXBIZWxwZXIocGFyYW1TaXplLG5hbWUpO3RoaXMucHVzaCh0aGlzLnNvdXJjZS5mdW5jdGlvbkNhbGwoaGVscGVyLm5hbWUsImNhbGwiLGhlbHBlci5jYWxsUGFyYW1zKSl9LGludm9rZUFtYmlndW91czpmdW5jdGlvbihuYW1lLGhlbHBlckNhbGwpe3RoaXMudXNlUmVnaXN0ZXIoImhlbHBlciIpO3ZhciBub25IZWxwZXI9dGhpcy5wb3BTdGFjaygpO3RoaXMuZW1wdHlIYXNoKCk7dmFyIGhlbHBlcj10aGlzLnNldHVwSGVscGVyKDAsbmFtZSxoZWxwZXJDYWxsKSxoZWxwZXJOYW1lPXRoaXMubGFzdEhlbHBlcj10aGlzLm5hbWVMb29rdXAoImhlbHBlcnMiLG5hbWUsImhlbHBlciIpLGxvb2t1cD1bIigiLCIoaGVscGVyID0gIixoZWxwZXJOYW1lLCIgfHwgIixub25IZWxwZXIsIikiXTt0aGlzLm9wdGlvbnMuc3RyaWN0fHwobG9va3VwWzBdPSIoaGVscGVyID0gIixsb29rdXAucHVzaCgiICE9IG51bGwgPyBoZWxwZXIgOiAiLHRoaXMuYWxpYXNhYmxlKCJoZWxwZXJzLmhlbHBlck1pc3NpbmciKSkpLHRoaXMucHVzaChbIigiLGxvb2t1cCxoZWxwZXIucGFyYW1zSW5pdD9bIiksKCIsaGVscGVyLnBhcmFtc0luaXRdOltdLCIpLCIsIih0eXBlb2YgaGVscGVyID09PSAiLHRoaXMuYWxpYXNhYmxlKCciZnVuY3Rpb24iJyksIiA/ICIsdGhpcy5zb3VyY2UuZnVuY3Rpb25DYWxsKCJoZWxwZXIiLCJjYWxsIixoZWxwZXIuY2FsbFBhcmFtcyksIiA6IGhlbHBlcikpIl0pfSxpbnZva2VQYXJ0aWFsOmZ1bmN0aW9uKGlzRHluYW1pYyxuYW1lLGluZGVudCl7dmFyIHBhcmFtcz1bXSxvcHRpb25zPXRoaXMuc2V0dXBQYXJhbXMobmFtZSwxLHBhcmFtcyk7aXNEeW5hbWljJiYobmFtZT10aGlzLnBvcFN0YWNrKCksZGVsZXRlIG9wdGlvbnMubmFtZSksaW5kZW50JiYob3B0aW9ucy5pbmRlbnQ9SlNPTi5zdHJpbmdpZnkoaW5kZW50KSksb3B0aW9ucy5oZWxwZXJzPSJoZWxwZXJzIixvcHRpb25zLnBhcg==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("NCxjLlA9OCxjLkI9MTYsYy5XPTMyLGMuVT02NCxjLlI9MTI4LHQuZXhwb3J0cz1jfSxmdW5jdGlvbih0LGUpe3ZhciBuPXQuZXhwb3J0cz17dmVyc2lvbjoiMi41LjEifTsibnVtYmVyIj09dHlwZW9mIF9fZSYmKF9fZT1uKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTEpLHI9bigxNyk7dC5leHBvcnRzPW4oNik/ZnVuY3Rpb24odCxlLG4pe3JldHVybiBpLmYodCxlLHIoMSxuKSl9OmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdFtlXT1uLHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMikscj1uKDE0KSxvPW4oMTYpLHM9T2JqZWN0LmRlZmluZVByb3BlcnR5O2UuZj1uKDYpP09iamVjdC5kZWZpbmVQcm9wZXJ0eTpmdW5jdGlvbih0LGUsbil7aWYoaSh0KSxlPW8oZSwhMCksaShuKSxyKXRyeXtyZXR1cm4gcyh0LGUsbil9Y2F0Y2goYSl7fWlmKCJnZXQiaW4gbnx8InNldCJpbiBuKXRocm93IFR5cGVFcnJvcigiQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhIik7cmV0dXJuInZhbHVlImluIG4mJih0W2VdPW4udmFsdWUpLHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMyk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCFpKHQpKXRocm93IFR5cGVFcnJvcih0KyIgaXMgbm90IGFuIG9iamVjdCEiKTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiJvYmplY3QiPT10eXBlb2YgdD9udWxsIT09dDoiZnVuY3Rpb24iPT10eXBlb2YgdH19LGZ1bmN0aW9uKHQsZSxuKXt0LmV4cG9ydHM9IW4oNikmJiFuKDcpKGZ1bmN0aW9uKCl7cmV0dXJuIDchPU9iamVjdC5kZWZpbmVQcm9wZXJ0eShuKDE1KSgiZGl2IiksImEiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gN319KS5hfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKSxyPW4oNCkuZG9jdW1lbnQsbz1pKHIpJiZpKHIuY3JlYXRlRWxlbWVudCk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBvP3IuY3JlYXRlRWxlbWVudCh0KTp7fX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtpZighaSh0KSlyZXR1cm4gdDt2YXIgbixyO2lmKGUmJiJmdW5jdGlvbiI9PXR5cGVvZihuPXQudG9TdHJpbmcpJiYhaShyPW4uY2FsbCh0KSkpcmV0dXJuIHI7aWYoImZ1bmN0aW9uIj09dHlwZW9mKG49dC52YWx1ZU9mKSYmIWkocj1uLmNhbGwodCkpKXJldHVybiByO2lmKCFlJiYiZnVuY3Rpb24iPT10eXBlb2Yobj10LnRvU3RyaW5nKSYmIWkocj1uLmNhbGwodCkpKXJldHVybiByO3Rocm93IFR5cGVFcnJvcigiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlIil9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3JldHVybntlbnVtZXJhYmxlOiEoMSZ0KSxjb25maWd1cmFibGU6ISgyJnQpLHdyaXRhYmxlOiEoNCZ0KSx2YWx1ZTplfX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDQpLHI9bigxMCksbz1uKDUpLHM9bigxOSkoInNyYyIpLGE9InRvU3RyaW5nIixsPUZ1bmN0aW9uW2FdLGM9KCIiK2wpLnNwbGl0KGEpO24oOSkuaW5zcGVjdFNvdXJjZT1mdW5jdGlvbih0KXtyZXR1cm4gbC5jYWxsKHQpfSwodC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGEpe3ZhciBsPSJmdW5jdGlvbiI9PXR5cGVvZiBuO2wmJihvKG4sIm5hbWUiKXx8cihuLCJuYW1lIixlKSksdFtlXSE9PW4mJihsJiYobyhuLHMpfHxyKG4scyx0W2VdPyIiK3RbZV06Yy5qb2luKFN0cmluZyhlKSkpKSx0PT09aT90W2VdPW46YT90W2VdP3RbZV09bjpyKHQsZSxuKTooZGVsZXRlIHRbZV0scih0LGUsbikpKX0pKEZ1bmN0aW9uLnByb3RvdHlwZSxhLGZ1bmN0aW9uKCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMmJnRoaXNbc118fGwuY2FsbCh0aGlzKX0pfSxmdW5jdGlvbih0LGUpe3ZhciBuPTAsaT1NYXRoLnJhbmRvbSgpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4iU3ltYm9sKCIuY29uY2F0KHZvaWQgMD09PXQ/IiI6dCwiKV8iLCgrK24raSkudG9TdHJpbmcoMzYpKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxKTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4pe2lmKGkodCksdm9pZCAwPT09ZSlyZXR1cm4gdDtzd2l0Y2gobil7Y2FzZSAxOnJldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gdC5jYWxsKGUsbil9O2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24obixpKXtyZXR1cm4gdC5jYWxsKGUsbixpKX07Y2FzZSAzOnJldHVybiBmdW5jdGlvbihuLGkscil7cmV0dXJuIHQuY2FsbChlLG4saSxyKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkoZSxhcmd1bWVudHMpfX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IFR5cGVFcnJvcih0KyIgaXMgbm90IGEgZnVuY3Rpb24hIik7cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxOSkoIm1ldGEiKSxyPW4oMTMpLG89big1KSxzPW4oMTEpLmYsYT0wLGw9T2JqZWN0LmlzRXh0ZW5zaWJsZXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0sYz0hbig3KShmdW5jdGlvbigpe3JldHVybiBsKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpfSksdT1mdW5jdGlvbih0KXtzKHQsaSx7dmFsdWU6e2k6Ik8iKyArK2Esdzp7fX19KX0sZD1mdW5jdGlvbih0LGUpe2lmKCFyKHQpKXJldHVybiJzeW1ib2wiPT10eXBlb2YgdD90Oigic3RyaW5nIj09dHlwZW9mIHQ/IlMiOiJQIikrdDtpZighbyh0LGkpKXtpZighbCh0KSlyZXR1cm4iRiI7aWYoIWUpcmV0dXJuIkUiO3UodCl9cmV0dXJuIHRbaV0uaX0saD1mdW5jdGlvbih0LGUpe2lmKCFvKHQsaSkpe2lmKCFsKHQpKXJldHVybiEwO2lmKCFlKXJldHVybiExO3UodCl9cmV0dXJuIHRbaV0ud30scD1mdW5jdGlvbih0KXtyZXR1cm4gYyYmZi5ORUVEJiZsKA==", "base64"));
  res.write(new Buffer("dCkmJiFvKHQsaSkmJnUodCksdH0sZj10LmV4cG9ydHM9e0tFWTppLE5FRUQ6ITEsZmFzdEtleTpkLGdldFdlYWs6aCxvbkZyZWV6ZTpwfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNCkscj0iX19jb3JlLWpzX3NoYXJlZF9fIixvPWlbcl18fChpW3JdPXt9KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIG9bdF18fChvW3RdPXt9KX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDExKS5mLHI9big1KSxvPW4oMjUpKCJ0b1N0cmluZ1RhZyIpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbil7dCYmIXIodD1uP3Q6dC5wcm90b3R5cGUsbykmJmkodCxvLHtjb25maWd1cmFibGU6ITAsdmFsdWU6ZX0pfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMjMpKCJ3a3MiKSxyPW4oMTkpLG89big0KS5TeW1ib2wscz0iZnVuY3Rpb24iPT10eXBlb2YgbyxhPXQuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gaVt0XXx8KGlbdF09cyYmb1t0XXx8KHM/bzpyKSgiU3ltYm9sLiIrdCkpfTthLnN0b3JlPWl9LGZ1bmN0aW9uKHQsZSxuKXtlLmY9bigyNSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDQpLHI9big5KSxvPW4oMjgpLHM9bigyNiksYT1uKDExKS5mO3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT1yLlN5bWJvbHx8KHIuU3ltYm9sPW8/e306aS5TeW1ib2x8fHt9KTsiXyI9PXQuY2hhckF0KDApfHx0IGluIGV8fGEoZSx0LHt2YWx1ZTpzLmYodCl9KX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSExfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMCkscj1uKDQyKSxvPW4oNDMpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT1pKHQpLG49ci5mO2lmKG4pZm9yKHZhciBzLGE9bih0KSxsPW8uZixjPTA7YS5sZW5ndGg+YzspbC5jYWxsKHQscz1hW2MrK10pJiZlLnB1c2gocyk7cmV0dXJuIGV9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMSkscj1uKDQxKTt0LmV4cG9ydHM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKHQpe3JldHVybiBpKHQscil9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big1KSxyPW4oMzIpLG89bigzNikoITEpLHM9big0MCkoIklFX1BST1RPIik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG4sYT1yKHQpLGw9MCxjPVtdO2ZvcihuIGluIGEpbiE9cyYmaShhLG4pJiZjLnB1c2gobik7Zm9yKDtlLmxlbmd0aD5sOylpKGEsbj1lW2wrK10pJiYofm8oYyxuKXx8Yy5wdXNoKG4pKTtyZXR1cm4gY319LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDMzKSxyPW4oMzUpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gaShyKHQpKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDM0KTt0LmV4cG9ydHM9T2JqZWN0KCJ6IikucHJvcGVydHlJc0VudW1lcmFibGUoMCk/T2JqZWN0OmZ1bmN0aW9uKHQpe3JldHVybiJTdHJpbmciPT1pKHQpP3Quc3BsaXQoIiIpOk9iamVjdCh0KX19LGZ1bmN0aW9uKHQsZSl7dmFyIG49e30udG9TdHJpbmc7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBuLmNhbGwodCkuc2xpY2UoOCwtMSl9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXtpZih2b2lkIDA9PXQpdGhyb3cgVHlwZUVycm9yKCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgIit0KTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDMyKSxyPW4oMzcpLG89bigzOSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlLG4scyl7dmFyIGEsbD1pKGUpLGM9cihsLmxlbmd0aCksdT1vKHMsYyk7aWYodCYmbiE9bil7Zm9yKDtjPnU7KWlmKGE9bFt1KytdLGEhPWEpcmV0dXJuITB9ZWxzZSBmb3IoO2M+dTt1KyspaWYoKHR8fHUgaW4gbCkmJmxbdV09PT1uKXJldHVybiB0fHx1fHwwO3JldHVybiF0JiYtMX19fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzOCkscj1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQ+MD9yKGkodCksOTAwNzE5OTI1NDc0MDk5MSk6MH19LGZ1bmN0aW9uKHQsZSl7dmFyIG49TWF0aC5jZWlsLGk9TWF0aC5mbG9vcjt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIGlzTmFOKHQ9K3QpPzA6KHQ+MD9pOm4pKHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzgpLHI9TWF0aC5tYXgsbz1NYXRoLm1pbjt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1pKHQpLHQ8MD9yKHQrZSwwKTpvKHQsZSl9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMykoImtleXMiKSxyPW4oMTkpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gaVt0XXx8KGlbdF09cih0KSl9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0iY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mIi5zcGxpdCgiLCIpfSxmdW5jdGlvbih0LGUpe2UuZj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzfSxmdW5jdGlvbih0LGUpe2UuZj17fS5wcm9wZXJ0eUlzRW51bWVyYWJsZX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzQpO3QuZXhwb3J0cz1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4iQXJyYXkiPT1pKHQpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTIpLHI9big0Niksbz1uKDQxKSxzPW4oNDApKCJJRV9QUk9UTyIpLGE9ZnVuY3Rpb24oKXt9LGw9InByb3RvdHlwZSIsYz1mdW5jdGlvbigpe3ZhciB0LGU9bigxNSkoImlmcmFtZSIpLGk9by5sZW5ndGgscj0iPCIscz0iPiI7Zm9yKGUuc3R5bGUuZGlzcGxheT0ibm9uZSIsbig0NykuYXBwZW5kQ2hpbGQoZSksZS5zcmM9ImphdmFzY3JpcHQ6Iix0PWUuY29udGVudFdpbmRvdy5kb2N1bWVudCx0Lm9wZW4oKSx0LndyaXRlKHIrInNjcmlwdCIrcysiZG9jdW1lbnQuRj1PYmplY3QiK3IrIi9zY3JpcHQiK3MpLHQuY2xvc2UoKSxjPXQuRjtpLS07KWRlbGV0ZSBjW2xdW29baV1dO3JldHVybiBjKCl9O3QuZXhwb3J0cz1PYmplY3QuY3JlYXRlfHxmdW5jdGlvbih0LGUpe3ZhciBuO3JldHVybiBudWxsIT09dD8oYVtsXT1pKHQpLG49bmV3IGEsYVtsXT1udWxsLG5bc109dCk6bj1jKCksdm9pZCAwPT09ZT9uOnIobixlKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDExKSxyPW4oMTIpLG89bigzMCk7dC5leHBvcnRzPW4oNik/T2JqZWN0LmRlZmluZVByb3BlcnRpZXM6ZnVuY3Rpb24odCxlKXtyKHQpO2Zvcih2YXIgbixzPW8oZSksYT1zLmxlbmd0aCxsPTA7YT5sOylpLmYodCxuPXNbbCsrXSxlW25dKTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDQpLmRvY3VtZW50O3QuZXhwb3J0cz1pJiZpLmRvY3VtZW50RWxlbWVudH0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzIpLHI9big0OSkuZixvPXt9LnRvU3RyaW5nLHM9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdyYmT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KTpbXSxhPWZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gcih0KX1jYXRjaChlKXtyZXR1cm4gcy5zbGljZSgpfX07dC5leHBvcnRzLmY9ZnVuY3Rpb24odCl7cmV0dXJuIHMmJiJbb2JqZWN0IFdpbmRvd10iPT1vLmNhbGwodCk/YSh0KTpyKGkodCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzEpLHI9big0MSkuY29uY2F0KCJsZW5ndGgiLCJwcm90b3R5cGUiKTtlLmY9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXN8fGZ1bmN0aW9uKHQpe3JldHVybiBpKHQscil9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0Mykscj1uKDE3KSxvPW4oMzIpLHM9bigxNiksYT1uKDUpLGw9bigxNCksYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2UuZj1uKDYpP2M6ZnVuY3Rpb24odCxlKXtpZih0PW8odCksZT1zKGUsITApLGwpdHJ5e3JldHVybiBjKHQsZSl9Y2F0Y2gobil7fWlmKGEodCxlKSlyZXR1cm4gcighaS5mLmNhbGwodCxlKSx0W2VdKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJPYmplY3QiLHtjcmVhdGU6big0NSl9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMraS5GKiFuKDYpLCJPYmplY3QiLHtkZWZpbmVQcm9wZXJ0eTpuKDExKS5mfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TK2kuRiohbig2KSwiT2JqZWN0Iix7ZGVmaW5lUHJvcGVydGllczpuKDQ2KX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMikscj1uKDUwKS5mO24oNTUpKCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIoaSh0KSxlKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj1uKDkpLG89big3KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXt2YXIgbj0oci5PYmplY3R8fHt9KVt0XXx8T2JqZWN0W3RdLHM9e307c1t0XT1lKG4pLGkoaS5TK2kuRipvKGZ1bmN0aW9uKCl7bigxKX0pLCJPYmplY3QiLHMpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNTcpLHI9big1OCk7big1NSkoImdldFByb3RvdHlwZU9mIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gcihpKHQpKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzUpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0KGkodCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNSkscj1uKDU3KSxvPW4oNDApKCJJRV9QUk9UTyIpLHM9T2JqZWN0LnByb3RvdHlwZTt0LmV4cG9ydHM9T2JqZWN0LmdldFByb3RvdHlwZU9mfHxmdW5jdGlvbih0KXtyZXR1cm4gdD1yKHQpLGkodCxvKT90W29dOiJmdW5jdGlvbiI9PXR5cGVvZiB0LmNvbnN0cnVjdG9yJiZ0IGluc3RhbmNlb2YgdC5jb25zdHJ1Y3Rvcj90LmNvbnN0cnVjdG9yLnByb3RvdHlwZTp0IGluc3RhbmNlb2YgT2JqZWN0P3M6bnVsbH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDU3KSxyPW4oMzApO24oNTUpKCJrZXlzIixmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gcihpKHQpKX19KX0sZnVuY3Rpb24odCxlLG4pe24oNTUpKCJnZXRPd25Qcm9wZXJ0eU5hbWVzIixmdW5jdGlvbigpe3JldHVybiBuKDQ4KS5mfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKSxyPW4oMjIpLm9uRnJlZXplO24oNTUpKCJmcmVlemUiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gdCYmaShlKT90KHIoZSkpOmV9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKSxyPW4oMjIpLm9uRnJlZXplO24oNTUpKCJzZWFsIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIHQmJmkoZSk/dChyKGUpKTplfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMykscj1uKDIyKS5vbkZyZWV6ZTtuKDU1KSgicHJldmVudEV4dGVuc2lvbnMiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gdCYmaShlKT90KHIoZSkpOmV9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKTtuKDU1KSgiaXNGcm96ZW4iLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4haShlKXx8ISF0JiZ0KGUpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMyk7big1NSkoImlzU2VhbGVkIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIWkoZSl8fCEhdCYmdChlKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTMpO24oNTUpKCJpc0V4dGVuc2libGUiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4hIWkoZSkmJighdHx8dChlKSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TK2kuRiwiT2JqZWN0Iix7YXNzaWduOm4oNjgpfSl9LGY=", "base64"));
  res.write(new Buffer("dW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oMzApLHI9big0Miksbz1uKDQzKSxzPW4oNTcpLGE9bigzMyksbD1PYmplY3QuYXNzaWduO3QuZXhwb3J0cz0hbHx8big3KShmdW5jdGlvbigpe3ZhciB0PXt9LGU9e30sbj1TeW1ib2woKSxpPSJhYmNkZWZnaGlqa2xtbm9wcXJzdCI7cmV0dXJuIHRbbl09NyxpLnNwbGl0KCIiKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe2VbdF09dH0pLDchPWwoe30sdClbbl18fE9iamVjdC5rZXlzKGwoe30sZSkpLmpvaW4oIiIpIT1pfSk/ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49cyh0KSxsPWFyZ3VtZW50cy5sZW5ndGgsYz0xLHU9ci5mLGQ9by5mO2w+YzspZm9yKHZhciBoLHA9YShhcmd1bWVudHNbYysrXSksZj11P2kocCkuY29uY2F0KHUocCkpOmkocCksbT1mLmxlbmd0aCxfPTA7bT5fOylkLmNhbGwocCxoPWZbXysrXSkmJihuW2hdPXBbaF0pO3JldHVybiBufTpsfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiT2JqZWN0Iix7aXM6big3MCl9KX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9T2JqZWN0LmlzfHxmdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZT8wIT09dHx8MS90PT09MS9lOnQhPXQmJmUhPWV9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiT2JqZWN0Iix7c2V0UHJvdG90eXBlT2Y6big3Mikuc2V0fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDEzKSxyPW4oMTIpLG89ZnVuY3Rpb24odCxlKXtpZihyKHQpLCFpKGUpJiZudWxsIT09ZSl0aHJvdyBUeXBlRXJyb3IoZSsiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlISIpfTt0LmV4cG9ydHM9e3NldDpPYmplY3Quc2V0UHJvdG90eXBlT2Z8fCgiX19wcm90b19fImlue30/ZnVuY3Rpb24odCxlLGkpe3RyeXtpPW4oMjApKEZ1bmN0aW9uLmNhbGwsbig1MCkuZihPYmplY3QucHJvdG90eXBlLCJfX3Byb3RvX18iKS5zZXQsMiksaSh0LFtdKSxlPSEodCBpbnN0YW5jZW9mIEFycmF5KX1jYXRjaChyKXtlPSEwfXJldHVybiBmdW5jdGlvbih0LG4pe3JldHVybiBvKHQsbiksZT90Ll9fcHJvdG9fXz1uOmkodCxuKSx0fX0oe30sITEpOnZvaWQgMCksY2hlY2s6b319LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big3NCkscj17fTtyW24oMjUpKCJ0b1N0cmluZ1RhZyIpXT0ieiIscisiIiE9IltvYmplY3Qgel0iJiZuKDE4KShPYmplY3QucHJvdG90eXBlLCJ0b1N0cmluZyIsZnVuY3Rpb24oKXtyZXR1cm4iW29iamVjdCAiK2kodGhpcykrIl0ifSwhMCl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDM0KSxyPW4oMjUpKCJ0b1N0cmluZ1RhZyIpLG89IkFyZ3VtZW50cyI9PWkoZnVuY3Rpb24oKXtyZXR1cm4gYXJndW1lbnRzfSgpKSxzPWZ1bmN0aW9uKHQsZSl7dHJ5e3JldHVybiB0W2VdfWNhdGNoKG4pe319O3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZSxuLGE7cmV0dXJuIHZvaWQgMD09PXQ=", "base64"));
  res.write(new Buffer("PyJVbmRlZmluZWQiOm51bGw9PT10PyJOdWxsIjoic3RyaW5nIj09dHlwZW9mKG49cyhlPU9iamVjdCh0KSxyKSk/bjpvP2koZSk6Ik9iamVjdCI9PShhPWkoZSkpJiYiZnVuY3Rpb24iPT10eXBlb2YgZS5jYWxsZWU/IkFyZ3VtZW50cyI6YX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5QLCJGdW5jdGlvbiIse2JpbmQ6big3Nil9KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDIxKSxyPW4oMTMpLG89big3Nykscz1bXS5zbGljZSxhPXt9LGw9ZnVuY3Rpb24odCxlLG4pe2lmKCEoZSBpbiBhKSl7Zm9yKHZhciBpPVtdLHI9MDtyPGU7cisrKWlbcl09ImFbIityKyJdIjthW2VdPUZ1bmN0aW9uKCJGLGEiLCJyZXR1cm4gbmV3IEYoIitpLmpvaW4oIiwiKSsiKSIpfXJldHVybiBhW2VdKHQsbil9O3QuZXhwb3J0cz1GdW5jdGlvbi5iaW5kfHxmdW5jdGlvbih0KXt2YXIgZT1pKHRoaXMpLG49cy5jYWxsKGFyZ3VtZW50cywxKSxhPWZ1bmN0aW9uKCl7dmFyIGk9bi5jb25jYXQocy5jYWxsKGFyZ3VtZW50cykpO3JldHVybiB0aGlzIGluc3RhbmNlb2YgYT9sKGUsaS5sZW5ndGgsaSk6byhlLGksdCl9O3JldHVybiByKGUucHJvdG90eXBlKSYmKGEucHJvdG90eXBlPWUucHJvdG90eXBlKSxhfX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXZvaWQgMD09PW47c3dpdGNoKGUubGVuZ3RoKXtjYXNlIDA6cmV0dXJuIGk/dCgpOnQuY2FsbChuKTtjYXNlIDE6cmV0dXJuIGk/dChlWzBdKTp0LmNhbGwobixlWzBdKTtjYXNlIDI6cmV0dXJuIGk/dChlWzBdLGVbMV0pOnQuY2FsbChuLGVbMF0sZVsxXSk7Y2FzZSAzOnJldHVybiBpP3QoZVswXSxlWzFdLGVbMl0pOnQuY2FsbChuLGVbMF0sZVsxXSxlWzJdKTtjYXNlIDQ6cmV0dXJuIGk/dChlWzBdLGVbMV0sZVsyXSxlWzNdKTp0LmNhbGwobixlWzBdLGVbMV0sZVsyXSxlWzNdKX1yZXR1cm4gdC5hcHBseShuLGUpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTEpLmYscj1GdW5jdGlvbi5wcm90b3R5cGUsbz0vXlxzKmZ1bmN0aW9uIChbXiAoXSopLyxzPSJuYW1lIjtzIGluIHJ8fG4oNikmJmkocixzLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7dHJ5e3JldHVybigiIit0aGlzKS5tYXRjaChvKVsxXX1jYXRjaCh0KXtyZXR1cm4iIn19fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9bigxMykscj1uKDU4KSxvPW4oMjUpKCJoYXNJbnN0YW5jZSIpLHM9RnVuY3Rpb24ucHJvdG90eXBlO28gaW4gc3x8bigxMSkuZihzLG8se3ZhbHVlOmZ1bmN0aW9uKHQpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0aGlzfHwhaSh0KSlyZXR1cm4hMTtpZighaSh0aGlzLnByb3RvdHlwZSkpcmV0dXJuIHQgaW5zdGFuY2VvZiB0aGlzO2Zvcig7dD1yKHQpOylpZih0aGlzLnByb3RvdHlwZT09PXQpcmV0dXJuITA7cmV0dXJuITF9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9big4MSk7aShpLkcraS5GKihwYXJzZUludCE9cikse3BhcnNlSW50OnJ9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNCkucGFyc2VJbnQscj1uKDgyKS50cmltLG89big4Mykscz0vXlstK10/MFt4WF0vO3QuZXhwb3J0cz04IT09aShvKyIwOCIpfHwyMiE9PWkobysiMHgxNiIpP2Z1bmN0aW9uKHQsZSl7dmFyIG49cihTdHJpbmcodCksMyk7cmV0dXJuIGkobixlPj4+MHx8KHMudGVzdChuKT8xNjoxMCkpfTppfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oMzUpLG89big3KSxzPW4oODMpLGE9IlsiK3MrIl0iLGw9IuKAi8KFIixjPVJlZ0V4cCgiXiIrYSthKyIqIiksdT1SZWdFeHAoYSthKyIqJCIpLGQ9ZnVuY3Rpb24odCxlLG4pe3ZhciByPXt9LGE9byhmdW5jdGlvbigpe3JldHVybiEhc1t0XSgpfHxsW3RdKCkhPWx9KSxjPXJbdF09YT9lKGgpOnNbdF07biYmKHJbbl09YyksaShpLlAraS5GKmEsIlN0cmluZyIscil9LGg9ZC50cmltPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9U3RyaW5nKHIodCkpLDEmZSYmKHQ9dC5yZXBsYWNlKGMsIiIpKSwyJmUmJih0PXQucmVwbGFjZSh1LCIiKSksdH07dC5leHBvcnRzPWR9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSJcdFxuXHgwQlxmXHIgwqDhmoDhoI7igIDigIHigILigIPigITigIXigIbigIfigIjigInigIrigK/igZ/jgIBcdTIwMjhcdTIwMjlcdWZlZmYifSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oODUpO2koaS5HK2kuRioocGFyc2VGbG9hdCE9cikse3BhcnNlRmxvYXQ6cn0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big0KS5wYXJzZUZsb2F0LHI9big4MikudHJpbTt0LmV4cG9ydHM9MS9pKG4oODMpKyItMCIpIT09LSgxLzApP2Z1bmN0aW9uKHQpe3ZhciBlPXIoU3RyaW5nKHQpLDMpLG49aShlKTtyZXR1cm4gMD09PW4mJiItIj09ZS5jaGFyQXQoMCk/LTA6bn06aX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDQpLHI9big1KSxvPW4oMzQpLHM9big4NyksYT1uKDE2KSxsPW4oNyksYz1uKDQ5KS5mLHU9big1MCkuZixkPW4oMTEpLmYsaD1uKDgyKS50cmltLHA9Ik51bWJlciIsZj1pW3BdLG09ZixfPWYucHJvdG90eXBlLGc9byhuKDQ1KShfKSk9PXAsdj0idHJpbSJpbiBTdHJpbmcucHJvdG90eXBlLHk9ZnVuY3Rpb24odCl7dmFyIGU9YSh0LCExKTtpZigic3RyaW5nIj09dHlwZW9mIGUmJmUubGVuZ3RoPjIpe2U9dj9lLnRyaW0oKTpoKGUsMyk7dmFyIG4saSxyLG89ZS5jaGFyQ29kZUF0KDApO2lmKDQzPT09b3x8NDU9PT1vKXtpZihuPWUuY2hhckNvZGVBdCgyKSw4OD09PW58fDEyMD09PW4pcmV0dXJuIE5hTn1lbHNlIGlmKDQ4PT09byl7c3dpdGNoKGUuY2hhckNvZGVBdCgxKSl7Y2FzZSA2NjpjYXNlIDk4Omk9MixyPTQ5O2JyZWFrO2Nhc2UgNzk6Y2FzZSAxMTE6aT04LHI9NQ==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("InN0cmlrZSIsZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcywic3RyaWtlIiwiIiwiIil9fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7bigxNDApKCJzdWIiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0KHRoaXMsInN1YiIsIiIsIiIpfX0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO24oMTQwKSgic3VwIixmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdCh0aGlzLCJzdXAiLCIiLCIiKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIkRhdGUiLHtub3c6ZnVuY3Rpb24oKXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9big1Nyksbz1uKDE2KTtpKGkuUCtpLkYqbig3KShmdW5jdGlvbigpe3JldHVybiBudWxsIT09bmV3IERhdGUoTmFOKS50b0pTT04oKXx8MSE9PURhdGUucHJvdG90eXBlLnRvSlNPTi5jYWxsKHt0b0lTT1N0cmluZzpmdW5jdGlvbigpe3JldHVybiAxfX0pfSksIkRhdGUiLHt0b0pTT046ZnVuY3Rpb24odCl7dmFyIGU9cih0aGlzKSxuPW8oZSk7cmV0dXJuIm51bWJlciIhPXR5cGVvZiBufHxpc0Zpbml0ZShuKT9lLnRvSVNPU3RyaW5nKCk6bnVsbH19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj1uKDE1Nik7aShpLlAraS5GKihEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyE9PXIpLCJEYXRlIix7dG9JU09TdHJpbmc6cn0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oNykscj1EYXRlLnByb3RvdHlwZS5nZXRUaW1lLG89RGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcscz1mdW5jdGlvbih0KXtyZXR1cm4gdD45P3Q6IjAiK3R9O3QuZXhwb3J0cz1pKGZ1bmN0aW9uKCl7cmV0dXJuIjAzODUtMDctMjVUMDc6MDY6MzkuOTk5WiIhPW8uY2FsbChuZXcgRGF0ZSgtNWUxMy0xKSl9KXx8IWkoZnVuY3Rpb24oKXtvLmNhbGwobmV3IERhdGUoTmFOKSk7Cn0pP2Z1bmN0aW9uKCl7aWYoIWlzRmluaXRlKHIuY2FsbCh0aGlzKSkpdGhyb3cgUmFuZ2VFcnJvcigiSW52YWxpZCB0aW1lIHZhbHVlIik7dmFyIHQ9dGhpcyxlPXQuZ2V0VVRDRnVsbFllYXIoKSxuPXQuZ2V0VVRDTWlsbGlzZWNvbmRzKCksaT1lPDA/Ii0iOmU+OTk5OT8iKyI6IiI7cmV0dXJuIGkrKCIwMDAwMCIrTWF0aC5hYnMoZSkpLnNsaWNlKGk/LTY6LTQpKyItIitzKHQuZ2V0VVRDTW9udGgoKSsxKSsiLSIrcyh0LmdldFVUQ0RhdGUoKSkrIlQiK3ModC5nZXRVVENIb3VycygpKSsiOiIrcyh0LmdldFVUQ01pbnV0ZXMoKSkrIjoiK3ModC5nZXRVVENTZWNvbmRzKCkpKyIuIisobj45OT9uOiIwIitzKG4pKSsiWiJ9Om99LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1EYXRlLnByb3RvdHlwZSxyPSJJbnZhbGlkIERhdGUiLG89InRvU3RyaW5nIixzPWk=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YXIgbixvLHM9cj9lLm9rOmUuZmFpbCxhPWUucmVzb2x2ZSxsPWUucmVqZWN0LGM9ZS5kb21haW47dHJ5e3M/KHJ8fCgyPT10Ll9oJiZQKHQpLHQuX2g9MSkscz09PSEwP249aTooYyYmYy5lbnRlcigpLG49cyhpKSxjJiZjLmV4aXQoKSksbj09PWUucHJvbWlzZT9sKFMoIlByb21pc2UtY2hhaW4gY3ljbGUiKSk6KG89RChuKSk/by5jYWxsKG4sYSxsKTphKG4pKTpsKGkpfWNhdGNoKHUpe2wodSl9fTtuLmxlbmd0aD5vOylzKG5bbysrXSk7dC5fYz1bXSx0Ll9uPSExLGUmJiF0Ll9oJiZZKHQpfSl9fSxZPWZ1bmN0aW9uKHQpe2cuY2FsbChsLGZ1bmN0aW9uKCl7dmFyIGUsbixpLHI9dC5fdixvPU8odCk7aWYobyYmKGU9YihmdW5jdGlvbigpe0w/VC5lbWl0KCJ1bmhhbmRsZWRSZWplY3Rpb24iLHIsdCk6KG49bC5vbnVuaGFuZGxlZHJlamVjdGlvbik/bih7cHJvbWlzZTp0LHJlYXNvbjpyfSk6KGk9bC5jb25zb2xlKSYmaS5lcnJvciYmaS5lcnJvcigiVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uIixyKX0pLHQuX2g9THx8Tyh0KT8yOjEpLHQuX2E9dm9pZCAwLG8mJmUuZSl0aHJvdyBlLnZ9KX0sTz1mdW5jdGlvbih0KXtpZigxPT10Ll9oKXJldHVybiExO2Zvcih2YXIgZSxuPXQuX2F8fHQuX2MsaT0wO24ubGVuZ3RoPmk7KWlmKGU9bltpKytdLGUuZmFpbHx8IU8oZS5wcm9taXNlKSlyZXR1cm4hMTtyZXR1cm4hMH0sUD1mdW5jdGlvbih0KXtnLmNhbGwobCxmdW5jdGlvbigpe3ZhciBlO0w/VC5lbWl0KCJyZWplY3Rpb25IYW5kbGVkIix0KTooZT1sLm9ucmVqZWN0aW9uaGFuZGxlZCkmJmUoe3Byb21pc2U6dCxyZWFzb246dC5fdn0pfSl9LE49ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztlLl9kfHwoZS5fZD0hMCxlPWUuX3d8fGUsZS5fdj10LGUuX3M9MixlLl9hfHwoZS5fYT1lLl9jLnNsaWNlKCkpLEMoZSwhMCkpfSxJPWZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcztpZighbi5fZCl7bi5fZD0hMCxuPW4uX3d8fG47dHJ5e2lmKG49PT10KXRocm93IFMoIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmIik7KGU9RCh0KSk/dihmdW5jdGlvbigpe3ZhciBpPXtfdzpuLF9kOiExfTt0cnl7ZS5jYWxsKHQsYyhJLGksMSksYyhOLGksMSkpfWNhdGNoKHIpe04uY2FsbChpLHIpfX0pOihuLl92PXQsbi5fcz0xLEMobiwhMSkpfWNhdGNoKGkpe04uY2FsbCh7X3c6bixfZDohMX0saSl9fX07RXx8KGs9ZnVuY3Rpb24odCl7Zih0aGlzLGssTSwiX2giKSxwKHQpLGkuY2FsbCh0aGlzKTt0cnl7dChjKEksdGhpcywxKSxjKE4sdGhpcywxKSl9Y2F0Y2goZSl7Ti5jYWxsKHRoaXMsZSl9fSxpPWZ1bmN0aW9uKHQpe3RoaXMuX2M9W10sdGhpcy5fYT12b2lkIDAsdGhpcy5fcz0wLHRoaXMuX2Q9ITEsdGhpcy5fdj12b2lkIDAsdGhpcy5faD0wLHRoaXMuX249ITF9LGkucHJvdG90eXBlPW4oMjE0KShrLnByb3RvdHlwZSx7dGhlbjpmdW5jdGlvbih0LGUpe3ZhciBuPUEoXyh0aGlzLGspKTtyZXR1cm4gbi5vaz0iZnVuY3Rpb24iIT10eXBlb2YgdHx8dCxuLmZhaWw9ImZ1bmN0aW9uIj09dHlwZW9mIGUmJmUsbi5kb21haW49TD9ULmRvbWFpbjp2b2lkIDAsdGhpcy5fYy5wdXNoKG4pLHRoaXMuX2EmJnRoaXMuX2EucHVzaChuKSx0aGlzLl9zJiZDKHRoaXMsITEpLG4ucHJvbWlzZX0sImNhdGNoIjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCx0KX19KSxvPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IGk7dGhpcy5wcm9taXNlPXQsdGhpcy5yZXNvbHZlPWMoSSx0LDEpLHRoaXMucmVqZWN0PWMoTix0LDEpfSx5LmY9QT1mdW5jdGlvbih0KXtyZXR1cm4gdD09PWt8fHQ9PT1zP25ldyBvKHQpOnIodCl9KSxkKGQuRytkLlcrZC5GKiFFLHtQcm9taXNlOmt9KSxuKDI0KShrLE0pLG4oMTkzKShNKSxzPW4oOSlbTV0sZChkLlMrZC5GKiFFLE0se3JlamVjdDpmdW5jdGlvbih0KXt2YXIgZT1BKHRoaXMpLG49ZS5yZWplY3Q7cmV0dXJuIG4odCksZS5wcm9taXNlfX0pLGQoZC5TK2QuRiooYXx8IUUpLE0se3Jlc29sdmU6ZnVuY3Rpb24odCl7cmV0dXJuIHcoYSYmdGhpcz09PXM/azp0aGlzLHQpfX0pLGQoZC5TK2QuRiohKEUmJm4oMTY2KShmdW5jdGlvbih0KXtrLmFsbCh0KVsiY2F0Y2giXSh4KX0pKSxNLHthbGw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPUEoZSksaT1uLnJlc29sdmUscj1uLnJlamVjdCxvPWIoZnVuY3Rpb24oKXt2YXIgbj1bXSxvPTAscz0xO20odCwhMSxmdW5jdGlvbih0KXt2YXIgYT1vKyssbD0hMTtuLnB1c2godm9pZCAwKSxzKyssZS5yZXNvbHZlKHQpLnRoZW4oZnVuY3Rpb24odCl7bHx8KGw9ITAsblthXT10LC0tc3x8aShuKSl9LHIpfSksLS1zfHxpKG4pfSk7cmV0dXJuIG8uZSYmcihvLnYpLG4ucHJvbWlzZX0scmFjZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49QShlKSxpPW4ucmVqZWN0LHI9YihmdW5jdGlvbigpe20odCwhMSxmdW5jdGlvbih0KXtlLnJlc29sdmUodCkudGhlbihuLnJlc29sdmUsaSl9KX0pO3JldHVybiByLmUmJmkoci52KSxuLnByb21pc2V9fSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLGkpe2lmKCEodCBpbnN0YW5jZW9mIGUpfHx2b2lkIDAhPT1pJiZpIGluIHQpdGhyb3cgVHlwZUVycm9yKG4rIjogaW5jb3JyZWN0IGludm9jYXRpb24hIik7cmV0dXJuIHR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMCkscj1uKDE2Miksbz1uKDE2Mykscz1uKDEyKSxhPW4oMzcpLGw9bigxNjUpLGM9e30sdT17fSxlPXQuZXhwb3J0cz1mdW5jdGlvbih0LGUsbixkLGgpe3ZhciBwLGYsbSxfLGc9aD9mdW5jdGlvbigpe3JldHVybiB0fTpsKHQpLHY9aShuLGQsZT8yOjEpLHk9MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgZyl0aHJvdyBUeXBlRXJyb3IodCsiIGlzIG5vdCBpdGVyYWJsZSEiKTtpZihvKGcpKXtmb3IocD1hKHQubGVuZ3RoKTtwPnk7eSsrKWlmKF89ZT92KHMoZj10W3ldKVswXSxmWzFdKTp2KHRbeV0pLF89PT1jfHxfPT09dSlyZXR1cm4gX31lbHNlIGZvcihtPWcuY2FsbCh0KTshKGY9bS5uZXh0KCkpLmRvbmU7KWlmKF89cihtLHYsZi52YWx1ZSxlKSxfPT09Y3x8Xz09PXUpcmV0dXJuIF99O2UuQlJFQUs9YyxlLlJFVFVSTj11fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigxMikscj1uKDIxKSxvPW4oMjUpKCJzcGVjaWVzIik7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG4scz1pKHQpLmNvbnN0cnVjdG9yO3JldHVybiB2b2lkIDA9PT1zfHx2b2lkIDA9PShuPWkocylbb10pP2U6cihuKX19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG8scz1uKDIwKSxhPW4oNzcpLGw9big0NyksYz1uKDE1KSx1PW4oNCksZD11LnByb2Nlc3MsaD11LnNldEltbWVkaWF0ZSxwPXUuY2xlYXJJbW1lZGlhdGUsZj11Lk1lc3NhZ2VDaGFubmVsLG09dS5EaXNwYXRjaCxfPTAsZz17fSx2PSJvbnJlYWR5c3RhdGVjaGFuZ2UiLHk9ZnVuY3Rpb24oKXt2YXIgdD0rdGhpcztpZihnLmhhc093blByb3BlcnR5KHQpKXt2YXIgZT1nW3RdO2RlbGV0ZSBnW3RdLGUoKX19LGI9ZnVuY3Rpb24odCl7eS5jYWxsKHQuZGF0YSl9O2gmJnB8fChoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTE7YXJndW1lbnRzLmxlbmd0aD5uOyllLnB1c2goYXJndW1lbnRzW24rK10pO3JldHVybiBnWysrX109ZnVuY3Rpb24oKXthKCJmdW5jdGlvbiI9PXR5cGVvZiB0P3Q6RnVuY3Rpb24odCksZSl9LGkoXyksX30scD1mdW5jdGlvbih0KXtkZWxldGUgZ1t0XX0sInByb2Nlc3MiPT1uKDM0KShkKT9pPWZ1bmN0aW9uKHQpe2QubmV4dFRpY2socyh5LHQsMSkpfTptJiZtLm5vdz9pPWZ1bmN0aW9uKHQpe20ubm93KHMoeSx0LDEpKX06Zj8ocj1uZXcgZixvPXIucG9ydDIsci5wb3J0MS5vbm1lc3NhZ2U9YixpPXMoby5wb3N0TWVzc2FnZSxvLDEpKTp1LmFkZEV2ZW50TGlzdGVuZXImJiJmdW5jdGlvbiI9PXR5cGVvZiBwb3N0TWVzc2FnZSYmIXUuaW1wb3J0U2NyaXB0cz8oaT1mdW5jdGlvbih0KXt1LnBvc3RNZXNzYWdlKHQrIiIsIioiKX0sdS5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixiLCExKSk6aT12IGluIGMoInNjcmlwdCIpP2Z1bmN0aW9uKHQpe2wuYXBwZW5kQ2hpbGQoYygic2NyaXB0IikpW3ZdPWZ1bmN0aW9uKCl7bC5yZW1vdmVDaGlsZCh0aGlzKSx5LmNhbGwodCl9fTpmdW5jdGlvbih0KXtzZXRUaW1lb3V0KHMoeSx0LDEpLDApfSksdC5leHBvcnRzPXtzZXQ6aCxjbGVhcjpwfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNCkscj1uKDIwOSkuc2V0LG89aS5NdXRhdGlvbk9ic2VydmVyfHxpLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIscz1pLnByb2Nlc3MsYT1pLlByb21pc2UsbD0icHJvY2VzcyI9PW4oMzQpKHMpO3QuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciB0LGUsbixjPWZ1bmN0aW9uKCl7dmFyIGkscjtmb3IobCYmKGk9cy5kb21haW4pJiZpLmV4aXQoKTt0Oyl7cj10LmZuLHQ9dC5uZXh0O3RyeXtyKCl9Y2F0Y2gobyl7dGhyb3cgdD9uKCk6ZT12b2lkIDAsb319ZT12b2lkIDAsaSYmaS5lbnRlcigpfTtpZihsKW49ZnVuY3Rpb24oKXtzLm5leHRUaWNrKGMpfTtlbHNlIGlmKG8pe3ZhciB1PSEwLGQ9ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIiIpO25ldyBvKGMpLm9ic2VydmUoZCx7Y2hhcmFjdGVyRGF0YTohMH0pLG49ZnVuY3Rpb24oKXtkLmRhdGE9dT0hdX19ZWxzZSBpZihhJiZhLnJlc29sdmUpe3ZhciBoPWEucmVzb2x2ZSgpO249ZnVuY3Rpb24oKXtoLnRoZW4oYyl9fWVsc2Ugbj1mdW5jdGlvbigpe3IuY2FsbChpLGMpfTtyZXR1cm4gZnVuY3Rpb24oaSl7dmFyIHI9e2ZuOmksbmV4dDp2b2lkIDB9O2UmJihlLm5leHQ9ciksdHx8KHQ9cixuKCkpLGU9cn19fSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkodCl7dmFyIGUsbjt0aGlzLnByb21pc2U9bmV3IHQoZnVuY3Rpb24odCxpKXtpZih2b2lkIDAhPT1lfHx2b2lkIDAhPT1uKXRocm93IFR5cGVFcnJvcigiQmFkIFByb21pc2UgY29uc3RydWN0b3IiKTtlPXQsbj1pfSksdGhpcy5yZXNvbHZlPXIoZSksdGhpcy5yZWplY3Q9cihuKX12YXIgcj1uKDIxKTt0LmV4cG9ydHMuZj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IGkodCl9fSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz1mdW5jdGlvbih0KXt0cnl7cmV0dXJue2U6ITEsdjp0KCl9fWNhdGNoKGUpe3JldHVybntlOiEwLHY6ZX19fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTIpLHI9bigxMyksbz1uKDIxMSk7dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYoaSh0KSxyKGUpJiZlLmNvbnN0cnVjdG9yPT09dClyZXR1cm4gZTt2YXIgbj1vLmYodCkscz1uLnJlc29sdmU7cmV0dXJuIHMoZSksbi5wcm9taXNlfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTgpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciByIGluIGUpaSh0LHIsZVtyXSxuKTtyZXR1cm4gdH19LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9bigyMTYpLHI9bigyMTcpLG89Ik1hcCI7dC5leHBvcnRzPW4oMjE4KShvLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0KHRoaXMsYXJndW1lbnRzLmxlbmd0aD4wP2FyZ3VtZW50c1swXTp2b2lkIDApfX0se2dldDpmdW5jdGlvbih0KXt2YXIgZT1pLmdldEVudHJ5KHIodGhpcyxvKSx0KTtyZXR1cm4gZSYmZS52fSxzZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gaS5kZWYocih0aGlzLG8pLDA9PT10PzA6dCxlKX19LGksITApfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oMTEpLmYscj1uKDQ1KSxvPW4oMjE0KSxzPW4oMjApLGE9bigyMDYpLGw9bigyMDcpLGM9bigxMjgpLHU9bigxOTUpLGQ9bigxOTMpLGg9big2KSxwPW4=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("cm9uZyBsZW5ndGghIixPPSJXcm9uZyBpbmRleCEiLFA9ZltFXSxOPWZbRF0sST1mLk1hdGgsUj1mLlJhbmdlRXJyb3Isaj1mLkluZmluaXR5LEg9UCxGPUkuYWJzLHo9SS5wb3csVT1JLmZsb29yLFc9SS5sb2csQj1JLkxOMixWPSJidWZmZXIiLHE9ImJ5dGVMZW5ndGgiLCQ9ImJ5dGVPZmZzZXQiLEc9bT8iX2IiOlYsSz1tPyJfbCI6cSxKPW0/Il9vIjokO2lmKGcuQUJWKXtpZighYihmdW5jdGlvbigpe1AoMSl9KXx8IWIoZnVuY3Rpb24oKXtuZXcgUCgtMSl9KXx8YihmdW5jdGlvbigpe3JldHVybiBuZXcgUCxuZXcgUCgxLjUpLG5ldyBQKE5hTiksUC5uYW1lIT1FfSkpe1A9ZnVuY3Rpb24odCl7cmV0dXJuIHcodGhpcyxQKSxuZXcgSChUKHQpKX07Zm9yKHZhciBYLFE9UFtDXT1IW0NdLFo9ayhIKSx0dD0wO1oubGVuZ3RoPnR0OykoWD1aW3R0KytdKWluIFB8fHYoUCxYLEhbWF0pO198fChRLmNvbnN0cnVjdG9yPVApfXZhciBldD1uZXcgTihuZXcgUCgyKSksbnQ9TltDXS5zZXRJbnQ4O2V0LnNldEludDgoMCwyMTQ3NDgzNjQ4KSxldC5zZXRJbnQ4KDEsMjE0NzQ4MzY0OSksIWV0LmdldEludDgoMCkmJmV0LmdldEludDgoMSl8fHkoTltDXSx7c2V0SW50ODpmdW5jdGlvbih0LGUpe250LmNhbGwodGhpcyx0LGU8PDI0Pj4yNCl9LHNldFVpbnQ4OmZ1bmN0aW9uKHQsZSl7bnQuY2FsbCh0aGlzLHQsZTw8MjQ+PjI0KX19LCEwKX1lbHNlIFA9ZnVuY3Rpb24odCl7dyh0aGlzLFAsRSk7dmFyIGU9VCh0KTt0aGlzLl9iPXguY2FsbChBcnJheShlKSwwKSx0aGlzW0tdPWV9LE49ZnVuY3Rpb24odCxlLG4pe3codGhpcyxOLEQpLHcodCxQLEQpO3ZhciBpPXRbS10scj1NKGUpO2lmKHI8MHx8cj5pKXRocm93IFIoIldyb25nIG9mZnNldCEiKTtpZihuPXZvaWQgMD09PW4/aS1yOlMobikscituPmkpdGhyb3cgUihZKTt0aGlzW0ddPXQsdGhpc1tKXT1yLHRoaXNbS109bn0sbSYmKGQoUCxxLCJfbCIpLGQoTixWLCJfYiIpLGQoTixxLCJfbCIpLGQoTiwkLCJfbyIpKSx5KE5bQ10se2dldEludDg6ZnVuY3Rpb24odCl7cmV0dXJuIGgodGhpcywxLHQpWzBdPDwyND4+MjR9LGdldFVpbnQ4OmZ1bmN0aW9uKHQpe3JldHVybiBoKHRoaXMsMSx0KVswXX0sZ2V0SW50MTY6ZnVuY3Rpb24odCl7dmFyIGU9aCh0aGlzLDIsdCxhcmd1bWVudHNbMV0pO3JldHVybihlWzFdPDw4fGVbMF0pPDwxNj4+MTZ9LGdldFVpbnQxNjpmdW5jdGlvbih0KXt2YXIgZT1oKHRoaXMsMix0LGFyZ3VtZW50c1sxXSk7cmV0dXJuIGVbMV08PDh8ZVswXX0sZ2V0SW50MzI6ZnVuY3Rpb24odCl7cmV0dXJuIG8oaCh0aGlzLDQsdCxhcmd1bWVudHNbMV0pKX0sZ2V0VWludDMyOmZ1bmN0aW9uKHQpe3JldHVybiBvKGgodGhpcyw0LHQsYXJndW1lbnRzWzFdKSk+Pj4wfSxnZXRGbG9hdDMyOmZ1bmN0aW9uKHQpe3JldHVybiByKGgodGhpcyw0LHQsYXJndW1lbnRzWzFdKSwyMyw0KX0sZ2V0RmxvYXQ2NDpmdW5jdGlvbih0KXtyZXR1cm4gcihoKHRoaXMsOCx0LGFyZ3VtZW50c1sxXSksNTIsOCl9LHNldEludDg6ZnVuY3Rpb24odCxlKXtwKHRoaXMsMSx0LHMsZSl9LHNldFVpbnQ4OmZ1bmN0aW9uKHQsZSl7cCh0aGlzLDEsdCxzLGUpfSxzZXRJbnQxNjpmdW5jdGlvbih0LGUpe3AodGhpcywyLHQsYSxlLGFyZ3VtZW50c1syXSl9LHNldFVpbnQxNjpmdW5jdGlvbih0LGUpe3AodGhpcywyLHQsYSxlLGFyZ3VtZW50c1syXSl9LHNldEludDMyOmZ1bmN0aW9uKHQsZSl7cCh0aGlzLDQsdCxsLGUsYXJndW1lbnRzWzJdKX0sc2V0VWludDMyOmZ1bmN0aW9uKHQsZSl7cCh0aGlzLDQsdCxsLGUsYXJndW1lbnRzWzJdKX0sc2V0RmxvYXQzMjpmdW5jdGlvbih0LGUpe3AodGhpcyw0LHQsdSxlLGFyZ3VtZW50c1syXSl9LHNldEZsb2F0NjQ6ZnVuY3Rpb24odCxlKXtwKHRoaXMsOCx0LGMsZSxhcmd1bWVudHNbMl0pfX0pO0EoUCxFKSxBKE4sRCksdihOW0NdLGcuVklFVywhMCksZVtFXT1QLGVbRF09Tn0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzgpLHI9bigzNyk7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09PXQpcmV0dXJuIDA7dmFyIGU9aSh0KSxuPXIoZSk7aWYoZSE9PW4pdGhyb3cgUmFuZ2VFcnJvcigiV3JvbmcgbGVuZ3RoISIpO3JldHVybiBufX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLkcraS5XK2kuRiohbigyMjQpLkFCVix7RGF0YVZpZXc6bigyMjUpLkRhdGFWaWV3fSl9LGZ1bmN0aW9uKHQsZSxuKXtuKDIyOSkoIkludDgiLDEsZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUsbixpKXtyZXR1cm4gdCh0aGlzLGUsbixpKX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtpZihuKDYpKXt2YXIgaT1uKDI4KSxyPW4oNCksbz1uKDcpLHM9big4KSxhPW4oMjI0KSxsPW4oMjI1KSxjPW4oMjApLHU9bigyMDYpLGQ9bigxNyksaD1uKDEwKSxwPW4oMjE0KSxmPW4oMzgpLG09bigzNyksXz1uKDIyNiksZz1uKDM5KSx2PW4oMTYpLHk9big1KSxiPW4oNzQpLHc9bigxMyksTT1uKDU3KSxTPW4oMTYzKSxUPW4oNDUpLGs9big1OCksTD1uKDQ5KS5mLHg9bigxNjUpLEE9bigxOSksRT1uKDI1KSxEPW4oMTczKSxDPW4oMzYpLFk9bigyMDgpLE89bigxOTQpLFA9bigxMjkpLE49bigxNjYpLEk9bigxOTMpLFI9bigxODkpLGo9bigxODYpLEg9bigxMSksRj1uKDUwKSx6PUguZixVPUYuZixXPXIuUmFuZ2VFcnJvcixCPXIuVHlwZUVycm9yLFY9ci5VaW50OEFycmF5LHE9IkFycmF5QnVmZmVyIiwkPSJTaGFyZWQiK3EsRz0iQllURVNfUEVSX0VMRU1FTlQiLEs9InByb3RvdHlwZSIsSj1BcnJheVtLXSxYPWwuQXJyYXlCdWZmZXIsUT1sLkRhdGFWaWV3LFo9RCgwKSx0dD1EKDIpLGV0PUQoMyksbnQ9RCg0KSxpdD1EKDUpLHJ0PUQoNiksb3Q9QyghMCksc3Q9QyghMSksYXQ9Ty52YWx1ZXMsbHQ9Ty5rZXlzLGN0PU8uZQ==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("bmN0aW9uIGkodCxlLG4sYyx1LGQsaCxwKXtmb3IodmFyIGYsbSxfPXUsZz0wLHY9ISFoJiZhKGgscCwzKTtnPGM7KXtpZihnIGluIG4pe2lmKGY9dj92KG5bZ10sZyxlKTpuW2ddLG09ITEsbyhmKSYmKG09ZltsXSxtPXZvaWQgMCE9PW0/ISFtOnIoZikpLG0mJmQ+MClfPWkodCxlLGYscyhmLmxlbmd0aCksXyxkLTEpLTE7ZWxzZXtpZihfPj05MDA3MTk5MjU0NzQwOTkxKXRocm93IFR5cGVFcnJvcigpO3RbX109Zn1fKyt9ZysrfXJldHVybiBffXZhciByPW4oNDQpLG89bigxMykscz1uKDM3KSxhPW4oMjApLGw9bigyNSkoImlzQ29uY2F0U3ByZWFkYWJsZSIpO3QuZXhwb3J0cz1pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oOCkscj1uKDI1NSksbz1uKDU3KSxzPW4oMzcpLGE9bigzOCksbD1uKDE3NCk7aShpLlAsIkFycmF5Iix7ZmxhdHRlbjpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50c1swXSxlPW8odGhpcyksbj1zKGUubGVuZ3RoKSxpPWwoZSwwKTtyZXR1cm4gcihpLGUsZSxuLDAsdm9pZCAwPT09dD8xOmEodCkpLGl9fSksbigxODcpKCJmbGF0dGVuIil9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oMTI3KSghMCk7aShpLlAsIlN0cmluZyIse2F0OmZ1bmN0aW9uKHQpe3JldHVybiByKHRoaXMsdCl9fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oMjU5KTtpKGkuUCwiU3RyaW5nIix7cGFkU3RhcnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx0LGFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwLCEwKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzcpLHI9big5MCksbz1uKDM1KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlLG4scyl7dmFyIGE9U3RyaW5nKG8odCkpLGw9YS5sZW5ndGgsYz12b2lkIDA9PT1uPyIgIjpTdHJpbmcobiksdT1pKGUpO2lmKHU8PWx8fCIiPT1jKXJldHVybiBhO3ZhciBkPXUtbCxoPXIuY2FsbChjLE1hdGguY2VpbChkL2MubGVuZ3RoKSk7cmV0dXJuIGgubGVuZ3RoPmQmJihoPWguc2xpY2UoMCxkKSkscz9oK2E6YStofX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9bigyNTkpO2koaS5QLCJTdHJpbmciLHtwYWRFbmQ6ZnVuY3Rpb24odCl7cmV0dXJuIHIodGhpcyx0LGFyZ3VtZW50cy5sZW5ndGg+MT9hcmd1bWVudHNbMV06dm9pZCAwLCExKX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtuKDgyKSgidHJpbUxlZnQiLGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0KHRoaXMsMSl9fSwidHJpbVN0YXJ0Iil9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7big4MikoInRyaW1SaWdodCIsZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHQodGhpcywyKX19LCJ0cmltRW5kIil9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oMzUpLG89bigzNykscz1uKDEzNCksYT1uKDE5NyksbD1SZWdFeHAucHJvdG90eXBlLGM9ZnVuY3Rpb24odCxlKXt0aGlzLl9yPXQsdGhpcy5fcz1lfTtuKDEzMCkoYywiUmVnRXhwIFN0cmluZyIsZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yLmV4ZWModGhpcy5fcyk7cmV0dXJue3ZhbHVlOnQsZG9uZTpudWxsPT09dH19KSxpKGkuUCwiU3RyaW5nIix7bWF0Y2hBbGw6ZnVuY3Rpb24odCl7aWYocih0aGlzKSwhcyh0KSl0aHJvdyBUeXBlRXJyb3IodCsiIGlzIG5vdCBhIHJlZ2V4cCEiKTt2YXIgZT1TdHJpbmcodGhpcyksbj0iZmxhZ3MiaW4gbD9TdHJpbmcodC5mbGFncyk6YS5jYWxsKHQpLGk9bmV3IFJlZ0V4cCh0LnNvdXJjZSx+bi5pbmRleE9mKCJnIik/bjoiZyIrbik7cmV0dXJuIGkubGFzdEluZGV4PW8odC5sYXN0SW5kZXgpLG5ldyBjKGksZSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXtuKDI3KSgiYXN5bmNJdGVyYXRvciIpfSxmdW5jdGlvbih0LGUsbil7bigyNykoIm9ic2VydmFibGUiKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj1uKDI0OSksbz1uKDMyKSxzPW4oNTApLGE9bigxNjQpO2koaS5TLCJPYmplY3QiLHtnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuLGk9byh0KSxsPXMuZixjPXIoaSksdT17fSxkPTA7Yy5sZW5ndGg+ZDspbj1sKGksZT1jW2QrK10pLHZvaWQgMCE9PW4mJmEodSxlLG4pO3JldHVybiB1fX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oMjY4KSghMSk7aShpLlMsIk9iamVjdCIse3ZhbHVlczpmdW5jdGlvbih0KXtyZXR1cm4gcih0KX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzApLHI9bigzMiksbz1uKDQzKS5mO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7Zm9yKHZhciBuLHM9cihlKSxhPWkocyksbD1hLmxlbmd0aCxjPTAsdT1bXTtsPmM7KW8uY2FsbChzLG49YVtjKytdKSYmdS5wdXNoKHQ/W24sc1tuXV06c1tuXSk7cmV0dXJuIHV9fX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj1uKDI2OCkoITApO2koaS5TLCJPYmplY3QiLHtlbnRyaWVzOmZ1bmN0aW9uKHQpe3JldHVybiByKHQpfX0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oOCkscj1uKDU3KSxvPW4oMjEpLHM9bigxMSk7big2KSYmaShpLlArbigyNzEpLCJPYmplY3QiLHtfX2RlZmluZUdldHRlcl9fOmZ1bmN0aW9uKHQsZSl7cy5mKHIodGhpcyksdCx7Z2V0Om8oZSksZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt0LmV4cG9ydHM9bigyOCl8fCFuKDcpKGZ1bmN0aW9uKCl7dmFyIHQ9TWF0aC5yYW5kb20oKTtfX2RlZmluZVNldHRlcl9fLmNhbGwobnVsbCx0LGZ1bmN0aW9uKCl7fSksZGVsZXRlIG4oNClbdF19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9big1Nyksbz1uKDIxKSxzPW4oMTEpO24oNikmJmkoaS5QK24oMjcxKSwiT2JqZWN0Iix7X19kZWZpbmVTZXR0ZXJfXzpmdW5jdGlvbih0LGUpe3MuZihyKHRoaXMpLHQse3NldDpvKGUpLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwfSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oNTcpLG89bigxNikscz1uKDU4KSxhPW4oNTApLmY7big2KSYmaShpLlArbigyNzEpLCJPYmplY3QiLHtfX2xvb2t1cEdldHRlcl9fOmZ1bmN0aW9uKHQpe3ZhciBlLG49cih0aGlzKSxpPW8odCwhMCk7ZG8gaWYoZT1hKG4saSkpcmV0dXJuIGUuZ2V0O3doaWxlKG49cyhuKSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oNTcpLG89bigxNikscz1uKDU4KSxhPW4oNTApLmY7big2KSYmaShpLlArbigyNzEpLCJPYmplY3QiLHtfX2xvb2t1cFNldHRlcl9fOmZ1bmN0aW9uKHQpe3ZhciBlLG49cih0aGlzKSxpPW8odCwhMCk7ZG8gaWYoZT1hKG4saSkpcmV0dXJuIGUuc2V0O3doaWxlKG49cyhuKSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5QK2kuUiwiTWFwIix7dG9KU09OOm4oMjc2KSgiTWFwIil9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNzQpLHI9bigyNzcpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtpZihpKHRoaXMpIT10KXRocm93IFR5cGVFcnJvcih0KyIjdG9KU09OIGlzbid0IGdlbmVyaWMiKTtyZXR1cm4gcih0aGlzKX19fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMDcpO3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe3ZhciBuPVtdO3JldHVybiBpKHQsITEsbi5wdXNoLG4sZSksbn19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5QK2kuUiwiU2V0Iix7dG9KU09OOm4oMjc2KSgiU2V0Iil9KX0sZnVuY3Rpb24odCxlLG4pe24oMjgwKSgiTWFwIil9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aShpLlMsdCx7b2Y6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxlPUFycmF5KHQpO3QtLTspZVt0XT1hcmd1bWVudHNbdF07cmV0dXJuIG5ldyB0aGlzKGUpfX0pfX0sZnVuY3Rpb24odCxlLG4pe24oMjgwKSgiU2V0Iil9LGZ1bmN0aW9uKHQsZSxuKXtuKDI4MCkoIldlYWtNYXAiKX0sZnVuY3Rpb24odCxlLG4pe24oMjgwKSgiV2Vha1NldCIpfSxmdW5jdGlvbih0LGUsbil7bigyODUpKCJNYXAiKX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9bigyMSksbz1uKDIwKSxzPW4oMjA3KTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7aShpLlMsdCx7ZnJvbTpmdW5jdGlvbih0KXt2YXIgZSxuLGksYSxsPWFyZ3VtZW50c1sxXTtyZXR1cm4gcih0aGlzKSxlPXZvaWQgMCE9PWwsZSYmcihsKSx2b2lkIDA9PXQ/bmV3IHRoaXM6KG49W10sZT8oaT0wLGE9byhsLGFyZ3VtZW50c1syXSwyKSxzKHQsITEsZnVuY3Rpb24odCl7bi5wdXNoKGEodCxpKyspKX0pKTpzKHQsITEsbi5wdXNoLG4pLG5ldyB0aGlzKG4pKX19KX19LGZ1bmN0aW9uKHQsZSxuKXtuKDI4NSkoIlNldCIpfSxmdW5jdGlvbih0LGUsbil7bigyODUpKCJXZWFrTWFwIil9LGZ1bmN0aW9uKHQsZSxuKXtuKDI4NSkoIldlYWtTZXQiKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLkcse2dsb2JhbDpuKDQpfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJTeXN0ZW0iLHtnbG9iYWw6big0KX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oMzQpO2koaS5TLCJFcnJvciIse2lzRXJyb3I6ZnVuY3Rpb24odCl7cmV0dXJuIkVycm9yIj09PXIodCl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpO2koaS5TLCJNYXRoIix7Y2xhbXA6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBNYXRoLm1pbihuLE1hdGgubWF4KGUsdCkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse0RFR19QRVJfUkFEOk1hdGguUEkvMTgwfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9MTgwL01hdGguUEk7aShpLlMsIk1hdGgiLHtkZWdyZWVzOmZ1bmN0aW9uKHQpe3JldHVybiB0KnJ9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDgpLHI9bigyOTYpLG89bigxMTMpO2koaS5TLCJNYXRoIix7ZnNjYWxlOmZ1bmN0aW9uKHQsZSxuLGkscyl7cmV0dXJuIG8ocih0LGUsbixpLHMpKX19KX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9TWF0aC5zY2FsZXx8ZnVuY3Rpb24odCxlLG4saSxyKXtyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGh8fHQhPXR8fGUhPWV8fG4hPW58fGkhPWl8fHIhPXI/TmFOOnQ9PT0xLzB8fHQ9PT0tKDEvMCk/dDoodC1lKSooci1pKS8obi1lKStpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIk1hdGgiLHtpYWRkaDpmdW5jdGlvbih0LGUsbixpKXt2YXIgcj10Pj4+MCxvPWU+Pj4wLHM9bj4+PjA7cmV0dXJuIG8rKGk+Pj4wKSsoKHImc3wocnxzKSZ+KHIrcz4+PjApKT4+PjMxKXwwfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse2lzdWJoOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPXQ+Pj4wLG89ZT4+PjAscz1uPj4+MDtyZXR1cm4gby0oaT4+PjApLSgofnImc3x+KHJecykmci1zPj4+MCk+Pj4zMSl8MH19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIk1hdGgiLHtpbXVsaDpmdW5jdGlvbih0LGUpe3ZhciBuPTY1NTM1LGk9K3Qscj0rZSxvPWkmbixzPXImbixhPWk+PjE2LGw9cj4+MTYsYz0oYSpzPj4+MCkrKG8qcz4+PjE2KTtyZXR1cm4gYSpsKyhjPj4xNik=", "base64"));
  res.write(new Buffer("KygobypsPj4+MCkrKGMmbik+PjE2KX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCk7aShpLlMsIk1hdGgiLHtSQURfUEVSX0RFRzoxODAvTWF0aC5QSX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPU1hdGguUEkvMTgwO2koaS5TLCJNYXRoIix7cmFkaWFuczpmdW5jdGlvbih0KXtyZXR1cm4gdCpyfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse3NjYWxlOm4oMjk2KX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse3VtdWxoOmZ1bmN0aW9uKHQsZSl7dmFyIG49NjU1MzUsaT0rdCxyPStlLG89aSZuLHM9ciZuLGE9aT4+PjE2LGw9cj4+PjE2LGM9KGEqcz4+PjApKyhvKnM+Pj4xNik7cmV0dXJuIGEqbCsoYz4+PjE2KSsoKG8qbD4+PjApKyhjJm4pPj4+MTYpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KTtpKGkuUywiTWF0aCIse3NpZ25iaXQ6ZnVuY3Rpb24odCl7cmV0dXJuKHQ9K3QpIT10P3Q6MD09dD8xL3Q9PTEvMDp0PjB9fSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big4KSxyPW4oOSksbz1uKDQpLHM9bigyMDgpLGE9bigyMTMpO2koaS5QK2kuUiwiUHJvbWlzZSIseyJmaW5hbGx5IjpmdW5jdGlvbih0KXt2YXIgZT1zKHRoaXMsci5Qcm9taXNlfHxvLlByb21pc2UpLG49ImZ1bmN0aW9uIj09dHlwZW9mIHQ7cmV0dXJuIHRoaXMudGhlbihuP2Z1bmN0aW9uKG4pe3JldHVybiBhKGUsdCgpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG59KX06dCxuP2Z1bmN0aW9uKG4pe3JldHVybiBhKGUsdCgpKS50aGVuKGZ1bmN0aW9uKCl7dGhyb3cgbn0pfTp0KX19KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDgpLHI9bigyMTEpLG89bigyMTIpO2koaS5TLCJQcm9taXNlIix7InRyeSI6ZnVuY3Rpb24odCl7dmFyIGU9ci5mKHRoaXMpLG49byh0KTtyZXR1cm4obi5lP2UucmVqZWN0OmUucmVzb2x2ZSkobi52KSxlLnByb21pc2V9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDMwOCkscj1uKDEyKSxvPWkua2V5LHM9aS5zZXQ7aS5leHAoe2RlZmluZU1ldGFkYXRhOmZ1bmN0aW9uKHQsZSxuLGkpe3ModCxlLHIobiksbyhpKSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDIxNSkscj1uKDgpLG89bigyMykoIm1ldGFkYXRhIikscz1vLnN0b3JlfHwoby5zdG9yZT1uZXcobigyMjApKSksYT1mdW5jdGlvbih0LGUsbil7dmFyIHI9cy5nZXQodCk7aWYoIXIpe2lmKCFuKXJldHVybjtzLnNldCh0LHI9bmV3IGkpfXZhciBvPXIuZ2V0KGUpO2lmKCFvKXtpZighbilyZXR1cm47ci5zZXQoZSxvPW5ldyBpKX1yZXR1cm4gb30sbD1mdW5jdGlvbih0LGUsbil7dmFyIGk9YShlLG4sITEpO3JldHVybiB2b2lkIDAhPT1pJiZpLmhhcyh0KX0sYz1mdW5jdGlvbih0LGUsbil7dmFyIGk9YShlLG4sITEpO3JldHVybiB2b2lkIDA9PT1pP3ZvaWQgMDppLmdldCh0KX0sdT1mdW5jdGlvbih0LGUsbixpKXthKG4saSwhMCkuc2V0KHQsZSl9LGQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1hKHQsZSwhMSksaT1bXTtyZXR1cm4gbiYmbi5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7aS5wdXNoKGUpfSksaX0saD1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dHx8InN5bWJvbCI9PXR5cGVvZiB0P3Q6U3RyaW5nKHQpfSxwPWZ1bmN0aW9uKHQpe3Ioci5TLCJSZWZsZWN0Iix0KX07dC5leHBvcnRzPXtzdG9yZTpzLG1hcDphLGhhczpsLGdldDpjLHNldDp1LGtleXM6ZCxrZXk6aCxleHA6cH19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDMwOCkscj1uKDEyKSxvPWkua2V5LHM9aS5tYXAsYT1pLnN0b3JlO2kuZXhwKHtkZWxldGVNZXRhZGF0YTpmdW5jdGlvbih0LGUpe3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg8Mz92b2lkIDA6byhhcmd1bWVudHNbMl0pLGk9cyhyKGUpLG4sITEpO2lmKHZvaWQgMD09PWl8fCFpWyJkZWxldGUiXSh0KSlyZXR1cm4hMTtpZihpLnNpemUpcmV0dXJuITA7dmFyIGw9YS5nZXQoZSk7cmV0dXJuIGxbImRlbGV0ZSJdKG4pLCEhbC5zaXplfHxhWyJkZWxldGUiXShlKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzA4KSxyPW4oMTIpLG89big1OCkscz1pLmhhcyxhPWkuZ2V0LGw9aS5rZXksYz1mdW5jdGlvbih0LGUsbil7dmFyIGk9cyh0LGUsbik7aWYoaSlyZXR1cm4gYSh0LGUsbik7dmFyIHI9byhlKTtyZXR1cm4gbnVsbCE9PXI/Yyh0LHIsbik6dm9pZCAwfTtpLmV4cCh7Z2V0TWV0YWRhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gYyh0LHIoZSksYXJndW1lbnRzLmxlbmd0aDwzP3ZvaWQgMDpsKGFyZ3VtZW50c1syXSkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyMTkpLHI9bigyNzcpLG89bigzMDgpLHM9bigxMiksYT1uKDU4KSxsPW8ua2V5cyxjPW8ua2V5LHU9ZnVuY3Rpb24odCxlKXt2YXIgbj1sKHQsZSksbz1hKHQpO2lmKG51bGw9PT1vKXJldHVybiBuO3ZhciBzPXUobyxlKTtyZXR1cm4gcy5sZW5ndGg/bi5sZW5ndGg/cihuZXcgaShuLmNvbmNhdChzKSkpOnM6bn07by5leHAoe2dldE1ldGFkYXRhS2V5czpmdW5jdGlvbih0KXtyZXR1cm4gdShzKHQpLGFyZ3VtZW50cy5sZW5ndGg8Mj92b2lkIDA6Yyhhcmd1bWVudHNbMV0pKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzA4KSxyPW4oMTIpLG89aS5nZXQscz1pLmtleTtpLmV4cCh7Z2V0T3duTWV0YWRhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbyh0LHIoZSksYXJndW1lbnRzLmxlbmd0aDwzP3ZvaWQgMDpzKGFyZ3VtZW50c1syXSkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMDgpLHI9bigxMiksbz1pLmtleXMscz1pLmtleTtpLmV4cCh7Z2V0T3duTWV0YWRhdGFLZXlzOmZ1bmN0aW9uKHQpe3JldHVybiBvKHIodCksYXJndW1lbnRzLmxlbmd0aDwyP3ZvaWQgMDpzKGFyZ3VtZW50c1sxXSkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigzMDgpLHI9bigxMiksbz1uKDU4KSxzPWkuaGFzLGE9aS5rZXksbD1mdW5jdGlvbih0LGUsbil7dmFyIGk9cyh0LGUsbik7aWYoaSlyZXR1cm4hMDt2YXIgcj1vKGUpO3JldHVybiBudWxsIT09ciYmbCh0LHIsbil9O2kuZXhwKHtoYXNNZXRhZGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBsKHQscihlKSxhcmd1bWVudHMubGVuZ3RoPDM/dm9pZCAwOmEoYXJndW1lbnRzWzJdKSl9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uKDMwOCkscj1uKDEyKSxvPWkuaGFzLHM9aS5rZXk7aS5leHAoe2hhc093bk1ldGFkYXRhOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIG8odCxyKGUpLGFyZ3VtZW50cy5sZW5ndGg8Mz92b2lkIDA6cyhhcmd1bWVudHNbMl0pKX19KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMzA4KSxyPW4oMTIpLG89bigyMSkscz1pLmtleSxhPWkuc2V0O2kuZXhwKHttZXRhZGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBmdW5jdGlvbihuLGkpe2EodCxlLCh2b2lkIDAhPT1pP3I6bykobikscyhpKSl9fX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGk9big4KSxyPW4oMjEwKSgpLG89big0KS5wcm9jZXNzLHM9InByb2Nlc3MiPT1uKDM0KShvKTtpKGkuRyx7YXNhcDpmdW5jdGlvbih0KXt2YXIgZT1zJiZvLmRvbWFpbjtyKGU/ZS5iaW5kKHQpOnQpfX0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oOCkscj1uKDQpLG89big5KSxzPW4oMjEwKSgpLGE9bigyNSkoIm9ic2VydmFibGUiKSxsPW4oMjEpLGM9bigxMiksdT1uKDIwNiksZD1uKDIxNCksaD1uKDEwKSxwPW4oMjA3KSxmPXAuUkVUVVJOLG09ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/dm9pZCAwOmwodCl9LF89ZnVuY3Rpb24odCl7dmFyIGU9dC5fYztlJiYodC5fYz12b2lkIDAsZSgpKX0sZz1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dC5fb30sdj1mdW5jdGlvbih0KXtnKHQpfHwodC5fbz12b2lkIDAsXyh0KSl9LHk9ZnVuY3Rpb24odCxlKXtjKHQpLHRoaXMuX2M9dm9pZCAwLHRoaXMuX289dCx0PW5ldyBiKHRoaXMpO3RyeXt2YXIgbj1lKHQpLGk9bjtudWxsIT1uJiYoImZ1bmN0aW9uIj09dHlwZW9mIG4udW5zdWJzY3JpYmU/bj1mdW5jdGlvbigpe2kudW5zdWJzY3JpYmUoKX06bChuKSx0aGlzLl9jPW4pfWNhdGNoKHIpe3JldHVybiB2b2lkIHQuZXJyb3Iocil9Zyh0aGlzKSYmXyh0aGlzKX07eS5wcm90b3R5cGU9ZCh7fSx7dW5zdWJzY3JpYmU6ZnVuY3Rpb24oKXt2KHRoaXMpfX0pO3ZhciBiPWZ1bmN0aW9uKHQpe3RoaXMuX3M9dH07Yi5wcm90b3R5cGU9ZCh7fSx7bmV4dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9zO2lmKCFnKGUpKXt2YXIgbj1lLl9vO3RyeXt2YXIgaT1tKG4ubmV4dCk7aWYoaSlyZXR1cm4gaS5jYWxsKG4sdCl9Y2F0Y2gocil7dHJ5e3YoZSl9ZmluYWxseXt0aHJvdyByfX19fSxlcnJvcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9zO2lmKGcoZSkpdGhyb3cgdDt2YXIgbj1lLl9vO2UuX289dm9pZCAwO3RyeXt2YXIgaT1tKG4uZXJyb3IpO2lmKCFpKXRocm93IHQ7dD1pLmNhbGwobix0KX1jYXRjaChyKXt0cnl7XyhlKX1maW5hbGx5e3Rocm93IHJ9fXJldHVybiBfKGUpLHR9LGNvbXBsZXRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3M7aWYoIWcoZSkpe3ZhciBuPWUuX287ZS5fbz12b2lkIDA7dHJ5e3ZhciBpPW0obi5jb21wbGV0ZSk7dD1pP2kuY2FsbChuLHQpOnZvaWQgMH1jYXRjaChyKXt0cnl7XyhlKX1maW5hbGx5e3Rocm93IHJ9fXJldHVybiBfKGUpLHR9fX0pO3ZhciB3PWZ1bmN0aW9uKHQpe3UodGhpcyx3LCJPYnNlcnZhYmxlIiwiX2YiKS5fZj1sKHQpfTtkKHcucHJvdG90eXBlLHtzdWJzY3JpYmU6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB5KHQsdGhpcy5fZil9LGZvckVhY2g6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4gbmV3KG8uUHJvbWlzZXx8ci5Qcm9taXNlKShmdW5jdGlvbihuLGkpe2wodCk7dmFyIHI9ZS5zdWJzY3JpYmUoe25leHQ6ZnVuY3Rpb24oZSl7dHJ5e3JldHVybiB0KGUpfWNhdGNoKG4pe2kobiksci51bnN1YnNjcmliZSgpfX0sZXJyb3I6aSxjb21wbGV0ZTpufSl9KX19KSxkKHcse2Zyb206ZnVuY3Rpb24odCl7dmFyIGU9ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXM/dGhpczp3LG49bShjKHQpW2FdKTtpZihuKXt2YXIgaT1jKG4uY2FsbCh0KSk7cmV0dXJuIGkuY29uc3RydWN0b3I9PT1lP2k6bmV3IGUoZnVuY3Rpb24odCl7cmV0dXJuIGkuc3Vic2NyaWJlKHQpfSl9cmV0dXJuIG5ldyBlKGZ1bmN0aW9uKGUpe3ZhciBuPSExO3JldHVybiBzKGZ1bmN0aW9uKCl7aWYoIW4pe3RyeXtpZihwKHQsITEsZnVuY3Rpb24odCl7aWYoZS5uZXh0KHQpLG4pcmV0dXJuIGZ9KT09PWYpcmV0dXJufWNhdGNoKGkpe2lmKG4pdGhyb3cgaTtyZXR1cm4gdm9pZCBlLmVycm9yKGkpfWUuY29tcGxldGUoKX19KSxmdW5jdGlvbigpe249ITB9fSl9LG9mOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT1hcmd1bWVudHMubGVuZ3RoLG49QXJyYXkoZSk7dDxlOyluW3RdPWFyZ3VtZW50c1t0KytdO3JldHVybiBuZXcoImZ1bmN0aW9uIj09dHlwZW9mIHRoaXM/dGhpczp3KShmdW5jdGlvbih0KXt2YXIgZT0hMTtyZXR1cm4gcyhmdW5jdGlvbigpe2lmKCFlKXtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoOysraSlpZih0Lm5leHQobltpXSksZSlyZXR1cm47dC5jb21wbGV0ZSgpfX0pLGZ1bmN0aW9uKCl7ZT0hMH19KX19KSxoKHcucHJvdG90eXBlLGEsZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30pLGkoaS5HLHtPYnNlcnZhYmxlOnd9KSxuKDE5MykoIk9ic2VydmFibGUiKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oNCkscj1uKDgpLG89aS5uYXZpZ2F0b3Iscz1bXS5zbGljZSxhPSEhbyYmL01TSUUgLlwuLy50ZXN0KG8udXNlckFnZW50KSxsPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlLG4pe3ZhciBpPWFyZ3VtZW50cy5sZW5ndGg+MixyPSEhaSYmcy5jYWxsKGFyZ3VtZW50cywyKTtyZXR1cm4gdChpP2Z1bmN0aW9uKCl7KCJmdW5jdGlvbiI9PXR5cGVvZiBlP2U6RnVuY3Rpb24oZSkpLmFwcGx5KHRoaXMscil9OmUsbil9fTtyKHIuRytyLkIrci5GKmEse3NldFRpbWVvdXQ6bChpLnNldFRpbWVvdXQpLHNldEludGVydmFsOmwoaS5zZXRJbnRlcnZhbCl9KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oOCkscj1uKDIwOSk7aShpLkcraS5CLHtzZXRJbW1lZGlhdGU6ci5zZXQsY2xlYXJJbW1lZGlhdGU6ci5jbGVhcn0pfSxmdW5jdGlvbih0LGUsbil7Zm9yKHZhciBpPW4oMTk0KSxyPW4oMzApLG89bigxOCkscz1uKDQpLGE9bigxMCksbD1uKDEyOSksYz1uKDI1KSx1PWMoIml0ZXJhdG9yIiksZD1jKCJ0b1N0cmluZ1RhZyIpLGg9bC5BcnJheSxwPXtDU1NSdWxlTGlzdDohMCxDU1NTdHlsZURlY2xhcmF0aW9uOiExLENTU1ZhbHVlTGlzdDohMSxDbGllbnRSZWN0TGlzdDohMSxET01SZWN0TGlzdDohMSxET01TdHJpbmdMaXN0OiExLERPTVRva2VuTGlzdDohMCxEYXRhVHJhbnNmZXJJdGVtTGlzdDohMSxGaWxlTGlzdDohMSxIVE1MQWxsQ29sbGVjdGlvbjohMSxIVE1MQ29sbGVjdGlvbjohMSxIVE1MRm9ybUVsZW1lbnQ6ITEsSFRNTFNlbGVjdEVsZW1lbnQ6ITEsTWVkaWFMaXN0OiEwLE1pbWVUeXBlQXJyYXk6ITEsTmFtZWROb2RlTWFwOiExLE5vZGVMaXN0OiEwLFBhaW50UmVxdWVzdExpc3Q6ITEsUGx1Z2luOiExLFBsdWdpbkFycmF5OiExLFNWR0xlbmd0aExpc3Q6ITEsU1ZHTnVtYmVyTGlzdDohMSxTVkdQYXRoU2VnTGlzdDohMSxTVkdQb2ludExpc3Q6ITEsU1ZHU3RyaW5nTGlzdDohMSxTVkdUcmFuc2Zvcm1MaXN0OiExLFNvdXJjZUJ1ZmZlckxpc3Q6ITEsU3R5bGVTaGVldExpc3Q6ITAsVGV4dFRyYWNrQ3VlTGlzdDohMSxUZXh0VHJhY2tMaXN0OiExLFRvdWNoTGlzdDohMX0sZj1yKHApLG09MDttPGYubGVuZ3RoO20rKyl7dmFyIF8sZz1mW21dLHY9cFtnXSx5PXNbZ10sYj15JiZ5LnByb3RvdHlwZTtpZihiJiYoYlt1XXx8YShiLHUsaCksYltkXXx8YShiLGQsZyksbFtnXT1oLHYpKWZvcihfIGluIGkpYltfXXx8byhiLF8saVtfXSwhMCl9fSxmdW5jdGlvbih0LGUpeyhmdW5jdGlvbihlKXshZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4odCxlLG4saSl7dmFyIG89ZSYmZS5wcm90b3R5cGUgaW5zdGFuY2VvZiByP2U6cixzPU9iamVjdC5jcmVhdGUoby5wcm90b3R5cGUpLGE9bmV3IHAoaXx8W10pO3JldHVybiBzLl9pbnZva2U9Yyh0LG4sYSksc31mdW5jdGlvbiBpKHQsZSxuKXt0cnl7cmV0dXJue3R5cGU6Im5vcm1hbCIsYXJnOnQuY2FsbChlLG4pfX1jYXRjaChpKXtyZXR1cm57dHlwZToidGhyb3ciLGFyZzppfX19ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBvKCl7fWZ1bmN0aW9uIHMoKXt9ZnVuY3Rpb24gYSh0KXtbIm5leHQiLCJ0aHJvdyIsInJldHVybiJdLmZvckVhY2goZnVuY3Rpb24oZSl7dFtlXT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5faW52b2tlKGUsdCl9fSl9ZnVuY3Rpb24gbCh0KXtmdW5jdGlvbiBuKGUscixvLHMpe3ZhciBhPWkodFtlXSx0LHIpO2lmKCJ0aHJvdyIhPT1hLnR5cGUpe3ZhciBsPWEuYXJnLGM9bC52YWx1ZTtyZXR1cm4gYyYmIm9iamVjdCI9PXR5cGVvZiBjJiZ2LmNhbGwoYywiX19hd2FpdCIpP1Byb21pc2UucmVzb2x2ZShjLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odCl7bigibmV4dCIsdCxvLHMpfSxmdW5jdGlvbih0KXtuKCJ0aHJvdyIsdCxvLHMpfSk6UHJvbWlzZS5yZXNvbHZlKGMpLnRoZW4oZnVuY3Rpb24odCl7bC52YWx1ZT10LG8obCl9LHMpfXMoYS5hcmcpfWZ1bmN0aW9uIHIodCxlKXtmdW5jdGlvbiBpKCl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKGkscil7bih0LGUsaSxyKX0pfXJldHVybiBvPW8/by50aGVuKGksaSk6aSgpfSJvYmplY3QiPT10eXBlb2YgZS5wcm9jZXNzJiZlLnByb2Nlc3MuZG9tYWluJiYobj1lLnByb2Nlc3MuZG9tYWluLmJpbmQobikpO3ZhciBvO3RoaXMuX2ludm9rZT1yfWZ1bmN0aW9uIGModCxlLG4pe3ZhciByPWs7cmV0dXJuIGZ1bmN0aW9uKG8scyl7aWYocj09PXgpdGhyb3cgbmV3IEVycm9yKCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nIik7aWYocj09PUEpe2lmKCJ0aHJvdyI9PT1vKXRocm93IHM7cmV0dXJuIG0oKX1mb3Iobi5tZXRob2Q9byxuLmFyZz1zOzspe3ZhciBhPW4uZGVsZWdhdGU7aWYoYSl7dmFyIGw9dShhLG4pO2lmKGwpe2lmKGw9PT1FKWNvbnRpbnVlO3JldHVybiBsfX1pZigibmV4dCI9PT1uLm1ldGhvZCluLnNlbnQ9bi5fc2VudD1uLmFyZztlbHNlIGlmKCJ0aHJvdyI9PT1uLm1ldGhvZCl7aWYocj09PWspdGhyb3cgcj1BLG4uYXJnO24uZGlzcGF0Y2hFeGNlcHRpb24obi5hcmcpfWVsc2UicmV0dXJuIj09PW4ubWV0aG9kJiZuLmFicnVwdCgicmV0dXJuIixuLmFyZyk7cj14O3ZhciBjPWkodCxlLG4pO2lmKCJub3JtYWwiPT09Yy50eXBlKXtpZihyPW4uZG9uZT9BOkwsYy5hcmc9PT1FKWNvbnRpbnVlO3JldHVybnt2YWx1ZTpjLmFyZyxkb25lOm4uZG9uZX19InRocm93Ij09PWMudHlwZSYmKHI9QSxuLm1ldGhvZD0idGhyb3ciLG4uYXJnPWMuYXJnKX19fWZ1bmN0aW9uIHUodCxlKXt2YXIgbj10Lml0ZXJhdG9yW2UubWV0aG9kXTtpZihuPT09Xyl7aWYoZS5kZWxlZ2F0ZT1udWxsLCJ0aHJvdyI9PT1lLm1ldGhvZCl7aWYodC5pdGVyYXRvclsicmV0dXJuIl0mJihlLm1ldGhvZD0icmV0dXJuIixlLmFyZz1fLHUodCxlKSwidGhyb3ciPT09ZS5tZXRob2QpKXJldHVybiBFO2UubWV0aG9kPSJ0aHJvdyIsZS5hcmc9bmV3IFR5cGVFcnJvcigiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZCIpfXJldHVybiBFfXZhciByPWkobix0Lml0ZXJhdG9yLGUuYXJnKTtpZigidGhyb3ciPT09ci50eXBlKXJldHVybiBlLm1ldGhvZD0idGhyb3ciLGUuYXJnPXIuYXJnLGUuZGVsZWdhdGU9bnVsbCxFO3ZhciBvPXIuYXJnO3JldHVybiBvP28uZG9uZT8oZVt0LnJlc3VsdE5hbWVdPW8udmFsdWUsZS5uZXh0PXQubmV4dExvYywicmV0dXJuIiE9PWUubWV0aG9kJiYoZS5tZXRob2Q9Im5leHQiLGUuYXJnPV8pLGUuZGVsZWdhdGU9bnVsbCxFKTpvOihlLm1ldGhvZD0idGhyb3ciLGUuYXJnPW5ldyBUeXBlRXJyb3IoIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0IiksZS5kZWxlZ2F0ZT1udWxsLEUpfWZ1bmN0aW9uIGQodCl7dmFyIGU9e3RyeUxvYzp0WzBdfTsxIGluIHQmJihlLmNhdGNoTG9jPXRbMV0pLDIgaW4gdCYmKGUuZmluYWxseUxvYz10WzJdLGUuYWZ0ZXJMb2M9dFszXSksdGhpcy50cnlFbnRyaWVzLnB1c2goZSl9ZnVuY3Rpb24gaCh0KXt2YXIgZT10LmNvbXBsZXRpb258fHt9O2UudHlwZT0ibm9ybWFsIixkZWxldGUgZS5hcmcsdC5jb21wbGV0aW9uPWV9ZnVuY3Rpb24gcCh0KXt0aGlzLnRyeUVudHJpZXM9W3t0cnlMb2M6InJvb3QifV0sdC5mb3JFYWNoKGQsdGhpcyksdGhpcy5yZXNldCghMCl9ZnVuY3Rpb24gZih0KXtpZih0KXt2YXIgZT10W2JdO2lmKGUpcmV0dXJuIGUuY2FsbCh0KTtpZigiZnVuY3Rpb24iPT10eXBlb2YgdC5uZXh0KXJldHVybiB0O2lmKCFpc05hTih0Lmxlbmd0aCkpe3ZhciBuPS0xLGk9ZnVuY3Rpb24gcigpe2Zvcig7KytuPHQubGVuZ3RoOylpZih2LmNhbGwodCxuKSlyZXR1cm4gci52YWx1ZT10W25dLHIuZG9uZT0hMSxyO3JldHVybiByLnZhbHVlPV8sci5kb25lPSEwLHJ9O3JldHVybiBpLm5leHQ9aX19cmV0dXJue25leHQ6bX19ZnVuY3Rpb24gbSgpe3JldHVybnt2YWx1ZTpfLGRvbmU6ITB9fXZhciBfLGc9T2JqZWN0LnByb3RvdHlwZSx2PWcuaGFzT3duUHJvcGVydHkseT0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sP1N5bWJvbDp7fSxiPXkuaXRlcmF0b3J8fCJAQGl0ZXJhdG9yIix3PXkuYXN5bmNJdGVyYXRvcnx8IkBAYXN5bmNJdGVyYXRvciIsTT15LnRvU3RyaW5nVGFnfHwiQEB0b1N0cmluZ1RhZyIsUz0ib2JqZWN0Ij09dHlwZW9mIHQsVD1lLnJlZ2VuZXJhdG9yUnVudGltZTtpZihUKXJldHVybiB2b2lkKFMmJih0LmV4cG9ydHM9VCkpO1Q9ZS5yZWdlbmVyYXRvclJ1bnRpbWU9Uz90LmV4cG9ydHM6e30sVC53cmFwPW47dmFyIGs9InN1c3BlbmRlZFN0YXJ0IixMPSJzdXNwZW5kZWRZaWVsZCIseD0iZXhlY3V0aW5nIixBPSJjb21wbGV0ZWQiLEU9e30sRD17fTtEW2JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9O3ZhciBDPU9iamVjdC5nZXRQcm90b3R5cGVPZixZPUMmJkMoQyhmKFtdKSkpO1k=", "base64"));
  res.write(new Buffer("JiZZIT09ZyYmdi5jYWxsKFksYikmJihEPVkpO3ZhciBPPXMucHJvdG90eXBlPXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoRCk7by5wcm90b3R5cGU9Ty5jb25zdHJ1Y3Rvcj1zLHMuY29uc3RydWN0b3I9byxzW01dPW8uZGlzcGxheU5hbWU9IkdlbmVyYXRvckZ1bmN0aW9uIixULmlzR2VuZXJhdG9yRnVuY3Rpb249ZnVuY3Rpb24odCl7dmFyIGU9ImZ1bmN0aW9uIj09dHlwZW9mIHQmJnQuY29uc3RydWN0b3I7cmV0dXJuISFlJiYoZT09PW98fCJHZW5lcmF0b3JGdW5jdGlvbiI9PT0oZS5kaXNwbGF5TmFtZXx8ZS5uYW1lKSl9LFQubWFyaz1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZih0LHMpOih0Ll9fcHJvdG9fXz1zLE0gaW4gdHx8KHRbTV09IkdlbmVyYXRvckZ1bmN0aW9uIikpLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoTyksdH0sVC5hd3JhcD1mdW5jdGlvbih0KXtyZXR1cm57X19hd2FpdDp0fX0sYShsLnByb3RvdHlwZSksbC5wcm90b3R5cGVbd109ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sVC5Bc3luY0l0ZXJhdG9yPWwsVC5hc3luYz1mdW5jdGlvbih0LGUsaSxyKXt2YXIgbz1uZXcgbChuKHQsZSxpLHIpKTtyZXR1cm4gVC5pc0dlbmVyYXRvckZ1bmN0aW9uKGUpP286by5uZXh0KCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5kb25lP3QudmFsdWU6by5uZXh0KCl9KX0sYShPKSxPW01dPSJHZW5lcmF0b3IiLE9bYl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sTy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiJbb2JqZWN0IEdlbmVyYXRvcl0ifSxULmtleXM9ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpZS5wdXNoKG4pO3JldHVybiBlLnJldmVyc2UoKSxmdW5jdGlvbiBpKCl7Zm9yKDtlLmxlbmd0aDspe3ZhciBuPWUucG9wKCk7aWYobiBpbiB0KXJldHVybiBpLnZhbHVlPW4saS5kb25lPSExLGl9cmV0dXJuIGkuZG9uZT0hMCxpfX0sVC52YWx1ZXM9ZixwLnByb3RvdHlwZT17Y29uc3RydWN0b3I6cCxyZXNldDpmdW5jdGlvbih0KXtpZih0aGlzLnByZXY9MCx0aGlzLm5leHQ9MCx0aGlzLnNlbnQ9dGhpcy5fc2VudD1fLHRoaXMuZG9uZT0hMSx0aGlzLmRlbGVnYXRlPW51bGwsdGhpcy5tZXRob2Q9Im5leHQiLHRoaXMuYXJnPV8sdGhpcy50cnlFbnRyaWVzLmZvckVhY2goaCksIXQpZm9yKHZhciBlIGluIHRoaXMpInQiPT09ZS5jaGFyQXQoMCkmJnYuY2FsbCh0aGlzLGUpJiYhaXNOYU4oK2Uuc2xpY2UoMSkpJiYodGhpc1tlXT1fKX0sc3RvcDpmdW5jdGlvbigpe3RoaXMuZG9uZT0hMDt2YXIgdD10aGlzLnRyeUVudHJpZXNbMF0sZT10LmNvbXBsZXRpb247aWYoInRocm93Ij09PWUudHlwZSl0aHJvdyBlLmFyZztyZXR1cm4gdGhpcy5ydmFsfSxkaXNwYXRjaEV4Y2VwdGlvbjpmdW5jdGlvbih0KXtmdW5jdGlvbiBlKGUsaSl7cmV0dXJuIG8udHlwZT0idGhyb3ciLG8uYXJnPXQsbi5uZXh0PWUsaSYmKG4ubWV0aG9kPSJuZXh0IixuLmFyZz1fKSwhIWl9aWYodGhpcy5kb25lKXRocm93IHQ7Zm9yKHZhciBuPXRoaXMsaT10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7aT49MDstLWkpe3ZhciByPXRoaXMudHJ5RW50cmllc1tpXSxvPXIuY29tcGxldGlvbjtpZigicm9vdCI9PT1yLnRyeUxvYylyZXR1cm4gZSgiZW5kIik7aWYoci50cnlMb2M8PXRoaXMucHJldil7dmFyIHM9di5jYWxsKHIsImNhdGNoTG9jIiksYT12LmNhbGwociwiZmluYWxseUxvYyIpO2lmKHMmJmEpe2lmKHRoaXMucHJldjxyLmNhdGNoTG9jKXJldHVybiBlKHIuY2F0Y2hMb2MsITApO2lmKHRoaXMucHJldjxyLmZpbmFsbHlMb2MpcmV0dXJuIGUoci5maW5hbGx5TG9jKX1lbHNlIGlmKHMpe2lmKHRoaXMucHJldjxyLmNhdGNoTG9jKXJldHVybiBlKHIuY2F0Y2hMb2MsITApfWVsc2V7aWYoIWEpdGhyb3cgbmV3IEVycm9yKCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseSIpO2lmKHRoaXMucHJldjxyLmZpbmFsbHlMb2MpcmV0dXJuIGUoci5maW5hbGx5TG9jKX19fX0sYWJydXB0OmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMudHJ5RW50cmllcy5sZW5ndGgtMTtuPj0wOy0tbil7dmFyIGk9dGhpcy50cnlFbnRyaWVzW25dO2lmKGkudHJ5TG9jPD10aGlzLnByZXYmJnYuY2FsbChpLCJmaW5hbGx5TG9jIikmJnRoaXMucHJldjxpLmZpbmFsbHlMb2Mpe3ZhciByPWk7YnJlYWt9fXImJigiYnJlYWsiPT09dHx8ImNvbnRpbnVlIj09PXQpJiZyLnRyeUxvYzw9ZSYmZTw9ci5maW5hbGx5TG9jJiYocj1udWxsKTt2YXIgbz1yP3IuY29tcGxldGlvbjp7fTtyZXR1cm4gby50eXBlPXQsby5hcmc9ZSxyPyh0aGlzLm1ldGhvZD0ibmV4dCIsdGhpcy5uZXh0PXIuZmluYWxseUxvYyxFKTp0aGlzLmNvbXBsZXRlKG8pfSxjb21wbGV0ZTpmdW5jdGlvbih0LGUpe2lmKCJ0aHJvdyI9PT10LnR5cGUpdGhyb3cgdC5hcmc7cmV0dXJuImJyZWFrIj09PXQudHlwZXx8ImNvbnRpbnVlIj09PXQudHlwZT90aGlzLm5leHQ9dC5hcmc6InJldHVybiI9PT10LnR5cGU/KHRoaXMucnZhbD10aGlzLmFyZz10LmFyZyx0aGlzLm1ldGhvZD0icmV0dXJuIix0aGlzLm5leHQ9ImVuZCIpOiJub3JtYWwiPT09dC50eXBlJiZlJiYodGhpcy5uZXh0PWUpLEV9LGZpbmlzaDpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy50cnlFbnRyaWVzLmxlbmd0aC0xO2U+PTA7LS1lKXt2YXIgbj10aGlzLnRyeUVudHJpZXNbZV07aWYobi5maW5hbGx5TG9jPT09dClyZXR1cm4gdGhpcy5jb21wbGV0ZShuLmNvbXBsZXRpb24sbi5hZnRlckxvYyksaChuKSxFfX0sImNhdGNoIjpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy50cnlFbnRyaWVzLmxlbmd0aC0xO2U+PTA7LS1lKXt2YXIgbj10aGlzLnRyeUVudHJpZXNbZV07aWYobi50cnlMb2M9PT10KQ==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("Zi5jYWxsKGFyZ3VtZW50cywxKSk7aWYoIU0uaXNGdW5jdGlvbih0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCJCaW5kIG11c3QgYmUgY2FsbGVkIG9uIGEgZnVuY3Rpb24iKTt2YXIgbj1mLmNhbGwoYXJndW1lbnRzLDIpLGk9ZnVuY3Rpb24oKXtyZXR1cm4gTyh0LGksZSx0aGlzLG4uY29uY2F0KGYuY2FsbChhcmd1bWVudHMpKSl9O3JldHVybiBpfSxNLnBhcnRpYWw9ZnVuY3Rpb24odCl7dmFyIGU9Zi5jYWxsKGFyZ3VtZW50cywxKSxuPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPTAscj1lLmxlbmd0aCxvPUFycmF5KHIpLHM9MDtzPHI7cysrKW9bc109ZVtzXT09PU0/YXJndW1lbnRzW2krK106ZVtzXTtmb3IoO2k8YXJndW1lbnRzLmxlbmd0aDspby5wdXNoKGFyZ3VtZW50c1tpKytdKTtyZXR1cm4gTyh0LG4sdGhpcyx0aGlzLG8pfTtyZXR1cm4gbn0sTS5iaW5kQWxsPWZ1bmN0aW9uKHQpe3ZhciBlLG4saT1hcmd1bWVudHMubGVuZ3RoO2lmKGk8PTEpdGhyb3cgbmV3IEVycm9yKCJiaW5kQWxsIG11c3QgYmUgcGFzc2VkIGZ1bmN0aW9uIG5hbWVzIik7Zm9yKGU9MTtlPGk7ZSsrKW49YXJndW1lbnRzW2VdLHRbbl09TS5iaW5kKHRbbl0sdCk7cmV0dXJuIHR9LE0ubWVtb2l6ZT1mdW5jdGlvbih0LGUpe3ZhciBuPWZ1bmN0aW9uKGkpe3ZhciByPW4uY2FjaGUsbz0iIisoZT9lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTppKTtyZXR1cm4gTS5oYXMocixvKXx8KHJbb109dC5hcHBseSh0aGlzLGFyZ3VtZW50cykpLHJbb119O3JldHVybiBuLmNhY2hlPXt9LG59LE0uZGVsYXk9ZnVuY3Rpb24odCxlKXt2YXIgbj1mLmNhbGwoYXJndW1lbnRzLDIpO3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIHQuYXBwbHkobnVsbCxuKX0sZSl9LE0uZGVmZXI9TS5wYXJ0aWFsKE0uZGVsYXksTSwxKSxNLnRocm90dGxlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG8scz1udWxsLGE9MDtufHwobj17fSk7dmFyIGw9ZnVuY3Rpb24oKXthPW4ubGVhZGluZz09PSExPzA6TS5ub3coKSxzPW51bGwsbz10LmFwcGx5KGksciksc3x8KGk9cj1udWxsKX07cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9TS5ub3coKTthfHxuLmxlYWRpbmchPT0hMXx8KGE9Yyk7dmFyIHU9ZS0oYy1hKTtyZXR1cm4gaT10aGlzLHI9YXJndW1lbnRzLHU8PTB8fHU+ZT8ocyYmKGNsZWFyVGltZW91dChzKSxzPW51bGwpLGE9YyxvPXQuYXBwbHkoaSxyKSxzfHwoaT1yPW51bGwpKTpzfHxuLnRyYWlsaW5nPT09ITF8fChzPXNldFRpbWVvdXQobCx1KSksb319LE0uZGVib3VuY2U9ZnVuY3Rpb24odCxlLG4pe3ZhciBpLHIsbyxzLGEsbD1mdW5jdGlvbigpe3ZhciBjPU0ubm93KCktcztjPGUmJmM+PTA/aT1zZXRUaW1lb3V0KGwsZS1jKTooaT1udWxsLG58fChhPXQuYXBwbHkobyxyKSxpfHwobz1yPW51bGwpKSl9O3JldHVybiBmdW5jdGlvbigpe289dGhpcyxyPWFyZ3VtZW50cyxzPU0ubm93KCk7dmFyIGM9biYmIWk7cmV0dXJuIGl8fChpPXNldFRpbWVvdXQobCxlKSksYyYmKGE9dC5hcHBseShvLHIpLG89cj1udWxsKSxhfX0sTS53cmFwPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE0ucGFydGlhbChlLHQpfSxNLm5lZ2F0ZT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4hdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSxNLmNvbXBvc2U9ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHMsZT10Lmxlbmd0aC0xO3JldHVybiBmdW5jdGlvbigpe2Zvcih2YXIgbj1lLGk9dFtlXS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7bi0tOylpPXRbbl0uY2FsbCh0aGlzLGkpO3JldHVybiBpfX0sTS5hZnRlcj1mdW5jdGlvbih0LGUpe3JldHVybiBmdW5jdGlvbigpe2lmKC0tdDwxKXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LE0uYmVmb3JlPWZ1bmN0aW9uKHQsZSl7dmFyIG47cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuLS10PjAmJihuPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpKSx0PD0xJiYoZT1udWxsKSxufX0sTS5vbmNlPU0ucGFydGlhbChNLmJlZm9yZSwyKTt2YXIgUD0he3RvU3RyaW5nOm51bGx9LnByb3BlcnR5SXNFbnVtZXJhYmxlKCJ0b1N0cmluZyIpLE49WyJ2YWx1ZU9mIiwiaXNQcm90b3R5cGVPZiIsInRvU3RyaW5nIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJoYXNPd25Qcm9wZXJ0eSIsInRvTG9jYWxlU3RyaW5nIl07TS5rZXlzPWZ1bmN0aW9uKHQpe2lmKCFNLmlzT2JqZWN0KHQpKXJldHVybltdO2lmKHYpcmV0dXJuIHYodCk7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpTS5oYXModCxuKSYmZS5wdXNoKG4pO3JldHVybiBQJiZhKHQsZSksZX0sTS5hbGxLZXlzPWZ1bmN0aW9uKHQpe2lmKCFNLmlzT2JqZWN0KHQpKXJldHVybltdO3ZhciBlPVtdO2Zvcih2YXIgbiBpbiB0KWUucHVzaChuKTtyZXR1cm4gUCYmYSh0LGUpLGV9LE0udmFsdWVzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1NLmtleXModCksbj1lLmxlbmd0aCxpPUFycmF5KG4pLHI9MDtyPG47cisrKWlbcl09dFtlW3JdXTtyZXR1cm4gaX0sTS5tYXBPYmplY3Q9ZnVuY3Rpb24odCxlLG4pe2U9VChlLG4pO2Zvcih2YXIgaSxyPU0ua2V5cyh0KSxvPXIubGVuZ3RoLHM9e30sYT0wO2E8bzthKyspaT1yW2FdLHNbaV09ZSh0W2ldLGksdCk7cmV0dXJuIHN9LE0ucGFpcnM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPU0ua2V5cyh0KSxuPWUubGVuZ3RoLGk9QXJyYXkobikscj0wO3I8bjtyKyspaVtyXT1bZVtyXSx0W2Vbcl1dXTtyZXR1cm4gaX0sTS5pbnZlcnQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXt9LG49TS5rZXlzKHQpLGk9MCxyPW4ubGVuZ3RoO2k8cjtpKyspZVt0W25baV1dXT1uW2ldO3JldHVybiBlfSxNLmZ1bmN0aW9ucz1NLm1ldGhvZHM9ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpTS5pc0Z1bmN0aW9uKHRbbl0pJiZlLnB1c2gobik7cmV0dXJuIGUuc29ydCgpfSxNLmV4dGVuZD1rKE0uYWxsS2V5cyksTS5leHRlbmRPd249TS5hc3NpZ249ayhNLmtleXMpLE0uZmluZEtleT1mdW5jdGlvbih0LGUsbil7ZT1UKGUsbik7Zm9yKHZhciBpLHI9TS5rZXlzKHQpLG89MCxzPXIubGVuZ3RoO288cztvKyspaWYoaT1yW29dLGUodFtpXSxpLHQpKXJldHVybiBpfSxNLnBpY2s9ZnVuY3Rpb24odCxlLG4pe3ZhciBpLHIsbz17fSxzPXQ7aWYobnVsbD09cylyZXR1cm4gbztNLmlzRnVuY3Rpb24oZSk/KHI9TS5hbGxLZXlzKHMpLGk9UyhlLG4pKToocj1ZKGFyZ3VtZW50cywhMSwhMSwxKSxpPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZSBpbiBufSxzPU9iamVjdChzKSk7Zm9yKHZhciBhPTAsbD1yLmxlbmd0aDthPGw7YSsrKXt2YXIgYz1yW2FdLHU9c1tjXTtpKHUsYyxzKSYmKG9bY109dSl9cmV0dXJuIG99LE0ub21pdD1mdW5jdGlvbih0LGUsbil7aWYoTS5pc0Z1bmN0aW9uKGUpKWU9TS5uZWdhdGUoZSk7ZWxzZXt2YXIgaT1NLm1hcChZKGFyZ3VtZW50cywhMSwhMSwxKSxTdHJpbmcpO2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4hTS5jb250YWlucyhpLGUpfX1yZXR1cm4gTS5waWNrKHQsZSxuKX0sTS5kZWZhdWx0cz1rKE0uYWxsS2V5cywhMCksTS5jcmVhdGU9ZnVuY3Rpb24odCxlKXt2YXIgbj1MKHQpO3JldHVybiBlJiZNLmV4dGVuZE93bihuLGUpLG59LE0uY2xvbmU9ZnVuY3Rpb24odCl7cmV0dXJuIE0uaXNPYmplY3QodCk/TS5pc0FycmF5KHQpP3Quc2xpY2UoKTpNLmV4dGVuZCh7fSx0KTp0fSxNLnRhcD1mdW5jdGlvbih0LGUpe3JldHVybiBlKHQpLHR9LE0uaXNNYXRjaD1mdW5jdGlvbih0LGUpe3ZhciBuPU0ua2V5cyhlKSxpPW4ubGVuZ3RoO2lmKG51bGw9PXQpcmV0dXJuIWk7Zm9yKHZhciByPU9iamVjdCh0KSxvPTA7bzxpO28rKyl7dmFyIHM9bltvXTtpZihlW3NdIT09cltzXXx8IShzIGluIHIpKXJldHVybiExfXJldHVybiEwfTt2YXIgST1mdW5jdGlvbih0LGUsbixpKXtpZih0PT09ZSlyZXR1cm4gMCE9PXR8fDEvdD09PTEvZTtpZihudWxsPT10fHxudWxsPT1lKXJldHVybiB0PT09ZTt0IGluc3RhbmNlb2YgTSYmKHQ9dC5fd3JhcHBlZCksZSBpbnN0YW5jZW9mIE0mJihlPWUuX3dyYXBwZWQpO3ZhciByPW0uY2FsbCh0KTtpZihyIT09bS5jYWxsKGUpKXJldHVybiExO3N3aXRjaChyKXtjYXNlIltvYmplY3QgUmVnRXhwXSI6Y2FzZSJbb2JqZWN0IFN0cmluZ10iOnJldHVybiIiK3Q9PSIiK2U7Y2FzZSJbb2JqZWN0IE51bWJlcl0iOnJldHVybit0IT09K3Q/K2UhPT0rZTowPT09K3Q/MS8rdD09PTEvZTordD09PStlO2Nhc2UiW29iamVjdCBEYXRlXSI6Y2FzZSJbb2JqZWN0IEJvb2xlYW5dIjpyZXR1cm4rdD09PStlfXZhciBvPSJbb2JqZWN0IEFycmF5XSI9PT1yO2lmKCFvKXtpZigib2JqZWN0IiE9dHlwZW9mIHR8fCJvYmplY3QiIT10eXBlb2YgZSlyZXR1cm4hMTt2YXIgcz10LmNv", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ODI6IkJPT0xFQU4iLDgzOiJVTkRFRklORUQiLDg0OiJOVUxMIiw4NToiREFUQSIsODc6IlNFUCJ9LHByb2R1Y3Rpb25zXzpbMCxbMywyXSxbNCwxXSxbNywxXSxbNywxXSxbNywxXSxbNywxXSxbNywxXSxbNywxXSxbNywxXSxbMTMsMV0sWzEwLDNdLFsxNiw1XSxbOSw0XSxbOSw0XSxbMjQsNl0sWzI3LDZdLFszOCw2XSxbNDMsMl0sWzQ1LDNdLFs0NSwxXSxbMjYsM10sWzgsNV0sWzgsNV0sWzExLDVdLFsxMiwzXSxbNTksNV0sWzYzLDFdLFs2MywxXSxbNjQsNV0sWzY5LDFdLFs3MSwzXSxbNzQsM10sWzIwLDFdLFsyMCwxXSxbMjAsMV0sWzIwLDFdLFsyMCwxXSxbMjAsMV0sWzIwLDFdLFs1NiwxXSxbNTYsMV0sWzc5LDJdLFs3OCwxXSxbODYsM10sWzg2LDFdLFs2LDBdLFs2LDJdLFsxNywxXSxbMTcsMl0sWzIxLDBdLFsyMSwyXSxbMjIsMF0sWzIyLDFdLFsyNSwwXSxbMjUsMV0sWzI4LDBdLFsyOCwxXSxbMzAsMF0sWzMwLDJdLFszMSwwXSxbMzEsMV0sWzMyLDBdLFszMiwxXSxbMzUsMF0sWzM1LDJdLFszNiwwXSxbMzYsMV0sWzM3LDBdLFszNywxXSxbNDAsMF0sWzQwLDJdLFs0MSwwXSxbNDEsMV0sWzQyLDBdLFs0MiwxXSxbNDYsMF0sWzQ2LDFdLFs0OSwwXSxbNDksMl0sWzUwLDBdLFs1MCwxXSxbNTIsMF0sWzUyLDJdLFs1MywwXSxbNTMsMV0sWzU3LDBdLFs1NywyXSxbNTgsMF0sWzU4LDFdLFs2MSwwXSxbNjEsMl0sWzYyLDBdLFs2MiwxXSxbNjYsMF0sWzY2LDJdLFs2NywwXSxbNjcsMV0sWzcwLDFdLFs3MCwyXSxbNzYsMV0sWzc2LDJdXSxwZXJmb3JtQWN0aW9uOmZ1bmN0aW9uKHQsZSxuLGkscixvLHMpe3ZhciBhPW8ubGVuZ3RoLTE7c3dpdGNoKHIpe2Nhc2UgMTpyZXR1cm4gb1thLTFdO2Nhc2UgMjp0aGlzLiQ9aS5wcmVwYXJlUHJvZ3JhbShvW2FdKTticmVhaztjYXNlIDM6dGhpcy4kPW9bYV07YnJlYWs7Y2FzZSA0OnRoaXMuJD1vW2FdO2JyZWFrO2Nhc2UgNTp0aGlzLiQ9b1thXTticmVhaztjYXNlIDY6dGhpcy4kPW9bYV07YnJlYWs7Y2FzZSA3OnRoaXMuJD1vW2FdO2JyZWFrO2Nhc2UgODp0aGlzLiQ9b1thXTticmVhaztjYXNlIDk6dGhpcy4kPXt0eXBlOiJDb21tZW50U3RhdGVtZW50Iix2YWx1ZTppLnN0cmlwQ29tbWVudChvW2FdKSxzdHJpcDppLnN0cmlwRmxhZ3Mob1thXSxvW2FdKSxsb2M6aS5sb2NJbmZvKHRoaXMuXyQpfTticmVhaztjYXNlIDEwOnRoaXMuJD17dHlwZToiQ29udGVudFN0YXRlbWVudCIsb3JpZ2luYWw6b1thXSx2YWx1ZTpvW2FdLGxvYzppLmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMTE6dGhpcy4kPWkucHJlcGFyZVJhd0Jsb2NrKG9bYS0yXSxvW2EtMV0sb1thXSx0aGlzLl8kKTticmVhaztjYXNlIDEyOnRoaXMuJD17cGF0aDpvW2EtM10scGFyYW1zOm9bYS0yXSxoYXNoOm9bYS0xXX07YnJlYWs7Y2FzZSAxMzp0aGlzLiQ9aS5wcmVwYXJlQmxvY2sob1thLTNdLG9bYS0yXSxvW2EtMV0sb1thXSwhMSx0aGlzLl8kKTticmVhaztjYXNlIDE0OnRoaXMuJD1pLnByZXBhcmVCbG9jayhvW2EtM10sb1thLTJdLG9bYS0xXSxvW2FdLCEwLHRoaXMuXyQpO2JyZWFrO2Nhc2UgMTU6dGhpcy4kPXtvcGVuOm9bYS01XSxwYXRoOm9bYS00XSxwYXJhbXM6b1thLTNdLGhhc2g6b1thLTJdLGJsb2NrUGFyYW1zOm9bYS0xXSxzdHJpcDppLnN0cmlwRmxhZ3Mob1thLTVdLG9bYV0pfTticmVhaztjYXNlIDE2OnRoaXMuJD17cGF0aDpvW2EtNF0scGFyYW1zOm9bYS0zXSxoYXNoOm9bYS0yXSxibG9ja1BhcmFtczpvW2EtMV0sc3RyaXA6aS5zdHJpcEZsYWdzKG9bYS01XSxvW2FdKX07YnJlYWs7Y2FzZSAxNzp0aGlzLiQ9e3BhdGg6b1thLTRdLHBhcmFtczpvW2EtM10saGFzaDpvW2EtMl0sYmxvY2tQYXJhbXM6b1thLTFdLHN0cmlwOmkuc3RyaXBGbGFncyhvW2EtNV0sb1thXSl9O2JyZWFrO2Nhc2UgMTg6dGhpcy4kPXtzdHJpcDppLnN0cmlwRmxhZ3Mob1thLTFdLG9bYS0xXSkscHJvZ3JhbTpvW2FdfTticmVhaztjYXNlIDE5OnZhciBsPWkucHJlcGFyZUJsb2NrKG9bYS0yXSxvW2EtMV0sb1thXSxvW2FdLCExLHRoaXMuXyQpLGM9aS5wcmVwYXJlUHJvZ3JhbShbbF0sb1thLTFdLmxvYyk7Yy5jaGFpbmVkPSEwLHRoaXMuJD17c3RyaXA6b1thLTJdLnN0cmlwLHByb2dyYW06YyxjaGFpbjohMH07YnJlYWs7Y2FzZSAyMDp0aGlzLiQ9b1thXTticmVhaztjYXNlIDIxOnRoaXMuJD17cGF0aDpvW2EtMV0sc3RyaXA6aS5zdHJpcEZsYWdzKG9bYS0yXSxvW2FdKX07YnJlYWs7Y2FzZSAyMjp0aGlzLiQ9aS5wcmVwYXJlTXVzdGFjaGUob1thLTNdLG9bYS0yXSxvW2EtMV0sb1thLTRdLGkuc3RyaXBGbGFncyhvW2EtNF0sb1thXSksdGhpcy5fJCk7YnJlYWs7Y2FzZSAyMzp0aGlzLiQ9aS5wcmVwYXJlTXVzdGFjaGUob1thLTNdLG9bYS0yXSxvW2EtMV0sb1thLTRdLGkuc3RyaXBGbGFncyhvW2EtNF0sb1thXSksdGhpcy5fJCk7YnJlYWs7Y2FzZSAyNDp0aGlzLiQ9e3R5cGU6IlBhcnRpYWxTdGF0ZW1lbnQiLG5hbWU6b1thLTNdLHBhcmFtczpvW2EtMl0saGFzaDpvW2EtMV0saW5kZW50OiIiLHN0cmlwOmkuc3RyaXBGbGFncyhvW2EtNF0sb1thXSksbG9jOmkubG9jSW5mbyh0aGlzLl8kKX07YnJlYWs7Y2FzZSAyNTp0aGlzLiQ9aS5wcmVwYXJlUGFydGlhbEJsb2NrKG9bYS0yXSxvW2EtMV0sb1thXSx0aGlzLl8kKTticmVhaztjYXNlIDI2OnRoaXMuJD17cGF0aDpvW2EtM10scGFyYW1zOm9bYS0yXSxoYXNoOm9bYS0xXSxzdHJpcDppLnN0cmlwRmxhZ3Mob1thLTRdLG9bYV0pfTticmVhaztjYXNlIDI3OnRoaXMuJD1vW2FdO2JyZWFrO2Nhc2UgMjg6dGhpcy4kPW9bYV07YnJlYWs7Y2FzZSAyOTp0aGlzLiQ9e3R5cGU6IlN1YkV4cHJlc3Npb24iLHBhdGg6b1thLTNdLHBhcmFtczpvW2EtMl0saGFzaDpvW2EtMV0sbG9jOmkubG9jSW5mbyh0aGlzLl8kKX07YnJlYWs7Y2FzZSAzMDp0aGlzLiQ9e3R5cGU6Ikhhc2giLHBhaXJzOm9bYV0sbG9jOmkubG9jSW5mbyh0aGlzLl8kKX07YnJlYWs7Y2FzZSAzMTp0aGlzLiQ9e3R5cGU6Ikhhc2hQYWlyIixrZXk6aS5pZChvW2EtMl0pLHZhbHVlOm9bYV0sbG9jOmkubG9jSW5mbyh0aGlzLl8kKX07YnJlYWs7Y2FzZSAzMjp0aGlzLiQ9aS5pZChvW2EtMV0pO2JyZWFrO2Nhc2UgMzM6dGhpcy4kPW9bYV07YnJlYWs7Y2FzZSAzNDp0aGlzLiQ9b1thXTticmVhaztjYXNlIDM1OnRoaXMuJD17dHlwZToiU3RyaW5nTGl0ZXJhbCIsdmFsdWU6b1thXSxvcmlnaW5hbDpvW2FdLGxvYzppLmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzY6dGhpcy4kPXt0eXBlOiJOdW1iZXJMaXRlcmFsIix2YWx1ZTpOdW1iZXIob1thXSksb3JpZ2luYWw6TnVtYmVyKG9bYV0pLGxvYzppLmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzc6dGhpcy4kPXt0eXBlOiJCb29sZWFuTGl0ZXJhbCIsdmFsdWU6InRydWUiPT09b1thXSxvcmlnaW5hbDoidHJ1ZSI9PT1vW2FdLGxvYzppLmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzg6dGhpcy4kPXt0eXBlOiJVbmRlZmluZWRMaXRlcmFsIixvcmlnaW5hbDp2b2lkIDAsdmFsdWU6dm9pZCAwLGxvYzppLmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgMzk6dGhpcy4kPXt0eXBlOiJOdWxsTGl0ZXJhbCIsb3JpZ2luYWw6bnVsbCx2YWx1ZTpudWxsLGxvYzppLmxvY0luZm8odGhpcy5fJCl9O2JyZWFrO2Nhc2UgNDA6dGhpcy4kPW9bYV07YnJlYWs7Y2FzZSA0MTp0aGlzLiQ9b1thXTticmVhaztjYXNlIDQyOnRoaXMuJD1pLnByZXBhcmVQYXRoKCEwLG9bYV0sdGhpcy5fJCk7YnJlYWs7Y2FzZSA0Mzp0aGlzLiQ9aS5wcmVwYXJlUGF0aCghMSxvW2FdLHRoaXMuXyQpO2JyZWFrO2Nhc2UgNDQ6b1thLTJdLnB1c2goe3BhcnQ6aS5pZChvW2FdKSxvcmlnaW5hbDpvW2FdLHNlcGFyYXRvcjpvW2EtMV19KSx0aGlzLiQ9b1thLTJdO2JyZWFrO2Nhc2UgNDU6dGhpcy4kPVt7cGFydDppLmlkKG9bYV0pLG9yaWdpbmFsOm9bYV19XTticmVhaztjYXNlIDQ2OnRoaXMuJD1bXTticmVhaztjYXNlIDQ3Om9bYS0xXS5wdXNoKG9bYV0pO2JyZWFrO2Nhc2UgNDg6dGhpcy4kPVtvW2FdXTticmVhaztjYXNlIDQ5Om9bYS0xXS5wdXNoKG9bYV0pO2JyZWFrO2Nhc2UgNTA6dGhpcy4kPVtdO2JyZWFrO2Nhc2UgNTE6b1thLTFdLnB1c2gob1thXSk7YnJlYWs7Y2FzZSA1ODp0aGlzLiQ9W107YnJlYWs7Y2FzZSA1OTpvW2EtMV0ucHVzaChvW2FdKTticmVhaztjYXNlIDY0OnRoaXMuJD1bXTticmVhaztjYXNlIDY1Om9bYS0xXS5wdXNoKG9bYV0pO2JyZWFrO2Nhc2UgNzA6dGhpcy4kPVtdO2JyZWFrO2Nhc2UgNzE6b1thLTFdLnB1c2gob1thXSk7YnJlYWs7Y2FzZSA3ODp0aGlzLiQ9W107YnJlYWs7Y2FzZSA3OTpvW2EtMV0ucHVzaChvW2FdKTticmVhaztjYXNlIDgyOnRoaXMuJD1bXTticmVhaztjYXNlIDgzOm9bYS0xXS5wdXNoKG9bYV0pO2JyZWFrO2Nhc2UgODY6dGhpcy4kPVtdO2JyZWFrO2Nhc2UgODc6b1thLTFdLnB1c2gob1thXSk7YnJlYWs7Y2FzZSA5MDp0aGlzLiQ9W107YnJlYWs7Y2FzZSA5MTpvW2EtMV0ucHVzaChvW2FdKTticmVhaztjYXNlIDk0OnRoaXMuJD1bXTticmVhaztjYXNlIDk1Om9bYS0xXS5wdXNoKG9bYV0pO2JyZWFrO2Nhc2UgOTg6dGhpcy4kPVtvW2FdXTticmVhaztjYXNlIDk5Om9bYS0xXS5wdXNoKG9bYV0pO2JyZWFrO2Nhc2UgMTAwOnRoaXMuJD1bb1thXV07YnJlYWs7Y2FzZSAxMDE6b1thLTFdLnB1c2gob1thXSl9fSx0YWJsZTpbezM6MSw0OjIsNTpbMiw0Nl0sNjozLDE0OlsyLDQ2XSwxNTpbMiw0Nl0sMTk6WzIsNDZdLDI5OlsyLDQ2XSwzNDpbMiw0Nl0sNDg6WzIsNDZdLDUxOlsyLDQ2XSw1NTpbMiw0Nl0sNjA6WzIsNDZdfSx7MTpbM119LHs1OlsxLDRdfSx7NTpbMiwyXSw3OjUsODo2LDk6NywxMDo4LDExOjksMTI6MTAsMTM6MTEsMTQ6WzEsMTJdLDE1OlsxLDIwXSwxNjoxNywxOTpbMSwyM10sMjQ6MTUsMjc6MTYsMjk6WzEsMjFdLDM0OlsxLDIyXSwzOTpbMiwyXSw0NDpbMiwyXSw0NzpbMiwyXSw0ODpbMSwxM10sNTE6WzEsMTRdLDU1OlsxLDE4XSw1OToxOSw2MDpbMSwyNF19LHsxOlsyLDFdfSx7NTpbMiw0N10sMTQ6WzIsNDddLDE1OlsyLDQ3XSwxOTpbMiw0N10sMjk6WzIsNDddLDM0OlsyLDQ3XSwzOTpbMiw0N10sNDQ6WzIsNDddLDQ3OlsyLDQ3XSw0ODpbMiw0N10sNTE6WzIsNDddLDU1OlsyLDQ3XSw2MDpbMiw0N119LHs1OlsyLDNdLDE0OlsyLDNdLDE1OlsyLDNdLDE5OlsyLDNdLDI5OlsyLDNdLDM0OlsyLDNdLDM5OlsyLDNdLDQ0OlsyLDNdLDQ3OlsyLDNdLDQ4OlsyLDNdLDUxOlsyLDNdLDU1OlsyLDNdLDYwOlsyLDNdfSx7NTpbMiw0XSwxNDpbMiw0XSwxNTpbMiw0XSwxOTpbMiw0XSwyOTpbMiw0XSwzNDpbMiw0XSwzOTpbMiw0XSw0NDpbMiw0XSw0NzpbMiw0XSw0ODpbMiw0XSw1MTpbMiw0XSw1NTpbMiw0XSw2MDpbMiw0XX0sezU6WzIsNV0sMTQ6WzIsNV0sMTU6WzIsNV0sMTk6WzIsNV0sMjk6WzIsNV0sMzQ6WzIsNV0sMzk6WzIsNV0sNDQ6WzIsNV0sNDc6WzIsNV0sNDg6WzIsNV0sNTE6WzIsNV0sNTU6WzIsNV0sNjA6WzIsNV19LHs1OlsyLDZdLDE0OlsyLDZdLDE1OlsyLDZdLDE5OlsyLDZdLDI5OlsyLDZdLDM0OlsyLDZdLDM5OlsyLDZdLDQ0OlsyLDZdLDQ3OlsyLDZdLDQ4OlsyLDZdLDUxOlsyLDZdLDU1OlsyLDZdLDYwOlsyLDZdfSx7NTpbMiw3XSwxNDpbMiw3XSwxNTpbMiw3XSwxOTpbMiw3XSwyOTpbMiw3XSwzNDpbMiw3XSwzOTpbMiw3XSw0NDpbMiw3XSw0NzpbMiw3XSw0ODpbMiw3XSw1MTpbMiw3XSw1NTpbMiw3XSw2MDpbMiw3XX0sezU6WzIsOF0sMTQ6WzIsOF0sMTU6WzIsOF0sMTk6WzIsOF0sMjk6WzIsOF0sMzQ6WzIsOF0sMzk6WzI=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("OlsyLDcyXSw3ODoyNiw3OToyNyw4MDpbMSwyOF0sODE6WzEsMjldLDgyOlsxLDMwXSw4MzpbMSwzMV0sODQ6WzEsMzJdLDg1OlsxLDM0XSw4NjozM30sezU6WzIsMjRdLDE0OlsyLDI0XSwxNTpbMiwyNF0sMTk6WzIsMjRdLDI5OlsyLDI0XSwzNDpbMiwyNF0sMzk6WzIsMjRdLDQ0OlsyLDI0XSw0NzpbMiwyNF0sNDg6WzIsMjRdLDUxOlsyLDI0XSw1NTpbMiwyNF0sNjA6WzIsMjRdfSx7Njg6WzEsMTMwXX0sezY1OlsyLDk1XSw2ODpbMiw5NV0sNzI6WzIsOTVdLDgwOlsyLDk1XSw4MTpbMiw5NV0sODI6WzIsOTVdLDgzOlsyLDk1XSw4NDpbMiw5NV0sODU6WzIsOTVdfSx7Njg6WzIsOTddfSx7NTpbMiwyMV0sMTQ6WzIsMjFdLDE1OlsyLDIxXSwxOTpbMiwyMV0sMjk6WzIsMjFdLDM0OlsyLDIxXSwzOTpbMiwyMV0sNDQ6WzIsMjFdLDQ3OlsyLDIxXSw0ODpbMiwyMV0sNTE6WzIsMjFdLDU1OlsyLDIxXSw2MDpbMiwyMV19LHszMzpbMSwxMzFdfSx7MzM6WzIsNjNdfSx7NzI6WzEsMTMzXSw3NjoxMzJ9LHszMzpbMSwxMzRdfSx7MzM6WzIsNjldfSx7MTU6WzIsMTJdfSx7MTQ6WzIsMjZdLDE1OlsyLDI2XSwxOTpbMiwyNl0sMjk6WzIsMjZdLDM0OlsyLDI2XSw0NzpbMiwyNl0sNDg6WzIsMjZdLDUxOlsyLDI2XSw1NTpbMiwyNl0sNjA6WzIsMjZdfSx7MjM6WzIsMzFdLDMzOlsyLDMxXSw1NDpbMiwzMV0sNjg6WzIsMzFdLDcyOlsyLDMxXSw3NTpbMiwzMV19LHszMzpbMiw3NF0sNDI6MTM1LDc0OjEzNiw3NTpbMSwxMjFdfSx7MzM6WzIsNzFdLDY1OlsyLDcxXSw3MjpbMiw3MV0sNzU6WzIsNzFdLDgwOlsyLDcxXSw4MTpbMiw3MV0sODI6WzIsNzFdLDgzOlsyLDcxXSw4NDpbMiw3MV0sODU6WzIsNzFdfSx7MzM6WzIsNzNdLDc1OlsyLDczXX0sezIzOlsyLDI5XSwzMzpbMiwyOV0sNTQ6WzIsMjldLDY1OlsyLDI5XSw2ODpbMiwyOV0sNzI6WzIsMjldLDc1OlsyLDI5XSw4MDpbMiwyOV0sODE6WzIsMjldLDgyOlsyLDI5XSw4MzpbMiwyOV0sODQ6WzIsMjldLDg1OlsyLDI5XX0sezE0OlsyLDE1XSwxNTpbMiwxNV0sMTk6WzIsMTVdLDI5OlsyLDE1XSwzNDpbMiwxNV0sMzk6WzIsMTVdLDQ0OlsyLDE1XSw0NzpbMiwxNV0sNDg6WzIsMTVdLDUxOlsyLDE1XSw1NTpbMiwxNV0sNjA6WzIsMTVdfSx7NzI6WzEsMTM4XSw3NzpbMSwxMzddfSx7NzI6WzIsMTAwXSw3NzpbMiwxMDBdfSx7MTQ6WzIsMTZdLDE1OlsyLDE2XSwxOTpbMiwxNl0sMjk6WzIsMTZdLDM0OlsyLDE2XSw0NDpbMiwxNl0sNDc6WzIsMTZdLDQ4OlsyLDE2XSw1MTpbMiwxNl0sNTU6WzIsMTZdLDYwOlsyLDE2XX0sezMzOlsxLDEzOV19LHszMzpbMiw3NV19LHszMzpbMiwzMl19LHs3MjpbMiwxMDFdLDc3OlsyLDEwMV19LHsxNDpbMiwxN10sMTU6WzIsMTddLDE5OlsyLDE3XSwyOTpbMiwxN10sMzQ6WzIsMTddLDM5OlsyLDE3XSw0NDpbMiwxN10sCjQ3OlsyLDE3XSw0ODpbMiwxN10sNTE6WzIsMTddLDU1OlsyLDE3XSw2MDpbMiwxN119XSxkZWZhdWx0QWN0aW9uczp7NDpbMiwxXSw1NTpbMiw1NV0sNTc6WzIsMjBdLDYxOlsyLDU3XSw3NDpbMiw4MV0sODM6WzIsODVdLDg3OlsyLDE4XSw5MTpbMiw4OV0sMTAyOlsyLDUzXSwxMDU6WzIsOTNdLDExMTpbMiwxOV0sMTEyOlsyLDc3XSwxMTc6WzIsOTddLDEyMDpbMiw2M10sMTIzOlsyLDY5XSwxMjQ6WzIsMTJdLDEzNjpbMiw3NV0sMTM3OlsyLDMyXX0scGFyc2VFcnJvcjpmdW5jdGlvbih0LGUpe3Rocm93IG5ldyBFcnJvcih0KX0scGFyc2U6ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe3ZhciB0O3JldHVybiB0PW4ubGV4ZXIubGV4KCl8fDEsIm51bWJlciIhPXR5cGVvZiB0JiYodD1uLnN5bWJvbHNfW3RdfHx0KSx0fXZhciBuPXRoaXMsaT1bMF0scj1bbnVsbF0sbz1bXSxzPXRoaXMudGFibGUsYT0iIixsPTAsYz0wLHU9MDt0aGlzLmxleGVyLnNldElucHV0KHQpLHRoaXMubGV4ZXIueXk9dGhpcy55eSx0aGlzLnl5LmxleGVyPXRoaXMubGV4ZXIsdGhpcy55eS5wYXJzZXI9dGhpcywidW5kZWZpbmVkIj09dHlwZW9mIHRoaXMubGV4ZXIueXlsbG9jJiYodGhpcy5sZXhlci55eWxsb2M9e30pO3ZhciBkPXRoaXMubGV4ZXIueXlsbG9jO28ucHVzaChkKTt2YXIgaD10aGlzLmxleGVyLm9wdGlvbnMmJnRoaXMubGV4ZXIub3B0aW9ucy5yYW5nZXM7ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMueXkucGFyc2VFcnJvciYmKHRoaXMucGFyc2VFcnJvcj10aGlzLnl5LnBhcnNlRXJyb3IpO2Zvcih2YXIgcCxmLG0sXyxnLHYseSxiLHcsTT17fTs7KXtpZihtPWlbaS5sZW5ndGgtMV0sdGhpcy5kZWZhdWx0QWN0aW9uc1ttXT9fPXRoaXMuZGVmYXVsdEFjdGlvbnNbbV06KG51bGwhPT1wJiYidW5kZWZpbmVkIiE9dHlwZW9mIHB8fChwPWUoKSksXz1zW21dJiZzW21dW3BdKSwidW5kZWZpbmVkIj09dHlwZW9mIF98fCFfLmxlbmd0aHx8IV9bMF0pe3ZhciBTPSIiO2lmKCF1KXt3PVtdO2Zvcih2IGluIHNbbV0pdGhpcy50ZXJtaW5hbHNfW3ZdJiZ2PjImJncucHVzaCgiJyIrdGhpcy50ZXJtaW5hbHNfW3ZdKyInIik7Uz10aGlzLmxleGVyLnNob3dQb3NpdGlvbj8iUGFyc2UgZXJyb3Igb24gbGluZSAiKyhsKzEpKyI6XG4iK3RoaXMubGV4ZXIuc2hvd1Bvc2l0aW9uKCkrIlxuRXhwZWN0aW5nICIrdy5qb2luKCIsICIpKyIsIGdvdCAnIisodGhpcy50ZXJtaW5hbHNfW3BdfHxwKSsiJyI6IlBhcnNlIGVycm9yIG9uIGxpbmUgIisobCsxKSsiOiBVbmV4cGVjdGVkICIrKDE9PXA/ImVuZCBvZiBpbnB1dCI6IiciKyh0aGlzLnRlcm1pbmFsc19bcF18fHApKyInIiksdGhpcy5wYXJzZUVycm9yKFMse3RleHQ6dGhpcy5sZXhlci5tYXRjaCx0b2tlbjp0aGlzLnRlcm1pbmFsc19bcF18fHAsbGluZTp0aGlzLmxleGVyLnl5bGluZW5vLGxvYzpkLGV4cGVjdGVkOnd9KX19aWYoX1swXWluc3RhbmNlb2YgQXJyYXkmJl8ubGVuZw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("KXt0aGlzLnNvdXJjZT10LHRoaXMuc3RhcnQ9e2xpbmU6ZS5maXJzdF9saW5lLGNvbHVtbjplLmZpcnN0X2NvbHVtbn0sdGhpcy5lbmQ9e2xpbmU6ZS5sYXN0X2xpbmUsY29sdW1uOmUubGFzdF9jb2x1bW59fWZ1bmN0aW9uIG8odCl7cmV0dXJuL15cWy4qXF0kLy50ZXN0KHQpP3Quc3Vic3RyKDEsdC5sZW5ndGgtMik6dH1mdW5jdGlvbiBzKHQsZSl7cmV0dXJue29wZW46In4iPT09dC5jaGFyQXQoMiksY2xvc2U6In4iPT09ZS5jaGFyQXQoZS5sZW5ndGgtMyl9fWZ1bmN0aW9uIGEodCl7cmV0dXJuIHQucmVwbGFjZSgvXlx7XHt+P1whLT8tPy8sIiIpLnJlcGxhY2UoLy0/LT9+P1x9XH0kLywiIil9ZnVuY3Rpb24gbCh0LGUsbil7bj10aGlzLmxvY0luZm8obik7Zm9yKHZhciBpPXQ/IkAiOiIiLHI9W10sbz0wLHM9IiIsYT0wLGw9ZS5sZW5ndGg7YTxsO2ErKyl7dmFyIGM9ZVthXS5wYXJ0LHU9ZVthXS5vcmlnaW5hbCE9PWM7aWYoaSs9KGVbYV0uc2VwYXJhdG9yfHwiIikrYyx1fHwiLi4iIT09YyYmIi4iIT09YyYmInRoaXMiIT09YylyLnB1c2goYyk7ZWxzZXtpZihyLmxlbmd0aD4wKXRocm93IG5ldyBfWyJkZWZhdWx0Il0oIkludmFsaWQgcGF0aDogIitpLHtsb2M6bn0pOyIuLiI9PT1jJiYobysrLHMrPSIuLi8iKX19cmV0dXJue3R5cGU6IlBhdGhFeHByZXNzaW9uIixkYXRhOnQsZGVwdGg6byxwYXJ0czpyLG9yaWdpbmFsOmksbG9jOm59fWZ1bmN0aW9uIGModCxlLG4saSxyLG8pe3ZhciBzPWkuY2hhckF0KDMpfHxpLmNoYXJBdCgyKSxhPSJ7IiE9PXMmJiImIiE9PXMsbD0vXCovLnRlc3QoaSk7cmV0dXJue3R5cGU6bD8iRGVjb3JhdG9yIjoiTXVzdGFjaGVTdGF0ZW1lbnQiLHBhdGg6dCxwYXJhbXM6ZSxoYXNoOm4sZXNjYXBlZDphLHN0cmlwOnIsbG9jOnRoaXMubG9jSW5mbyhvKX19ZnVuY3Rpb24gdSh0LGUsbixyKXtpKHQsbikscj10aGlzLmxvY0luZm8ocik7dmFyIG89e3R5cGU6IlByb2dyYW0iLGJvZHk6ZSxzdHJpcDp7fSxsb2M6cn07cmV0dXJue3R5cGU6IkJsb2NrU3RhdGVtZW50IixwYXRoOnQucGF0aCxwYXJhbXM6dC5wYXJhbXMsaGFzaDp0Lmhhc2gscHJvZ3JhbTpvLG9wZW5TdHJpcDp7fSxpbnZlcnNlU3RyaXA6e30sY2xvc2VTdHJpcDp7fSxsb2M6cn19ZnVuY3Rpb24gZCh0LGUsbixyLG8scyl7ciYmci5wYXRoJiZpKHQscik7dmFyIGE9L1wqLy50ZXN0KHQub3Blbik7ZS5ibG9ja1BhcmFtcz10LmJsb2NrUGFyYW1zO3ZhciBsPXZvaWQgMCxjPXZvaWQgMDtpZihuKXtpZihhKXRocm93IG5ldyBfWyJkZWZhdWx0Il0oIlVuZXhwZWN0ZWQgaW52ZXJzZSBibG9jayBvbiBkZWNvcmF0b3IiLG4pO24uY2hhaW4mJihuLnByb2dyYW0uYm9keVswXS5jbG9zZVN0cmlwPXIuc3RyaXApLGM9bi5zdHJpcCxsPW4ucHJvZ3JhbX1yZXR1cm4gbyYmKG89bCxsPWUsZT1vKSx7dHlwZTphPyJEZWNvcmF0b3JCbG9jayI6IkJsb2NrU3RhdGVtZW4=", "base64"));
  res.write(new Buffer("dCIscGF0aDp0LnBhdGgscGFyYW1zOnQucGFyYW1zLGhhc2g6dC5oYXNoLHByb2dyYW06ZSxpbnZlcnNlOmwsb3BlblN0cmlwOnQuc3RyaXAsaW52ZXJzZVN0cmlwOmMsY2xvc2VTdHJpcDpyJiZyLnN0cmlwLGxvYzp0aGlzLmxvY0luZm8ocyl9fWZ1bmN0aW9uIGgodCxlKXtpZighZSYmdC5sZW5ndGgpe3ZhciBuPXRbMF0ubG9jLGk9dFt0Lmxlbmd0aC0xXS5sb2M7biYmaSYmKGU9e3NvdXJjZTpuLnNvdXJjZSxzdGFydDp7bGluZTpuLnN0YXJ0LmxpbmUsY29sdW1uOm4uc3RhcnQuY29sdW1ufSxlbmQ6e2xpbmU6aS5lbmQubGluZSxjb2x1bW46aS5lbmQuY29sdW1ufX0pfXJldHVybnt0eXBlOiJQcm9ncmFtIixib2R5OnQsc3RyaXA6e30sbG9jOmV9fWZ1bmN0aW9uIHAodCxlLG4scil7cmV0dXJuIGkodCxuKSx7dHlwZToiUGFydGlhbEJsb2NrU3RhdGVtZW50IixuYW1lOnQucGF0aCxwYXJhbXM6dC5wYXJhbXMsaGFzaDp0Lmhhc2gscHJvZ3JhbTplLG9wZW5TdHJpcDp0LnN0cmlwLGNsb3NlU3RyaXA6biYmbi5zdHJpcCxsb2M6dGhpcy5sb2NJbmZvKHIpfX12YXIgZj1uKDEpWyJkZWZhdWx0Il07ZS5fX2VzTW9kdWxlPSEwLGUuU291cmNlTG9jYXRpb249cixlLmlkPW8sZS5zdHJpcEZsYWdzPXMsZS5zdHJpcENvbW1lbnQ9YSxlLnByZXBhcmVQYXRoPWwsZS5wcmVwYXJlTXVzdGFjaGU9YyxlLnByZXBhcmVSYXdCbG9jaz11LGUucHJlcGFyZUJsb2NrPWQsZS5wcmVwYXJlUHJvZ3JhbT1oLGUucHJlcGFyZVBhcnRpYWxCbG9jaz1wO3ZhciBtPW4oNiksXz1mKG0pfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoKXt9ZnVuY3Rpb24gcih0LGUsbil7aWYobnVsbD09dHx8InN0cmluZyIhPXR5cGVvZiB0JiYiUHJvZ3JhbSIhPT10LnR5cGUpdGhyb3cgbmV3IHVbImRlZmF1bHQiXSgiWW91IG11c3QgcGFzcyBhIHN0cmluZyBvciBIYW5kbGViYXJzIEFTVCB0byBIYW5kbGViYXJzLnByZWNvbXBpbGUuIFlvdSBwYXNzZWQgIit0KTtlPWV8fHt9LCJkYXRhImluIGV8fChlLmRhdGE9ITApLGUuY29tcGF0JiYoZS51c2VEZXB0aHM9ITApO3ZhciBpPW4ucGFyc2UodCxlKSxyPShuZXcgbi5Db21waWxlcikuY29tcGlsZShpLGUpO3JldHVybihuZXcgbi5KYXZhU2NyaXB0Q29tcGlsZXIpLmNvbXBpbGUocixlKX1mdW5jdGlvbiBvKHQsZSxuKXtmdW5jdGlvbiBpKCl7dmFyIGk9bi5wYXJzZSh0LGUpLHI9KG5ldyBuLkNvbXBpbGVyKS5jb21waWxlKGksZSksbz0obmV3IG4uSmF2YVNjcmlwdENvbXBpbGVyKS5jb21waWxlKHIsZSx2b2lkIDAsITApO3JldHVybiBuLnRlbXBsYXRlKG8pfWZ1bmN0aW9uIHIodCxlKXtyZXR1cm4gb3x8KG89aSgpKSxvLmNhbGwodGhpcyx0LGUpfWlmKHZvaWQgMD09PWUmJihlPXt9KSxudWxsPT10fHwic3RyaW5nIiE9dHlwZW9mIHQmJiJQcm9ncmFtIiE9PXQudHlwZSl0aHJvdyBuZXcgdVsiZGVmYXVsdCJdKCJZb3UgbXVzdCBwYXNzIGEgc3RyaW5nIG9yIEhhbmRsZWJhcnMgQVNUIHRvIEhhbmRsZWJhcnMuY29tcGlsZS4gWW91IHBhc3NlZCAiK3QpOyJkYXRhImluIGV8fChlLmRhdGE9ITApLGUuY29tcGF0JiYoZS51c2VEZXB0aHM9ITApO3ZhciBvPXZvaWQgMDtyZXR1cm4gci5fc2V0dXA9ZnVuY3Rpb24odCl7cmV0dXJuIG98fChvPWkoKSksby5fc2V0dXAodCl9LHIuX2NoaWxkPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBvfHwobz1pKCkpLG8uX2NoaWxkKHQsZSxuLHIpfSxyfWZ1bmN0aW9uIHModCxlKXtpZih0PT09ZSlyZXR1cm4hMDtpZihkLmlzQXJyYXkodCkmJmQuaXNBcnJheShlKSYmdC5sZW5ndGg9PT1lLmxlbmd0aCl7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspaWYoIXModFtuXSxlW25dKSlyZXR1cm4hMTtyZXR1cm4hMH19ZnVuY3Rpb24gYSh0KXtpZighdC5wYXRoLnBhcnRzKXt2YXIgZT10LnBhdGg7dC5wYXRoPXt0eXBlOiJQYXRoRXhwcmVzc2lvbiIsZGF0YTohMSxkZXB0aDowLHBhcnRzOltlLm9yaWdpbmFsKyIiXSxvcmlnaW5hbDplLm9yaWdpbmFsKyIiLGxvYzplLmxvY319fXZhciBsPW4oMSlbImRlZmF1bHQiXTtlLl9fZXNNb2R1bGU9ITAsZS5Db21waWxlcj1pLGUucHJlY29tcGlsZT1yLGUuY29tcGlsZT1vO3ZhciBjPW4oNiksdT1sKGMpLGQ9big1KSxoPW4oMjEpLHA9bChoKSxmPVtdLnNsaWNlO2kucHJvdG90eXBlPXtjb21waWxlcjppLGVxdWFsczpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wY29kZXMubGVuZ3RoO2lmKHQub3Bjb2Rlcy5sZW5ndGghPT1lKXJldHVybiExO2Zvcih2YXIgbj0wO248ZTtuKyspe3ZhciBpPXRoaXMub3Bjb2Rlc1tuXSxyPXQub3Bjb2Rlc1tuXTtpZihpLm9wY29kZSE9PXIub3Bjb2RlfHwhcyhpLmFyZ3Msci5hcmdzKSlyZXR1cm4hMX1lPXRoaXMuY2hpbGRyZW4ubGVuZ3RoO2Zvcih2YXIgbj0wO248ZTtuKyspaWYoIXRoaXMuY2hpbGRyZW5bbl0uZXF1YWxzKHQuY2hpbGRyZW5bbl0pKXJldHVybiExO3JldHVybiEwfSxndWlkOjAsY29tcGlsZTpmdW5jdGlvbih0LGUpe3RoaXMuc291cmNlTm9kZT1bXSx0aGlzLm9wY29kZXM9W10sdGhpcy5jaGlsZHJlbj1bXSx0aGlzLm9wdGlvbnM9ZSx0aGlzLnN0cmluZ1BhcmFtcz1lLnN0cmluZ1BhcmFtcyx0aGlzLnRyYWNrSWRzPWUudHJhY2tJZHMsZS5ibG9ja1BhcmFtcz1lLmJsb2NrUGFyYW1zfHxbXTt2YXIgbj1lLmtub3duSGVscGVycztpZihlLmtub3duSGVscGVycz17aGVscGVyTWlzc2luZzohMCxibG9ja0hlbHBlck1pc3Npbmc6ITAsZWFjaDohMCwiaWYiOiEwLHVubGVzczohMCwid2l0aCI6ITAsbG9nOiEwLGxvb2t1cDohMH0sbilmb3IodmFyIGkgaW4gbilpIGluIG4mJihlLmtub3duSGVscGVyc1tpXT1uW2ldKTtyZXR1cm4gdGhpcy5hY2NlcHQodCl9LGNvbXBpbGVQcm9ncmFtOmZ1bmN0aW9uKHQpe3ZhciBlPW5ldyB0aGlzLmNvbXBpbGVyLG49ZS5jb21waWxlKHQsdGhpcy5vcHRpb25zKSxpPXRoaXMuZ3VpZCsrO3JldHVybiB0aGlzLnVzZVBhcnRpYWw9dGhpcy51c2VQYXJ0aWFsfHxuLnVzZVBhcnRpYWwsdGhpcy5jaGlsZHJlbltpXT1uLHRoaXMudXNlRGVwdGhzPXRoaXMudXNlRGVwdGhzfHxuLnVzZURlcHRocyxpfSxhY2NlcHQ6ZnVuY3Rpb24odCl7aWYoIXRoaXNbdC50eXBlXSl0aHJvdyBuZXcgdVsiZGVmYXVsdCJdKCJVbmtub3duIHR5cGU6ICIrdC50eXBlLHQpO3RoaXMuc291cmNlTm9kZS51bnNoaWZ0KHQpO3ZhciBlPXRoaXNbdC50eXBlXSh0KTtyZXR1cm4gdGhpcy5zb3VyY2VOb2RlLnNoaWZ0KCksZX0sUHJvZ3JhbTpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbnMuYmxvY2tQYXJhbXMudW5zaGlmdCh0LmJsb2NrUGFyYW1zKTtmb3IodmFyIGU9dC5ib2R5LG49ZS5sZW5ndGgsaT0wO2k8bjtpKyspdGhpcy5hY2NlcHQoZVtpXSk7cmV0dXJuIHRoaXMub3B0aW9ucy5ibG9ja1BhcmFtcy5zaGlmdCgpLHRoaXMuaXNTaW1wbGU9MT09PW4sdGhpcy5ibG9ja1BhcmFtcz10LmJsb2NrUGFyYW1zP3QuYmxvY2tQYXJhbXMubGVuZ3RoOjAsdGhpc30sQmxvY2tTdGF0ZW1lbnQ6ZnVuY3Rpb24odCl7YSh0KTt2YXIgZT10LnByb2dyYW0sbj10LmludmVyc2U7ZT1lJiZ0aGlzLmNvbXBpbGVQcm9ncmFtKGUpLG49biYmdGhpcy5jb21waWxlUHJvZ3JhbShuKTt2YXIgaT10aGlzLmNsYXNzaWZ5U2V4cHIodCk7ImhlbHBlciI9PT1pP3RoaXMuaGVscGVyU2V4cHIodCxlLG4pOiJzaW1wbGUiPT09aT8odGhpcy5zaW1wbGVTZXhwcih0KSx0aGlzLm9wY29kZSgicHVzaFByb2dyYW0iLGUpLHRoaXMub3Bjb2RlKCJwdXNoUHJvZ3JhbSIsbiksdGhpcy5vcGNvZGUoImVtcHR5SGFzaCIpLHRoaXMub3Bjb2RlKCJibG9ja1ZhbHVlIix0LnBhdGgub3JpZ2luYWwpKToodGhpcy5hbWJpZ3VvdXNTZXhwcih0LGUsbiksdGhpcy5vcGNvZGUoInB1c2hQcm9ncmFtIixlKSx0aGlzLm9wY29kZSgicHVzaFByb2dyYW0iLG4pLHRoaXMub3Bjb2RlKCJlbXB0eUhhc2giKSx0aGlzLm9wY29kZSgiYW1iaWd1b3VzQmxvY2tWYWx1ZSIpKSx0aGlzLm9wY29kZSgiYXBwZW5kIil9LERlY29yYXRvckJsb2NrOmZ1bmN0aW9uKHQpe3ZhciBlPXQucHJvZ3JhbSYmdGhpcy5jb21waWxlUHJvZ3JhbSh0LnByb2dyYW0pLG49dGhpcy5zZXR1cEZ1bGxNdXN0YWNoZVBhcmFtcyh0LGUsdm9pZCAwKSxpPXQucGF0aDt0aGlzLnVzZURlY29yYXRvcnM9ITAsdGhpcy5vcGNvZGUoInJlZ2lzdGVyRGVjb3JhdG9yIixuLmxlbmd0aCxpLm9yaWdpbmFsKX0sUGFydGlhbFN0YXRlbWVudDpmdW5jdGlvbih0KXt0aGlzLnVzZVBhcnRpYWw9ITA7dmFyIGU9dC5wcm9ncmFtO2UmJihlPXRoaXMuY29tcGlsZVByb2dyYW0odC5wcm9ncmFtKSk7dmFyIG49dC5wYXJhbXM7aWYobi5sZW5ndGg+MSl0aHJvdyBuZXcgdVsiZGVmYXVs", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("KyIpIik6dGhpcy5wdXNoU3RhY2tMaXRlcmFsKCJkYXRhIiksdGhpcy5yZXNvbHZlUGF0aCgiZGF0YSIsZSwwLCEwLG4pfSxyZXNvbHZlUGF0aDpmdW5jdGlvbih0LGUsbixpLHIpe3ZhciBzPXRoaXM7aWYodGhpcy5vcHRpb25zLnN0cmljdHx8dGhpcy5vcHRpb25zLmFzc3VtZU9iamVjdHMpcmV0dXJuIHZvaWQgdGhpcy5wdXNoKG8odGhpcy5vcHRpb25zLnN0cmljdCYmcix0aGlzLGUsdCkpO2Zvcih2YXIgYT1lLmxlbmd0aDtuPGE7bisrKXRoaXMucmVwbGFjZVN0YWNrKGZ1bmN0aW9uKHIpe3ZhciBvPXMubmFtZUxvb2t1cChyLGVbbl0sdCk7cmV0dXJuIGk/WyIgJiYgIixvXTpbIiAhPSBudWxsID8gIixvLCIgOiAiLHJdfSl9LHJlc29sdmVQb3NzaWJsZUxhbWJkYTpmdW5jdGlvbigpe3RoaXMucHVzaChbdGhpcy5hbGlhc2FibGUoImNvbnRhaW5lci5sYW1iZGEiKSwiKCIsdGhpcy5wb3BTdGFjaygpLCIsICIsdGhpcy5jb250ZXh0TmFtZSgwKSwiKSJdKX0scHVzaFN0cmluZ1BhcmFtOmZ1bmN0aW9uKHQsZSl7dGhpcy5wdXNoQ29udGV4dCgpLHRoaXMucHVzaFN0cmluZyhlKSwiU3ViRXhwcmVzc2lvbiIhPT1lJiYoInN0cmluZyI9PXR5cGVvZiB0P3RoaXMucHVzaFN0cmluZyh0KTp0aGlzLnB1c2hTdGFja0xpdGVyYWwodCkpfSxlbXB0eUhhc2g6ZnVuY3Rpb24odCl7dGhpcy50cmFja0lkcyYmdGhpcy5wdXNoKCJ7fSIpLHRoaXMuc3RyaW5nUGFyYW1zJiYodGhpcy5wdXNoKCJ7fSIpLHRoaXMucHVzaCgie30iKSksdGhpcy5wdXNoU3RhY2tMaXRlcmFsKHQ/InVuZGVmaW5lZCI6Int9Iil9LHB1c2hIYXNoOmZ1bmN0aW9uKCl7dGhpcy5oYXNoJiZ0aGlzLmhhc2hlcy5wdXNoKHRoaXMuaGFzaCksdGhpcy5oYXNoPXt2YWx1ZXM6W10sdHlwZXM6W10sY29udGV4dHM6W10saWRzOltdfX0scG9wSGFzaDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuaGFzaDt0aGlzLmhhc2g9dGhpcy5oYXNoZXMucG9wKCksdGhpcy50cmFja0lkcyYmdGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbCh0LmlkcykpLHRoaXMuc3RyaW5nUGFyYW1zJiYodGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbCh0LmNvbnRleHRzKSksdGhpcy5wdXNoKHRoaXMub2JqZWN0TGl0ZXJhbCh0LnR5cGVzKSkpLHRoaXMucHVzaCh0aGlzLm9iamVjdExpdGVyYWwodC52YWx1ZXMpKX0scHVzaFN0cmluZzpmdW5jdGlvbih0KXt0aGlzLnB1c2hTdGFja0xpdGVyYWwodGhpcy5xdW90ZWRTdHJpbmcodCkpfSxwdXNoTGl0ZXJhbDpmdW5jdGlvbih0KXt0aGlzLnB1c2hTdGFja0xpdGVyYWwodCl9LHB1c2hQcm9ncmFtOmZ1bmN0aW9uKHQpe251bGwhPXQ/dGhpcy5wdXNoU3RhY2tMaXRlcmFsKHRoaXMucHJvZ3JhbUV4cHJlc3Npb24odCkpOnRoaXMucHVzaFN0YWNrTGl0ZXJhbChudWxsKX0scmVnaXN0ZXJEZWNvcmF0b3I6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLm5hbWVMb29rdXAoImRlY29yYXRvcnMiLGUsImRlY29yYXRvciIpLGk9dGhpcy5zZXR1cEhlbHBlckFyZ3MoZSx0KTt0aGlzLmRlY29yYXRvcnMucHVzaChbImZuID0gIix0aGlzLmRlY29yYXRvcnMuZnVuY3Rpb25DYWxsKG4sIiIsWyJmbiIsInByb3BzIiwiY29udGFpbmVyIixpXSksIiB8fCBmbjsiXSl9LGludm9rZUhlbHBlcjpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcy5wb3BTdGFjaygpLHI9dGhpcy5zZXR1cEhlbHBlcih0LGUpLG89bj9bci5uYW1lLCIgfHwgIl06IiIscz1bIigiXS5jb25jYXQobyxpKTt0aGlzLm9wdGlvbnMuc3RyaWN0fHxzLnB1c2goIiB8fCAiLHRoaXMuYWxpYXNhYmxlKCJoZWxwZXJzLmhlbHBlck1pc3NpbmciKSkscy5wdXNoKCIpIiksdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChzLCJjYWxsIixyLmNhbGxQYXJhbXMpKX0saW52b2tlS25vd25IZWxwZXI6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLnNldHVwSGVscGVyKHQsZSk7dGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbChuLm5hbWUsImNhbGwiLG4uY2FsbFBhcmFtcykpfSxpbnZva2VBbWJpZ3VvdXM6ZnVuY3Rpb24odCxlKXt0aGlzLnVzZVJlZ2lzdGVyKCJoZWxwZXIiKTt2YXIgbj10aGlzLnBvcFN0YWNrKCk7dGhpcy5lbXB0eUhhc2goKTt2YXIgaT10aGlzLnNldHVwSGVscGVyKDAsdCxlKSxyPXRoaXMubGFzdEhlbHBlcj10aGlzLm5hbWVMb29rdXAoImhlbHBlcnMiLHQsImhlbHBlciIpLG89WyIoIiwiKGhlbHBlciA9ICIsciwiIHx8ICIsbiwiKSJdO3RoaXMub3B0aW9ucy5zdHJpY3R8fChvWzBdPSIoaGVscGVyID0gIixvLnB1c2goIiAhPSBudWxsID8gaGVscGVyIDogIix0aGlzLmFsaWFzYWJsZSgiaGVscGVycy5oZWxwZXJNaXNzaW5nIikpKSx0aGlzLnB1c2goWyIoIixvLGkucGFyYW1zSW5pdD9bIiksKCIsaS5wYXJhbXNJbml0XTpbXSwiKSwiLCIodHlwZW9mIGhlbHBlciA9PT0gIix0aGlzLmFsaWFzYWJsZSgnImZ1bmN0aW9uIicpLCIgPyAiLHRoaXMuc291cmNlLmZ1bmN0aW9uQ2FsbCgiaGVscGVyIiwiY2FsbCIsaS5jYWxsUGFyYW1zKSwiIDogaGVscGVyKSkiXSl9LGludm9rZVBhcnRpYWw6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPVtdLHI9dGhpcy5zZXR1cFBhcmFtcyhlLDEsaSk7dCYmKGU9dGhpcy5wb3BTdGFjaygpLGRlbGV0ZSByLm5hbWUpLG4mJihyLmluZGVudD1KU09OLnN0cmluZ2lmeShuKSksci5oZWxwZXJzPSJoZWxwZXJzIixyLnBhcnRpYWxzPSJwYXJ0aWFscyIsci5kZWNvcmF0b3JzPSJjb250YWluZXIuZGVjb3JhdG9ycyIsdD9pLnVuc2hpZnQoZSk6aS51bnNoaWZ0KHRoaXMubmFtZUxvb2t1cCgicGFydGlhbHMiLGUsInBhcnRpYWwiKSksdGhpcy5vcHRpb25zLmNvbXBhdCYmKHIuZGVwdGhzPSJkZXB0aHMiKSxyPXRoaXMub2JqZWN0TGl0ZXJhbChyKSxpLnB1c2gociksdGhpcy5wdXNoKHRoaXMuc291cmNlLmZ1bmN0aQ==", "base64"));
  res.write(new Buffer("b25DYWxsKCJjb250YWluZXIuaW52b2tlUGFydGlhbCIsIiIsaSkpfSxhc3NpZ25Ub0hhc2g6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5wb3BTdGFjaygpLG49dm9pZCAwLGk9dm9pZCAwLHI9dm9pZCAwO3RoaXMudHJhY2tJZHMmJihyPXRoaXMucG9wU3RhY2soKSksCnRoaXMuc3RyaW5nUGFyYW1zJiYoaT10aGlzLnBvcFN0YWNrKCksbj10aGlzLnBvcFN0YWNrKCkpO3ZhciBvPXRoaXMuaGFzaDtuJiYoby5jb250ZXh0c1t0XT1uKSxpJiYoby50eXBlc1t0XT1pKSxyJiYoby5pZHNbdF09ciksby52YWx1ZXNbdF09ZX0scHVzaElkOmZ1bmN0aW9uKHQsZSxuKXsiQmxvY2tQYXJhbSI9PT10P3RoaXMucHVzaFN0YWNrTGl0ZXJhbCgiYmxvY2tQYXJhbXNbIitlWzBdKyJdLnBhdGhbIitlWzFdKyJdIisobj8iICsgIitKU09OLnN0cmluZ2lmeSgiLiIrbik6IiIpKToiUGF0aEV4cHJlc3Npb24iPT09dD90aGlzLnB1c2hTdHJpbmcoZSk6IlN1YkV4cHJlc3Npb24iPT09dD90aGlzLnB1c2hTdGFja0xpdGVyYWwoInRydWUiKTp0aGlzLnB1c2hTdGFja0xpdGVyYWwoIm51bGwiKX0sY29tcGlsZXI6cixjb21waWxlQ2hpbGRyZW46ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC5jaGlsZHJlbixpPXZvaWQgMCxyPXZvaWQgMCxvPTAscz1uLmxlbmd0aDtvPHM7bysrKXtpPW5bb10scj1uZXcgdGhpcy5jb21waWxlcjt2YXIgYT10aGlzLm1hdGNoRXhpc3RpbmdQcm9ncmFtKGkpO251bGw9PWE/KHRoaXMuY29udGV4dC5wcm9ncmFtcy5wdXNoKCIiKSxhPXRoaXMuY29udGV4dC5wcm9ncmFtcy5sZW5ndGgsaS5pbmRleD1hLGkubmFtZT0icHJvZ3JhbSIrYSx0aGlzLmNvbnRleHQucHJvZ3JhbXNbYV09ci5jb21waWxlKGksZSx0aGlzLmNvbnRleHQsIXRoaXMucHJlY29tcGlsZSksdGhpcy5jb250ZXh0LmRlY29yYXRvcnNbYV09ci5kZWNvcmF0b3JzLHRoaXMuY29udGV4dC5lbnZpcm9ubWVudHNbYV09aSx0aGlzLnVzZURlcHRocz10aGlzLnVzZURlcHRoc3x8ci51c2VEZXB0aHMsdGhpcy51c2VCbG9ja1BhcmFtcz10aGlzLnVzZUJsb2NrUGFyYW1zfHxyLnVzZUJsb2NrUGFyYW1zKTooaS5pbmRleD1hLGkubmFtZT0icHJvZ3JhbSIrYSx0aGlzLnVzZURlcHRocz10aGlzLnVzZURlcHRoc3x8aS51c2VEZXB0aHMsdGhpcy51c2VCbG9ja1BhcmFtcz10aGlzLnVzZUJsb2NrUGFyYW1zfHxpLnVzZUJsb2NrUGFyYW1zKX19LG1hdGNoRXhpc3RpbmdQcm9ncmFtOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49dGhpcy5jb250ZXh0LmVudmlyb25tZW50cy5sZW5ndGg7ZTxuO2UrKyl7dmFyIGk9dGhpcy5jb250ZXh0LmVudmlyb25tZW50c1tlXTtpZihpJiZpLmVxdWFscyh0KSlyZXR1cm4gZX19LHByb2dyYW1FeHByZXNzaW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZW52aXJvbm1lbnQuY2hpbGRyZW5bdF0sbj1bZS5pbmRleCwiZGF0YSIsZS5ibG9ja1BhcmFtc107cmV0dXJuKHRoaXMudXNlQmxvY2tQYXJhbXN8fHRoaXMudXNlRGVwdGhzKSYmbi5wdXNoKCJibG9ja1BhcmFtcyIpLHRoaXMudXNlRGVwdGhzJiZuLnB1c2goImRlcHRocyIpLCJjb250YWluZXIucHJvZ3JhbSgiK24uam9pbigiLCAiKSsiKSJ9LHVzZVJlZ2lzdGVyOmZ1bmN0aW9uKHQpe3RoaXMucmVnaXN0ZXJzW3RdfHwodGhpcy5yZWdpc3RlcnNbdF09ITAsdGhpcy5yZWdpc3RlcnMubGlzdC5wdXNoKHQpKX0scHVzaDpmdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGl8fCh0PXRoaXMuc291cmNlLndyYXAodCkpLHRoaXMuaW5saW5lU3RhY2sucHVzaCh0KSx0fSxwdXNoU3RhY2tMaXRlcmFsOmZ1bmN0aW9uKHQpe3RoaXMucHVzaChuZXcgaSh0KSl9LHB1c2hTb3VyY2U6ZnVuY3Rpb24odCl7dGhpcy5wZW5kaW5nQ29udGVudCYmKHRoaXMuc291cmNlLnB1c2godGhpcy5hcHBlbmRUb0J1ZmZlcih0aGlzLnNvdXJjZS5xdW90ZWRTdHJpbmcodGhpcy5wZW5kaW5nQ29udGVudCksdGhpcy5wZW5kaW5nTG9jYXRpb24pKSx0aGlzLnBlbmRpbmdDb250ZW50PXZvaWQgMCksdCYmdGhpcy5zb3VyY2UucHVzaCh0KX0scmVwbGFjZVN0YWNrOmZ1bmN0aW9uKHQpe3ZhciBlPVsiKCJdLG49dm9pZCAwLHI9dm9pZCAwLG89dm9pZCAwO2lmKCF0aGlzLmlzSW5saW5lKCkpdGhyb3cgbmV3IGNbImRlZmF1bHQiXSgicmVwbGFjZVN0YWNrIG9uIG5vbi1pbmxpbmUiKTt2YXIgcz10aGlzLnBvcFN0YWNrKCEwKTtpZihzIGluc3RhbmNlb2YgaSluPVtzLnZhbHVlXSxlPVsiKCIsbl0sbz0hMDtlbHNle3I9ITA7dmFyIGE9dGhpcy5pbmNyU3RhY2soKTtlPVsiKCgiLHRoaXMucHVzaChhKSwiID0gIixzLCIpIl0sbj10aGlzLnRvcFN0YWNrKCl9dmFyIGw9dC5jYWxsKHRoaXMsbik7b3x8dGhpcy5wb3BTdGFjaygpLHImJnRoaXMuc3RhY2tTbG90LS0sdGhpcy5wdXNoKGUuY29uY2F0KGwsIikiKSl9LGluY3JTdGFjazpmdW5jdGlvbigpe3JldHVybiB0aGlzLnN0YWNrU2xvdCsrLHRoaXMuc3RhY2tTbG90PnRoaXMuc3RhY2tWYXJzLmxlbmd0aCYmdGhpcy5zdGFja1ZhcnMucHVzaCgic3RhY2siK3RoaXMuc3RhY2tTbG90KSx0aGlzLnRvcFN0YWNrTmFtZSgpfSx0b3BTdGFja05hbWU6ZnVuY3Rpb24oKXtyZXR1cm4ic3RhY2siK3RoaXMuc3RhY2tTbG90fSxmbHVzaElubGluZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuaW5saW5lU3RhY2s7dGhpcy5pbmxpbmVTdGFjaz1bXTtmb3IodmFyIGU9MCxuPXQubGVuZ3RoO2U8bjtlKyspe3ZhciByPXRbZV07aWYociBpbnN0YW5jZW9mIGkpdGhpcy5jb21waWxlU3RhY2sucHVzaChyKTtlbHNle3ZhciBvPXRoaXMuaW5jclN0YWNrKCk7dGhpcy5wdXNoU291cmNlKFtvLCIgPSAiLHIsIjsiXSksdGhpcy5jb21waWxlU3RhY2sucHVzaChvKX19fSxpc0lubGluZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmlubGluZVN0YWNrLmxlbmd0aH0scG9wU3RhY2s6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pc0lubGluZSgpLG49KGU/dGhpcy5pbmxpbmVTdGFjazp0aGlzLmNvbXBpbGVTdGFjaykucG9wKCk7aWYoIXQmJm4gaW5zdGFuY2VvZiBpKXJldHVybiBuLnZhbHVlO2lmKCFlKXtpZighdGhpcy5zdGFja1Nsb3QpdGhyb3cgbmV3IGNbImRlZmF1bHQiXSgiSW52YWxpZCBzdGFjayBwb3AiKTt0aGlzLnN0YWNrU2xvdC0tfXJldHVybiBufSx0b3BTdGFjazpmdW5jdGlvbigpe3ZhciB0PXRoaXMuaXNJbmxpbmUoKT90aGlzLmlubGluZVN0YWNrOnRoaXMuY29tcGlsZVN0YWNrLGU9dFt0Lmxlbmd0aC0xXTtyZXR1cm4gZSBpbnN0YW5jZW9mIGk/ZS52YWx1ZTplfSxjb250ZXh0TmFtZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy51c2VEZXB0aHMmJnQ/ImRlcHRoc1siK3QrIl0iOiJkZXB0aCIrdH0scXVvdGVkU3RyaW5nOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNvdXJjZS5xdW90ZWRTdHJpbmcodCl9LG9iamVjdExpdGVyYWw6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc291cmNlLm9iamVjdExpdGVyYWwodCl9LGFsaWFzYWJsZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmFsaWFzZXNbdF07cmV0dXJuIGU/KGUucmVmZXJlbmNlQ291bnQrKyxlKTooZT10aGlzLmFsaWFzZXNbdF09dGhpcy5zb3VyY2Uud3JhcCh0KSxlLmFsaWFzYWJsZT0hMCxlLnJlZmVyZW5jZUNvdW50PTEsZSl9LHNldHVwSGVscGVyOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1bXSxyPXRoaXMuc2V0dXBIZWxwZXJBcmdzKGUsdCxpLG4pLG89dGhpcy5uYW1lTG9va3VwKCJoZWxwZXJzIixlLCJoZWxwZXIiKSxzPXRoaXMuYWxpYXNhYmxlKHRoaXMuY29udGV4dE5hbWUoMCkrIiAhPSBudWxsID8gIit0aGlzLmNvbnRleHROYW1lKDApKyIgOiB7fSIpO3JldHVybntwYXJhbXM6aSxwYXJhbXNJbml0OnIsbmFtZTpvLGNhbGxQYXJhbXM6W3NdLmNvbmNhdChpKX19LHNldHVwUGFyYW1zOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT17fSxyPVtdLG89W10scz1bXSxhPSFuLGw9dm9pZCAwO2EmJihuPVtdKSxpLm5hbWU9dGhpcy5xdW90ZWRTdHJpbmcodCksaS5oYXNoPXRoaXMucG9wU3RhY2soKSx0aGlzLnRyYWNrSWRzJiYoaS5oYXNoSWRzPXRoaXMucG9wU3RhY2soKSksdGhpcy5zdHJpbmdQYXJhbXMmJihpLmhhc2hUeXBlcz10aGlzLnBvcFN0YWNrKCksaS5oYXNoQ29udGV4dHM9dGhpcy5wb3BTdGFjaygpKTt2YXIgYz10aGlzLnBvcFN0YWNrKCksdT10aGlzLnBvcFN0YWNrKCk7KHV8fGMpJiYoaS5mbj11fHwiY29udGFpbmVyLm5vb3AiLGkuaW52ZXJzZT1jfHwiY29udGFpbmVyLm5vb3AiKTtmb3IodmFyIGQ9ZTtkLS07KWw9dGhpcy5wb3BTdGFjaygpLG5bZF09bCx0aGlzLnRyYWNrSWRzJiYoc1tkXT10aGlzLnBvcFN0YWNrKCkpLHRoaXMuc3RyaW5nUGFyYW1zJiYob1tkXT10aGlzLnBvcFN0YWNrKCkscltkXT10aGlzLnBvcFN0YWNrKCkpO3JldHVybiBhJiYoaS5hcmdzPXRoaXMuc291cmNlLmdlbmVyYXRlQXJyYXkobikpLHRoaXMudHJhY2tJZHMmJihpLmlkcz10aGlzLnNvdXJjZS5nZW5lcmF0ZUFycmF5KHMpKSx0aGlzLnN0cmluZ1BhcmFtcyYmKGkudHlwZXM9dGhpcy5zb3VyY2UuZ2VuZXJhdGVBcnJheShvKSxpLmNvbnRleHRzPXRoaXMuc291cmNlLmdlbmVyYXRlQXJyYXkocikpLHRoaXMub3B0aW9ucy5kYXRhJiYoaS5kYXRhPSJkYXRhIiksdGhpcy51c2VCbG9ja1BhcmFtcyYmKGkuYmxvY2tQYXJhbXM9ImJsb2NrUGFyYW1zIiksaX0sc2V0dXBIZWxwZXJBcmdzOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPXRoaXMuc2V0dXBQYXJhbXModCxlLG4pO3JldHVybiByPXRoaXMub2JqZWN0TGl0ZXJhbChyKSxpPyh0aGlzLnVzZVJlZ2lzdGVyKCJvcHRpb25zIiksbi5wdXNoKCJvcHRpb25zIiksWyJvcHRpb25zPSIscl0pOm4/KG4ucHVzaChyKSwiIik6cn19LGZ1bmN0aW9uKCl7Zm9yKHZhciB0PSJicmVhayBlbHNlIG5ldyB2YXIgY2FzZSBmaW5hbGx5IHJldHVybiB2b2lkIGNhdGNoIGZvciBzd2l0Y2ggd2hpbGUgY29udGludWUgZnVuY3Rpb24gdGhpcyB3aXRoIGRlZmF1bHQgaWYgdGhyb3cgZGVsZXRlIGluIHRyeSBkbyBpbnN0YW5jZW9mIHR5cGVvZiBhYnN0cmFjdCBlbnVtIGludCBzaG9ydCBib29sZWFuIGV4cG9ydCBpbnRlcmZhY2Ugc3RhdGljIGJ5dGUgZXh0ZW5kcyBsb25nIHN1cGVyIGNoYXIgZmluYWwgbmF0aXZlIHN5bmNocm9uaXplZCBjbGFzcyBmbG9hdCBwYWNrYWdlIHRocm93cyBjb25zdCBnb3RvIHByaXZhdGUgdHJhbnNpZW50IGRlYnVnZ2VyIGltcGxlbWVudHMgcHJvdGVjdGVkIHZvbGF0aWxlIGRvdWJsZSBpbXBvcnQgcHVibGljIGxldCB5aWVsZCBhd2FpdCBudWxsIHRydWUgZmFsc2UiLnNwbGl0KCIgIiksZT1yLlJFU0VSVkVEX1dPUkRTPXt9LG49MCxpPXQubGVuZ3RoO248aTtuKyspZVt0W25dXT0hMH0oKSxyLmlzVmFsaWRKYXZhU2NyaXB0VmFyaWFibGVOYW1lPWZ1bmN0aW9uKHQpe3JldHVybiFyLlJFU0VSVkVEX1dPUkRTW3RdJiYvXlthLXpBLVpfJF1bMC05YS16QS1aXyRdKiQvLnRlc3QodCl9LGVbImRlZmF1bHQiXT1yLHQuZXhwb3J0cz1lWyJkZWZhdWx0Il19LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaSh0LGUsbil7aWYoby5pc0FycmF5KHQpKXtmb3IodmFyIGk9W10scj0wLHM9dC5sZW5ndGg7cjxzO3IrKylpLnB1c2goZS53cmFwKHRbcl0sbikpO3JldHVybiBpfXJldHVybiJib29sZWFuIj09dHlwZW9mIHR8fCJudW1iZXIiPT10eXBlb2YgdD90KyIiOnR9ZnVuY3Rpb24gcih0KXt0aGlzLnNyY0ZpbGU9dCx0aGlzLnNvdXJjZT1bXX1lLl9fZXNNb2R1bGU9ITA7dmFyIG89big1KSxzPXZvaWQgMDt0cnl7fWNhdGNoKGEpe31zfHwocz1mdW5jdGlvbih0LGUsbixpKXt0aGlzLnNyYz0iIixpJiZ0aGk=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZW50cywxKSxpPXt9O2Zvcih2YXIgciBpbiB0KXQuaGFzT3duUHJvcGVydHkocikmJmUuaW5kZXhPZihyKT09LTEmJihpW3JdPXRbcl0pO3JldHVybiBuLmNsb25lKGkpfSxuLmZpbmQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC5sZW5ndGg7bi0tOyl7dmFyIGk9dFtuXSxyPSEwO2Zvcih2YXIgbyBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkobykmJmlbb10hPT1lW29dKXtyPSExO2JyZWFrfWlmKHIpcmV0dXJuIGl9fSxuLmdldExpbms9ZnVuY3Rpb24odCxlLGkpe2lmKHQmJnQuX2xpbmtzKXt2YXIgcj1uLmNsb25lKHQuX2xpbmtzW2VdKTtyZXR1cm4gciYmci5uYW1lJiZpP3IubmFtZT09PWk/cjp2b2lkIDA6cn19LG4uZ2V0TmF0aXZlQ29uc29sZT1mdW5jdGlvbigpe3JldHVybiB3aW5kb3cuY29uc29sZX0sbi5nZXRDb25zb2xlPWZ1bmN0aW9uKCl7dmFyIHQ9bi5nZXROYXRpdmVDb25zb2xlKCk7cmV0dXJuIHQmJnQubG9nP3Q6e2xvZzpmdW5jdGlvbigpe319fSxuLndhcm49ZnVuY3Rpb24odCl7bi5nZXRDb25zb2xlKCkubG9nKCJbb2t0YS1hdXRoLXNka10gV0FSTjogIit0KX0sbi5kZXByZWNhdGU9ZnVuY3Rpb24odCl7bi5nZXRDb25zb2xlKCkubG9nKCJbb2t0YS1hdXRoLXNka10gREVQUkVDQVRJT046ICIrdCl9LG4uZGVwcmVjYXRlV3JhcD1mdW5jdGlvbih0LGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBuLmRlcHJlY2F0ZSh0KSxlLmFwcGx5KG51bGwsYXJndW1lbnRzKX19LG4ucmVtb3ZlVHJhaWxpbmdTbGFzaD1mdW5jdGlvbih0KXtpZih0KXJldHVybiIvIj09PXQuc2xpY2UoLTEpP3Quc2xpY2UoMCwtMSk6dH19LGZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKHQsZSl7dmFyIG49bS5jbG9uZShlKXx8e307cmV0dXJuIW4uc3RhdGVUb2tlbiYmdC5zdGF0ZVRva2VuJiYobi5zdGF0ZVRva2VuPXQuc3RhdGVUb2tlbiksbn1mdW5jdGlvbiByKHQpe3JldHVybiBpKHQpfWZ1bmN0aW9uIG8odCxlKXtyZXR1cm4gZT1pKHQsZSksZi5wb3N0KHQsdC5vcHRpb25zLnVybCsiL2FwaS92MS9hdXRobiIsZSl9ZnVuY3Rpb24gcyh0LGUpe2lmKCFlfHwhZS5zdGF0ZVRva2VuKXt2YXIgbj10LnR4LmV4aXN0cy5fZ2V0Q29va2llKHkuU1RBVEVfVE9LRU5fQ09PS0lFX05BTUUpO2lmKCFuKXJldHVybiBfLnJlamVjdChuZXcgZygiTm8gdHJhbnNhY3Rpb24gdG8gcmVzdW1lIikpO2U9e3N0YXRlVG9rZW46bn19cmV0dXJuIHQudHguc3RhdHVzKGUpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBwKHQsZSl9KX1mdW5jdGlvbiBhKHQpe3JldHVybiEhdC50eC5leGlzdHMuX2dldENvb2tpZSh5LlNUQVRFX1RPS0VOX0NPT0tJRV9OQU1FKX1mdW5jdGlvbiBsKHQsZSxuKXtyZXR1cm4gZi5wb3N0KHQsZSxuKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgcCh0LGUpfSl9ZnVuY3Rpb24gYyh0LGUsbil7cmV0dXJuIGZ1bmN0aW9uKGkpe2Z1bmN0aW9uIG8oKXt2YXIgbj1sLmhyZWY7cmV0dXJuIGEmJihuKz0iP3JlbWVtYmVyRGV2aWNlPXRydWUiKSxmLnBvc3QodCxuLHIoZSkse3NhdmVBdXRoblN0YXRlOiExfSl9dmFyIHMsYTttLmlzTnVtYmVyKGkpP3M9aTptLmlzT2JqZWN0KGkpJiYocz1pLmRlbGF5LGE9aS5yZW1lbWJlckRldmljZSksc3x8MD09PXN8fChzPXkuREVGQVVMVF9QT0xMSU5HX0RFTEFZKTt2YXIgbD1tLmdldExpbmsoZSwibmV4dCIsInBvbGwiKTtuLmlzUG9sbGluZz0hMDt2YXIgYz0wLHU9ZnVuY3Rpb24oKXtyZXR1cm4gbi5pc1BvbGxpbmc/bygpLnRoZW4oZnVuY3Rpb24oZSl7aWYoYz0wLGUuZmFjdG9yUmVzdWx0JiYiV0FJVElORyI9PT1lLmZhY3RvclJlc3VsdCl7aWYoIW4uaXNQb2xsaW5nKXRocm93IG5ldyB2O3JldHVybiBfLmRlbGF5KHMpLnRoZW4odSl9cmV0dXJuIG4uaXNQb2xsaW5nPSExLG5ldyBwKHQsZSl9KS5mYWlsKGZ1bmN0aW9uKHQpe2lmKHQueGhyJiYoMD09PXQueGhyLnN0YXR1c3x8NDI5PT09dC54aHIuc3RhdHVzKSYmYzw9NCl7dmFyIGU9MWUzKk1hdGgucG93KDIsYyk7cmV0dXJuIGMrKyxfLmRlbGF5KGUpLnRoZW4odSl9dGhyb3cgdH0pOl8ucmVqZWN0KG5ldyB2KX07cmV0dXJuIHUoKS5mYWlsKGZ1bmN0aW9uKHQpe3Rocm93IG4uaXNQb2xsaW5nPSExLHR9KX19ZnVuY3Rpb24gdSh0LGUsbixyLG8pe2lmKEFycmF5LmlzQXJyYXkocikpcmV0dXJuIGZ1bmN0aW9uKGkscyl7aWYoIWkpdGhyb3cgbmV3IGcoIk11c3QgcHJvdmlkZSBhIGxpbmsgbmFtZSIpO3ZhciBhPW0uZmluZChyLHtuYW1lOml9KTtpZighYSl0aHJvdyBuZXcgZygiTm8gbGluayBmb3VuZCBmb3IgdGhhdCBuYW1lIik7cmV0dXJuIHUodCxlLG4sYSxvKShzKX07aWYoci5oaW50cyYmci5oaW50cy5hbGxvdyYmMT09PXIuaGludHMuYWxsb3cubGVuZ3RoKXt2YXIgcz1yLmhpbnRzLmFsbG93WzBdO3N3aXRjaChzKXtjYXNlIkdFVCI6cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGYuZ2V0KHQsci5ocmVmKX07Y2FzZSJQT1NUIjpyZXR1cm4gZnVuY3Rpb24ocyl7byYmby5pc1BvbGxpbmcmJihvLmlzUG9sbGluZz0hMSk7dmFyIGE9aShlLHMpOyJNRkFfRU5ST0xMIj09PWUuc3RhdHVzJiZtLmV4dGVuZChhLHtmYWN0b3JUeXBlOm4uZmFjdG9yVHlwZSxwcm92aWRlcjpuLnByb3ZpZGVyfSk7dmFyIGM9ci5ocmVmO3JldHVybiB2b2lkIDAhPT1hLnJlbWVtYmVyRGV2aWNlPyhhLnJlbWVtYmVyRGV2aWNlJiYoYys9Ij9yZW1lbWJlckRldmljZT10cnVlIiksYT1tLm9taXQoYSwicmVtZW1iZXJEZXZpY2UiKSk6YS5wcm9maWxlJiZ2b2lkIDAhPT1hLnByb2ZpbGUudXBkYXRlUGhvbmUmJihhLnByb2ZpbGUudXBkYXRlUGhvbmUmJihjKz0iP3VwZGF0ZVBob25lPXRydWUiKSxhLnByb2ZpbGU9bS5vbWl0KGEucHJvZmlsZSwidXBkYXRlUGhvbmUiKSksbCh0LGMsYSl9fX19ZnVuY3Rpbw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZnVsZmlsbGVkIix2YWx1ZTp0fX0pfWZ1bmN0aW9uIHgodCl7dmFyIGU9ZCgpO3JldHVybiB1Lm5leHRUaWNrKGZ1bmN0aW9uKCl7dHJ5e3QudGhlbihlLnJlc29sdmUsZS5yZWplY3QsZS5ub3RpZnkpfWNhdGNoKG4pe2UucmVqZWN0KG4pfX0pLGUucHJvbWlzZX1mdW5jdGlvbiBBKHQpe3JldHVybiBmKHtpc0RlZjpmdW5jdGlvbigpe319LGZ1bmN0aW9uKGUsbil7cmV0dXJuIFAodCxlLG4pfSxmdW5jdGlvbigpe3JldHVybiB1KHQpLmluc3BlY3QoKX0pfWZ1bmN0aW9uIEUodCxlLG4pe3JldHVybiB1KHQpLnNwcmVhZChlLG4pfWZ1bmN0aW9uIEQodCl7cmV0dXJuIGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LGUpe3ZhciBzO2lmKCJ1bmRlZmluZWQiPT10eXBlb2YgU3RvcEl0ZXJhdGlvbil7dHJ5e3M9aVt0XShlKX1jYXRjaChhKXtyZXR1cm4gayhhKX1yZXR1cm4gcy5kb25lP3Uocy52YWx1ZSk6bShzLnZhbHVlLHIsbyl9dHJ5e3M9aVt0XShlKX1jYXRjaChhKXtyZXR1cm4gbihhKT91KGEudmFsdWUpOmsoYSl9cmV0dXJuIG0ocyxyLG8pfXZhciBpPXQuYXBwbHkodGhpcyxhcmd1bWVudHMpLHI9ZS5iaW5kKGUsIm5leHQiKSxvPWUuYmluZChlLCJ0aHJvdyIpO3JldHVybiByKCl9fWZ1bmN0aW9uIEModCl7dS5kb25lKHUuYXN5bmModCkoKSl9ZnVuY3Rpb24gWSh0KXt0aHJvdyBuZXcgQih0KX1mdW5jdGlvbiBPKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBFKFt0aGlzLE4oYXJndW1lbnRzKV0sZnVuY3Rpb24oZSxuKXtyZXR1cm4gdC5hcHBseShlLG4pfSl9fWZ1bmN0aW9uIFAodCxlLG4pe3JldHVybiB1KHQpLmRpc3BhdGNoKGUsbil9ZnVuY3Rpb24gTih0KXtyZXR1cm4gbSh0LGZ1bmN0aW9uKHQpe3ZhciBlPTAsbj1kKCk7cmV0dXJuIEoodCxmdW5jdGlvbihpLHIsbyl7dmFyIHM7ZyhyKSYmImZ1bGZpbGxlZCI9PT0ocz1yLmluc3BlY3QoKSkuc3RhdGU/dFtvXT1zLnZhbHVlOigrK2UsbShyLGZ1bmN0aW9uKGkpe3Rbb109aSwwPT09LS1lJiZuLnJlc29sdmUodCl9LG4ucmVqZWN0LGZ1bmN0aW9uKHQpe24ubm90aWZ5KHtpbmRleDpvLHZhbHVlOnR9KX0pKX0sdm9pZCAwKSwwPT09ZSYmbi5yZXNvbHZlKHQpLG4ucHJvbWlzZX0pfWZ1bmN0aW9uIEkodCl7aWYoMD09PXQubGVuZ3RoKXJldHVybiB1LnJlc29sdmUoKTt2YXIgZT11LmRlZmVyKCksbj0wO3JldHVybiBKKHQsZnVuY3Rpb24oaSxyLG8pe2Z1bmN0aW9uIHModCl7ZS5yZXNvbHZlKHQpfWZ1bmN0aW9uIGEoKXtuLS0sMD09PW4mJmUucmVqZWN0KG5ldyBFcnJvcigiQ2FuJ3QgZ2V0IGZ1bGZpbGxtZW50IHZhbHVlIGZyb20gYW55IHByb21pc2UsIGFsbCBwcm9taXNlcyB3ZXJlIHJlamVjdGVkLiIpKX1mdW5jdGlvbiBsKHQpe2Uubm90aWZ5KHtpbmRleDpvLHZhbHVlOnR9KX12YXIgYz10W29dO24rKyxtKGMscyxhLGwpfSx2b2lkIDApLGUucHJvbWlzZX1mdW5jdGlvbiBSKHQ=", "base64"));
  res.write(new Buffer("KXtyZXR1cm4gbSh0LGZ1bmN0aW9uKHQpe3JldHVybiB0PVEodCx1KSxtKE4oUSh0LGZ1bmN0aW9uKHQpe3JldHVybiBtKHQscSxxKX0pKSxmdW5jdGlvbigpe3JldHVybiB0fSl9KX1mdW5jdGlvbiBqKHQpe3JldHVybiB1KHQpLmFsbFNldHRsZWQoKX1mdW5jdGlvbiBIKHQsZSl7cmV0dXJuIHUodCkudGhlbih2b2lkIDAsdm9pZCAwLGUpfWZ1bmN0aW9uIEYodCxlKXtyZXR1cm4gdSh0KS5ub2RlaWZ5KGUpfXZhciB6PSExO3RyeXt0aHJvdyBuZXcgRXJyb3J9Y2F0Y2goVSl7ej0hIVUuc3RhY2t9dmFyIFcsQixWPWwoKSxxPWZ1bmN0aW9uKCl7fSwkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe2Zvcih2YXIgdCxpO24ubmV4dDspbj1uLm5leHQsdD1uLnRhc2ssbi50YXNrPXZvaWQgMCxpPW4uZG9tYWluLGkmJihuLmRvbWFpbj12b2lkIDAsaS5lbnRlcigpKSxlKHQsaSk7Zm9yKDthLmxlbmd0aDspdD1hLnBvcCgpLGUodCk7cj0hMX1mdW5jdGlvbiBlKGUsbil7dHJ5e2UoKX1jYXRjaChpKXtpZihzKXRocm93IG4mJm4uZXhpdCgpLHNldFRpbWVvdXQodCwwKSxuJiZuLmVudGVyKCksaTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgaX0sMCl9biYmbi5leGl0KCl9dmFyIG49e3Rhc2s6dm9pZCAwLG5leHQ6bnVsbH0saT1uLHI9ITEsbz12b2lkIDAscz0hMSxhPVtdO2lmKCQ9ZnVuY3Rpb24odCl7aT1pLm5leHQ9e3Rhc2s6dCxkb21haW46cyYmcHJvY2Vzcy5kb21haW4sbmV4dDpudWxsfSxyfHwocj0hMCxvKCkpfSwib2JqZWN0Ij09dHlwZW9mIHByb2Nlc3MmJiJbb2JqZWN0IHByb2Nlc3NdIj09PXByb2Nlc3MudG9TdHJpbmcoKSYmcHJvY2Vzcy5uZXh0VGljaylzPSEwLG89ZnVuY3Rpb24oKXtwcm9jZXNzLm5leHRUaWNrKHQpfTtlbHNlIGlmKCJmdW5jdGlvbiI9PXR5cGVvZiBzZXRJbW1lZGlhdGUpbz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdz9zZXRJbW1lZGlhdGUuYmluZCh3aW5kb3csdCk6ZnVuY3Rpb24oKXtzZXRJbW1lZGlhdGUodCl9O2Vsc2UgaWYoInVuZGVmaW5lZCIhPXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIGw9bmV3IE1lc3NhZ2VDaGFubmVsO2wucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7bz1jLGwucG9ydDEub25tZXNzYWdlPXQsdCgpfTt2YXIgYz1mdW5jdGlvbigpe2wucG9ydDIucG9zdE1lc3NhZ2UoMCl9O289ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KHQsMCksYygpfX1lbHNlIG89ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KHQsMCl9O3JldHVybiAkLnJ1bkFmdGVyPWZ1bmN0aW9uKHQpe2EucHVzaCh0KSxyfHwocj0hMCxvKCkpfSwkfSgpLEc9RnVuY3Rpb24uY2FsbCxLPXQoQXJyYXkucHJvdG90eXBlLnNsaWNlKSxKPXQoQXJyYXkucHJvdG90eXBlLnJlZHVjZXx8ZnVuY3Rpb24odCxlKXt2YXIgbj0wLGk9dGhpcy5sZW5ndGg7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpZm9yKDs7KXtpZihuIGluIHRoaXMpe2U9dGhpc1tuKytdO2JyZWFrfWlmKCsrbj49aSl0aHJvdyBuZXcgVHlwZUVycm9yfWZvcig7bjxpO24rKyluIGluIHRoaXMmJihlPXQoZSx0aGlzW25dLG4pKTtyZXR1cm4gZX0pLFg9dChBcnJheS5wcm90b3R5cGUuaW5kZXhPZnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0aGlzLmxlbmd0aDtlKyspaWYodGhpc1tlXT09PXQpcmV0dXJuIGU7cmV0dXJuLTF9KSxRPXQoQXJyYXkucHJvdG90eXBlLm1hcHx8ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9W107cmV0dXJuIEoobixmdW5jdGlvbihyLG8scyl7aS5wdXNoKHQuY2FsbChlLG8scyxuKSl9LHZvaWQgMCksaX0pLFo9T2JqZWN0LmNyZWF0ZXx8ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe31yZXR1cm4gZS5wcm90b3R5cGU9dCxuZXcgZX0sdHQ9dChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KSxldD1PYmplY3Qua2V5c3x8ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpdHQodCxuKSYmZS5wdXNoKG4pO3JldHVybiBlfSxudD10KE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpO0I9InVuZGVmaW5lZCIhPXR5cGVvZiBSZXR1cm5WYWx1ZT9SZXR1cm5WYWx1ZTpmdW5jdGlvbih0KXt0aGlzLnZhbHVlPXR9O3ZhciBpdD0iRnJvbSBwcmV2aW91cyBldmVudDoiO3UucmVzb2x2ZT11LHUubmV4dFRpY2s9JCx1LmxvbmdTdGFja1N1cHBvcnQ9ITEsIm9iamVjdCI9PXR5cGVvZiBwcm9jZXNzJiZwcm9jZXNzJiZwcm9jZXNzLmVudiYmcHJvY2Vzcy5lbnYuUV9ERUJVRyYmKHUubG9uZ1N0YWNrU3VwcG9ydD0hMCksdS5kZWZlcj1kLGQucHJvdG90eXBlLm1ha2VOb2RlUmVzb2x2ZXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBmdW5jdGlvbihlLG4pe2U/dC5yZWplY3QoZSk6YXJndW1lbnRzLmxlbmd0aD4yP3QucmVzb2x2ZShLKGFyZ3VtZW50cywxKSk6dC5yZXNvbHZlKG4pfX0sdS5Qcm9taXNlPWgsdS5wcm9taXNlPWgsaC5yYWNlPXAsaC5hbGw9TixoLnJlamVjdD1rLGgucmVzb2x2ZT11LHUucGFzc0J5Q29weT1mdW5jdGlvbih0KXtyZXR1cm4gdH0sZi5wcm90b3R5cGUucGFzc0J5Q29weT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSx1LmpvaW49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KS5qb2luKGUpfSxmLnByb3RvdHlwZS5qb2luPWZ1bmN0aW9uKHQpe3JldHVybiB1KFt0aGlzLHRdKS5zcHJlYWQoZnVuY3Rpb24odCxlKXtpZih0PT09ZSlyZXR1cm4gdDt0aHJvdyBuZXcgRXJyb3IoIkNhbid0IGpvaW46IG5vdCB0aGUgc2FtZTogIit0KyIgIitlKX0pfSx1LnJhY2U9cCxmLnByb3RvdHlwZS5yYWNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGhlbih1LnJhY2UpfSx1Lm1ha2VQcm9taXNlPWYsZi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4iW29iamVjdCBQcm9taXNlXSJ9LGYucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24odCxlLG4pew==", "base64"));
  res.write(new Buffer("ZnVuY3Rpb24gcihlKXt0cnl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQ/dChlKTplfWNhdGNoKG4pe3JldHVybiBrKG4pfX1mdW5jdGlvbiBvKHQpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBlKXtpKHQsYSk7dHJ5e3JldHVybiBlKHQpfWNhdGNoKG4pe3JldHVybiBrKG4pfX1yZXR1cm4gayh0KX1mdW5jdGlvbiBzKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBuP24odCk6dH12YXIgYT10aGlzLGw9ZCgpLGM9ITE7cmV0dXJuIHUubmV4dFRpY2soZnVuY3Rpb24oKXthLnByb21pc2VEaXNwYXRjaChmdW5jdGlvbih0KXtjfHwoYz0hMCxsLnJlc29sdmUocih0KSkpfSwid2hlbiIsW2Z1bmN0aW9uKHQpe2N8fChjPSEwLGwucmVzb2x2ZShvKHQpKSl9XSl9KSxhLnByb21pc2VEaXNwYXRjaCh2b2lkIDAsIndoZW4iLFt2b2lkIDAsZnVuY3Rpb24odCl7dmFyIGUsbj0hMTt0cnl7ZT1zKHQpfWNhdGNoKGkpe2lmKG49ITAsIXUub25lcnJvcil0aHJvdyBpO3Uub25lcnJvcihpKX1ufHxsLm5vdGlmeShlKX1dKSxsLnByb21pc2V9LHUudGFwPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodCkudGFwKGUpfSxmLnByb3RvdHlwZS50YXA9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dSh0KSx0aGlzLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuZmNhbGwoZSkudGhlblJlc29sdmUoZSl9KX0sdS53aGVuPW0sZi5wcm90b3R5cGUudGhlblJlc29sdmU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbigpe3JldHVybiB0fSl9LHUudGhlblJlc29sdmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KS50aGVuUmVzb2x2ZShlKX0sZi5wcm90b3R5cGUudGhlblJlamVjdD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKCl7dGhyb3cgdH0pfSx1LnRoZW5SZWplY3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KS50aGVuUmVqZWN0KGUpfSx1Lm5lYXJlcj1fLHUuaXNQcm9taXNlPWcsdS5pc1Byb21pc2VBbGlrZT12LHUuaXNQZW5kaW5nPXksZi5wcm90b3R5cGUuaXNQZW5kaW5nPWZ1bmN0aW9uKCl7cmV0dXJuInBlbmRpbmciPT09dGhpcy5pbnNwZWN0KCkuc3RhdGV9LHUuaXNGdWxmaWxsZWQ9YixmLnByb3RvdHlwZS5pc0Z1bGZpbGxlZD1mdW5jdGlvbigpe3JldHVybiJmdWxmaWxsZWQiPT09dGhpcy5pbnNwZWN0KCkuc3RhdGV9LHUuaXNSZWplY3RlZD13LGYucHJvdG90eXBlLmlzUmVqZWN0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4icmVqZWN0ZWQiPT09dGhpcy5pbnNwZWN0KCkuc3RhdGV9O3ZhciBydD1bXSxvdD1bXSxzdD1bXSxhdD0hMDt1LnJlc2V0VW5oYW5kbGVkUmVqZWN0aW9ucz1NLHUuZ2V0VW5oYW5kbGVkUmVhc29ucz1mdW5jdGlvbigpe3JldHVybiBydC5zbGljZSgpfSx1LnN0b3BVbmhhbmRsZWRSZWplY3Rpb25UcmFja2luZz1mdW5jdGlvbigpe00oKSxhdD0hMX0sTSgpLHUucmVqZWN0PWssdS5mdWxmaWxsPUwsdS5tYXN0ZXI9QSx1LnNwcmVhZD1FLGYucHJvdG90eXBlLnNwcmVhZD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmFsbCgpLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIHQuYXBwbHkodm9pZCAwLGUpfSxlKX0sdS5hc3luYz1ELHUuc3Bhd249Qyx1WyJyZXR1cm4iXT1ZLHUucHJvbWlzZWQ9Tyx1LmRpc3BhdGNoPVAsZi5wcm90b3R5cGUuZGlzcGF0Y2g9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9ZCgpO3JldHVybiB1Lm5leHRUaWNrKGZ1bmN0aW9uKCl7bi5wcm9taXNlRGlzcGF0Y2goaS5yZXNvbHZlLHQsZSl9KSxpLnByb21pc2V9LHUuZ2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHUodCkuZGlzcGF0Y2goImdldCIsW2VdKX0sZi5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRpc3BhdGNoKCJnZXQiLFt0XSl9LHUuc2V0PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdSh0KS5kaXNwYXRjaCgic2V0IixbZSxuXSl9LGYucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRpc3BhdGNoKCJzZXQiLFt0LGVdKX0sdS5kZWw9dVsiZGVsZXRlIl09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KS5kaXNwYXRjaCgiZGVsZXRlIixbZV0pfSxmLnByb3RvdHlwZS5kZWw9Zi5wcm90b3R5cGVbImRlbGV0ZSJdPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmRpc3BhdGNoKCJkZWxldGUiLFt0XSl9LHUubWFwcGx5PXUucG9zdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHUodCkuZGlzcGF0Y2goInBvc3QiLFtlLG5dKX0sZi5wcm90b3R5cGUubWFwcGx5PWYucHJvdG90eXBlLnBvc3Q9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5kaXNwYXRjaCgicG9zdCIsW3QsZV0pfSx1LnNlbmQ9dS5tY2FsbD11Lmludm9rZT1mdW5jdGlvbih0LGUpe3JldHVybiB1KHQpLmRpc3BhdGNoKCJwb3N0IixbZSxLKGFyZ3VtZW50cywyKV0pfSxmLnByb3RvdHlwZS5zZW5kPWYucHJvdG90eXBlLm1jYWxsPWYucHJvdG90eXBlLmludm9rZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5kaXNwYXRjaCgicG9zdCIsW3QsSyhhcmd1bWVudHMsMSldKX0sdS5mYXBwbHk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KS5kaXNwYXRjaCgiYXBwbHkiLFt2b2lkIDAsZV0pfSxmLnByb3RvdHlwZS5mYXBwbHk9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGlzcGF0Y2goImFwcGx5Iixbdm9pZCAwLHRdKX0sdVsidHJ5Il09dS5mY2FsbD1mdW5jdGlvbih0KXtyZXR1cm4gdSh0KS5kaXNwYXRjaCgiYXBwbHkiLFt2b2lkIDAsSyhhcmd1bWVudHMsMSldKX0sZi5wcm90b3R5cGUuZmNhbGw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXNwYXRjaCgiYXBwbHkiLFt2b2lkIDAsSyhhcmd1bWVudHMpXSl9LHUuZmJpbmQ9ZnVuY3Rpb24odCl7dmFyIGU9dSh0KSxuPUsoYXJndW1lbnRzLDEpO3JldHVybiBmdW5jdGlvbigpe3JldHVybiBlLmRpc3BhdGNoKCJhcHBseSIsW3RoaXMsbi5jb25jYXQoSyhhcmd1bWVudHMpKV0pfX0sZi5wcm90b3R5cGUuZmJpbmQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9Syhhcmd1bWVudHMpO3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0LmRpc3BhdGNoKCJhcHBseSIsW3RoaXMsZS5jb25jYXQoSyhhcmd1bWVudHMpKV0pfX0sdS5rZXlzPWZ1bmN0aW9uKHQpe3JldHVybiB1KHQpLmRpc3BhdGNoKCJrZXlzIixbXSl9LGYucHJvdG90eXBlLmtleXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kaXNwYXRjaCgia2V5cyIsW10pfSx1LmFsbD1OLGYucHJvdG90eXBlLmFsbD1mdW5jdGlvbigpe3JldHVybiBOKHRoaXMpfSx1LmFueT1JLGYucHJvdG90eXBlLmFueT1mdW5jdGlvbigpe3JldHVybiBJKHRoaXMpfSx1LmFsbFJlc29sdmVkPWMoUiwiYWxsUmVzb2x2ZWQiLCJhbGxTZXR0bGVkIiksZi5wcm90b3R5cGUuYWxsUmVzb2x2ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gUih0aGlzKX0sdS5hbGxTZXR0bGVkPWosZi5wcm90b3R5cGUuYWxsU2V0dGxlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIE4oUSh0LGZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoKXtyZXR1cm4gdC5pbnNwZWN0KCl9cmV0dXJuIHQ9dSh0KSx0LnRoZW4oZSxlKX0pKX0pfSx1LmZhaWw9dVsiY2F0Y2giXT1mdW5jdGlvbih0LGUpe3JldHVybiB1KHQpLnRoZW4odm9pZCAwLGUpfSxmLnByb3RvdHlwZS5mYWlsPWYucHJvdG90eXBlWyJjYXRjaCJdPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRoZW4odm9pZCAwLHQpfSx1LnByb2dyZXNzPUgsZi5wcm90b3R5cGUucHJvZ3Jlc3M9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbih2b2lkIDAsdm9pZCAwLHQpfSx1LmZpbj11WyJmaW5hbGx5Il09ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KVsiZmluYWxseSJdKGUpfSxmLnByb3RvdHlwZS5maW49Zi5wcm90b3R5cGVbImZpbmFsbHkiXT1mdW5jdGlvbih0KXtyZXR1cm4gdD11KHQpLHRoaXMudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gdC5mY2FsbCgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZX0pfSxmdW5jdGlvbihlKXtyZXR1cm4gdC5mY2FsbCgpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBlfSl9KX0sdS5kb25lPWZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiB1KHQpLmRvbmUoZSxuLGkpfSxmLnByb3RvdHlwZS5kb25lPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1mdW5jdGlvbih0KXt1Lm5leHRUaWNrKGZ1bmN0aW9uKCl7aWYoaSh0LG8pLCF1Lm9uZXJyb3IpdGhyb3cgdDt1Lm9uZXJyb3IodCl9KX0sbz10fHxlfHxuP3RoaXMudGhlbih0LGUsbik6dGhpczsib2JqZWN0Ij09dHlwZW9mIHByb2Nlc3MmJnByb2Nlc3MmJnByb2Nlc3MuZG9tYWluJiYocj1wcm9jZXNzLmRvbWFpbi5iaW5kKHIpKSxvLnRoZW4odm9pZCAwLHIpfSx1LnRpbWVvdXQ9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB1KHQpLnRpbWVvdXQoZSxuKX0sZi5wcm90b3R5cGUudGltZW91dD1mdW5jdGlvbih0LGUpe3ZhciBuPWQoKSxpPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlJiYic3RyaW5nIiE9dHlwZW9mIGV8fChlPW5ldyBFcnJvcihlfHwiVGltZWQgb3V0IGFmdGVyICIrdCsiIG1zIiksZS5jb2RlPSJFVElNRURPVVQiKSxuLnJlamVjdChlKX0sdCk7cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbih0KXtjbGVhclRpbWVvdXQoaSksbi5yZXNvbHZlKHQpfSxmdW5jdGlvbih0KXtjbGVhclRpbWVvdXQoaSksbi5yZWplY3QodCl9LG4ubm90aWZ5KSxuLnByb21pc2V9LHUuZGVsYXk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9dCx0PXZvaWQgMCksdSh0KS5kZWxheShlKX0sZi5wcm90b3R5cGUuZGVsYXk9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGhlbihmdW5jdGlvbihlKXt2YXIgbj1kKCk7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtuLnJlc29sdmUoZSl9LHQpLG4ucHJvbWlzZX0pfSx1Lm5mYXBwbHk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0KS5uZmFwcGx5KGUpfSxmLnByb3RvdHlwZS5uZmFwcGx5PWZ1bmN0aW9uKHQpe3ZhciBlPWQoKSxuPUsodCk7cmV0dXJuIG4ucHVzaChlLm1ha2VOb2RlUmVzb2x2ZXIoKSksdGhpcy5mYXBwbHkobikuZmFpbChlLnJlamVjdCksZS5wcm9taXNlfSx1Lm5mY2FsbD1mdW5jdGlvbih0KXt2YXIgZT1LKGFyZ3VtZW50cywxKTtyZXR1cm4gdSh0KS5uZmFwcGx5KGUpfSxmLnByb3RvdHlwZS5uZmNhbGw9ZnVuY3Rpb24oKXt2YXIgdD1LKGFyZ3VtZW50cyksZT1kKCk7cmV0dXJuIHQucHVzaChlLm1ha2VOb2RlUmVzb2x2ZXIoKSksdGhpcy5mYXBwbHkodCkuZmFpbChlLnJlamVjdCksZS5wcm9taXNlfSx1Lm5mYmluZD11LmRlbm9kZWlmeT1mdW5jdGlvbih0KXt2YXIgZT1LKGFyZ3VtZW50cywxKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1lLmNvbmNhdChLKGFyZ3VtZW50cykpLGk9ZCgpO3JldHVybiBuLnB1c2goaS5tYWtlTm9kZVJlc29sdmVyKCkpLHUodCkuZmFwcGx5KG4pLmZhaWwoaS5yZWplY3QpLGkucHJvbWlzZX19LGYucHJvdG90eXBlLm5mYmluZD1mLnByb3RvdHlwZS5kZW5vZGVpZnk9ZnVuY3Rpb24oKXt2YXIgdD1LKGFyZ3VtZW50cyk7cmV0dXJuIHQudW5zaGlmdCh0aGlzKSx1LmRlbm9kZWlmeS5hcHBseSh2b2lkIDAsdCl9LHUubmJpbmQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1LKGFyZ3VtZW50cywyKTtyZXR1cm4gZnVuY3Rpb24oKXtmdW5jdGlvbiBpKCl7cmV0dXJuIHQuYXBwbHkoZSxhcmd1bWVudHMpfXZhciByPW4uY29uY2F0KEsoYXJndW1lbnRzKSksbz1kKCk7cmV0dXJuIHIucHVzaChvLm1ha2VOb2RlUmVzb2x2ZXIoKSksdShpKS5mYXBwbHkocikuZmFpbChvLnJlamVjdCksby5wcm9taXNlfX0sZi5wcm90b3R5cGUubmJpbmQ9ZnVuY3Rpb24oKXt2YXIgdD1LKGFyZ3VtZW50cywwKTtyZXR1cm4gdC51bnNoaWZ0KHRoaXMpLHUubmJpbmQuYXBwbHkodm9pZCAwLHQpfSx1Lm5tYXBwbHk9dS5ucG9zdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHUodCkubnBvc3QoZSxuKX0sZi5wcm90b3R5cGUubm1hcHBseT1mLnByb3RvdHlwZS5ucG9zdD1mdW5jdGlvbih0LGUpe3ZhciBuPUsoZXx8W10pLGk9ZCgpO3JldHVybiBuLnB1c2goaS5tYWtlTm9kZVJlc29sdmVyKCkpLHRoaXMuZGlzcGF0Y2goInBvc3QiLFt0LG5dKS5mYWlsKGkucmVqZWN0KSxpLnByb21pc2V9LHUubnNlbmQ9dS5ubWNhbGw9dS5uaW52b2tlPWZ1bmN0aW9uKHQsZSl7dmFyIG49Syhhcmd1bWVudHMsMiksaT1kKCk7cmV0dXJuIG4ucHVzaChpLm1ha2VOb2RlUmVzb2x2ZXIoKSksdSh0KS5kaXNwYXRjaCgicG9zdCIsW2Usbl0pLmZhaWwoaS5yZWplY3QpLGkucHJvbWlzZX0sZi5wcm90b3R5cGUubnNlbmQ9Zi5wcm90b3R5cGUubm1jYWxsPWYucHJvdG90eXBlLm5pbnZva2U9ZnVuY3Rpb24odCl7dmFyIGU9Syhhcmd1bWVudHMsMSksbj1kKCk7cmV0dXJuIGUucHVzaChuLm1ha2VOb2RlUmVzb2x2ZXIoKSksdGhpcy5kaXNwYXRjaCgicG9zdCIsW3QsZV0pLmZhaWwobi5yZWplY3QpLG4ucHJvbWlzZX0sdS5ub2RlaWZ5PUYsZi5wcm90b3R5cGUubm9kZWlmeT1mdW5jdGlvbih0KXtyZXR1cm4gdD92b2lkIHRoaXMudGhlbihmdW5jdGlvbihlKXt1Lm5leHRUaWNrKGZ1bmN0aW9uKCl7dChudWxsLGUpfSl9LGZ1bmN0aW9uKGUpe3UubmV4dFRpY2soZnVuY3Rpb24oKXt0KGUpfSl9KTp0aGlzfSx1Lm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoIlEubm9Db25mbGljdCBvbmx5IHdvcmtzIHdoZW4gUSBpcyB1c2VkIGFzIGEgZ2xvYmFsIil9O3ZhciBsdD1sKCk7cmV0dXJuIHV9KX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKHQsZSl7dGhpcy5uYW1lPSJBdXRoQXBpRXJyb3IiLHRoaXMubWVzc2FnZT10LmVycm9yU3VtbWFyeSx0aGlzLmVycm9yU3VtbWFyeT10LmVycm9yU3VtbWFyeSx0aGlzLmVycm9yQ29kZT10LmVycm9yQ29kZSx0aGlzLmVycm9yTGluaz10LmVycm9yTGluayx0aGlzLmVycm9ySWQ9dC5lcnJvcklkLHRoaXMuZXJyb3JDYXVzZXM9dC5lcnJvckNhdXNlcyxlJiYodGhpcy54aHI9ZSl9bi5wcm90b3R5cGU9bmV3IEVycm9yLHQuZXhwb3J0cz1ufSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oKXt0aGlzLm5hbWU9IkF1dGhQb2xsU3RvcEVycm9yIix0aGlzLm1lc3NhZ2U9IlRoZSBwb2xsIHdhcyBzdG9wcGVkIGJ5IHRoZSBzZGsifW4ucHJvdG90eXBlPW5ldyBFcnJvcix0LmV4cG9ydHM9bn0sZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkodCl7cmV0dXJuIHQuc2Vzc2lvbi5nZXQoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiJBQ1RJVkUiPT09dC5zdGF0dXN9KS5mYWlsKGZ1bmN0aW9uKCl7cmV0dXJuITF9KX1mdW5jdGlvbiByKHQpe3JldHVybiBjLmdldCh0LCIvYXBpL3YxL3Nlc3Npb25zL21lIikudGhlbihmdW5jdGlvbihlKXt2YXIgbj1sLm9taXQoZSwiX2xpbmtzIik7cmV0dXJuIG4ucmVmcmVzaD1mdW5jdGlvbigpe3JldHVybiBjLnBvc3QodCxsLmdldExpbmsoZSwicmVmcmVzaCIpLmhyZWYpfSxuLnVzZXI9ZnVuY3Rpb24oKXtyZXR1cm4gYy5nZXQodCxsLmdldExpbmsoZSwidXNlciIpLmhyZWYpfSxufSkuZmFpbChmdW5jdGlvbigpe3JldHVybntzdGF0dXM6IklOQUNUSVZFIn19KX1mdW5jdGlvbiBvKHQpe3JldHVybiBjLmh0dHBSZXF1ZXN0KHQse3VybDp0Lm9wdGlvbnMudXJsKyIvYXBpL3YxL3Nlc3Npb25zL21lIixtZXRob2Q6IkRFTEVURSJ9KX1mdW5jdGlvbiBzKHQpe3JldHVybiBjLnBvc3QodCwiL2FwaS92MS9zZXNzaW9ucy9tZS9saWZlY3ljbGUvcmVmcmVzaCIpfWZ1bmN0aW9uIGEodCxlLG4pe249bnx8d2luZG93LmxvY2F0aW9uLmhyZWYsd2luZG93LmxvY2F0aW9uPXQub3B0aW9ucy51cmwrIi9sb2dpbi9zZXNzaW9uQ29va2llUmVkaXJlY3QiK2wudG9RdWVyeVBhcmFtcyh7Y2hlY2tBY2NvdW50U2V0dXBDb21wbGV0ZTohMCx0b2tlbjplLHJlZGlyZWN0VXJsOm59KX12YXIgbD1uKDMzOCksYz1uKDM0MCk7dC5leHBvcnRzPXtzZXNzaW9uRXhpc3RzOmksZ2V0U2Vzc2lvbjpyLGNsb3NlU2Vzc2lvbjpvLHJlZnJlc2hTZXNzaW9uOnMsc2V0Q29va2llQW5kUmVkaXJlY3Q6YX19LGZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKHQpe3ZhciBlLG49dC5zcGxpdCgiLiIpO3RyeXtlPXtoZWFkZXI6SlNPTi5wYXJzZSh3LmJhc2U2NFVybFRvU3RyaW5nKG5bMF0pKSxwYXlsb2FkOkpTT04ucGFyc2Uody5iYXNlNjRVcmxUb1N0cmluZyhuWzFdKSksc2lnbmF0dXJlOm5bMl19fWNhdGNoKGkpe3Rocm93IG5ldyBrKCJNYWxmb3JtZWQgdG9rZW4iKX1yZXR1cm4gZX1mdW5jdGlvbiByKHQsZSxuKXtmdW5jdGlvbiBpKHQpe3ZhciBlO2lmKGU9bi5leHBpcmF0aW9uVGltZXx8MD09PW4uZXhwaXJhdGlvblRpbWU/bi5leHBpcmF0aW9uVGltZTpNYXRoLmZsb29yKERhdGUubm93KCkvMWUzKSx0JiZ0PmUpcmV0dXJuITB9ZnVuY3Rpb24gcih0KXtpZighbi5hdWRpZW5jZSlyZXR1cm4hMDtmb3IodmFyIGU9QXJyYXkuaXNBcnJheShuLmF1ZGllbmNlKT9uLmF1ZGllbmNlOltuLmF1ZGllbmNlXSxpPUFycmF5LmlzQXJyYXkodCk/dDpbdF0scj1lLmxlbmd0aDtyLS07KXt2YXIgbz1lW3JdO2lmKGkuaW5kZXhPZihvKSE9PS0xKXJldHVybiEwfX1yZXR1cm4gbj1ufHx7fSx0LmZlYXR1cmVzLmlzVG9rZW5WZXJpZnlTdXBwb3J0ZWQoKT9NLmdldFdlbGxLbm93bih0KS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBiLmdldCh0LGUuandrc191cmkpfSkudGhlbihmdW5jdGlvbih0KXt2YXIgbj10LmtleXNbMF07cmV0dXJuIFQudmVyaWZ5VG9rZW4oZSxuKX0pLnRoZW4oZnVuY3Rpb24obyl7aWYoIW8pcmV0dXJuITE7dmFyIHM9dC50b2tlbi5kZWNvZGUoZSk7cmV0dXJuIShpKHMucGF5bG9hZC5leHApfHwhcihzLnBheWxvYWQuYXVkKXx8bi5pc3N1ZXImJm4uaXNzdWVyIT09cy5wYXlsb2FkLmlzcyl9KTpTLnJlamVjdChuZXcgaygiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjcnlwdG8uc3VidGxlIikpfWZ1bmN0aW9uIG8odCxlLG4scil7cmV0dXJuKG5ldyBTKS50aGVuKGZ1bmN0aW9uKCl7aWYoIWV8fCFlLmlkVG9rZW4pdGhyb3cgbmV3IGsoIk9ubHkgaWRUb2tlbnMgbWF5IGJlIHZlcmlmaWVkIik7dmFyIG89aShlLmlkVG9rZW4pO3JldHVybiBNLnZhbGlkYXRlQ2xhaW1zKHQsby5wYXlsb2FkLGUuY2xpZW50SWQsZS5pc3N1ZXIsbikscnx8IXQuZmVhdHVyZXMuaXNUb2tlblZlcmlmeVN1cHBvcnRlZCgpP2U6TS5nZXRLZXkodCxlLmlzc3VlcixvLmhlYWRlci5raWQpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIFQudmVyaWZ5VG9rZW4oZS5pZFRva2VuLHQpfSkudGhlbihmdW5jdGlvbih0KXtpZighdCl0aHJvdyBuZXcgaygiVGhlIHRva2VuIHNpZ25hdHVyZSBpcyBub3QgdmFsaWQiKTtyZXR1cm4gZX0pfSl9ZnVuY3Rpb24gcyh0LGUpe3JldHVybiBlPWV8fHt9LGUuZGlzcGxheT1udWxsLGUucHJvbXB0PSJub25lIixwKHQsZSl9ZnVuY3Rpb24gYSh0LGUsbil7ZnVuY3Rpb24gaShlKXshZS5kYXRhfHxlLm9yaWdpbiE9PXQub3B0aW9ucy51cmx8fGUuZGF0YSYmdy5pc1N0cmluZyhuKSYmZS5kYXRhLnN0YXRlIT09bnx8ci5yZXNvbHZlKGUuZGF0YSl9dmFyIHI9Uy5kZWZlcigpO3JldHVybiBNLmFkZExpc3RlbmVyKHdpbmRvdywibWVzc2FnZSIsaSksci5wcm9taXNlLnRpbWVvdXQoZXx8MTJlNCxuZXcgaygiT0F1dGggZmxvdyB0aW1lZCBvdXQiKSkuZmluKGZ1bmN0aW9uKCl7TS5yZW1vdmVMaXN0ZW5lcih3aW5kb3csIm1lc3NhZ2UiLGkpfSl9ZnVuY3Rpb24gbCh0LGUsbil7ZnVuY3Rpb24gaSgpe3RyeXtlJiZlLmxvY2F0aW9uJiZlLmxvY2F0aW9uLmhhc2g/ci5yZXNvbHZlKE0uaGFzaFRvT2JqZWN0KGUubG9jYXRpb24uaGFzaCkpOmUmJiFlLmNsb3NlZCYmc2V0VGltZW91dChpLDUwMCl9Y2F0Y2godCl7c2V0VGltZW91dChpLDUwMCl9fXZhciByPVMuZGVmZXIoKTtyZXR1cm4gaSgpLHIucHJvbWlzZS50aW1lb3V0KG58fDEyZTQsbmV3IGsoIk9BdXRoIGZsb3cgdGltZWQgb3V0IikpfWZ1bmN0aW9uIGModCxlLG4saSl7aT1pfHx7fTt2YXIgcj1lLnJlc3BvbnNlVHlwZSxzPXcuY2xvbmUoZS5zY29wZXMpLGE9ZS5jbGllbnRJZHx8dC5vcHRpb25zLmNsaWVudElkO3JldHVybihuZXcgUykudGhlbihmdW5jdGlvbigpe2lmKG4uZXJyb3J8fG4uZXJyb3JfZGVzY3JpcHRpb24pdGhyb3cgbmV3IEwobi5lcnJvcixuLmVycm9yX2Rlc2NyaXB0aW9uKTtpZihuLnN0YXRlIT09ZS5zdGF0ZSl0aHJvdyBuZXcgaygiT0F1dGggZmxvdyByZXNwb25zZSBzdGF0ZSBkb2Vzbid0IG1hdGNoIHJlcXVlc3Qgc3RhdGUiKTt2YXIgcj17fTtpZihuLmFjY2Vzc190b2tlbiYmKHIudG9rZW49e2FjY2Vzc1Rva2VuOm4uYWNjZXNzX3Rva2VuLGV4cGlyZXNBdDpOdW1iZXIobi5leHBpcmVzX2luKStNYXRoLmZsb29yKERhdGUubm93KCkvMWUzKSx0b2tlblR5cGU6bi50b2tlbl90eXBlLHNjb3BlczpzLGF1dGhvcml6ZVVybDppLmF1dGhvcml6ZVVybCx1c2VyaW5mb1VybDppLnVzZXJpbmZvVXJsfSksbi5jb2RlJiYoci5jb2RlPXthdXRob3JpemF0aW9uQ29kZTpuLmNvZGV9KSxuLmlkX3Rva2VuKXt2YXIgbD10LnRva2VuLmRlY29kZShuLmlkX3Rva2VuKSxjPXtpZFRva2VuOm4uaWRfdG9rZW4sY2xhaW1zOmwucGF5bG9hZCxleHBpcmVzQXQ6bC5wYXlsb2FkLmV4cCxzY29wZXM6cyxhdXRob3JpemVVcmw6aS5hdXRob3JpemVVcmwsaXNzdWVyOmkuaXNzdWVyLGNsaWVudElkOmF9O3JldHVybiBvKHQsYyxlLm5vbmNlLCEwKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiByLmlkX3Rva2VuPWMscn0pfXJldHVybiByfSkudGhlbihmdW5jdGlvbih0KXtpZighQXJyYXkuaXNBcnJheShyKSlyZXR1cm4gdFtyXTtpZighdC50b2tlbiYmIXQuaWRfdG9rZW4pdGhyb3cgbmV3IGsoIlVuYWJsZSB0byBwYXJzZSBPQXV0aCBmbG93IHJlc3BvbnNlIik7cmV0dXJuIHIubWFwKGZ1bmN0aW9uKGUpe3JldHVybiB0W2VdfSl9KX1mdW5jdGlvbiB1KHQsZSl7ZT13LmNsb25lKGUpfHx7fSxlLnNjb3BlJiYody5kZXByZWNhdGUoJ1RoZSBwYXJhbSAic2NvcGUiIGlzIGVxdWl2YWxlbnQgdG8gInNjb3BlcyIuIFVzZSAic2NvcGVzIiBpbnN0ZWFkLicpLGUuc2NvcGVzPWUuc2NvcGUsZGVsZXRlIGUuc2NvcGUpO3ZhciBuPXtjbGllbnRJZDp0Lm9wdGlvbnMuY2xpZW50SWQscmVkaXJlY3RVcmk6dC5vcHRpb25zLnJlZGlyZWN0VXJpfHx3aW5kb3cubG9jYXRpb24uaHJlZixyZXNwb25zZVR5cGU6ImlkX3Rva2VuIixyZXNwb25zZU1vZGU6Im9rdGFfcG9zdF9tZXNzYWdlIixzdGF0ZTp3LmdlblJhbmRvbVN0cmluZyg2NCksbm9uY2U6dy5nZW5SYW5kb21TdHJpbmcoNjQpLHNjb3BlczpbIm9wZW5pZCIsImVtYWlsIl19O3JldHVybiB3LmV4dGVuZChuLGUpLG59ZnVuY3Rpb24gZCh0KXtpZighdC5jbGllbnRJZCl0aHJvdyBuZXcgaygiQSBjbGllbnRJZCBtdXN0IGJlIHNwZWNpZmllZCBpbiB0aGUgT2t0YUF1dGggY29uc3RydWN0b3IgdG8gZ2V0IGEgdG9rZW4iKTtpZih3LmlzU3RyaW5nKHQucmVzcG9uc2VUeXBlKSYmdC5yZXNwb25zZVR5cGUuaW5kZXhPZigiICIpIT09LTEpdGhyb3cgbmV3IGsoIk11bHRpcGxlIE9BdXRoIHJlc3BvbnNlVHlwZXMgbXVzdCBiZSBkZWZpbmVkIGFzIGFuIGFycmF5Iik7dmFyIGU9dy5yZW1vdmVOaWxzKHtjbGllbnRfaWQ6dC5jbGllbnRJZCxyZWRpcmVjdF91cmk6dC5yZWRpcmVjdFVyaSxyZXNwb25zZV90eXBlOnQucmVzcG9uc2VUeXBlLHJlc3BvbnNlX21vZGU6dC5yZXNwb25zZU1vZGUsc3RhdGU6dC5zdGF0ZSxub25jZTp0Lm5vbmNlLHByb21wdDp0LnByb21wdCxkaXNwbGF5OnQuZGlzcGxheSxzZXNzaW9uVG9rZW46dC5zZXNzaW9uVG9rZW4saWRwOnQuaWRwLG1heF9hZ2U6dC5tYXhBZ2V9KTtpZihBcnJheS5pc0FycmF5KGUucmVzcG9uc2VfdHlwZSkmJihlLnJlc3BvbnNlX3R5cGU9ZS5yZXNwb25zZV90eXBlLmpvaW4oIiAiKSksdC5yZXNwb25zZVR5cGUuaW5kZXhPZigiaWRfdG9rZW4iKSE9PS0xJiZ0LnNjb3Blcy5pbmRleE9mKCJvcGVuaWQiKT09PS0xKXRocm93IG5ldyBrKCJvcGVuaWQgc2NvcGUgbXVzdCBiZSBzcGVjaWZpZWQgaW4gdGhlIHNjb3BlcyBhcmd1bWVudCB3aGVuIHJlcXVlc3RpbmcgYW4gaWRfdG9rZW4iKTtyZXR1cm4gZS5zY29wZT10LnNjb3Blcy5qb2luKCIgIiksZX1mdW5jdGlvbiBoKHQpe3ZhciBlPWQodCk7cmV0dXJuIHcudG9RdWVyeVBhcmFtcyhlKX1mdW5jdGlvbiBwKHQsZSxuKXtmdW5jdGlvbiBpKHQpe3ZhciBlPS9eKGh0dHBzP1w6XC9cLyk/KFteOlwvPyNdKig/Olw6WzAtOV0rKT8pLztyZXR1cm4gZS5leGVjKHQpWzBdfWZ1bmN0aW9uIHIodCl7dC5jbG9zZWQmJkEucmVqZWN0KG5ldyBrKCJVbmFibGUgdG8gcGFyc2UgT0F1dGggZmxvdyByZXNwb25zZSIpKX1lPWV8fHt9LG49bnx8e307dmFyIG89dSh0LGUpLHM9e3Byb21wdDoibm9uZSIscmVzcG9uc2VNb2RlOiJva3RhX3Bvc3RfbWVzc2FnZSIsZGlzcGxheTpudWxsfSxkPXtkaXNwbGF5OiJwb3B1cCJ9O2Uuc2Vzc2lvblRva2VuP3cuZXh0ZW5kKG8scyk6ZS5pZHAmJncuZXh0ZW5kKG8sZCk7dmFyIHAsZjt0cnl7Zj1NLmdldE9BdXRoVXJscyh0LG8sbikscD1mLmF1dGhvcml6ZVVybCtoKG8pfWNhdGNoKG0pe3JldHVybiBTLnJlamVjdChtKX12YXIgXztzd2l0Y2goXz1vLnNlc3Npb25Ub2tlbnx8bnVsbD09PW8uZGlzcGxheT8iSUZSQU1FIjoicG9wdXAiPT09by5kaXNwbGF5PyJQT1BVUCI6IklNUExJQ0lUIil7Y2FzZSJJRlJBTUUiOnZhciBnPWEodCxuLnRpbWVvdXQsby5zdGF0ZSksdj1NLmxvYWRGcmFtZShwKTtyZXR1cm4gZy50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBjKHQsbyxlLGYpfSkuZmluKGZ1bmN0aW9uKCl7ZG9jdW1lbnQuYm9keS5jb250YWlucyh2KSYmdi5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKHYpfSk7Y2FzZSJQT1BVUCI6dmFyIHk7aWYoIm9rdGFfcG9zdF9tZXNzYWdlIj09PW8ucmVzcG9uc2VNb2RlKXtpZighdC5mZWF0dXJlcy5pc1BvcHVwUG9zdE1lc3NhZ2VTdXBwb3J0ZWQoKSlyZXR1cm4gUy5yZWplY3QobmV3IGsoIlRoaXMgYnJvd3NlciBkb2Vzbid0IGhhdmUgZnVsbCBwb3N0TWVzc2FnZSBzdXBwb3J0IikpO3k9YSh0LG4udGltZW91dCxvLnN0YXRlKX12YXIgYj17cG9wdXBU", "base64"));
  res.write(new Buffer("aXRsZTpuLnBvcHVwVGl0bGV9LFQ9TS5sb2FkUG9wdXAocCxiKTtpZigiZnJhZ21lbnQiPT09by5yZXNwb25zZU1vZGUpe3ZhciBMPWkodC5pZFRva2VuLmF1dGhvcml6ZS5fZ2V0TG9jYXRpb25IcmVmKCkpLHg9aShvLnJlZGlyZWN0VXJpKTtpZihMIT09eClyZXR1cm4gUy5yZWplY3QobmV3IGsoIlVzaW5nIGZyYWdtZW50LCB0aGUgcmVkaXJlY3RVcmkgb3JpZ2luICgiK3grIikgbXVzdCBtYXRjaCB0aGUgb3JpZ2luIG9mIHRoaXMgcGFnZSAoIitMKyIpIikpO3k9bCh0LFQsbi50aW1lb3V0KX12YXIgQT1TLmRlZmVyKCksRT1zZXRJbnRlcnZhbChmdW5jdGlvbigpe3IoVCl9LDUwMCk7cmV0dXJuIHkudGhlbihmdW5jdGlvbih0KXtBLnJlc29sdmUodCl9KS5mYWlsKGZ1bmN0aW9uKHQpe0EucmVqZWN0KHQpfSksQS5wcm9taXNlLnRoZW4oZnVuY3Rpb24oZSl7cmV0dXJuIGModCxvLGUsZil9KS5maW4oZnVuY3Rpb24oKXtULmNsb3NlZHx8KGNsZWFySW50ZXJ2YWwoRSksVC5jbG9zZSgpKX0pO2RlZmF1bHQ6cmV0dXJuIFMucmVqZWN0KG5ldyBrKCJUaGUgZnVsbCBwYWdlIHJlZGlyZWN0IGZsb3cgaXMgbm90IHN1cHBvcnRlZCIpKX19ZnVuY3Rpb24gZih0LGUsbil7dmFyIGk9dy5jbG9uZShlKXx8e307cmV0dXJuIHcuZXh0ZW5kKGkse3Byb21wdDoibm9uZSIscmVzcG9uc2VNb2RlOiJva3RhX3Bvc3RfbWVzc2FnZSIsZGlzcGxheTpudWxsfSkscCh0LGksbil9ZnVuY3Rpb24gbSh0LGUsbil7dmFyIGk9dy5jbG9uZShlKXx8e307cmV0dXJuIHcuZXh0ZW5kKGkse2Rpc3BsYXk6InBvcHVwIn0pLHAodCxpLG4pfWZ1bmN0aW9uIF8odCxlLG4pe2U9dy5jbG9uZShlKXx8e307dmFyIGk9dSh0LGUpO2lmKCFlLnJlc3BvbnNlTW9kZSl7dmFyIHI9aS5yZXNwb25zZVR5cGU7ci5pbmRleE9mKCJjb2RlIikhPT0tMSYmKHcuaXNTdHJpbmcocil8fEFycmF5LmlzQXJyYXkocikmJjE9PT1yLmxlbmd0aCk/dy5leHRlbmQoaSx7cmVzcG9uc2VNb2RlOiJxdWVyeSJ9KTp3LmV4dGVuZChpLHtyZXNwb25zZU1vZGU6ImZyYWdtZW50In0pfXZhciBvPU0uZ2V0T0F1dGhVcmxzKHQsaSxuKSxzPW8uYXV0aG9yaXplVXJsK2goaSk7QS5zZXRDb29raWUoeC5SRURJUkVDVF9PQVVUSF9QQVJBTVNfQ09PS0lFX05BTUUsSlNPTi5zdHJpbmdpZnkoe3Jlc3BvbnNlVHlwZTppLnJlc3BvbnNlVHlwZSxzdGF0ZTppLnN0YXRlLG5vbmNlOmkubm9uY2Usc2NvcGVzOmkuc2NvcGVzLHVybHM6b30pKSxBLnNldENvb2tpZSh4LlJFRElSRUNUX05PTkNFX0NPT0tJRV9OQU1FLGkubm9uY2UpLEEuc2V0Q29va2llKHguUkVESVJFQ1RfU1RBVEVfQ09PS0lFX05BTUUsaS5zdGF0ZSksdC50b2tlbi5nZXRXaXRoUmVkaXJlY3QuX3NldExvY2F0aW9uKHMpfWZ1bmN0aW9uIGcodCxlKXtpZighTS5pc1Rva2VuKGUpKXJldHVybiBTLnJlamVjdChuZXcgaygiUmVmcmVzaCBtdXN0IGJlIHBhc3M=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("KGUsbi5fYSxuLHQpfWZ1bmN0aW9uIGl0KHQsZSl7cmV0dXJuIG5ldyBEYXRlKERhdGUuVVRDKHQsZSsxLDApKS5nZXRVVENEYXRlKCl9ZnVuY3Rpb24gcnQodCxlKXtyZXR1cm4gcih0aGlzLl9tb250aHMpP3RoaXMuX21vbnRoc1t0Lm1vbnRoKCldOnRoaXMuX21vbnRoc1tIaS50ZXN0KGUpPyJmb3JtYXQiOiJzdGFuZGFsb25lIl1bdC5tb250aCgpXX1mdW5jdGlvbiBvdCh0LGUpe3JldHVybiByKHRoaXMuX21vbnRoc1Nob3J0KT90aGlzLl9tb250aHNTaG9ydFt0Lm1vbnRoKCldOnRoaXMuX21vbnRoc1Nob3J0W0hpLnRlc3QoZSk/ImZvcm1hdCI6InN0YW5kYWxvbmUiXVt0Lm1vbnRoKCldfWZ1bmN0aW9uIHN0KHQsZSxuKXt2YXIgaSxyLG87Zm9yKHRoaXMuX21vbnRoc1BhcnNlfHwodGhpcy5fbW9udGhzUGFyc2U9W10sdGhpcy5fbG9uZ01vbnRoc1BhcnNlPVtdLHRoaXMuX3Nob3J0TW9udGhzUGFyc2U9W10pLGk9MDtpPDEyO2krKyl7aWYocj1jKFsyZTMsaV0pLG4mJiF0aGlzLl9sb25nTW9udGhzUGFyc2VbaV0mJih0aGlzLl9sb25nTW9udGhzUGFyc2VbaV09bmV3IFJlZ0V4cCgiXiIrdGhpcy5tb250aHMociwiIikucmVwbGFjZSgiLiIsIiIpKyIkIiwiaSIpLHRoaXMuX3Nob3J0TW9udGhzUGFyc2VbaV09bmV3IFJlZ0V4cCgiXiIrdGhpcy5tb250aHNTaG9ydChyLCIiKS5yZXBsYWNlKCIuIiwiIikrIiQiLCJpIikpLG58fHRoaXMuX21vbnRoc1BhcnNlW2ldfHwobz0iXiIrdGhpcy5tb250aHMociwiIikrInxeIit0aGlzLm1vbnRoc1Nob3J0KHIsIiIpLHRoaXMuX21vbnRoc1BhcnNlW2ldPW5ldyBSZWdFeHAoby5yZXBsYWNlKCIuIiwiIiksImkiKSksbiYmIk1NTU0iPT09ZSYmdGhpcy5fbG9uZ01vbnRoc1BhcnNlW2ldLnRlc3QodCkpcmV0dXJuIGk7aWYobiYmIk1NTSI9PT1lJiZ0aGlzLl9zaG9ydE1vbnRoc1BhcnNlW2ldLnRlc3QodCkpcmV0dXJuIGk7aWYoIW4mJnRoaXMuX21vbnRoc1BhcnNlW2ldLnRlc3QodCkpcmV0dXJuIGl9fWZ1bmN0aW9uIGF0KHQsZSl7dmFyIG47aWYoIXQuaXNWYWxpZCgpKXJldHVybiB0O2lmKCJzdHJpbmciPT10eXBlb2YgZSlpZigvXlxkKyQvLnRlc3QoZSkpZT15KGUpO2Vsc2UgaWYoZT10LmxvY2FsZURhdGEoKS5tb250aHNQYXJzZShlKSwibnVtYmVyIiE9dHlwZW9mIGUpcmV0dXJuIHQ7cmV0dXJuIG49TWF0aC5taW4odC5kYXRlKCksaXQodC55ZWFyKCksZSkpLHQuX2RbInNldCIrKHQuX2lzVVRDPyJVVEMiOiIiKSsiTW9udGgiXShlLG4pLHR9ZnVuY3Rpb24gbHQodCl7cmV0dXJuIG51bGwhPXQ/KGF0KHRoaXMsdCksZS51cGRhdGVPZmZzZXQodGhpcywhMCksdGhpcyk6eih0aGlzLCJNb250aCIpfWZ1bmN0aW9uIGN0KCl7cmV0dXJuIGl0KHRoaXMueWVhcigpLHRoaXMubW9udGgoKSl9ZnVuY3Rpb24gdXQodCl7cmV0dXJuIHRoaXMuX21vbnRoc1BhcnNlRXhhY3Q/KGEodGhpcywiX21vbnRoc1JlZ2V4Iil8fGh0LmNhbGwodGhpcyksdD90aGlzLl9tb250aHNTaG9ydFN0cmljdFJlZ2V4OnRoaXMuX21vbnRoc1Nob3J0UmVnZXgpOnRoaXMuX21vbnRoc1Nob3J0U3RyaWN0UmVnZXgmJnQ/dGhpcy5fbW9udGhzU2hvcnRTdHJpY3RSZWdleDp0aGlzLl9tb250aHNTaG9ydFJlZ2V4fWZ1bmN0aW9uIGR0KHQpe3JldHVybiB0aGlzLl9tb250aHNQYXJzZUV4YWN0PyhhKHRoaXMsIl9tb250aHNSZWdleCIpfHxodC5jYWxsKHRoaXMpLHQ/dGhpcy5fbW9udGhzU3RyaWN0UmVnZXg6dGhpcy5fbW9udGhzUmVnZXgpOnRoaXMuX21vbnRoc1N0cmljdFJlZ2V4JiZ0P3RoaXMuX21vbnRoc1N0cmljdFJlZ2V4OnRoaXMuX21vbnRoc1JlZ2V4fWZ1bmN0aW9uIGh0KCl7ZnVuY3Rpb24gdCh0LGUpe3JldHVybiBlLmxlbmd0aC10Lmxlbmd0aH12YXIgZSxuLGk9W10scj1bXSxvPVtdO2ZvcihlPTA7ZTwxMjtlKyspbj1jKFsyZTMsZV0pLGkucHVzaCh0aGlzLm1vbnRoc1Nob3J0KG4sIiIpKSxyLnB1c2godGhpcy5tb250aHMobiwiIikpLG8ucHVzaCh0aGlzLm1vbnRocyhuLCIiKSksby5wdXNoKHRoaXMubW9udGhzU2hvcnQobiwiIikpO2ZvcihpLnNvcnQodCksci5zb3J0KHQpLG8uc29ydCh0KSxlPTA7ZTwxMjtlKyspaVtlXT1aKGlbZV0pLHJbZV09WihyW2VdKSxvW2VdPVoob1tlXSk7dGhpcy5fbW9udGhzUmVnZXg9bmV3IFJlZ0V4cCgiXigiK28uam9pbigifCIpKyIpIiwiaSIpLHRoaXMuX21vbnRoc1Nob3J0UmVnZXg9dGhpcy5fbW9udGhzUmVnZXgsdGhpcy5fbW9udGhzU3RyaWN0UmVnZXg9bmV3IFJlZ0V4cCgiXigiK3Iuam9pbigifCIpKyIpJCIsImkiKSx0aGlzLl9tb250aHNTaG9ydFN0cmljdFJlZ2V4PW5ldyBSZWdFeHAoIl4oIitpLmpvaW4oInwiKSsiKSQiLCJpIil9ZnVuY3Rpb24gcHQodCl7dmFyIGUsbj10Ll9hO3JldHVybiBuJiZkKHQpLm92ZXJmbG93PT09LTImJihlPW5bQ2ldPDB8fG5bQ2ldPjExP0NpOm5bWWldPDF8fG5bWWldPml0KG5bRGldLG5bQ2ldKT9ZaTpuW09pXTwwfHxuW09pXT4yNHx8MjQ9PT1uW09pXSYmKDAhPT1uW1BpXXx8MCE9PW5bTmldfHwwIT09bltJaV0pP09pOm5bUGldPDB8fG5bUGldPjU5P1BpOm5bTmldPDB8fG5bTmldPjU5P05pOm5bSWldPDB8fG5bSWldPjk5OT9JaTotMSxkKHQpLl9vdmVyZmxvd0RheU9mWWVhciYmKGU8RGl8fGU+WWkpJiYoZT1ZaSksZCh0KS5fb3ZlcmZsb3dXZWVrcyYmZT09PS0xJiYoZT1SaSksZCh0KS5fb3ZlcmZsb3dXZWVrZGF5JiZlPT09LTEmJihlPWppKSxkKHQpLm92ZXJmbG93PWUpLHR9ZnVuY3Rpb24gZnQodCl7dmFyIGUsbixpLHIsbyxzLGE9dC5faSxsPUJpLmV4ZWMoYSl8fFZpLmV4ZWMoYSk7aWYobCl7Zm9yKGQodCkuaXNvPSEwLGU9MCxuPSRpLmxlbmd0aDtlPG47ZSsrKWlmKCRpW2VdWzFdLmV4ZWMobFsxXSkpe3I9JGlbZV1bMF0saT0kaVtlXVsyXSE9PSExO2JyZWFrfQ==", "base64"));
  res.write(new Buffer("aWYobnVsbD09cilyZXR1cm4gdm9pZCh0Ll9pc1ZhbGlkPSExKTtpZihsWzNdKXtmb3IoZT0wLG49R2kubGVuZ3RoO2U8bjtlKyspaWYoR2lbZV1bMV0uZXhlYyhsWzNdKSl7bz0obFsyXXx8IiAiKStHaVtlXVswXTticmVha31pZihudWxsPT1vKXJldHVybiB2b2lkKHQuX2lzVmFsaWQ9ITEpfWlmKCFpJiZudWxsIT1vKXJldHVybiB2b2lkKHQuX2lzVmFsaWQ9ITEpO2lmKGxbNF0pe2lmKCFxaS5leGVjKGxbNF0pKXJldHVybiB2b2lkKHQuX2lzVmFsaWQ9ITEpO3M9IloifXQuX2Y9cisob3x8IiIpKyhzfHwiIiksRXQodCl9ZWxzZSB0Ll9pc1ZhbGlkPSExfWZ1bmN0aW9uIG10KHQpe3ZhciBuPUtpLmV4ZWModC5faSk7cmV0dXJuIG51bGwhPT1uP3ZvaWQodC5fZD1uZXcgRGF0ZSgrblsxXSkpOihmdCh0KSx2b2lkKHQuX2lzVmFsaWQ9PT0hMSYmKGRlbGV0ZSB0Ll9pc1ZhbGlkLGUuY3JlYXRlRnJvbUlucHV0RmFsbGJhY2sodCkpKSl9ZnVuY3Rpb24gX3QodCxlLG4saSxyLG8scyl7dmFyIGE9bmV3IERhdGUodCxlLG4saSxyLG8scyk7cmV0dXJuIHQ8MTAwJiZ0Pj0wJiZpc0Zpbml0ZShhLmdldEZ1bGxZZWFyKCkpJiZhLnNldEZ1bGxZZWFyKHQpLGF9ZnVuY3Rpb24gZ3QodCl7dmFyIGU9bmV3IERhdGUoRGF0ZS5VVEMuYXBwbHkobnVsbCxhcmd1bWVudHMpKTtyZXR1cm4gdDwxMDAmJnQ+PTAmJmlzRmluaXRlKGUuZ2V0VVRDRnVsbFllYXIoKSkmJmUuc2V0VVRDRnVsbFllYXIodCksZX1mdW5jdGlvbiB2dCh0KXtyZXR1cm4geXQodCk/MzY2OjM2NX1mdW5jdGlvbiB5dCh0KXtyZXR1cm4gdCU0PT09MCYmdCUxMDAhPT0wfHx0JTQwMD09PTB9ZnVuY3Rpb24gYnQoKXtyZXR1cm4geXQodGhpcy55ZWFyKCkpfWZ1bmN0aW9uIHd0KHQsZSxuKXt2YXIgaT03K2UtbixyPSg3K2d0KHQsMCxpKS5nZXRVVENEYXkoKS1lKSU3O3JldHVybi1yK2ktMX1mdW5jdGlvbiBNdCh0LGUsbixpLHIpe3ZhciBvLHMsYT0oNytuLWkpJTcsbD13dCh0LGksciksYz0xKzcqKGUtMSkrYStsO3JldHVybiBjPD0wPyhvPXQtMSxzPXZ0KG8pK2MpOmM+dnQodCk/KG89dCsxLHM9Yy12dCh0KSk6KG89dCxzPWMpLHt5ZWFyOm8sZGF5T2ZZZWFyOnN9fWZ1bmN0aW9uIFN0KHQsZSxuKXt2YXIgaSxyLG89d3QodC55ZWFyKCksZSxuKSxzPU1hdGguZmxvb3IoKHQuZGF5T2ZZZWFyKCktby0xKS83KSsxO3JldHVybiBzPDE/KHI9dC55ZWFyKCktMSxpPXMrVHQocixlLG4pKTpzPlR0KHQueWVhcigpLGUsbik/KGk9cy1UdCh0LnllYXIoKSxlLG4pLHI9dC55ZWFyKCkrMSk6KHI9dC55ZWFyKCksaT1zKSx7d2VlazppLHllYXI6cn19ZnVuY3Rpb24gVHQodCxlLG4pe3ZhciBpPXd0KHQsZSxuKSxyPXd0KHQrMSxlLG4pO3JldHVybih2dCh0KS1pK3IpLzd9ZnVuY3Rpb24ga3QodCxlLG4pe3JldHVybiBudWxsIT10P3Q6bnVsbCE9ZT9lOm59ZnVuY3Rpb24gTHQodCl7dmFyIG49bmV3IERhdGUoZS5ub3coKSk7cmV0dXJuIHQuX3VzZVVUQz9bbi5nZXRVVENGdWxsWWVhcigpLG4uZ2V0VVRDTW9udGgoKSxuLmdldFVUQ0RhdGUoKV06W24uZ2V0RnVsbFllYXIoKSxuLmdldE1vbnRoKCksbi5nZXREYXRlKCldfWZ1bmN0aW9uIHh0KHQpe3ZhciBlLG4saSxyLG89W107aWYoIXQuX2Qpe2ZvcihpPUx0KHQpLHQuX3cmJm51bGw9PXQuX2FbWWldJiZudWxsPT10Ll9hW0NpXSYmQXQodCksdC5fZGF5T2ZZZWFyJiYocj1rdCh0Ll9hW0RpXSxpW0RpXSksdC5fZGF5T2ZZZWFyPnZ0KHIpJiYoZCh0KS5fb3ZlcmZsb3dEYXlPZlllYXI9ITApLG49Z3QociwwLHQuX2RheU9mWWVhciksdC5fYVtDaV09bi5nZXRVVENNb250aCgpLHQuX2FbWWldPW4uZ2V0VVRDRGF0ZSgpKSxlPTA7ZTwzJiZudWxsPT10Ll9hW2VdOysrZSl0Ll9hW2VdPW9bZV09aVtlXTtmb3IoO2U8NztlKyspdC5fYVtlXT1vW2VdPW51bGw9PXQuX2FbZV0/Mj09PWU/MTowOnQuX2FbZV07MjQ9PT10Ll9hW09pXSYmMD09PXQuX2FbUGldJiYwPT09dC5fYVtOaV0mJjA9PT10Ll9hW0lpXSYmKHQuX25leHREYXk9ITAsdC5fYVtPaV09MCksdC5fZD0odC5fdXNlVVRDP2d0Ol90KS5hcHBseShudWxsLG8pLG51bGwhPXQuX3R6bSYmdC5fZC5zZXRVVENNaW51dGVzKHQuX2QuZ2V0VVRDTWludXRlcygpLXQuX3R6bSksdC5fbmV4dERheSYmKHQuX2FbT2ldPTI0KX19ZnVuY3Rpb24gQXQodCl7dmFyIGUsbixpLHIsbyxzLGEsbDtlPXQuX3csbnVsbCE9ZS5HR3x8bnVsbCE9ZS5XfHxudWxsIT1lLkU/KG89MSxzPTQsbj1rdChlLkdHLHQuX2FbRGldLFN0KFJ0KCksMSw0KS55ZWFyKSxpPWt0KGUuVywxKSxyPWt0KGUuRSwxKSwocjwxfHxyPjcpJiYobD0hMCkpOihvPXQuX2xvY2FsZS5fd2Vlay5kb3cscz10Ll9sb2NhbGUuX3dlZWsuZG95LG49a3QoZS5nZyx0Ll9hW0RpXSxTdChSdCgpLG8scykueWVhciksaT1rdChlLncsMSksbnVsbCE9ZS5kPyhyPWUuZCwocjwwfHxyPjYpJiYobD0hMCkpOm51bGwhPWUuZT8ocj1lLmUrbywoZS5lPDB8fGUuZT42KSYmKGw9ITApKTpyPW8pLGk8MXx8aT5UdChuLG8scyk/ZCh0KS5fb3ZlcmZsb3dXZWVrcz0hMDpudWxsIT1sP2QodCkuX292ZXJmbG93V2Vla2RheT0hMDooYT1NdChuLGkscixvLHMpLHQuX2FbRGldPWEueWVhcix0Ll9kYXlPZlllYXI9YS5kYXlPZlllYXIpfWZ1bmN0aW9uIEV0KHQpe2lmKHQuX2Y9PT1lLklTT184NjAxKXJldHVybiB2b2lkIGZ0KHQpO3QuX2E9W10sZCh0KS5lbXB0eT0hMDt2YXIgbixpLHIsbyxzLGE9IiIrdC5faSxsPWEubGVuZ3RoLGM9MDtmb3Iocj1LKHQuX2YsdC5fbG9jYWxlKS5tYXRjaChhaSl8fFtdLG49MDtuPHIubGVuZ3RoO24rKylvPXJbbl0saT0oYS5tYXRjaChYKG8sdCkpfHxbXSlbMF0saSYmKHM9YS5zdWJzdHIoMCxhLmluZGV4T2YoaSkpLHMubGVuZ3RoPjAmJmQodCkudW51c2VkSW5wdXQucHVzaChzKSxhPWEuc2xpY2UoYS5pbmRleE9mKGkpK2kubGVuZ3RoKSxjKz1pLmxlbmd0aCksdWlbb10/KGk/ZCh0KS5lbXB0eT0hMTpkKHQpLnVudXNlZFRva2Vucy5wdXNoKG8pLG50KG8saSx0KSk6dC5fc3RyaWN0JiYhaSYmZCh0KS51bnVzZWRUb2tlbnMucHVzaChvKTtkKHQpLmNoYXJzTGVmdE92ZXI9bC1jLGEubGVuZ3RoPjAmJmQodCkudW51c2VkSW5wdXQucHVzaChhKSxkKHQpLmJpZ0hvdXI9PT0hMCYmdC5fYVtPaV08PTEyJiZ0Ll9hW09pXT4wJiYoZCh0KS5iaWdIb3VyPXZvaWQgMCksdC5fYVtPaV09RHQodC5fbG9jYWxlLHQuX2FbT2ldLHQuX21lcmlkaWVtKSx4dCh0KSxwdCh0KX1mdW5jdGlvbiBEdCh0LGUsbil7dmFyIGk7cmV0dXJuIG51bGw9PW4/ZTpudWxsIT10Lm1lcmlkaWVtSG91cj90Lm1lcmlkaWVtSG91cihlLG4pOm51bGwhPXQuaXNQTT8oaT10LmlzUE0obiksaSYmZTwxMiYmKGUrPTEyKSxpfHwxMiE9PWV8fChlPTApLGUpOmV9ZnVuY3Rpb24gQ3QodCl7dmFyIGUsbixpLHIsbztpZigwPT09dC5fZi5sZW5ndGgpcmV0dXJuIGQodCkuaW52YWxpZEZvcm1hdD0hMCx2b2lkKHQuX2Q9bmV3IERhdGUoTmFOKSk7Zm9yKHI9MDtyPHQuX2YubGVuZ3RoO3IrKylvPTAsZT1tKHt9LHQpLG51bGwhPXQuX3VzZVVUQyYmKGUuX3VzZVVUQz10Ll91c2VVVEMpLGUuX2Y9dC5fZltyXSxFdChlKSxoKGUpJiYobys9ZChlKS5jaGFyc0xlZnRPdmVyLG8rPTEwKmQoZSkudW51c2VkVG9rZW5zLmxlbmd0aCxkKGUpLnNjb3JlPW8sKG51bGw9PWl8fG88aSkmJihpPW8sbj1lKSk7bCh0LG58fGUpfWZ1bmN0aW9uIFl0KHQpe2lmKCF0Ll9kKXt2YXIgZT1IKHQuX2kpO3QuX2E9cyhbZS55ZWFyLGUubW9udGgsZS5kYXl8fGUuZGF0ZSxlLmhvdXIsZS5taW51dGUsZS5zZWNvbmQsZS5taWxsaXNlY29uZF0sZnVuY3Rpb24odCl7cmV0dXJuIHQmJnBhcnNlSW50KHQsMTApfSkseHQodCl9fWZ1bmN0aW9uIE90KHQpe3ZhciBlPW5ldyBfKHB0KFB0KHQpKSk7cmV0dXJuIGUuX25leHREYXkmJihlLmFkZCgxLCJkIiksZS5fbmV4dERheT12b2lkIDApLGV9ZnVuY3Rpb24gUHQodCl7dmFyIGU9dC5faSxuPXQuX2Y7cmV0dXJuIHQuX2xvY2FsZT10Ll9sb2NhbGV8fE4odC5fbCksbnVsbD09PWV8fHZvaWQgMD09PW4mJiIiPT09ZT9wKHtudWxsSW5wdXQ6ITB9KTooInN0cmluZyI9PXR5cGVvZiBlJiYodC5faT1lPXQuX2xvY2FsZS5wcmVwYXJzZShlKSksZyhlKT9uZXcgXyhwdChlKSk6KHIobik/Q3QodCk6bj9FdCh0KTpvKGUpP3QuX2Q9ZTpOdCh0KSxoKHQpfHwodC5fZD1udWxsKSx0KSl9ZnVuY3Rpb24gTnQodCl7dmFyIG49dC5faTt2b2lkIDA9PT1uP3QuX2Q9bmV3IERhdGUoZS5ub3coKSk6byhuKT90Ll9kPW5ldyBEYXRlKCtuKToic3RyaW5nIj09dHlwZW9mIG4/bXQodCk6cihuKT8odC5fYT1zKG4uc2xpY2UoMCksZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlSW50KHQsMTApfSkseHQodCkpOiJvYmplY3QiPT10eXBlb2Ygbj9ZdCh0KToibnVtYmVyIj09dHlwZW9mIG4/dC5fZD1uZXcgRGF0ZShuKTplLmNyZWF0ZUZyb21JbnB1dEZhbGxiYWNrKHQpfWZ1bmN0aW9uIEl0KHQsZSxuLGkscil7dmFyIG89e307cmV0dXJuImJvb2xlYW4iPT10eXBlb2YgbiYmKGk9bixuPXZvaWQgMCksby5faXNBTW9tZW50T2JqZWN0PSEwLG8uX3VzZVVUQz1vLl9pc1VUQz1yLG8uX2w9bixvLl9pPXQsby5fZj1lLG8uX3N0cmljdD1pLE90KG8pfWZ1bmN0aW9uIFJ0KHQsZSxuLGkpe3JldHVybiBJdCh0LGUsbixpLCExKX1mdW5jdGlvbiBqdCh0LGUpe3ZhciBuLGk7aWYoMT09PWUubGVuZ3RoJiZyKGVbMF0pJiYoZT1lWzBdKSwhZS5sZW5ndGgpcmV0dXJuIFJ0KCk7Zm9yKG49ZVswXSxpPTE7aTxlLmxlbmd0aDsrK2kpZVtpXS5pc1ZhbGlkKCkmJiFlW2ldW3RdKG4pfHwobj1lW2ldKTtyZXR1cm4gbn1mdW5jdGlvbiBIdCgpe3ZhciB0PVtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApO3JldHVybiBqdCgiaXNCZWZvcmUiLHQpfWZ1bmN0aW9uIEZ0KCl7dmFyIHQ9W10uc2xpY2UuY2FsbChhcmd1bWVudHMsMCk7cmV0dXJuIGp0KCJpc0FmdGVyIix0KX1mdW5jdGlvbiB6dCh0KXt2YXIgZT1IKHQpLG49ZS55ZWFyfHwwLGk9ZS5xdWFydGVyfHwwLHI9ZS5tb250aHx8MCxvPWUud2Vla3x8MCxzPWUuZGF5fHwwLGE9ZS5ob3VyfHwwLGw9ZS5taW51dGV8fDAsYz1lLnNlY29uZHx8MCx1PWUubWlsbGlzZWNvbmR8fDA7dGhpcy5fbWlsbGlzZWNvbmRzPSt1KzFlMypjKzZlNCpsKzM2ZTUqYSx0aGlzLl9kYXlzPStzKzcqbyx0aGlzLl9tb250aHM9K3IrMyppKzEyKm4sdGhpcy5fZGF0YT17fSx0aGlzLl9sb2NhbGU9TigpLHRoaXMuX2J1YmJsZSgpfWZ1bmN0aW9uIFV0KHQpe3JldHVybiB0IGluc3RhbmNlb2YgenR9ZnVuY3Rpb24gV3QodCxlKXtWKHQsMCwwLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy51dGNPZmZzZXQoKSxuPSIrIjtyZXR1cm4gdDwwJiYodD0tdCxuPSItIiksbitCKH5+KHQvNjApLDIpK2UrQih+fnQlNjAsMil9KX1mdW5jdGlvbiBCdCh0LGUpe3ZhciBuPShlfHwiIikubWF0Y2godCl8fFtdLGk9bltuLmxlbmd0aC0xXXx8W10scj0oaSsiIikubWF0Y2godHIpfHxbIi0iLDAsMF0sbz0rKDYwKnJbMV0pK3koclsyXSk7cmV0dXJuIisiPT09clswXT9vOi1vfWZ1bmN0aW9uIFZ0KHQsbil7dmFyIGkscjtyZXR1cm4gbi5faXNVVEM/KGk9bi5jbG9uZSgpLHI9KGcodCl8fG8odCk/K3Q6K1J0KHQpKS0raSxpLl9kLnNldFRpbWUoK2kuX2QrciksZS51cGRhdGVPZmZzZXQoaSwhMSksaSk6UnQodCkubG9jYWwoKX1mdW5jdGlvbiBxdCh0KXtyZXR1cm4gMTUqLU1hdGgucm91bmQodC5fZC5nZXRUaW1lem9uZU9mZnNldCgpLzE1KX1mdW5jdGlvbiAkdCh0LG4pe3ZhciBpLHI9dGhpcy5fb2Zmc2V0fHwwO3JldHVybiB0aGlzLmlzVmFsaWQoKT9udWxsIT10Pygic3RyaW5nIj09dHlwZW9mIHQ/dD1CdChraSx0KTpNYXRoLmFicyh0KTwxNiYmKHQqPTYwKSwhdGhpcy5faXNVVEMmJm4mJihpPXF0KHRoaXMpKSx0aGlzLl9vZmZzZXQ9dCx0aGlzLl9pc1VUQz0hMCxudWxsIT1pJiZ0aGlzLmFkZChpLCJtIiksciE9PXQmJighbnx8dGhpcy5fY2hhbmdlSW5Qcm9ncmVzcz91ZSh0aGlzLHJlKHQtciwibSIpLDEsITEpOnRoaXMuX2NoYW5nZUluUHJvZ3Jlc3N8fCh0aGlzLl9jaGFuZ2VJblByb2dyZXNzPSEwLGUudXBkYXRlT2Zmc2V0KHRoaXMsITApLHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3M9bnVsbCkpLHRoaXMpOnRoaXMuX2lzVVRDP3I6cXQodGhpcyk6bnVsbCE9dD90aGlzOk5hTn1mdW5jdGlvbiBHdCh0LGUpe3JldHVybiBudWxsIT10Pygic3RyaW5nIiE9dHlwZW9mIHQmJih0PS10KSx0aGlzLnV0Y09mZnNldCh0LGUpLHRoaXMpOi10aGlzLnV0Y09mZnNldCgpfWZ1bmN0aW9uIEt0KHQpe3JldHVybiB0aGlzLnV0Y09mZnNldCgwLHQpfWZ1bmN0aW9uIEp0KHQpe3JldHVybiB0aGlzLl9pc1VUQyYmKHRoaXMudXRjT2Zmc2V0KDAsdCksdGhpcy5faXNVVEM9ITEsdCYmdGhpcy5zdWJ0cmFjdChxdCh0aGlzKSwibSIpKSx0aGlzfWZ1bmN0aW9uIFh0KCl7cmV0dXJuIHRoaXMuX3R6bT90aGlzLnV0Y09mZnNldCh0aGlzLl90em0pOiJzdHJpbmciPT10eXBlb2YgdGhpcy5faSYmdGhpcy51dGNPZmZzZXQoQnQoVGksdGhpcy5faSkpLHRoaXN9ZnVuY3Rpb24gUXQodCl7cmV0dXJuISF0aGlzLmlzVmFsaWQoKSYmKHQ9dD9SdCh0KS51dGNPZmZzZXQoKTowLCh0aGlzLnV0Y09mZnNldCgpLXQpJTYwPT09MCl9ZnVuY3Rpb24gWnQoKXtyZXR1cm4gdGhpcy51dGNPZmZzZXQoKT50aGlzLmNsb25lKCkubW9udGgoMCkudXRjT2Zmc2V0KCl8fHRoaXMudXRjT2Zmc2V0KCk+dGhpcy5jbG9uZSgpLm1vbnRoKDUpLnV0Y09mZnNldCgpfWZ1bmN0aW9uIHRlKCl7aWYoIWYodGhpcy5faXNEU1RTaGlmdGVkKSlyZXR1cm4gdGhpcy5faXNEU1RTaGlmdGVkO3ZhciB0PXt9O2lmKG0odCx0aGlzKSx0PVB0KHQpLHQuX2Epe3ZhciBlPXQuX2lzVVRDP2ModC5fYSk6UnQodC5fYSk7dGhpcy5faXNEU1RTaGlmdGVkPXRoaXMuaXNWYWxpZCgpJiZiKHQuX2EsZS50b0FycmF5KCkpPjB9ZWxzZSB0aGlzLl9pc0RTVFNoaWZ0ZWQ9ITE7cmV0dXJuIHRoaXMuX2lzRFNUU2hpZnRlZH1mdW5jdGlvbiBlZSgpe3JldHVybiEhdGhpcy5pc1ZhbGlkKCkmJiF0aGlzLl9pc1VUQ31mdW5jdGlvbiBuZSgpe3JldHVybiEhdGhpcy5pc1ZhbGlkKCkmJnRoaXMuX2lzVVRDfWZ1bmN0aW9uIGllKCl7cmV0dXJuISF0aGlzLmlzVmFsaWQoKSYmdGhpcy5faXNVVEMmJjA9PT10aGlzLl9vZmZzZXR9ZnVuY3Rpb24gcmUodCxlKXt2YXIgbixpLHIsbz10LHM9bnVsbDtyZXR1cm4gVXQodCk/bz17bXM6dC5fbWlsbGlzZWNvbmRzLGQ6dC5fZGF5cyxNOnQuX21vbnRoc306Im51bWJlciI9PXR5cGVvZiB0PyhvPXt9LGU/b1tlXT10Om8ubWlsbGlzZWNvbmRzPXQpOihzPWVyLmV4ZWModCkpPyhuPSItIj09PXNbMV0/LTE6MSxvPXt5OjAsZDp5KHNbWWldKSpuLGg6eShzW09pXSkqbixtOnkoc1tQaV0pKm4sczp5KHNbTmldKSpuLG1zOnkoc1tJaV0pKm59KToocz1uci5leGVjKHQpKT8obj0iLSI9PT1zWzFdPy0xOjEsbz17eTpvZShzWzJdLG4pLE06b2Uoc1szXSxuKSx3Om9lKHNbNF0sbiksZDpvZShzWzVdLG4pLGg6b2Uoc1s2XSxuKSxtOm9lKHNbN10sbiksczpvZShzWzhdLG4pfSk6bnVsbD09bz9vPXt9OiJvYmplY3QiPT10eXBlb2YgbyYmKCJmcm9tImluIG98fCJ0byJpbiBvKSYmKHI9YWUoUnQoby5mcm9tKSxSdChvLnRvKSksbz17fSxvLm1zPXIubWlsbGlzZWNvbmRzLG8uTT1yLm1vbnRocyksaT1uZXcgenQobyksVXQodCkmJmEodCwiX2xvY2FsZSIpJiYoaS5fbG9jYWxlPXQuX2xvY2FsZSksaX1mdW5jdGlvbiBvZSh0LGUpe3ZhciBuPXQmJnBhcnNlRmxvYXQodC5yZXBsYWNlKCIsIiwiLiIpKTtyZXR1cm4oaXNOYU4obik/MDpuKSplfWZ1bmN0aW9uIHNlKHQsZSl7dmFyIG49e21pbGxpc2Vjb25kczowLG1vbnRoczowfTtyZXR1cm4gbi5tb250aHM9ZS5tb250aCgpLXQubW9udGgoKSsxMiooZS55ZWFyKCktdC55ZWFyKCkpLHQuY2xvbmUoKS5hZGQobi5tb250aHMsIk0iKS5pc0FmdGVyKGUpJiYtLW4ubW9udGhzLG4ubWlsbGlzZWNvbmRzPStlLSt0LmNsb25lKCkuYWRkKG4ubW9udGhzLCJNIiksbn1mdW5jdGlvbiBhZSh0LGUpe3ZhciBuO3JldHVybiB0LmlzVmFsaWQoKSYmZS5pc1ZhbGlkKCk/KGU9VnQoZSx0KSx0LmlzQmVmb3JlKGUpP249c2UodCxlKToobj1zZShlLHQpLG4ubWlsbGlzZWNvbmRzPS1uLm1pbGxpc2Vjb25kcyxuLm1vbnRocz0tbi5tb250aHMpLG4pOnttaWxsaXNlY29uZHM6MCxtb250aHM6MH19ZnVuY3Rpb24gbGUodCl7cmV0dXJuIHQ8MD9NYXRoLnJvdW5kKC0xKnQpKi0xOk1hdGgucm91bmQodCl9ZnVuY3Rpb24gY2UodCxlKXtyZXR1cm4gZnVuY3Rpb24obixpKXt2YXIgcixvO3JldHVybiBudWxsPT09aXx8aXNOYU4oK2kpfHwoUyhlLCJtb21lbnQoKS4iK2UrIihwZXJpb2QsIG51bWJlcikgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBtb21lbnQoKS4iK2UrIihudW1iZXIsIHBlcmlvZCkuIiksbz1uLG49aSxpPW8pLG49InN0cmluZyI9PXR5cGVvZiBuPytuOm4scj1yZShuLGkpLHVlKHRoaXMscix0KSx0aGlzfX1mdW5jdGlvbiB1ZSh0LG4saSxyKXt2YXIgbz1uLl9taWxsaXNlY29uZHMscz1sZShuLl9kYXlzKSxhPWxlKG4uX21vbnRocyk7dC5pc1ZhbGlkKCkmJihyPW51bGw9PXJ8fHIsbyYmdC5fZC5zZXRUaW1lKCt0Ll9kK28qaSkscyYmVSh0LCJEYXRlIix6KHQsIkRhdGUiKStzKmkpLGEmJmF0KHQseih0LCJNb250aCIpK2EqaSksciYmZS51cGRhdGVPZmZzZXQodCxzfHxhKSl9ZnVuY3Rpb24gZGUodCxlKXt2YXIgbj10fHxSdCgpLGk9VnQobix0aGlzKS5zdGFydE9mKCJkYXkiKSxyPXRoaXMuZGlmZihpLCJkYXlzIiwhMCksbz1yPC02PyJzYW1lRWxzZSI6cjwtMT8ibGFzdFdlZWsiOnI8MD8ibGFzdERheSI6cjwxPyJzYW1lRGF5IjpyPDI/Im5leHREYXkiOnI8Nz8ibmV4dFdlZWsiOiJzYW1lRWxzZSIscz1lJiYoVChlW29dKT9lW29dKCk6ZVtvXSk7cmV0dXJuIHRoaXMuZm9ybWF0KHN8fHRoaXMubG9jYWxlRGF0YSgpLmNhbGVuZGFyKG8sdGhpcyxSdChuKSkpfWZ1bmN0aW9uIGhlKCl7cmV0dXJuIG5ldyBfKHRoaXMpfWZ1bmN0aW9uIHBlKHQsZSl7dmFyIG49Zyh0KT90OlJ0KHQpO3JldHVybiEoIXRoaXMuaXNWYWxpZCgpfHwhbi5pc1ZhbGlkKCkpJiYoZT1qKGYoZSk/Im1pbGxpc2Vjb25kIjplKSwibWlsbGlzZWNvbmQiPT09ZT8rdGhpcz4rbjorbjwrdGhpcy5jbG9uZSgpLnN0YXJ0T2YoZSkpfWZ1bmN0aW9uIGZlKHQsZSl7dmFyIG49Zyh0KT90OlJ0KHQpO3JldHVybiEoIXRoaXMuaXNWYWxpZCgpfHwhbi5pc1ZhbGlkKCkpJiYoZT1qKGYoZSk/Im1pbGxpc2Vjb25kIjplKSwibWlsbGlzZWNvbmQiPT09ZT8rdGhpczwrbjordGhpcy5jbG9uZSgpLmVuZE9mKGUpPCtuKX1mdW5jdGlvbiBtZSh0LGUsbil7cmV0dXJuIHRoaXMuaXNBZnRlcih0LG4pJiZ0aGlzLmlzQmVmb3JlKGUsbil9ZnVuY3Rpb24gX2UodCxlKXt2YXIgbixpPWcodCk/dDpSdCh0KTtyZXR1cm4hKCF0aGlzLmlzVmFsaWQoKXx8IWkuaXNWYWxpZCgpKSYmKGU9aihlfHwibWlsbGlzZWNvbmQiKSwibWlsbGlzZWNvbmQiPT09ZT8rdGhpcz09PStpOihuPStpLCt0aGlzLmNsb25lKCkuc3RhcnRPZihlKTw9biYmbjw9K3RoaXMuY2xvbmUoKS5lbmRPZihlKSkpfWZ1bmN0aW9uIGdlKHQsZSl7cmV0dXJuIHRoaXMuaXNTYW1lKHQsZSl8fHRoaXMuaXNBZnRlcih0LGUpfWZ1bmN0aW9uIHZlKHQsZSl7cmV0dXJuIHRoaXMuaXNTYW1lKHQsZSl8fHRoaXMuaXNCZWZvcmUodCxlKX1mdW5jdGlvbiB5ZSh0LGUsbil7dmFyIGkscixvLHM7cmV0dXJuIHRoaXMuaXNWYWxpZCgpPyhpPVZ0KHQsdGhpcyksaS5pc1ZhbGlkKCk/KHI9NmU0KihpLnV0Y09mZnNldCgpLXRoaXMudXRjT2Zmc2V0KCkpLGU9aihlKSwieWVhciI9PT1lfHwibW9udGgiPT09ZXx8InF1YXJ0ZXIiPT09ZT8ocz1iZSh0aGlzLGkpLCJxdWFydGVyIj09PWU/cy89MzoieWVhciI9PT1lJiYocy89MTIpKToobz10aGlzLWkscz0ic2Vjb25kIj09PWU/by8xZTM6Im1pbnV0ZSI9PT1lP28vNmU0OiJob3VyIj09PWU/by8zNmU1OiJkYXkiPT09ZT8oby1yKS84NjRlNToid2VlayI9PT1lPyhvLXIpLzYwNDhlNTpvKSxuP3M6dihzKSk6TmFOKTpOYU59ZnVuY3Rpb24gYmUodCxlKXt2YXIgbixpLHI9MTIqKGUueWVhcigpLXQueWVhcigpKSsoZS5tb250aCgpLXQubW9udGgoKSksbz10LmM=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("Z0RhdGVGb3JtYXQ9YnIsa3IubG9uZ0RhdGVGb3JtYXQ9TW4sa3IuX2ludmFsaWREYXRlPXdyLGtyLmludmFsaWREYXRlPVNuLGtyLl9vcmRpbmFsPU1yLGtyLm9yZGluYWw9VG4sa3IuX29yZGluYWxQYXJzZT1Tcixrci5wcmVwYXJzZT1rbixrci5wb3N0Zm9ybWF0PWtuLGtyLl9yZWxhdGl2ZVRpbWU9VHIsa3IucmVsYXRpdmVUaW1lPUxuLGtyLnBhc3RGdXR1cmU9eG4sa3Iuc2V0PUwsa3IubW9udGhzPXJ0LGtyLl9tb250aHM9Rmksa3IubW9udGhzU2hvcnQ9b3Qsa3IuX21vbnRoc1Nob3J0PXppLGtyLm1vbnRoc1BhcnNlPXN0LGtyLl9tb250aHNSZWdleD1XaSxrci5tb250aHNSZWdleD1kdCxrci5fbW9udGhzU2hvcnRSZWdleD1VaSxrci5tb250aHNTaG9ydFJlZ2V4PXV0LGtyLndlZWs9SmUsa3IuX3dlZWs9c3Isa3IuZmlyc3REYXlPZlllYXI9UWUsa3IuZmlyc3REYXlPZldlZWs9WGUsa3Iud2Vla2RheXM9bm4sa3IuX3dlZWtkYXlzPWxyLGtyLndlZWtkYXlzTWluPW9uLGtyLl93ZWVrZGF5c01pbj11cixrci53ZWVrZGF5c1Nob3J0PXJuLGtyLl93ZWVrZGF5c1Nob3J0PWNyLGtyLndlZWtkYXlzUGFyc2U9c24sa3IuaXNQTT1mbixrci5fbWVyaWRpZW1QYXJzZT1kcixrci5tZXJpZGllbT1tbixZKCJlbiIse29yZGluYWxQYXJzZTovXGR7MSwyfSh0aHxzdHxuZHxyZCkvLG9yZGluYWw6ZnVuY3Rpb24odCl7dmFyIGU9dCUxMCxuPTE9PT15KHQlMTAwLzEwKT8idGgiOjE9PT1lPyJzdCI6Mj09PWU/Im5kIjozPT09ZT8icmQiOiJ0aCI7cmV0dXJuIHQrbn19KSxlLmxhbmc9TSgibW9tZW50LmxhbmcgaXMgZGVwcmVjYXRlZC4gVXNlIG1vbWVudC5sb2NhbGUgaW5zdGVhZC4iLFkpLGUubGFuZ0RhdGE9TSgibW9tZW50LmxhbmdEYXRhIGlzIGRlcHJlY2F0ZWQuIFVzZSBtb21lbnQubG9jYWxlRGF0YSBpbnN0ZWFkLiIsTik7dmFyIExyPU1hdGguYWJzLHhyPVZuKCJtcyIpLEFyPVZuKCJzIiksRXI9Vm4oIm0iKSxEcj1WbigiaCIpLENyPVZuKCJkIiksWXI9Vm4oInciKSxPcj1WbigiTSIpLFByPVZuKCJ5IiksTnI9JG4oIm1pbGxpc2Vjb25kcyIpLElyPSRuKCJzZWNvbmRzIiksUnI9JG4oIm1pbnV0ZXMiKSxqcj0kbigiaG91cnMiKSxIcj0kbigiZGF5cyIpLEZyPSRuKCJtb250aHMiKSx6cj0kbigieWVhcnMiKSxVcj1NYXRoLnJvdW5kLFdyPXtzOjQ1LG06NDUsaDoyMixkOjI2LE06MTF9LEJyPU1hdGguYWJzLFZyPXp0LnByb3RvdHlwZTtWci5hYnM9Tm4sVnIuYWRkPVJuLFZyLnN1YnRyYWN0PWpuLFZyLmFzPVduLFZyLmFzTWlsbGlzZWNvbmRzPXhyLFZyLmFzU2Vjb25kcz1BcixWci5hc01pbnV0ZXM9RXIsVnIuYXNIb3Vycz1EcixWci5hc0RheXM9Q3IsVnIuYXNXZWVrcz1ZcixWci5hc01vbnRocz1PcixWci5hc1llYXJzPVByLFZyLnZhbHVlT2Y9Qm4sVnIuX2J1YmJsZT1GbixWci5nZXQ9cW4sVnIubWlsbGlzZWNvbmRzPU5yLFZyLnNlY29uZHM9SXIsVnIubWludXRlcz1ScixWci5ob3Vycz1qcixWci5kYXlzPUhyLFZyLndlZWtzPUduLFZyLm1vbnRocz1GcixWci55ZWFycz16cixWci5odW1hbml6ZT1RbixWci50b0lTT1N0cmluZz1abixWci50b1N0cmluZz1abixWci50b0pTT049Wm4sVnIubG9jYWxlPUFlLFZyLmxvY2FsZURhdGE9RWUsVnIudG9Jc29TdHJpbmc9TSgidG9Jc29TdHJpbmcoKSBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIHRvSVNPU3RyaW5nKCkgaW5zdGVhZCAobm90aWNlIHRoZSBjYXBpdGFscykiLFpuKSxWci5sYW5nPW9yLFYoIlgiLDAsMCwidW5peCIpLFYoIngiLDAsMCwidmFsdWVPZiIpLEooIngiLFNpKSxKKCJYIixMaSksdHQoIlgiLGZ1bmN0aW9uKHQsZSxuKXtuLl9kPW5ldyBEYXRlKDFlMypwYXJzZUZsb2F0KHQsMTApKX0pLHR0KCJ4IixmdW5jdGlvbih0LGUsbil7bi5fZD1uZXcgRGF0ZSh5KHQpKX0pLGUudmVyc2lvbj0iMi4xMi4wIixpKFJ0KSxlLmZuPXZyLGUubWluPUh0LGUubWF4PUZ0LGUubm93PVppLGUudXRjPWMsZS51bml4PXluLGUubW9udGhzPURuLGUuaXNEYXRlPW8sZS5sb2NhbGU9WSxlLmludmFsaWQ9cCxlLmR1cmF0aW9uPXJlLGUuaXNNb21lbnQ9ZyxlLndlZWtkYXlzPVluLGUucGFyc2Vab25lPWJuLGUubG9jYWxlRGF0YT1OLGUuaXNEdXJhdGlvbj1VdCxlLm1vbnRoc1Nob3J0PUNuLGUud2Vla2RheXNNaW49UG4sZS5kZWZpbmVMb2NhbGU9TyxlLnVwZGF0ZUxvY2FsZT1QLGUubG9jYWxlcz1JLGUud2Vla2RheXNTaG9ydD1PbixlLm5vcm1hbGl6ZVVuaXRzPWosZS5yZWxhdGl2ZVRpbWVUaHJlc2hvbGQ9WG4sZS5wcm90b3R5cGU9dnI7dmFyIHFyPWU7cmV0dXJuIHFyfSl9KS5jYWxsKGUsbigzNjIpKHQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7cmV0dXJuIHQud2VicGFja1BvbHlmaWxsfHwodC5kZXByZWNhdGU9ZnVuY3Rpb24oKXt9LHQucGF0aHM9W10sdC5jaGlsZHJlbj1bXSx0LndlYnBhY2tQb2x5ZmlsbD0xKSx0fX0sZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkodCl7cmV0dXJuIG4ocih0KSl9ZnVuY3Rpb24gcih0KXtyZXR1cm4gb1t0XXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIit0KyInLiIpfSgpfXZhciBvPXsiLi9hZiI6MzY0LCIuL2FmLmpzIjozNjQsIi4vYXIiOjM2NSwiLi9hci1tYSI6MzY2LCIuL2FyLW1hLmpzIjozNjYsIi4vYXItc2EiOjM2NywiLi9hci1zYS5qcyI6MzY3LCIuL2FyLXRuIjozNjgsIi4vYXItdG4uanMiOjM2OCwiLi9hci5qcyI6MzY1LCIuL2F6IjozNjksIi4vYXouanMiOjM2OSwiLi9iZSI6MzcwLCIuL2JlLmpzIjozNzAsIi4vYmciOjM3MSwiLi9iZy5qcyI6MzcxLCIuL2JuIjozNzIsIi4vYm4uanMiOjM3MiwiLi9ibyI6MzczLCIuL2JvLmpzIjozNzMsIi4vYnIiOjM3NCwiLi9ici5qcyI6Mzc0LCIuL2JzIjozNw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("2KfYudipXSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToi2YHZiiAlcyIscGFzdDoi2YXZhtiwICVzIixzOiLYq9mI2KfZhiIsbToi2K/ZgtmK2YLYqSIsbW06IiVkINiv2YLYp9im2YIiLGg6Itiz2KfYudipIixoaDoiJWQg2LPYp9i52KfYqiIsZDoi2YrZiNmFIixkZDoiJWQg2KPZitin2YUiLE06Iti02YfYsSIsTU06IiVkINij2LTZh9ixIix5OiLYs9mG2KkiLHl5OiIlZCDYs9mG2YjYp9iqIn0sd2Vlazp7ZG93OjYsZG95OjEyfX0pO3JldHVybiBlfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPXsxOiLZoSIsMjoi2aIiLDM6ItmjIiw0OiLZpCIsNToi2aUiLDY6ItmmIiw3OiLZpyIsODoi2agiLDk6ItmpIiwwOiLZoCJ9LG49eyLZoSI6IjEiLCLZoiI6IjIiLCLZoyI6IjMiLCLZpCI6IjQiLCLZpSI6IjUiLCLZpiI6IjYiLCLZpyI6IjciLCLZqCI6IjgiLCLZqSI6IjkiLCLZoCI6IjAifSxpPXQuZGVmaW5lTG9jYWxlKCJhci1zYSIse21vbnRoczoi2YrZhtin2YrYsV/Zgdio2LHYp9mK2LFf2YXYp9ix2LNf2KPYqNix2YrZhF/Zhdin2YrZiF/ZitmI2YbZitmIX9mK2YjZhNmK2Yhf2KPYutiz2LfYs1/Ys9io2KrZhdio2LFf2KPZg9iq2YjYqNixX9mG2YjZgdmF2KjYsV/Yr9mK2LPZhdio2LEiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6ItmK2YbYp9mK2LFf2YHYqNix2KfZitixX9mF2KfYsdizX9ij2KjYsdmK2YRf2YXYp9mK2Yhf2YrZiNmG2YrZiF/ZitmI2YTZitmIX9ij2LrYs9i32LNf2LPYqNiq2YXYqNixX9ij2YPYqtmI2KjYsV/ZhtmI2YHZhdio2LFf2K/Zitiz2YXYqNixIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLYp9mE2KPYrdivX9in2YTYpdir2YbZitmGX9in2YTYq9mE2KfYq9in2KFf2KfZhNij2LHYqNi52KfYoV/Yp9mE2K7ZhdmK2LNf2KfZhNis2YXYudipX9in2YTYs9io2KoiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoi2KPYrdivX9il2KvZhtmK2YZf2KvZhNin2KvYp9ihX9ij2LHYqNi52KfYoV/YrtmF2YrYs1/YrNmF2LnYqV/Ys9io2KoiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46ItitX9mGX9irX9ixX9iuX9isX9izIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEg6bW0iLExUUzoiSEg6bW06c3MiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBISDptbSIsTExMTDoiZGRkZCBEIE1NTU0gWVlZWSBISDptbSJ9LG1lcmlkaWVtUGFyc2U6L9i1fNmFLyxpc1BNOmZ1bmN0aW9uKHQpe3JldHVybiLZhSI9PT10fSxtZXJpZGllbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ8MTI/Iti1Ijoi2YUifSxjYWxlbmRhcjp7c2FtZURheToiW9in2YTZitmI2YUg2LnZhNmJINin2YTYs9in2LnYqV0gTFQiLG5leHREYXk6IlvYutiv2Kcg2LnZhNmJINin2YTYs9in2LnYqV0gTFQiLG5leHRXZWVrOiJkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCIsbGFzdERheToiW9ij2YXYsyDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCIsbGFzdFdlZWs6ImRkZGQgW9i52YTZiSDYp9mE2LPYp9i52KldIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiLZgdmKICVzIixwYXN0OiLZhdmG2LAgJXMiLHM6Itir2YjYp9mGIixtOiLYr9mC2YrZgtipIixtbToiJWQg2K/Zgtin2KbZgiIsaDoi2LPYp9i52KkiLGhoOiIlZCDYs9in2LnYp9iqIixkOiLZitmI2YUiLGRkOiIlZCDYo9mK2KfZhSIsTToi2LTZh9ixIixNTToiJWQg2KPYtNmH2LEiLHk6Itiz2YbYqSIseXk6IiVkINiz2YbZiNin2KoifSxwcmVwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9b2aHZotmj2aTZpdmm2afZqNmp2aBdL2csZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KS5yZXBsYWNlKC/YjC9nLCIsIil9LHBvc3Rmb3JtYXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvXGQvZyxmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0pLnJlcGxhY2UoLywvZywi2IwiKX0sd2Vlazp7ZG93OjYsZG95OjEyfX0pO3JldHVybiBpfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPXQuZGVmaW5lTG9jYWxlKCJhci10biIse21vbnRoczoi2KzYp9mG2YHZil/ZgdmK2YHYsdmKX9mF2KfYsdizX9ij2YHYsdmK2YRf2YXYp9mKX9is2YjYp9mGX9is2YjZitmE2YrYqV/Yo9mI2Kpf2LPYqNiq2YXYqNixX9ij2YPYqtmI2KjYsV/ZhtmI2YHZhdio2LFf2K/Zitiz2YXYqNixIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiLYrNin2YbZgdmKX9mB2YrZgdix2Ypf2YXYp9ix2LNf2KPZgdix2YrZhF/Zhdin2Ypf2KzZiNin2YZf2KzZiNmK2YTZitipX9ij2YjYql/Ys9io2KrZhdio2LFf2KPZg9iq2YjYqNixX9mG2YjZgdmF2KjYsV/Yr9mK2LPZhdio2LEiLnNwbGl0KCJfIiksd2Vla2RheXM6Itin2YTYo9it2K9f2KfZhNil2KvZhtmK2YZf2KfZhNir2YTYp9ir2KfYoV/Yp9mE2KPYsdio2LnYp9ihX9in2YTYrtmF2YrYs1/Yp9mE2KzZhdi52Klf2KfZhNiz2KjYqiIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiLYo9it2K9f2KXYq9mG2YrZhl/Yq9mE2KfYq9in2KFf2KPYsdio2LnYp9ihX9iu2YXZitizX9is2YXYudipX9iz2KjYqiIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoi2K1f2YZf2Ktf2LFf2K5f2Kxf2LMiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQvTU0vWVlZWSIsTEw6IkQgTU1NTSBZWVlZIixMTEw6IkQgTU1NTSBZWVlZIEhIOm1tIixMTExMOiJkZGRkIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvYp9mE2YrZiNmFINi52YTZiSDYp9mE2LPYp9i52KldIExUIg==", "base64"));
  res.write(new Buffer("LG5leHREYXk6IlvYutiv2Kcg2LnZhNmJINin2YTYs9in2LnYqV0gTFQiLG5leHRXZWVrOiJkZGRkIFvYudmE2Ykg2KfZhNiz2KfYudipXSBMVCIsbGFzdERheToiW9ij2YXYsyDYudmE2Ykg2KfZhNiz2KfYudipXSBMVCIsbGFzdFdlZWs6ImRkZGQgW9i52YTZiSDYp9mE2LPYp9i52KldIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiLZgdmKICVzIixwYXN0OiLZhdmG2LAgJXMiLHM6Itir2YjYp9mGIixtOiLYr9mC2YrZgtipIixtbToiJWQg2K/Zgtin2KbZgiIsaDoi2LPYp9i52KkiLGhoOiIlZCDYs9in2LnYp9iqIixkOiLZitmI2YUiLGRkOiIlZCDYo9mK2KfZhSIsTToi2LTZh9ixIixNTToiJWQg2KPYtNmH2LEiLHk6Itiz2YbYqSIseXk6IiVkINiz2YbZiNin2KoifSx3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT17MToiLWluY2kiLDU6Ii1pbmNpIiw4OiItaW5jaSIsNzA6Ii1pbmNpIiw4MDoiLWluY2kiLDI6Ii1uY2kiLDc6Ii1uY2kiLDIwOiItbmNpIiw1MDoiLW5jaSIsMzoiLcO8bmPDvCIsNDoiLcO8bmPDvCIsMTAwOiItw7xuY8O8Iiw2OiItbmPEsSIsOToiLXVuY3UiLDEwOiItdW5jdSIsMzA6Ii11bmN1Iiw2MDoiLcSxbmPEsSIsOTA6Ii3EsW5jxLEifSxuPXQuZGVmaW5lTG9jYWxlKCJheiIse21vbnRoczoieWFudmFyX2ZldnJhbF9tYXJ0X2FwcmVsX21heV9peXVuX2l5dWxfYXZxdXN0X3NlbnR5YWJyX29rdHlhYnJfbm95YWJyX2Rla2FiciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoieWFuX2Zldl9tYXJfYXByX21heV9peW5faXlsX2F2cV9zZW5fb2t0X25veV9kZWsiLnNwbGl0KCJfIiksd2Vla2RheXM6IkJhemFyX0JhemFyIGVydMmZc2lfw4fJmXLFn8mZbmLJmSBheMWfYW3EsV/Dh8mZcsWfyZluYsmZX0PDvG3JmSBheMWfYW3EsV9Dw7xtyZlfxZ7JmW5iyZkiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoiQmF6X0J6RV/Dh0F4X8OHyZlyX0NBeF9Dw7xtX8WeyZluIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJCel9CRV/Dh0Ffw4fJmV9DQV9Dw7xfxZ7JmSIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC5NTS5ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltidWfDvG4gc2FhdF0gTFQiLG5leHREYXk6IltzYWJhaCBzYWF0XSBMVCIsbmV4dFdlZWs6IltnyZlsyZluIGjJmWZ0yZldIGRkZGQgW3NhYXRdIExUIixsYXN0RGF5OiJbZMO8bsmZbl0gTFQiLGxhc3RXZWVrOiJba2XDp8mZbiBoyZlmdMmZXSBkZGRkIFtzYWF0XSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToiJXMgc29ucmEiLHBhc3Q6IiVzIMmZdnbJmWwiLHM6ImJpcm5lw6fJmSBzYW5peXnJmSIsbToiYmlyIGTJmXFpccmZIixtbToiJWQgZMmZcWlxyZkiLGg6ImJpciBzYWF0IixoaDoiJWQgc2FhdCIsZDoiYmlyIGfDvG4iLGRkOiIlZCBnw7xuIixNOiJiaXIgYXkiLE1NOiIlZCBheSIseToiYmlyIGlsIix5eToiJWQgaWwifSxtZXJpZGllbVBhcnNlOi9nZWPJmXxzyZloyZlyfGfDvG5kw7x6fGF4xZ9hbS8saXNQTTpmdW5jdGlvbih0KXtyZXR1cm4vXihnw7xuZMO8enxheMWfYW0pJC8udGVzdCh0KX0sbWVyaWRpZW06ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PDQ/ImdlY8mZIjp0PDEyPyJzyZloyZlyIjp0PDE3PyJnw7xuZMO8eiI6ImF4xZ9hbSJ9LG9yZGluYWxQYXJzZTovXGR7MSwyfS0oxLFuY8SxfGluY2l8bmNpfMO8bmPDvHxuY8SxfHVuY3UpLyxvcmRpbmFsOmZ1bmN0aW9uKHQpe2lmKDA9PT10KXJldHVybiB0KyItxLFuY8SxIjt2YXIgbj10JTEwLGk9dCUxMDAtbixyPXQ+PTEwMD8xMDA6bnVsbDtyZXR1cm4gdCsoZVtuXXx8ZVtpXXx8ZVtyXSl9LHdlZWs6e2RvdzoxLGRveTo3fX0pO3JldHVybiBufSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUodCxlKXt2YXIgbj10LnNwbGl0KCJfIik7cmV0dXJuIGUlMTA9PT0xJiZlJTEwMCE9PTExP25bMF06ZSUxMD49MiYmZSUxMDw9NCYmKGUlMTAwPDEwfHxlJTEwMD49MjApP25bMV06blsyXX1mdW5jdGlvbiBuKHQsbixpKXt2YXIgcj17bW06bj8i0YXQstGW0LvRltC90LBf0YXQstGW0LvRltC90Ytf0YXQstGW0LvRltC9Ijoi0YXQstGW0LvRltC90YNf0YXQstGW0LvRltC90Ytf0YXQstGW0LvRltC9IixoaDpuPyLQs9Cw0LTQt9GW0L3QsF/Qs9Cw0LTQt9GW0L3Ri1/Qs9Cw0LTQt9GW0L0iOiLQs9Cw0LTQt9GW0L3Rg1/Qs9Cw0LTQt9GW0L3Ri1/Qs9Cw0LTQt9GW0L0iLGRkOiLQtNC30LXQvdGMX9C00L3Rll/QtNC30ZHQvSIsTU06ItC80LXRgdGP0YZf0LzQtdGB0Y/RhtGLX9C80LXRgdGP0YbQsNGeIix5eToi0LPQvtC0X9Cz0LDQtNGLX9Cz0LDQtNC+0Z4ifTtyZXR1cm4ibSI9PT1pP24/ItGF0LLRltC70ZbQvdCwIjoi0YXQstGW0LvRltC90YMiOiJoIj09PWk/bj8i0LPQsNC00LfRltC90LAiOiLQs9Cw0LTQt9GW0L3RgyI6dCsiICIrZShyW2ldLCt0KX12YXIgaT10LmRlZmluZUxvY2FsZSgiYmUiLHttb250aHM6e2Zvcm1hdDoi0YHRgtGD0LTQt9C10L3Rj1/Qu9GO0YLQsNCz0LBf0YHQsNC60LDQstGW0LrQsF/QutGA0LDRgdCw0LLRltC60LBf0YLRgNCw0Z7QvdGPX9GH0Y3RgNCy0LXQvdGPX9C70ZbQv9C10L3Rj1/QttC90ZbRntC90Y9f0LLQtdGA0LDRgdC90Y9f0LrQsNGB0YLRgNGL0YfQvdGW0LrQsF/Qu9GW0YHRgtCw0L/QsNC00LBf0YHQvdC10LbQvdGPIi5zcA==", "base64"));
  res.write(new Buffer("bGl0KCJfIiksc3RhbmRhbG9uZToi0YHRgtGD0LTQt9C10L3RjF/Qu9GO0YLRi1/RgdCw0LrQsNCy0ZbQul/QutGA0LDRgdCw0LLRltC6X9GC0YDQsNCy0LXQvdGMX9GH0Y3RgNCy0LXQvdGMX9C70ZbQv9C10L3RjF/QttC90ZbQstC10L3RjF/QstC10YDQsNGB0LXQvdGMX9C60LDRgdGC0YDRi9GH0L3RltC6X9C70ZbRgdGC0LDQv9Cw0LRf0YHQvdC10LbQsNC90YwiLnNwbGl0KCJfIil9LG1vbnRoc1Nob3J0OiLRgdGC0YPQtF/Qu9GO0YJf0YHQsNC6X9C60YDQsNGBX9GC0YDQsNCyX9GH0Y3RgNCyX9C70ZbQv1/QttC90ZbQsl/QstC10YBf0LrQsNGB0YJf0LvRltGB0YJf0YHQvdC10LYiLnNwbGl0KCJfIiksd2Vla2RheXM6e2Zvcm1hdDoi0L3Rj9C00LfQtdC70Y5f0L/QsNC90Y/QtNC30LXQu9Cw0Lpf0LDRntGC0L7RgNCw0Lpf0YHQtdGA0LDQtNGDX9GH0LDRhtCy0LXRgF/Qv9GP0YLQvdGW0YbRg1/RgdGD0LHQvtGC0YMiLnNwbGl0KCJfIiksc3RhbmRhbG9uZToi0L3Rj9C00LfQtdC70Y9f0L/QsNC90Y/QtNC30LXQu9Cw0Lpf0LDRntGC0L7RgNCw0Lpf0YHQtdGA0LDQtNCwX9GH0LDRhtCy0LXRgF/Qv9GP0YLQvdGW0YbQsF/RgdGD0LHQvtGC0LAiLnNwbGl0KCJfIiksaXNGb3JtYXQ6L1xbID9b0JLQsl0gPyg/OtC80ZbQvdGD0LvRg9GOfNC90LDRgdGC0YPQv9C90YPRjik/ID9cXSA/ZGRkZC99LHdlZWtkYXlzU2hvcnQ6ItC90LRf0L/QvV/QsNGCX9GB0YBf0YfRhl/Qv9GCX9GB0LEiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46ItC90LRf0L/QvV/QsNGCX9GB0YBf0YfRhl/Qv9GCX9GB0LEiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQuTU0uWVlZWSIsTEw6IkQgTU1NTSBZWVlZINCzLiIsTExMOiJEIE1NTU0gWVlZWSDQsy4sIEhIOm1tIixMTExMOiJkZGRkLCBEIE1NTU0gWVlZWSDQsy4sIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvQodGR0L3QvdGPINGeXSBMVCIsbmV4dERheToiW9CX0LDRntGC0YDQsCDRnl0gTFQiLGxhc3REYXk6IlvQo9GH0L7RgNCwINGeXSBMVCIsbmV4dFdlZWs6ZnVuY3Rpb24oKXtyZXR1cm4iW9CjXSBkZGRkIFvRnl0gTFQifSxsYXN0V2VlazpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLmRheSgpKXtjYXNlIDA6Y2FzZSAzOmNhc2UgNTpjYXNlIDY6cmV0dXJuIlvQoyDQvNGW0L3Rg9C70YPRjl0gZGRkZCBb0Z5dIExUIjtjYXNlIDE6Y2FzZSAyOmNhc2UgNDpyZXR1cm4iW9CjINC80ZbQvdGD0LvRi10gZGRkZCBb0Z5dIExUIn19LHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6ItC/0YDQsNC3ICVzIixwYXN0OiIlcyDRgtCw0LzRgyIsczoi0L3QtdC60LDQu9GM0LrRliDRgdC10LrRg9C90LQiLG06bixtbTpuLGg6bixoaDpuLGQ6ItC00LfQtdC90YwiLGRkOm4sTToi0LzQtdGB0Y/RhiIsTU06bix5OiLQs9C+0LQiLHl5Om59LG1lcmlkaWVtUGFyc2U6L9C90L7Rh9GLfNGA0LDQvdGW0YbRi3zQtNC90Y980LLQtdGH0LDRgNCwLyxpc1BNOmZ1bmN0aW9uKHQpe3JldHVybi9eKNC00L3Rj3zQstC10YfQsNGA0LApJC8udGVzdCh0KX0sbWVyaWRpZW06ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PDQ/ItC90L7Rh9GLIjp0PDEyPyLRgNCw0L3RltGG0YsiOnQ8MTc/ItC00L3RjyI6ItCy0LXRh9Cw0YDQsCJ9LG9yZGluYWxQYXJzZTovXGR7MSwyfS0o0ZZ80Yt80LPQsCkvLG9yZGluYWw6ZnVuY3Rpb24odCxlKXtzd2l0Y2goZSl7Y2FzZSJNIjpjYXNlImQiOmNhc2UiREREIjpjYXNlInciOmNhc2UiVyI6cmV0dXJuIHQlMTAhPT0yJiZ0JTEwIT09M3x8dCUxMDA9PT0xMnx8dCUxMDA9PT0xMz90KyIt0YsiOnQrIi3RliI7Y2FzZSJEIjpyZXR1cm4gdCsiLdCz0LAiO2RlZmF1bHQ6cmV0dXJuIHR9fSx3ZWVrOntkb3c6MSxkb3k6N319KTtyZXR1cm4gaX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgiYmciLHttb250aHM6ItGP0L3Rg9Cw0YDQuF/RhNC10LLRgNGD0LDRgNC4X9C80LDRgNGCX9Cw0L/RgNC40Ltf0LzQsNC5X9GO0L3QuF/RjtC70Lhf0LDQstCz0YPRgdGCX9GB0LXQv9GC0LXQvNCy0YDQuF/QvtC60YLQvtC80LLRgNC4X9C90L7QtdC80LLRgNC4X9C00LXQutC10LzQstGA0LgiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6ItGP0L3RgF/RhNC10LJf0LzQsNGAX9Cw0L/RgF/QvNCw0Llf0Y7QvdC4X9GO0LvQuF/QsNCy0LNf0YHQtdC/X9C+0LrRgl/QvdC+0LVf0LTQtdC6Ii5zcGxpdCgiXyIpLHdlZWtkYXlzOiLQvdC10LTQtdC70Y9f0L/QvtC90LXQtNC10LvQvdC40Lpf0LLRgtC+0YDQvdC40Lpf0YHRgNGP0LTQsF/Rh9C10YLQstGK0YDRgtGK0Lpf0L/QtdGC0YrQul/RgdGK0LHQvtGC0LAiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoi0L3QtdC0X9C/0L7QvV/QstGC0L5f0YHRgNGPX9GH0LXRgl/Qv9C10YJf0YHRitCxIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiLQvdC0X9C/0L1f0LLRgl/RgdGAX9GH0YJf0L/Rgl/RgdCxIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSDptbSIsTFRTOiJIOm1tOnNzIixMOiJELk1NLllZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBIOm1tIixMTExMOiJkZGRkLCBEIE1NTU0gWVlZWSBIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvQlNC90LXRgSDQsl0gTFQiLG5leHREYXk6IlvQo9GC0YDQtSDQsl0gTFQiLG5leHRXZWVrOiJkZGRkIFvQsl0gTFQiLGxhc3REYXk6IlvQktGH0LXRgNCwINCyXSBMVCIsbGFzdFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOmNhc2UgMzpjYXNlIDY6cmV0dXJuIlvQkiDQuNC30LzQuNC90LDQu9Cw0YLQsF0gZGRkZCBb0LJdIExUIg==", "base64"));
  res.write(new Buffer("O2Nhc2UgMTpjYXNlIDI6Y2FzZSA0OmNhc2UgNTpyZXR1cm4iW9CSINC40LfQvNC40L3QsNC70LjRj10gZGRkZCBb0LJdIExUIn19LHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6ItGB0LvQtdC0ICVzIixwYXN0OiLQv9GA0LXQtNC4ICVzIixzOiLQvdGP0LrQvtC70LrQviDRgdC10LrRg9C90LTQuCIsbToi0LzQuNC90YPRgtCwIixtbToiJWQg0LzQuNC90YPRgtC4IixoOiLRh9Cw0YEiLGhoOiIlZCDRh9Cw0YHQsCIsZDoi0LTQtdC9IixkZDoiJWQg0LTQvdC4IixNOiLQvNC10YHQtdGGIixNTToiJWQg0LzQtdGB0LXRhtCwIix5OiLQs9C+0LTQuNC90LAiLHl5OiIlZCDQs9C+0LTQuNC90LgifSxvcmRpbmFsUGFyc2U6L1xkezEsMn0tKNC10LJ80LXQvXzRgtC4fNCy0Lh80YDQuHzQvNC4KS8sb3JkaW5hbDpmdW5jdGlvbih0KXt2YXIgZT10JTEwLG49dCUxMDA7cmV0dXJuIDA9PT10P3QrIi3QtdCyIjowPT09bj90KyIt0LXQvSI6bj4xMCYmbjwyMD90KyIt0YLQuCI6MT09PWU/dCsiLdCy0LgiOjI9PT1lP3QrIi3RgNC4Ijo3PT09ZXx8OD09PWU/dCsiLdC80LgiOnQrIi3RgtC4In0sd2Vlazp7ZG93OjEsZG95Ojd9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9ezE6IuCnpyIsMjoi4KeoIiwzOiLgp6kiLDQ6IuCnqiIsNToi4KerIiw2OiLgp6wiLDc6IuCnrSIsODoi4KeuIiw5OiLgp68iLDA6IuCnpiJ9LG49eyLgp6ciOiIxIiwi4KeoIjoiMiIsIuCnqSI6IjMiLCLgp6oiOiI0Iiwi4KerIjoiNSIsIuCnrCI6IjYiLCLgp60iOiI3Iiwi4KeuIjoiOCIsIuCnryI6IjkiLCLgp6YiOiIwIn0saT10LmRlZmluZUxvY2FsZSgiYm4iLHttb250aHM6IuCmnOCmvuCmqOCngeCnn+CmvuCmsOCngF/gpqvgp4fgpqzgp4Hgp5/gpr7gprDgp4Bf4Kau4Ka+4Kaw4KeN4KaaX+Cmj+CmquCnjeCmsOCmv+Cmsl/gpq7gp4df4Kac4KeB4KaoX+CmnOCngeCmsuCmvuCmh1/gpoXgppfgpr7gprjgp43gpp9f4Ka44KeH4Kaq4KeN4Kaf4KeH4Kau4KeN4Kas4KawX+CmheCmleCnjeCmn+Cni+CmrOCmsF/gpqjgpq3gp4fgpq7gp43gpqzgprBf4Kah4Ka/4Ka44KeH4Kau4KeN4Kas4KawIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiLgppzgpr7gpqjgp4Ff4Kar4KeH4KasX+CmruCmvuCmsOCnjeCmml/gpo/gpqrgprBf4Kau4KeHX+CmnOCngeCmqF/gppzgp4HgprJf4KaF4KaXX+CmuOCnh+CmquCnjeCmn1/gpoXgppXgp43gpp/gp4tf4Kao4KatX+CmoeCmv+CmuOCnh+CmruCnjSIuc3BsaXQoIl8iKSx3ZWVrZGF5czoi4Kaw4Kas4Ka/4Kas4Ka+4KawX+CmuOCni+CmruCmrOCmvuCmsF/gpq7gppngp43gppfgprLgpqzgpr7gprBf4Kas4KeB4Kan4Kas4Ka+4KawX+CmrOCng+CmueCmuOCnjeCmquCmpOCnjeCmpOCmv+CmrOCmvuCmsF/gprbgp4HgppXgp43gprDgpqzgpr7gprBf4Ka24Kao4Ka/4Kas4Ka+4KawIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IuCmsOCmrOCmv1/gprjgp4vgpq5f4Kau4KaZ4KeN4KaX4KayX+CmrOCngeCmp1/gpqzgp4Pgprngprjgp43gpqrgpqTgp43gpqTgpr9f4Ka24KeB4KaV4KeN4KawX+CmtuCmqOCmvyIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoi4Kaw4KasX+CmuOCmrl/gpq7gppngp43gppdf4Kas4KeBX+CmrOCnjeCmsOCmv+CmuV/gprbgp4Ff4Ka24Kao4Ka/Ii5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiQSBoOm1tIOCmuOCmruCnnyIsTFRTOiJBIGg6bW06c3Mg4Ka44Kau4KefIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVksIEEgaDptbSDgprjgpq7gp58iLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZLCBBIGg6bW0g4Ka44Kau4KefIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvgpobgppxdIExUIixuZXh0RGF5OiJb4KaG4KaX4Ka+4Kau4KeA4KaV4Ka+4KayXSBMVCIsbmV4dFdlZWs6ImRkZGQsIExUIixsYXN0RGF5OiJb4KaX4Kak4KaV4Ka+4KayXSBMVCIsbGFzdFdlZWs6IlvgppfgpqRdIGRkZGQsIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiIlcyDgpqrgprDgp4ciLHBhc3Q6IiVzIOCmhuCml+CnhyIsczoi4KaV4Kef4KeH4KaVIOCmuOCnh+CmleCnh+CmqOCnjeCmoSIsbToi4KaP4KaVIOCmruCmv+CmqOCmv+CmnyIsbW06IiVkIOCmruCmv+CmqOCmv+CmnyIsaDoi4KaP4KaVIOCmmOCmqOCnjeCmn+CmviIsaGg6IiVkIOCmmOCmqOCnjeCmn+CmviIsZDoi4KaP4KaVIOCmpuCmv+CmqCIsZGQ6IiVkIOCmpuCmv+CmqCIsTToi4KaP4KaVIOCmruCmvuCmuCIsTU06IiVkIOCmruCmvuCmuCIseToi4KaP4KaVIOCmrOCmm+CmsCIseXk6IiVkIOCmrOCmm+CmsCJ9LHByZXBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1vgp6fgp6jgp6ngp6rgp6vgp6zgp63gp67gp6/gp6ZdL2csZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KX0scG9zdGZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cZC9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9LG1lcmlkaWVtUGFyc2U6L+CmsOCmvuCmpHzgprjgppXgpr7gprJ84Kam4KeB4Kaq4KeB4KawfOCmrOCmv+CmleCmvuCmsnzgprDgpr7gpqQvLG1lcmlkaWVtSG91cjpmdW5jdGlvbih0LGUpe3JldHVybiAxMj09PXQmJih0PTApLCLgprDgpr7gpqQiPT09ZSYmdD49NHx8IuCmpuCngeCmquCngeCmsCI9PT1lJiZ0PDV8fCLgpqzgpr/gppXgpr7gprIiPT09ZT90KzEyOnR9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDw0PyLgprDgpr7gpqQiOnQ8MTA/IuCmuOCmleCmvuCmsiI6dDwxNz8i4Kam4KeB4Kaq4KeB4KawIjp0PDIwPyLgpqzgpr/gppXgpr7gprIiOiLgprDgpr7gpqQifSx3ZWVrOntkb3c6MCxkb3k6Nn19KTtyZXR1cm4gaX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT17MToi4LyhIiwyOiLgvKIiLDM6IuC8oyIsNDoi4LykIiw1OiLgvKUiLDY6IuC8piIsNzoi4LynIiw4OiLgvKgiLDk6IuC8qSIsMDoi4LygIn0sbj17IuC8oSI6IjEiLCLgvKIiOiIyIiwi4LyjIjoiMyIsIuC8pCI6IjQiLCLgvKUiOiI1Iiwi4LymIjoiNiIsIuC8pyI6IjciLCLgvKgiOiI4Iiwi4LypIjoiOSIsIuC8oCI6IjAifSxpPXQuZGVmaW5lTG9jYWxlKCJibyIse21vbnRoczoi4L2f4L6z4LyL4L2W4LyL4L2R4L2E4LyL4L2U4L28X+C9n+C+s+C8i+C9luC8i+C9guC9ieC9suC9puC8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvYLgvabgvbTgvZjgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2e4L2y4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9o+C+lOC8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvZHgvrLgvbTgvYLgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2R4L204L2T4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9ouC+kuC+seC9keC8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvZHgvYLgvbTgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2F4L204LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9heC9tOC8i+C9guC9heC9suC9guC8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvZbgvYXgvbTgvIvgvYLgvYngvbLgvabgvIvgvZQiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6IuC9n+C+s+C8i+C9luC8i+C9keC9hOC8i+C9lOC9vF/gvZ/gvrPgvIvgvZbgvIvgvYLgvYngvbLgvabgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2C4L2m4L204L2Y4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9nuC9suC8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvaPgvpTgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2R4L6y4L204L2C4LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9keC9tOC9k+C8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvZbgvaLgvpLgvrHgvZHgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2R4L2C4L204LyL4L2UX+C9n+C+s+C8i+C9luC8i+C9luC9heC9tOC8i+C9lF/gvZ/gvrPgvIvgvZbgvIvgvZbgvYXgvbTgvIvgvYLgvYXgvbLgvYLgvIvgvZRf4L2f4L6z4LyL4L2W4LyL4L2W4L2F4L204LyL4L2C4L2J4L2y4L2m4LyL4L2UIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLgvYLgvZ/gvaDgvIvgvYngvbLgvIvgvZjgvItf4L2C4L2f4L2g4LyL4L2f4L6z4LyL4L2W4LyLX+C9guC9n+C9oOC8i+C9mOC9suC9guC8i+C9keC9mOC9ouC8i1/gvYLgvZ/gvaDgvIvgvaPgvrfgvYLgvIvgvZTgvItf4L2C4L2f4L2g4LyL4L2V4L204L2i4LyL4L2W4L20X+C9guC9n+C9oOC8i+C9lOC8i+C9puC9hOC9puC8i1/gvYLgvZ/gvaDgvIvgvabgvqTgvbrgvZPgvIvgvZTgvIsiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoi4L2J4L2y4LyL4L2Y4LyLX+C9n+C+s+C8i+C9luC8i1/gvZjgvbLgvYLgvIvgvZHgvZjgvaLgvItf4L2j4L634L2C4LyL4L2U4LyLX+C9leC9tOC9ouC8i+C9luC9tF/gvZTgvIvgvabgvYTgvabgvItf4L2m4L6k4L264L2T4LyL4L2U4LyLIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiLgvYngvbLgvIvgvZjgvItf4L2f4L6z4LyL4L2W4LyLX+C9mOC9suC9guC8i+C9keC9mOC9ouC8i1/gvaPgvrfgvYLgvIvgvZTgvItf4L2V4L204L2i4LyL4L2W4L20X+C9lOC8i+C9puC9hOC9puC8i1/gvabgvqTgvbrgvZPgvIvgvZTgvIsiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJBIGg6bW0iLExUUzoiQSBoOm1tOnNzIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVksIEEgaDptbSIsTExMTDoiZGRkZCwgRCBNTU1NIFlZWVksIEEgaDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJb4L2R4L2y4LyL4L2i4L2y4L2EXSBMVCIsbmV4dERheToiW+C9puC9hOC8i+C9ieC9suC9k10gTFQiLG5leHRXZWVrOiJb4L2W4L2R4L204L2T4LyL4L2V4L6y4L2C4LyL4L2i4L6X4L264L2m4LyL4L2YXSwgTFQiLGxhc3REYXk6IlvgvYHgvIvgvabgvYRdIExUIixsYXN0V2VlazoiW+C9luC9keC9tOC9k+C8i+C9leC+suC9guC8i+C9mOC9kOC9oOC8i+C9mF0gZGRkZCwgTFQiLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6IiVzIOC9o+C8iyIscGFzdDoiJXMg4L2m4L6U4L2T4LyL4L2jIixzOiLgvaPgvZjgvIvgvabgvYQiLG06IuC9puC+kOC9ouC8i+C9mOC8i+C9guC9heC9suC9giIsbW06IiVkIOC9puC+kOC9ouC8i+C9mCIsaDoi4L2G4L204LyL4L2a4L284L2R4LyL4L2C4L2F4L2y4L2CIixoaDoiJWQg4L2G4L204LyL4L2a4L284L2RIixkOiLgvYngvbLgvZPgvIvgvYLgvYXgvbLgvYIiLGRkOiIlZCDgvYngvbLgvZPgvIsiLE06IuC9n+C+s+C8i+C9luC8i+C9guC9heC9suC9giIsTU06IiVkIOC9n+C+s+C8i+C9liIseToi4L2j4L284LyL4L2C4L2F4L2y4L2CIix5eToiJWQg4L2j4L28In0scHJlcGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVwbGFjZSgvW+C8oeC8ouC8o+C8pOC8peC8puC8p+C8qOC8qeC8oF0vZyxmdW5jdGlvbih0KXtyZXR1cm4gblt0XX0pfSxwb3N0Zm9ybWF0OmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1xkL2csZnVuY3Rpb24odCl7cmV0dXJuIGVbdF19KX0sbWVyaWRpZW1QYXJzZTov4L2Y4L2a4L2T4LyL4L2Y4L28fOC9nuC9vOC9guC9puC8i+C9gOC9pnzgvYngvbLgvZPgvIvgvYLgvbTgvYR84L2R4L2C4L284L2E4LyL4L2R4L2CfOC9mOC9muC9k+C8i+C9mOC9vC8sbWVyaWRpZW1Ib3VyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIDEyPT09dCYmKHQ9MCksIuC9mOC9muC9k+C8i+C9mOC9vCI9PT1lJiZ0Pj00fHwi4L2J4L2y4L2T4LyL4L2C4L204L2EIj09PWUmJnQ8NXw=", "base64"));
  res.write(new Buffer("fCLgvZHgvYLgvbzgvYTgvIvgvZHgvYIiPT09ZT90KzEyOnR9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDw0PyLgvZjgvZrgvZPgvIvgvZjgvbwiOnQ8MTA/IuC9nuC9vOC9guC9puC8i+C9gOC9piI6dDwxNz8i4L2J4L2y4L2T4LyL4L2C4L204L2EIjp0PDIwPyLgvZHgvYLgvbzgvYTgvIvgvZHgvYIiOiLgvZjgvZrgvZPgvIvgvZjgvbwifSx3ZWVrOntkb3c6MCxkb3k6Nn19KTtyZXR1cm4gaX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKHQsZSxuKXt2YXIgaT17bW06Im11bnV0ZW5uIixNTToibWl6IixkZDoiZGV2ZXpoIn07cmV0dXJuIHQrIiAiK3IoaVtuXSx0KX1mdW5jdGlvbiBuKHQpe3N3aXRjaChpKHQpKXtjYXNlIDE6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6Y2FzZSA5OnJldHVybiB0KyIgYmxvYXoiO2RlZmF1bHQ6cmV0dXJuIHQrIiB2bG9heiJ9fWZ1bmN0aW9uIGkodCl7cmV0dXJuIHQ+OT9pKHQlMTApOnR9ZnVuY3Rpb24gcih0LGUpe3JldHVybiAyPT09ZT9vKHQpOnR9ZnVuY3Rpb24gbyh0KXt2YXIgZT17bToidiIsYjoidiIsZDoieiJ9O3JldHVybiB2b2lkIDA9PT1lW3QuY2hhckF0KDApXT90OmVbdC5jaGFyQXQoMCldK3Quc3Vic3RyaW5nKDEpfXZhciBzPXQuZGVmaW5lTG9jYWxlKCJiciIse21vbnRoczoiR2VudmVyX0MnaHdldnJlcl9NZXVyemhfRWJyZWxfTWFlX01lemhldmVuX0dvdWVyZV9Fb3N0X0d3ZW5nb2xvX0hlcmVfRHVfS2VyenUiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6Ikdlbl9DJ2h3ZV9NZXVfRWJyX01hZV9FdmVfR291X0Vvc19Hd2VfSGVyX0R1X0tlciIuc3BsaXQoIl8iKSx3ZWVrZGF5czoiU3VsX0x1bl9NZXVyemhfTWVyYydoZXJfWWFvdV9Hd2VuZXJfU2Fkb3JuIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IlN1bF9MdW5fTWV1X01lcl9ZYW9fR3dlX1NhZCIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoiU3VfTHVfTWVfTWVyX1lhX0d3X1NhIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiaFtlXW1tIEEiLExUUzoiaFtlXW1tOnNzIEEiLEw6IkREL01NL1lZWVkiLExMOiJEIFthIHZpel0gTU1NTSBZWVlZIixMTEw6IkQgW2Egdml6XSBNTU1NIFlZWVkgaFtlXW1tIEEiLExMTEw6ImRkZGQsIEQgW2Egdml6XSBNTU1NIFlZWVkgaFtlXW1tIEEifSxjYWxlbmRhcjp7c2FtZURheToiW0hpeml2IGRhXSBMVCIsbmV4dERheToiW1dhcmMnaG9hemggZGFdIExUIixuZXh0V2VlazoiZGRkZCBbZGFdIExUIixsYXN0RGF5OiJbRGVjJ2ggZGFdIExUIixsYXN0V2VlazoiZGRkZCBbcGFzZXQgZGFdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJhLWJlbm4gJXMiLHBhc3Q6IiVzICd6byIsczoidW4gbmViZXVkIHNlZ29uZGVubm/DuSIsbToidXIgdnVudXRlbm4=", "base64"));
  res.write(new Buffer("IixtbTplLGg6InVuIGV1ciIsaGg6IiVkIGV1ciIsZDoidW4gZGV2ZXpoIixkZDplLE06InVyIG1peiIsTU06ZSx5OiJ1ciBibG9heiIseXk6bn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9KGHDsXx2ZXQpLyxvcmRpbmFsOmZ1bmN0aW9uKHQpe3ZhciBlPTE9PT10PyJhw7EiOiJ2ZXQiO3JldHVybiB0K2V9LHdlZWs6e2RvdzoxLGRveTo0fX0pO3JldHVybiBzfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGUodCxlLG4pe3ZhciBpPXQrIiAiO3N3aXRjaChuKXtjYXNlIm0iOnJldHVybiBlPyJqZWRuYSBtaW51dGEiOiJqZWRuZSBtaW51dGUiO2Nhc2UibW0iOnJldHVybiBpKz0xPT09dD8ibWludXRhIjoyPT09dHx8Mz09PXR8fDQ9PT10PyJtaW51dGUiOiJtaW51dGEiO2Nhc2UiaCI6cmV0dXJuIGU/ImplZGFuIHNhdCI6ImplZG5vZyBzYXRhIjtjYXNlImhoIjpyZXR1cm4gaSs9MT09PXQ/InNhdCI6Mj09PXR8fDM9PT10fHw0PT09dD8ic2F0YSI6InNhdGkiO2Nhc2UiZGQiOnJldHVybiBpKz0xPT09dD8iZGFuIjoiZGFuYSI7Y2FzZSJNTSI6cmV0dXJuIGkrPTE9PT10PyJtamVzZWMiOjI9PT10fHwzPT09dHx8ND09PXQ/Im1qZXNlY2EiOiJtamVzZWNpIjtjYXNlInl5IjpyZXR1cm4gaSs9MT09PXQ/ImdvZGluYSI6Mj09PXR8fDM9PT10fHw0PT09dD8iZ29kaW5lIjoiZ29kaW5hIn19dmFyIG49dC5kZWZpbmVMb2NhbGUoImJzIix7bW9udGhzOiJqYW51YXJfZmVicnVhcl9tYXJ0X2FwcmlsX21hal9qdW5pX2p1bGlfYXVndXN0X3NlcHRlbWJhcl9va3RvYmFyX25vdmVtYmFyX2RlY2VtYmFyIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiJqYW4uX2ZlYi5fbWFyLl9hcHIuX21hai5fanVuLl9qdWwuX2F1Zy5fc2VwLl9va3QuX25vdi5fZGVjLiIuc3BsaXQoIl8iKSx3ZWVrZGF5czoibmVkamVsamFfcG9uZWRqZWxqYWtfdXRvcmFrX3NyaWplZGFfxI1ldHZydGFrX3BldGFrX3N1Ym90YSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJuZWQuX3Bvbi5fdXRvLl9zcmkuX8SNZXQuX3BldC5fc3ViLiIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoibmVfcG9fdXRfc3JfxI1lX3BlX3N1Ii5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSDptbSIsTFRTOiJIOm1tOnNzIixMOiJERC4gTU0uIFlZWVkiLExMOiJELiBNTU1NIFlZWVkiLExMTDoiRC4gTU1NTSBZWVlZIEg6bW0iLExMTEw6ImRkZGQsIEQuIE1NTU0gWVlZWSBIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltkYW5hcyB1XSBMVCIsbmV4dERheToiW3N1dHJhIHVdIExUIixuZXh0V2VlazpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLmRheSgpKXtjYXNlIDA6cmV0dXJuIlt1XSBbbmVkamVsanVdIFt1XSBMVCI7Y2FzZSAzOnJldHVybiJbdV0gW3NyaWplZHVdIFt1XSBMVCI7Y2FzZSA2OnJldHVybiI=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("bWJlcl9kZXNlbWJlciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiamFuX2ZlYl9tYXJfYXByX21haV9qdW5fanVsX2F1Z19zZXBfb2t0X25vdl9kZXMiLnNwbGl0KCJfIiksd2Vla2RheXM6InN1bm51ZGFndXJfbcOhbmFkYWd1cl90w71zZGFndXJfbWlrdWRhZ3VyX2jDs3NkYWd1cl9mcsOtZ2dqYWRhZ3VyX2xleWdhcmRhZ3VyIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6InN1bl9tw6FuX3TDvXNfbWlrX2jDs3NfZnLDrV9sZXkiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46InN1X23DoV90w71fbWlfaMOzX2ZyX2xlIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiSEg6bW0iLExUUzoiSEg6bW06c3MiLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSBISDptbSIsTExMTDoiZGRkZCBELiBNTU1NLCBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvDjSBkYWcga2wuXSBMVCIsbmV4dERheToiW8ONIG1vcmdpbiBrbC5dIExUIixuZXh0V2VlazoiZGRkZCBba2wuXSBMVCIsbGFzdERheToiW8ONIGdqw6FyIGtsLl0gTFQiLGxhc3RXZWVrOiJbc8Otw7BzdHVdIGRkZGQgW2tsXSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToidW0gJXMiLHBhc3Q6IiVzIHPDrcOwYW5pIixzOiJmw6Egc2VrdW5kIixtOiJlaW4gbWludXR0IixtbToiJWQgbWludXR0aXIiLGg6ImVpbiB0w61taSIsaGg6IiVkIHTDrW1hciIsZDoiZWluIGRhZ3VyIixkZDoiJWQgZGFnYXIiLE06ImVpbiBtw6FuYcOwaSIsTU06IiVkIG3DoW5hw7BpciIseToiZWl0dCDDoXIiLHl5OiIlZCDDoXIifSxvcmRpbmFsUGFyc2U6L1xkezEsMn1cLi8sb3JkaW5hbDoiJWQuIix3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgiZnIiLHttb250aHM6ImphbnZpZXJfZsOpdnJpZXJfbWFyc19hdnJpbF9tYWlfanVpbl9qdWlsbGV0X2Fvw7t0X3NlcHRlbWJyZV9vY3RvYnJlX25vdmVtYnJlX2TDqWNlbWJyZSIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiamFudi5fZsOpdnIuX21hcnNfYXZyLl9tYWlfanVpbl9qdWlsLl9hb8O7dF9zZXB0Ll9vY3QuX25vdi5fZMOpYy4iLnNwbGl0KCJfIiksd2Vla2RheXM6ImRpbWFuY2hlX2x1bmRpX21hcmRpX21lcmNyZWRpX2pldWRpX3ZlbmRyZWRpX3NhbWVkaSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJkaW0uX2x1bi5fbWFyLl9tZXIuX2pldS5fdmVuLl9zYW0uIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJEaV9MdV9NYV9NZV9KZV9WZV9TYSIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQgRCBNTU1NIFlZWVkgSEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW0F1am91cmQnaHVpIMOgXSBMVCIsbmV4dERheToiW0RlbWFpbiDDoF0gTFQiLG5leHRXZWVrOiJkZGRkIFvDoF0gTFQiLGxhc3REYXk6IltIaWVyIMOgXSBMVCIsbGFzdFdlZWs6ImRkZGQgW2Rlcm5pZXIgw6BdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJkYW5zICVzIixwYXN0OiJpbCB5IGEgJXMiLHM6InF1ZWxxdWVzIHNlY29uZGVzIixtOiJ1bmUgbWludXRlIixtbToiJWQgbWludXRlcyIsaDoidW5lIGhldXJlIixoaDoiJWQgaGV1cmVzIixkOiJ1biBqb3VyIixkZDoiJWQgam91cnMiLE06InVuIG1vaXMiLE1NOiIlZCBtb2lzIix5OiJ1biBhbiIseXk6IiVkIGFucyJ9LG9yZGluYWxQYXJzZTovXGR7MSwyfShlcnwpLyxvcmRpbmFsOmZ1bmN0aW9uKHQpe3JldHVybiB0KygxPT09dD8iZXIiOiIiKX0sd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoImZyLWNhIix7bW9udGhzOiJqYW52aWVyX2bDqXZyaWVyX21hcnNfYXZyaWxfbWFpX2p1aW5fanVpbGxldF9hb8O7dF9zZXB0ZW1icmVfb2N0b2JyZV9ub3ZlbWJyZV9kw6ljZW1icmUiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6ImphbnYuX2bDqXZyLl9tYXJzX2F2ci5fbWFpX2p1aW5fanVpbC5fYW/Du3Rfc2VwdC5fb2N0Ll9ub3YuX2TDqWMuIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJkaW1hbmNoZV9sdW5kaV9tYXJkaV9tZXJjcmVkaV9qZXVkaV92ZW5kcmVkaV9zYW1lZGkiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoiZGltLl9sdW4uX21hci5fbWVyLl9qZXUuX3Zlbi5fc2FtLiIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoiRGlfTHVfTWFfTWVfSmVfVmVfU2EiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiWVlZWS1NTS1ERCIsTEw6IkQgTU1NTSBZWVlZIixMTEw6IkQgTU1NTSBZWVlZIEhIOm1tIixMTExMOiJkZGRkIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltBdWpvdXJkJ2h1aSDDoF0gTFQiLG5leHREYXk6IltEZW1haW4gw6BdIExUIixuZXh0V2VlazoiZGRkZCBbw6BdIExUIixsYXN0RGF5OiJbSGllciDDoF0gTFQiLGxhc3RXZWVrOiJkZGRkIFtkZXJuaWVyIMOgXSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToiZGFucyAlcyIscGFzdDoiaWwgeSBhICVzIixzOiJxdWVscXVlcyBzZWNvbmRlcyIsbToidW5lIG1pbnV0ZSIsbW06IiVkIG1pbnV0ZXMiLGg6InVuZSBoZXVyZSIsaGg6IiVkIGhldXJlcyIsZDoidW4gam91ciIsZGQ6IiVkIGpvdXJzIixNOg==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("PXQ/Itep16LXqteZ15nXnSI6dCsiINep16LXldeqIn0sZDoi15nXldedIixkZDpmdW5jdGlvbih0KXtyZXR1cm4gMj09PXQ/IteZ15XXnteZ15nXnSI6dCsiINeZ157XmdedIn0sTToi15fXldeT16kiLE1NOmZ1bmN0aW9uKHQpe3JldHVybiAyPT09dD8i15fXldeT16nXmdeZ150iOnQrIiDXl9eV15PXqdeZ150ifSx5OiLXqdeg15QiLHl5OmZ1bmN0aW9uKHQpe3JldHVybiAyPT09dD8i16nXoNeq15nXmdedIjp0JTEwPT09MCYmMTAhPT10P3QrIiDXqdeg15QiOnQrIiDXqdeg15nXnSJ9fSxtZXJpZGllbVBhcnNlOi/XkNeX15Qi16Z815zXpNeg15Qi16Z815DXl9eo15kg15TXpteU16jXmdeZ151815zXpNeg15kg15TXpteU16jXmdeZ151815zXpNeg15XXqiDXkdeV16fXqHzXkdeR15XXp9eofNeR16LXqNeRL2ksaXNQTTpmdW5jdGlvbih0KXtyZXR1cm4vXijXkNeX15Qi16Z815DXl9eo15kg15TXpteU16jXmdeZ151815HXoteo15EpJC8udGVzdCh0KX0sbWVyaWRpZW06ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0PDU/Itec16TXoNeV16og15HXlden16giOnQ8MTA/IteR15HXlden16giOnQ8MTI/bj8n15zXpNeg15Qi16YnOiLXnNek16DXmSDXlNem15TXqNeZ15nXnSI6dDwxOD9uPyfXkNeX15Qi16YnOiLXkNeX16jXmSDXlNem15TXqNeZ15nXnSI6IteR16LXqNeRIn19KTtyZXR1cm4gZX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT17MToi4KWnIiwyOiLgpagiLDM6IuClqSIsNDoi4KWqIiw1OiLgpasiLDY6IuClrCIsNzoi4KWtIiw4OiLgpa4iLDk6IuClryIsMDoi4KWmIn0sbj17IuClpyI6IjEiLCLgpagiOiIyIiwi4KWpIjoiMyIsIuClqiI6IjQiLCLgpasiOiI1Iiwi4KWsIjoiNiIsIuClrSI6IjciLCLgpa4iOiI4Iiwi4KWvIjoiOSIsIuClpiI6IjAifSxpPXQuZGVmaW5lTG9jYWxlKCJoaSIse21vbnRoczoi4KSc4KSo4KS14KSw4KWAX+Ckq+CkvOCksOCkteCksOClgF/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KWI4KSyX+CkruCkiF/gpJzgpYLgpKhf4KSc4KWB4KSy4KS+4KSIX+CkheCkl+CkuOCljeCkpF/gpLjgpL/gpKTgpK7gpY3gpKzgpLBf4KSF4KSV4KWN4KSf4KWC4KSs4KSwX+CkqOCkteCkruCljeCkrOCksF/gpKbgpL/gpLjgpK7gpY3gpKzgpLAiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6IuCknOCkqC5f4KSr4KS84KSwLl/gpK7gpL7gpLDgpY3gpJpf4KSF4KSq4KWN4KSw4KWILl/gpK7gpIhf4KSc4KWC4KSoX+CknOClgeCksi5f4KSF4KSXLl/gpLjgpL/gpKQuX+CkheCkleCljeCkn+Clgi5f4KSo4KS1Ll/gpKbgpL/gpLguIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiLgpLDgpLXgpL/gpLXgpL7gpLBf4KS44KWL4KSu4KS14KS+4KSwX+CkruCkguCkl+CksuCkteCkvuCksF/gpKzgpYHgpKfgpLXgpL7gpLBf4KSX4KWB4KSw4KWC4KS14KS+4KSwX+CktuClgeCkleCljeCksOCkteCkvuCksF/gpLbgpKjgpL/gpLXgpL7gpLAiLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoi4KSw4KS14KS/X+CkuOCli+Ckrl/gpK7gpILgpJfgpLJf4KSs4KWB4KSnX+Ckl+ClgeCksOClgl/gpLbgpYHgpJXgpY3gpLBf4KS24KSo4KS/Ii5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiLgpLBf4KS44KWLX+CkruCkgl/gpKzgpYFf4KSX4KWBX+CktuClgV/gpLYiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJBIGg6bW0g4KSs4KSc4KWHIixMVFM6IkEgaDptbTpzcyDgpKzgpJzgpYciLEw6IkREL01NL1lZWVkiLExMOiJEIE1NTU0gWVlZWSIsTExMOiJEIE1NTU0gWVlZWSwgQSBoOm1tIOCkrOCknOClhyIsTExMTDoiZGRkZCwgRCBNTU1NIFlZWVksIEEgaDptbSDgpKzgpJzgpYcifSxjYWxlbmRhcjp7c2FtZURheToiW+CkhuCknF0gTFQiLG5leHREYXk6IlvgpJXgpLJdIExUIixuZXh0V2VlazoiZGRkZCwgTFQiLGxhc3REYXk6IlvgpJXgpLJdIExUIixsYXN0V2VlazoiW+CkquCkv+Ckm+CksuClh10gZGRkZCwgTFQiLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6IiVzIOCkruClh+CkgiIscGFzdDoiJXMg4KSq4KS54KSy4KWHIixzOiLgpJXgpYHgpJsg4KS54KWAIOCkleCljeCkt+CkoyIsbToi4KSP4KSVIOCkruCkv+CkqOCknyIsbW06IiVkIOCkruCkv+CkqOCknyIsaDoi4KSP4KSVIOCkmOCkguCkn+CkviIsaGg6IiVkIOCkmOCkguCkn+ClhyIsZDoi4KSP4KSVIOCkpuCkv+CkqCIsZGQ6IiVkIOCkpuCkv+CkqCIsTToi4KSP4KSVIOCkruCkueClgOCkqOClhyIsTU06IiVkIOCkruCkueClgOCkqOClhyIseToi4KSP4KSVIOCkteCksOCljeCktyIseXk6IiVkIOCkteCksOCljeCktyJ9LHByZXBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1vgpafgpajgpangpargpavgpazgpa3gpa7gpa/gpaZdL2csZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KX0scG9zdGZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cZC9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9LG1lcmlkaWVtUGFyc2U6L+CksOCkvuCkpHzgpLjgpYHgpKzgpLl84KSm4KWL4KSq4KS54KSwfOCktuCkvuCkri8sbWVyaWRpZW1Ib3VyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIDEyPT09dCYmKHQ9MCksIuCksOCkvuCkpCI9PT1lP3Q8ND90OnQrMTI6IuCkuOClgeCkrOCkuSI9PT1lP3Q6IuCkpuCli+CkquCkueCksCI9PT1lP3Q+PTEwP3Q6dCsxMjoi4KS24KS+4KSuIj09PWU/dCsxMjp2b2lkIDB9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDw0PyLgpLDgpL7gpKQiOnQ8MTA/IuCkuOClgeCkrOCkuSI6dDwxNz8i4KSm4KWL4KSq4KS54KSwIjp0PDIwPyLgpLbgpL7gpK4iOiLgpLDgpL7gpKQifSx3ZWVrOntkb3c6MCxkb3k6Nn19KTtyZXR1cm4gaX0pfSxmdW5jdA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YWs7Y2FzZSJkZCI6cj0iJWQg4KSm4KS/4KS14KS44KS+4KSCIjticmVhaztjYXNlIk0iOnI9IuCkj+CkleCkviDgpK7gpLngpL/gpKjgpY3gpK/gpL4iO2JyZWFrO2Nhc2UiTU0iOnI9IiVkIOCkruCkueCkv+CkqOCljeCkr+CkvuCkgiI7YnJlYWs7Y2FzZSJ5IjpyPSLgpI/gpJXgpL4g4KS14KSw4KWN4KS34KS+IjticmVhaztjYXNlInl5IjpyPSIlZCDgpLXgpLDgpY3gpLfgpL7gpIIifXJldHVybiByLnJlcGxhY2UoLyVkL2ksdCl9dmFyIG49ezE6IuClpyIsMjoi4KWoIiwzOiLgpakiLDQ6IuClqiIsNToi4KWrIiw2OiLgpawiLDc6IuClrSIsODoi4KWuIiw5OiLgpa8iLDA6IuClpiJ9LGk9eyLgpaciOiIxIiwi4KWoIjoiMiIsIuClqSI6IjMiLCLgpaoiOiI0Iiwi4KWrIjoiNSIsIuClrCI6IjYiLCLgpa0iOiI3Iiwi4KWuIjoiOCIsIuClryI6IjkiLCLgpaYiOiIwIn0scj10LmRlZmluZUxvY2FsZSgibXIiLHttb250aHM6IuCknOCkvuCkqOClh+CkteCkvuCksOClgF/gpKvgpYfgpKzgpY3gpLDgpYHgpLXgpL7gpLDgpYBf4KSu4KS+4KSw4KWN4KSaX+Ckj+CkquCljeCksOCkv+Cksl/gpK7gpYdf4KSc4KWC4KSoX+CknOClgeCksuCliF/gpJHgpJfgpLjgpY3gpJ9f4KS44KSq4KWN4KSf4KWH4KSC4KSs4KSwX+CkkeCkleCljeCkn+Cli+CkrOCksF/gpKjgpYvgpLXgpY3gpLngpYfgpILgpKzgpLBf4KSh4KS/4KS44KWH4KSC4KSs4KSwIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiLgpJzgpL7gpKjgpYcuX+Ckq+Clh+CkrOCljeCksOClgS5f4KSu4KS+4KSw4KWN4KSaLl/gpI/gpKrgpY3gpLDgpL8uX+CkruClhy5f4KSc4KWC4KSoLl/gpJzgpYHgpLLgpYguX+CkkeCkly5f4KS44KSq4KWN4KSf4KWH4KSCLl/gpJHgpJXgpY3gpJ/gpYsuX+CkqOCli+CkteCljeCkueClh+Ckgi5f4KSh4KS/4KS44KWH4KSCLiIuc3BsaXQoIl8iKSx3ZWVrZGF5czoi4KSw4KS14KS/4KS14KS+4KSwX+CkuOCli+CkruCkteCkvuCksF/gpK7gpILgpJfgpLPgpLXgpL7gpLBf4KSs4KWB4KSn4KS14KS+4KSwX+Ckl+ClgeCksOClguCkteCkvuCksF/gpLbgpYHgpJXgpY3gpLDgpLXgpL7gpLBf4KS24KSo4KS/4KS14KS+4KSwIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IuCksOCkteCkv1/gpLjgpYvgpK5f4KSu4KSC4KSX4KSzX+CkrOClgeCkp1/gpJfgpYHgpLDgpYJf4KS24KWB4KSV4KWN4KSwX+CktuCkqOCkvyIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoi4KSwX+CkuOCli1/gpK7gpIJf4KSs4KWBX+Ckl+ClgV/gpLbgpYFf4KS2Ii5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiQSBoOm1tIOCkteCkvuCknOCkpOCkviIsTFRTOiJBIGg6bW06c3Mg4KS14KS+4KSc4KSk4KS+IixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVksIEEgaDptbSDgpLXgpL7gpJzgpKTgpL4iLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZLCBBIGg=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZCDgpJjgpKPgpY3gpJ/gpL4iLGQ6IuCkj+CklSDgpKbgpL/gpKgiLGRkOiIlZCDgpKbgpL/gpKgiLE06IuCkj+CklSDgpK7gpLngpL/gpKjgpL4iLE1NOiIlZCDgpK7gpLngpL/gpKjgpL4iLHk6IuCkj+CklSDgpKzgpLDgpY3gpLciLHl5OiIlZCDgpKzgpLDgpY3gpLcifSx3ZWVrOntkb3c6MCxkb3k6Nn19KTtyZXR1cm4gaX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT0iamFuLl9mZWIuX21ydC5fYXByLl9tZWlfanVuLl9qdWwuX2F1Zy5fc2VwLl9va3QuX25vdi5fZGVjLiIuc3BsaXQoIl8iKSxuPSJqYW5fZmViX21ydF9hcHJfbWVpX2p1bl9qdWxfYXVnX3NlcF9va3Rfbm92X2RlYyIuc3BsaXQoIl8iKSxpPXQuZGVmaW5lTG9jYWxlKCJubCIse21vbnRoczoiamFudWFyaV9mZWJydWFyaV9tYWFydF9hcHJpbF9tZWlfanVuaV9qdWxpX2F1Z3VzdHVzX3NlcHRlbWJlcl9va3RvYmVyX25vdmVtYmVyX2RlY2VtYmVyIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OmZ1bmN0aW9uKHQsaSl7cmV0dXJuLy1NTU0tLy50ZXN0KGkpP25bdC5tb250aCgpXTplW3QubW9udGgoKV19LHdlZWtkYXlzOiJ6b25kYWdfbWFhbmRhZ19kaW5zZGFnX3dvZW5zZGFnX2RvbmRlcmRhZ192cmlqZGFnX3phdGVyZGFnIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6InpvLl9tYS5fZGkuX3dvLl9kby5fdnIuX3phLiIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoiWm9fTWFfRGlfV29fRG9fVnJfWmEiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQtTU0tWVlZWSIsTEw6IkQgTU1NTSBZWVlZIixMTEw6IkQgTU1NTSBZWVlZIEhIOm1tIixMTExMOiJkZGRkIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6Ilt2YW5kYWFnIG9tXSBMVCIsbmV4dERheToiW21vcmdlbiBvbV0gTFQiLG5leHRXZWVrOiJkZGRkIFtvbV0gTFQiLGxhc3REYXk6IltnaXN0ZXJlbiBvbV0gTFQiLGxhc3RXZWVrOiJbYWZnZWxvcGVuXSBkZGRkIFtvbV0gTFQiLHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6Im92ZXIgJXMiLHBhc3Q6IiVzIGdlbGVkZW4iLHM6ImVlbiBwYWFyIHNlY29uZGVuIixtOiLDqcOpbiBtaW51dXQiLG1tOiIlZCBtaW51dGVuIixoOiLDqcOpbiB1dXIiLGhoOiIlZCB1dXIiLGQ6IsOpw6luIGRhZyIsZGQ6IiVkIGRhZ2VuIixNOiLDqcOpbiBtYWFuZCIsTU06IiVkIG1hYW5kZW4iLHk6IsOpw6luIGphYXIiLHl5OiIlZCBqYWFyIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9KHN0ZXxkZSkvLG9yZGluYWw6ZnVuY3Rpb24odCl7cmV0dXJuIHQrKDE9PT10fHw4PT09dHx8dD49MjA/InN0ZSI6ImRlIil9LHdlZWs6e2RvdzoxLGRveTo0fX0pO3JldHVybiBpfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Q=", "base64"));
  res.write(new Buffer("aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgibm4iLHttb250aHM6ImphbnVhcl9mZWJydWFyX21hcnNfYXByaWxfbWFpX2p1bmlfanVsaV9hdWd1c3Rfc2VwdGVtYmVyX29rdG9iZXJfbm92ZW1iZXJfZGVzZW1iZXIiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6Imphbl9mZWJfbWFyX2Fwcl9tYWlfanVuX2p1bF9hdWdfc2VwX29rdF9ub3ZfZGVzIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJzdW5kYWdfbcOlbmRhZ190eXNkYWdfb25zZGFnX3RvcnNkYWdfZnJlZGFnX2xhdXJkYWciLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoic3VuX23DpW5fdHlzX29uc190b3JfZnJlX2xhdSIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoic3VfbcOlX3R5X29uX3RvX2ZyX2zDuCIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC5NTS5ZWVlZIixMTDoiRC4gTU1NTSBZWVlZIixMTEw6IkQuIE1NTU0gWVlZWSBba2wuXSBIOm1tIixMTExMOiJkZGRkIEQuIE1NTU0gWVlZWSBba2wuXSBISDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbSSBkYWcga2xva2thXSBMVCIsbmV4dERheToiW0kgbW9yZ29uIGtsb2trYV0gTFQiLG5leHRXZWVrOiJkZGRkIFtrbG9ra2FdIExUIixsYXN0RGF5OiJbSSBnw6VyIGtsb2trYV0gTFQiLGxhc3RXZWVrOiJbRsO4cmVnw6VhbmRlXSBkZGRkIFtrbG9ra2FdIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJvbSAlcyIscGFzdDoiZm9yICVzIHNpZGFuIixzOiJub2tyZSBzZWt1bmQiLG06ImVpdCBtaW51dHQiLG1tOiIlZCBtaW51dHQiLGg6ImVpbiB0aW1lIixoaDoiJWQgdGltYXIiLGQ6ImVpbiBkYWciLGRkOiIlZCBkYWdhciIsTToiZWluIG3DpW5hZCIsTU06IiVkIG3DpW5hZGVyIix5OiJlaXQgw6VyIix5eToiJWQgw6VyIn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9XC4vLG9yZGluYWw6IiVkLiIsd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9ezE6IuCppyIsMjoi4KmoIiwzOiLgqakiLDQ6IuCpqiIsNToi4KmrIiw2OiLgqawiLDc6IuCprSIsODoi4KmuIiw5OiLgqa8iLDA6IuCppiJ9LG49eyLgqaciOiIxIiwi4KmoIjoiMiIsIuCpqSI6IjMiLCLgqaoiOiI0Iiwi4KmrIjoiNSIsIuCprCI6IjYiLCLgqa0iOiI3Iiwi4KmuIjoiOCIsIuCpryI6IjkiLCLgqaYiOiIwIn0saT10LmRlZmluZUxvY2FsZSgicGEtaW4iLHttb250aHM6IuConOCoqOCoteCosOCpgF/gqKvgqLzgqLDgqLXgqLDgqYBf4Kiu4Ki+4Kiw4KiaX+CoheCoquCpjeCosOCpiOCosl/gqK7gqIhf4Kic4KmC4KioX+ConOCpgeCosuCovuCoiF/gqIXgqJfgqLjgqKRf4Ki44Kik4Kmw4Kis4KiwX+CoheColeCopOCpguCorOCosF/gqKjgqLXgqbDgqKzgqLBf4Kim4Ki44Kmw4Kis4KiwIi5zcGxpdCgiXyIpLG1vbnRoc1Nob3J0OiLgqJzgqKjgqLXgqLDgqYBf4Kir4Ki84Kiw4Ki14Kiw4KmAX+CoruCovuCosOComl/gqIXgqKrgqY3gqLDgqYjgqLJf4Kiu4KiIX+ConOCpguCoqF/gqJzgqYHgqLLgqL7gqIhf4KiF4KiX4Ki44KikX+CouOCopOCpsOCorOCosF/gqIXgqJXgqKTgqYLgqKzgqLBf4Kio4Ki14Kmw4Kis4KiwX+CopuCouOCpsOCorOCosCIuc3BsaXQoIl8iKSx3ZWVrZGF5czoi4KiQ4Kik4Ki14Ki+4KiwX+CouOCpi+CoruCoteCovuCosF/gqK7gqbDgqJfgqLLgqLXgqL7gqLBf4Kis4KmB4Kin4Ki14Ki+4KiwX+CoteCpgOCosOCoteCovuCosF/gqLjgqLzgqYHgqbHgqJXgqLDgqLXgqL7gqLBf4Ki44Ki84Kio4KmA4Kia4Kiw4Ki14Ki+4KiwIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IuCokOCopF/gqLjgqYvgqK5f4Kiu4Kmw4KiX4KiyX+CorOCpgeCop1/gqLXgqYDgqLBf4Ki44Ki84KmB4KiV4KiwX+CouOCovOCoqOCpgCIuc3BsaXQoIl8iKSx3ZWVrZGF5c01pbjoi4KiQ4KikX+CouOCpi+Corl/gqK7gqbDgqJfgqLJf4Kis4KmB4KinX+CoteCpgOCosF/gqLjgqLzgqYHgqJXgqLBf4Ki44Ki84Kio4KmAIi5zcGxpdCgiXyIpLGxvbmdEYXRlRm9ybWF0OntMVDoiQSBoOm1tIOCoteConOCphyIsTFRTOiJBIGg6bW06c3Mg4Ki14Kic4KmHIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVksIEEgaDptbSDgqLXgqJzgqYciLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZLCBBIGg6bW0g4Ki14Kic4KmHIn0sY2FsZW5kYXI6e3NhbWVEYXk6IlvgqIXgqJxdIExUIixuZXh0RGF5OiJb4KiV4KiyXSBMVCIsbmV4dFdlZWs6ImRkZGQsIExUIixsYXN0RGF5OiJb4KiV4KiyXSBMVCIsbGFzdFdlZWs6IlvgqKrgqL/gqJvgqLLgqYddIGRkZGQsIExUIixzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiIlcyDgqLXgqL/gqbHgqJoiLHBhc3Q6IiVzIOCoquCov+Com+CosuCphyIsczoi4KiV4KmB4KidIOCouOColeCov+CpsOConyIsbToi4KiH4KiVIOCoruCov+CpsOConyIsbW06IiVkIOCoruCov+CpsOConyIsaDoi4KiH4Kmx4KiVIOComOCpsOCon+CoviIsaGg6IiVkIOComOCpsOCon+CphyIsZDoi4KiH4Kmx4KiVIOCopuCov+CoqCIsZGQ6IiVkIOCopuCov+CoqCIsTToi4KiH4Kmx4KiVIOCoruCoueCpgOCoqOCoviIsTU06IiVkIOCoruCoueCpgOCoqOCphyIseToi4KiH4Kmx4KiVIOCouOCovuCosiIseXk6IiVkIOCouOCovuCosiJ9LHByZXBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1vgqafgqajgqangqargqavgqazgqa3gqa7gqa/gqaZdL2csZnVuY3Rpb24odCl7cmV0dXJuIG5bdF19KX0scG9zdGZvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9cZC9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9LG1lcmlkaWVtUGFyc2U6L+CosOCovuCopHzgqLjgqLXgqYfgqLB84Kim4KmB4Kiq4Ki54Ki/4KiwfOCouOCovOCovuCori8sbWVyaWRpZW1Ib3VyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIDEyPT09dCYmKHQ9MCksIuCosOCovuCopCI9PT1lP3Q8ND90OnQrMTI6IuCouOCoteCph+CosCI9PT1lP3Q6IuCopuCpgeCoquCoueCov+CosCI9PT1lP3Q+PTEwP3Q6dCsxMjoi4Ki44Ki84Ki+4KiuIj09PWU/dCsxMjp2b2lkIDB9LG1lcmlkaWVtOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdDw0PyLgqLDgqL7gqKQiOnQ8MTA/IuCouOCoteCph+CosCI6dDwxNz8i4Kim4KmB4Kiq4Ki54Ki/4KiwIjp0PDIwPyLgqLjgqLzgqL7gqK4iOiLgqLDgqL7gqKQifSx3ZWVrOntkb3c6MCxkb3k6Nn19KTtyZXR1cm4gaX0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKHQpe3JldHVybiB0JTEwPDUmJnQlMTA+MSYmfn4odC8xMCklMTAhPT0xfWZ1bmN0aW9uIG4odCxuLGkpe3ZhciByPXQrIiAiO3N3aXRjaChpKXtjYXNlIm0iOnJldHVybiBuPyJtaW51dGEiOiJtaW51dMSZIjtjYXNlIm1tIjpyZXR1cm4gcisoZSh0KT8ibWludXR5IjoibWludXQiKTtjYXNlImgiOnJldHVybiBuPyJnb2R6aW5hIjoiZ29kemluxJkiO2Nhc2UiaGgiOnJldHVybiByKyhlKHQpPyJnb2R6aW55IjoiZ29kemluIik7Y2FzZSJNTSI6cmV0dXJuIHIrKGUodCk/Im1pZXNpxIVjZSI6Im1pZXNpxJljeSIpO2Nhc2UieXkiOnJldHVybiByKyhlKHQpPyJsYXRhIjoibGF0Iil9fXZhciBpPSJzdHljemXFhF9sdXR5X21hcnplY19rd2llY2llxYRfbWFqX2N6ZXJ3aWVjX2xpcGllY19zaWVycGllxYRfd3J6ZXNpZcWEX3Bhxbpkemllcm5pa19saXN0b3BhZF9ncnVkemllxYQiLnNwbGl0KCJfIikscj0ic3R5Y3puaWFfbHV0ZWdvX21hcmNhX2t3aWV0bmlhX21hamFfY3plcndjYV9saXBjYV9zaWVycG5pYV93cnplxZtuaWFfcGHFumR6aWVybmlrYV9saXN0b3BhZGFfZ3J1ZG5pYSIuc3BsaXQoIl8iKSxvPXQuZGVmaW5lTG9jYWxlKCJwbCIse21vbnRoczpmdW5jdGlvbih0LGUpe3JldHVybiIiPT09ZT8iKCIrclt0Lm1vbnRoKCldKyJ8IitpW3QubW9udGgoKV0rIikiOi9EIE1NTU0vLnRlc3QoZSk/clt0Lm1vbnRoKCldOmlbdC5tb250aCgpXX0sbW9udGhzU2hvcnQ6InN0eV9sdXRfbWFyX2t3aV9tYWpfY3plX2xpcF9zaWVfd3J6X3BhxbpfbGlzX2dydSIuc3BsaXQoIl8iKSx3ZWVrZGF5czoibmllZHppZWxhX3BvbmllZHppYcWCZWtfd3RvcmVrX8Wbcm9kYV9jendhcnRla19wacSFdGVrX3NvYm90YSIuc3BsaXQoIl8iKSx3ZWVrZGF5c1Nob3J0OiJuaWVfcG9uX3d0X8Wbcl9jendfcHRfc2IiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46Ik5kX1BuX1d0X8Wacl9Del9QdF9TbyIuc3BsaXQoIl8iKSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC5NTS5ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltEemnFmyBvXSBMVCIsbmV4dERheToiW0p1dHJvIG9dIExUIixuZXh0V2VlazoiW1ddIGRkZGQgW29dIExUIixsYXN0RGF5OiJbV2N6b3JhaiBvXSBMVCIsbGFzdFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbVyB6ZXN6xYLEhSBuaWVkemllbMSZIG9dIExUIjtjYXNlIDM6cmV0dXJuIltXIHplc3rFgsSFIMWbcm9kxJkgb10gTFQiO2Nhc2UgNjpyZXR1cm4iW1cgemVzesWCxIUgc29ib3TEmSBvXSBMVCI7ZGVmYXVsdDpyZXR1cm4iW1cgemVzesWCeV0gZGRkZCBbb10gTFQifX0sc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToiemEgJXMiLHBhc3Q6IiVzIHRlbXUiLHM6ImtpbGthIHNla3VuZCIsbTpuLG1tOm4saDpuLGhoOm4sZDoiMSBkemllxYQiLGRkOiIlZCBkbmkiLE06Im1pZXNpxIVjIixNTTpuLHk6InJvayIseXk6bn0sb3JkaW5hbFBhcnNlOi9cZHsxLDJ9XC4vLG9yZGluYWw6IiVkLiIsd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIG99KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoInB0Iix7bW9udGhzOiJKYW5laXJvX0ZldmVyZWlyb19NYXLDp29fQWJyaWxfTWFpb19KdW5ob19KdWxob19BZ29zdG9fU2V0ZW1icm9fT3V0dWJyb19Ob3ZlbWJyb19EZXplbWJybyIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSmFuX0Zldl9NYXJfQWJyX01haV9KdW5fSnVsX0Fnb19TZXRfT3V0X05vdl9EZXoiLnNwbGl0KCJfIiksd2Vla2RheXM6IkRvbWluZ29fU2VndW5kYS1GZWlyYV9UZXLDp2EtRmVpcmFfUXVhcnRhLUZlaXJhX1F1aW50YS1GZWlyYV9TZXh0YS1GZWlyYV9Tw6FiYWRvIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IkRvbV9TZWdfVGVyX1F1YV9RdWlfU2V4X1PDoWIiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkRvbV8ywqpfM8KqXzTCql81wqpfNsKqX1PDoWIiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQvTU0vWVlZWSIsTEw6IkQgW2RlXSBNTU1NIFtkZV0gWVlZWSIsTExMOiJEIFtkZV0gTU1NTSBbZGVdIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQsIEQgW2RlXSBNTU1NIFtkZV0gWVlZWSBISDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbSG9qZSDDoHNdIExUIixuZXh0RGF5OiJbQW1hbmjDoyDDoHNdIExUIixuZXh0V2VlazoiZGRkZCBbw6BzXSBMVCIsbGFzdERheToiW09udGVtIMOgc10gTFQiLGxhc3RXZWVrOmZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLmRheSgpfHw2PT09dGhpcy5kYXkoKT8iW8OabHRpbW9dIGRkZGQgW8Ogc10gTFQiOiJbw5psdGltYV0gZGRkZCBbw6BzXSBMVCJ9LHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6ImVtICVzIixwYXN0OiJow6EgJXMiLHM6InNlZ3VuZG9zIixtOiJ1bSBtaW51dG8iLG1tOiIlZCBtaW51dG9zIixoOiJ1bWEgaG9yYSIsaGg6IiVkIGhvcmFzIixkOiJ1bSBkaWEiLGRkOiIlZCBkaWFzIixNOiJ1bSBtw6pzIixNTToiJWQgbWVzZXMiLHk6InVtIGFubyIseXk6IiVkIGFub3MifSxvcmRpbmFsUGFyc2U6L1xkezEsMn3Cui8sb3JkaW5hbDoiJWTCuiIsd2Vlazp7ZG93OjEsZG95OjR9fSk7cmV0dXJuIGV9KX0sZnVuY3Rpb24odCxlLG4peyFmdW5jdGlvbih0LGUpe2UobigzNjEpKX0odGhpcyxmdW5jdGlvbih0KXsidXNlIHN0cmljdCI7dmFyIGU9dC5kZWZpbmVMb2NhbGUoInB0LWJyIix7bW9udGhzOiJKYW5laXJvX0ZldmVyZWlyb19NYXLDp29fQWJyaWxfTWFpb19KdW5ob19KdWxob19BZ29zdG9fU2V0ZW1icm9fT3V0dWJyb19Ob3ZlbWJyb19EZXplbWJybyIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSmFuX0Zldl9NYXJfQWJyX01haV9KdW5fSnVsX0Fnb19TZXRfT3V0X05vdl9EZXoiLnNwbGl0KCJfIiksd2Vla2RheXM6IkRvbWluZ29fU2VndW5kYS1mZWlyYV9UZXLDp2EtZmVpcmFfUXVhcnRhLWZlaXJhX1F1aW50YS1mZWlyYV9TZXh0YS1mZWlyYV9Tw6FiYWRvIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6IkRvbV9TZWdfVGVyX1F1YV9RdWlfU2V4X1PDoWIiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkRvbV8ywqpfM8KqXzTCql81wqpfNsKqX1PDoWIiLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJISDptbSIsTFRTOiJISDptbTpzcyIsTDoiREQvTU0vWVlZWSIsTEw6IkQgW2RlXSBNTU1NIFtkZV0gWVlZWSIsTExMOiJEIFtkZV0gTU1NTSBbZGVdIFlZWVkgW8Ogc10gSEg6bW0iLExMTEw6ImRkZGQsIEQgW2RlXSBNTU1NIFtkZV0gWVlZWSBbw6BzXSBISDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbSG9qZSDDoHNdIExUIixuZXh0RGF5OiJbQW1hbmjDoyDDoHNdIExUIixuZXh0V2VlazoiZGRkZCBbw6BzXSBMVCIsbGFzdERheToiW09udGVtIMOgc10gTFQiLGxhc3RXZWVrOmZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLmRheSgpfHw2PT09dGhpcy5kYXkoKT8iW8OabHRpbW9dIGRkZGQgW8Ogc10gTFQiOiJbw5psdGltYV0gZGRkZCBbw6BzXSBMVCJ9LHNhbWVFbHNlOiJMIn0scmVsYXRpdmVUaW1lOntmdXR1cmU6ImVtICVzIixwYXN0OiIlcyBhdHLDoXMiLHM6InBvdWNvcyBzZWd1bmRvcyIsbToidW0gbWludXRvIixtbToiJWQgbWludXRvcyIsaDoidW1hIGhvcmEiLGhoOiIlZCBob3JhcyIsZDoidW0gZGlhIg==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("bTpzcyIsTDoiREQuTU0uWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFlZWVkgSDptbSIsTExMTDoiZGRkZCBELiBNTU1NIFlZWVkgSDptbSJ9LGNhbGVuZGFyOntzYW1lRGF5OiJbZG5lcyBvXSBMVCIsbmV4dERheToiW3phanRyYSBvXSBMVCIsbmV4dFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbdiBuZWRlxL51IG9dIExUIjtjYXNlIDE6Y2FzZSAyOnJldHVybiJbdl0gZGRkZCBbb10gTFQiO2Nhc2UgMzpyZXR1cm4iW3Ygc3RyZWR1IG9dIExUIjtjYXNlIDQ6cmV0dXJuIlt2byDFoXR2cnRvayBvXSBMVCI7Y2FzZSA1OnJldHVybiJbdiBwaWF0b2sgb10gTFQiO2Nhc2UgNjpyZXR1cm4iW3Ygc29ib3R1IG9dIExUIn19LGxhc3REYXk6Ilt2xI1lcmEgb10gTFQiLGxhc3RXZWVrOmZ1bmN0aW9uKCl7c3dpdGNoKHRoaXMuZGF5KCkpe2Nhc2UgMDpyZXR1cm4iW21pbnVsw7ogbmVkZcS+dSBvXSBMVCI7Y2FzZSAxOmNhc2UgMjpyZXR1cm4iW21pbnVsw71dIGRkZGQgW29dIExUIjtjYXNlIDM6cmV0dXJuIlttaW51bMO6IHN0cmVkdSBvXSBMVCI7Y2FzZSA0OmNhc2UgNTpyZXR1cm4iW21pbnVsw71dIGRkZGQgW29dIExUIjtjYXNlIDY6cmV0dXJuIlttaW51bMO6IHNvYm90dSBvXSBMVCJ9fSxzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJ6YSAlcyIscGFzdDoicHJlZCAlcyIsczpuLG06bixtbTpuLGg6bixoaDpuLGQ6bixkZDpuLE06bixNTTpuLHk6bix5eTpufSxvcmRpbmFsUGFyc2U6L1xkezEsMn1cLi8sb3JkaW5hbDoiJWQuIix3ZWVrOntkb3c6MSxkb3k6NH19KTtyZXR1cm4gb30pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKHQsZSxuLGkpe3ZhciByPXQrIiAiO3N3aXRjaChuKXtjYXNlInMiOnJldHVybiBlfHxpPyJuZWthaiBzZWt1bmQiOiJuZWthaiBzZWt1bmRhbWkiO2Nhc2UibSI6cmV0dXJuIGU/ImVuYSBtaW51dGEiOiJlbm8gbWludXRvIjtjYXNlIm1tIjpyZXR1cm4gcis9MT09PXQ/ZT8ibWludXRhIjoibWludXRvIjoyPT09dD9lfHxpPyJtaW51dGkiOiJtaW51dGFtYSI6dDw1P2V8fGk/Im1pbnV0ZSI6Im1pbnV0YW1pIjplfHxpPyJtaW51dCI6Im1pbnV0YW1pIjtjYXNlImgiOnJldHVybiBlPyJlbmEgdXJhIjoiZW5vIHVybyI7Y2FzZSJoaCI6cmV0dXJuIHIrPTE9PT10P2U/InVyYSI6InVybyI6Mj09PXQ/ZXx8aT8idXJpIjoidXJhbWEiOnQ8NT9lfHxpPyJ1cmUiOiJ1cmFtaSI6ZXx8aT8idXIiOiJ1cmFtaSI7Y2FzZSJkIjpyZXR1cm4gZXx8aT8iZW4gZGFuIjoiZW5pbSBkbmVtIjtjYXNlImRkIjpyZXR1cm4gcis9MT09PXQ/ZXx8aT8iZGFuIjoiZG5lbSI6Mj09PXQ/ZXx8aT8iZG5pIjoiZG5ldm9tYSI6ZXx8aT8iZG5pIjoiZG5ldmkiO2Nhc2UiTSI6cmV0dXJuIGV8fGk/ImVuIG1lc2VjIjoiZW5pbSBtZXNlY2VtIjtjYXNlIk1NIjpyZXR1cm4gcis9MT09PXQ/ZXx8aT8ibWVzZWMiOiJtZXNlY2VtIjoyPT09dD9lfHxpPyJtZXNlY2EiOiJtZXNlY2VtYSI6dDw1P2V8fGk/Im1lc2VjZSI6Im1lc2VjaSI6ZXx8aT8ibWVzZWNldiI6Im1lc2VjaSI7Y2FzZSJ5IjpyZXR1cm4gZXx8aT8iZW5vIGxldG8iOiJlbmltIGxldG9tIjtjYXNlInl5IjpyZXR1cm4gcis9MT09PXQ/ZXx8aT8ibGV0byI6ImxldG9tIjoyPT09dD9lfHxpPyJsZXRpIjoibGV0b21hIjp0PDU/ZXx8aT8ibGV0YSI6ImxldGkiOmV8fGk/ImxldCI6ImxldGkifX12YXIgbj10LmRlZmluZUxvY2FsZSgic2wiLHttb250aHM6ImphbnVhcl9mZWJydWFyX21hcmVjX2FwcmlsX21hal9qdW5pal9qdWxpal9hdmd1c3Rfc2VwdGVtYmVyX29rdG9iZXJfbm92ZW1iZXJfZGVjZW1iZXIiLnNwbGl0KCJfIiksbW9udGhzU2hvcnQ6Imphbi5fZmViLl9tYXIuX2Fwci5fbWFqLl9qdW4uX2p1bC5fYXZnLl9zZXAuX29rdC5fbm92Ll9kZWMuIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJuZWRlbGphX3BvbmVkZWxqZWtfdG9yZWtfc3JlZGFfxI1ldHJ0ZWtfcGV0ZWtfc29ib3RhIi5zcGxpdCgiXyIpLHdlZWtkYXlzU2hvcnQ6Im5lZC5fcG9uLl90b3IuX3NyZS5fxI1ldC5fcGV0Ll9zb2IuIi5zcGxpdCgiXyIpLHdlZWtkYXlzTWluOiJuZV9wb190b19zcl/EjWVfcGVfc28iLnNwbGl0KCJfIiksbG9uZ0RhdGVGb3JtYXQ6e0xUOiJIOm1tIixMVFM6Ikg6bW06c3MiLEw6IkRELiBNTS4gWVlZWSIsTEw6IkQuIE1NTU0gWVlZWSIsTExMOiJELiBNTU1NIFlZWVkgSDptbSIsTExMTDoiZGRkZCwgRC4gTU1NTSBZWVlZIEg6bW0ifSxjYWxlbmRhcjp7c2FtZURheToiW2RhbmVzIG9iXSBMVCIsbmV4dERheToiW2p1dHJpIG9iXSBMVCIsbmV4dFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbdl0gW25lZGVsam9dIFtvYl0gTFQiO2Nhc2UgMzpyZXR1cm4iW3ZdIFtzcmVkb10gW29iXSBMVCI7Y2FzZSA2OnJldHVybiJbdl0gW3NvYm90b10gW29iXSBMVCI7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6Y2FzZSA1OnJldHVybiJbdl0gZGRkZCBbb2JdIExUIn19LGxhc3REYXk6Ilt2xI1lcmFqIG9iXSBMVCIsbGFzdFdlZWs6ZnVuY3Rpb24oKXtzd2l0Y2godGhpcy5kYXkoKSl7Y2FzZSAwOnJldHVybiJbcHJlasWhbmpvXSBbbmVkZWxqb10gW29iXSBMVCI7Y2FzZSAzOnJldHVybiJbcHJlasWhbmpvXSBbc3JlZG9dIFtvYl0gTFQiO2Nhc2UgNjpyZXR1cm4iW3ByZWrFoW5qb10gW3NvYm90b10gW29iXSBMVCI7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6Y2FzZSA1OnJldHVybiJbcHJlasWhbmppXSBkZGRkIFtvYl0gTFQifX0sc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToixI1leiAlcyIscGFzdDoicHJlZCAlcyIsczplLG06ZSxtbTplLGg6ZSxoaDplLGQ6ZSxkZDplLE06ZSxNTTplLHk6ZSx5eTplfSxvcmRpbmFsUGFyc2U6L1xkezEsMn1cLi8sb3JkaW5hbDoiJWQuIix3ZWVrOntkb3c6MSxkb3k6N319KTtyZXR1cm4gbn0pfSxmdW5jdGlvbih0LGUsbil7IWZ1bmN0aW9uKHQsZSl7ZShuKDM2MSkpfSh0aGlzLGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0Ijt2YXIgZT10LmRlZmluZUxvY2FsZSgic3EiLHttb250aHM6IkphbmFyX1Noa3VydF9NYXJzX1ByaWxsX01hal9RZXJzaG9yX0tvcnJpa19HdXNodF9TaHRhdG9yX1RldG9yX07Dq250b3JfRGhqZXRvciIuc3BsaXQoIl8iKSxtb250aHNTaG9ydDoiSmFuX1Noa19NYXJfUHJpX01hal9RZXJfS29yX0d1c19TaHRfVGV0X07Dq25fRGhqIi5zcGxpdCgiXyIpLHdlZWtkYXlzOiJFIERpZWxfRSBIw6tuw6tfRSBNYXJ0w6tfRSBNw6tya3Vyw6tfRSBFbmp0ZV9FIFByZW10ZV9FIFNodHVuw6siLnNwbGl0KCJfIiksd2Vla2RheXNTaG9ydDoiRGllX0jDq25fTWFyX03Dq3JfRW5qX1ByZV9TaHQiLnNwbGl0KCJfIiksd2Vla2RheXNNaW46IkRfSF9NYV9Nw6tfRV9QX1NoIi5zcGxpdCgiXyIpLG1lcmlkaWVtUGFyc2U6L1BEfE1ELyxpc1BNOmZ1bmN0aW9uKHQpe3JldHVybiJNIj09PXQuY2hhckF0KDApfSxtZXJpZGllbTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHQ8MTI/IlBEIjoiTUQifSxsb25nRGF0ZUZvcm1hdDp7TFQ6IkhIOm1tIixMVFM6IkhIOm1tOnNzIixMOiJERC9NTS9ZWVlZIixMTDoiRCBNTU1NIFlZWVkiLExMTDoiRCBNTU1NIFlZWVkgSEg6bW0iLExMTEw6ImRkZGQsIEQgTU1NTSBZWVlZIEhIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltTb3QgbsOrXSBMVCIsbmV4dERheToiW05lc8OrciBuw6tdIExUIixuZXh0V2VlazoiZGRkZCBbbsOrXSBMVCIsbGFzdERheToiW0RqZSBuw6tdIExUIixsYXN0V2VlazoiZGRkZCBbZSBrYWx1YXIgbsOrXSBMVCIsc2FtZUVsc2U6IkwifSxyZWxhdGl2ZVRpbWU6e2Z1dHVyZToibsOrICVzIixwYXN0OiIlcyBtw6sgcGFyw6siLHM6ImRpc2Egc2Vrb25kYSIsbToibmrDqyBtaW51dMOrIixtbToiJWQgbWludXRhIixoOiJuasOrIG9yw6siLGhoOiIlZCBvcsOrIixkOiJuasOrIGRpdMOrIixkZDoiJWQgZGl0w6siLE06Im5qw6sgbXVhaiIsTU06IiVkIG11YWoiLHk6Im5qw6sgdml0Iix5eToiJWQgdml0ZSJ9LG9yZGluYWxQYXJzZTovXGR7MSwyfVwuLyxvcmRpbmFsOiIlZC4iLHdlZWs6e2RvdzoxLGRveTo0fX0pO3JldHVybiBlfSl9LGZ1bmN0aW9uKHQsZSxuKXshZnVuY3Rpb24odCxlKXtlKG4oMzYxKSl9KHRoaXMsZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPXt3b3Jkczp7bTpbImplZGFuIG1pbnV0IiwiamVkbmUgbWludXRlIl0sbW06WyJtaW51dCIsIm1pbnV0ZSIsIm1pbnV0YSJdLGg6WyJqZWRhbiBzYXQiLCJqZWRub2cgc2F0YSJdLGhoOlsic2F0Iiwic2F0YSIsInNhdGkiXSxkZDpbImRhbiIsImRhbmEiLCJkYW5hIl0sTU06WyJtZXNlYyIsIm1lc2VjYSIsIm1lc2VjaSJdLHl5OlsiZ29kaW5hIiwiZ29kaW5lIiwiZ29kaW5hIl19LGNvcnJlY3RHcmFtbWF0aWNhbENhc2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gMT09PXQ/ZVswXTp0Pj0yJiZ0PD00P2VbMV06ZVsyXX0sdHJhbnNsYXRlOmZ1bmN0aW9uKHQsbixpKXt2YXIgcj1lLndvcmRzW2ldO3JldHVybiAxPT09aS5sZW5ndGg/bj9yWzBdOnJbMV06dCsiICIrZS5jb3JyZWN0R3JhbW1hdGljYWxDYXNlKHQscil9fSxuPXQuZGVmaW5lTG9jYWxlKCJzciIse21vbnRoczpbImphbnVhciIsImZlYnJ1YXIiLCJtYXJ0IiwiYXByaWwiLCJtYWoiLCJqdW4iLCJqdWwiLCJhdmd1c3QiLCJzZXB0ZW1iYXIiLCJva3RvYmFyIiwibm92ZW1iYXIiLCJkZWNlbWJhciJdLG1vbnRoc1Nob3J0OlsiamFuLiIsImZlYi4iLCJtYXIuIiwiYXByLiIsIm1haiIsImp1biIsImp1bCIsImF2Zy4iLCJzZXAuIiwib2t0LiIsIm5vdi4iLCJkZWMuIl0sd2Vla2RheXM6WyJuZWRlbGphIiwicG9uZWRlbGphayIsInV0b3JhayIsInNyZWRhIiwixI1ldHZydGFrIiwicGV0YWsiLCJzdWJvdGEiXSx3ZWVrZGF5c1Nob3J0OlsibmVkLiIsInBvbi4iLCJ1dG8uIiwic3JlLiIsIsSNZXQuIiwicGV0LiIsInN1Yi4iXSx3ZWVrZGF5c01pbjpbIm5lIiwicG8iLCJ1dCIsInNyIiwixI1lIiwicGUiLCJzdSJdLGxvbmdEYXRlRm9ybWF0OntMVDoiSDptbSIsTFRTOiJIOm1tOnNzIixMOiJERC4gTU0uIFlZWVkiLExMOiJELiBNTU1NIFlZWVkiLExMTDoiRC4gTU1NTSBZWVlZIEg6bW0iLExMTEw6ImRkZGQsIEQuIE1NTU0gWVlZWSBIOm1tIn0sY2FsZW5kYXI6e3NhbWVEYXk6IltkYW5hcyB1XSBMVCIsbmV4dERheToiW3N1dHJhIHVdIExUIixuZXh0V2VlazpmdW5jdGlvbigpe3N3aXRjaCh0aGlzLmRheSgpKXtjYXNlIDA6cmV0dXJuIlt1XSBbbmVkZWxqdV0gW3VdIExUIjtjYXNlIDM6cmV0dXJuIlt1XSBbc3JlZHVdIFt1XSBMVCI7Y2FzZSA2OnJldHVybiJbdV0gW3N1Ym90dV0gW3VdIExUIjtjYXNlIDE6Y2FzZSAyOmNhc2UgNDpjYXNlIDU6cmV0dXJuIlt1XSBkZGRkIFt1XSBMVCJ9fSxsYXN0RGF5OiJbanXEjWUgdV0gTFQiLGxhc3RXZWVrOmZ1bmN0aW9uKCl7dmFyIHQ9WyJbcHJvxaFsZV0gW25lZGVsamVdIFt1XSBMVCIsIltwcm/FoWxvZ10gW3BvbmVkZWxqa2FdIFt1XSBMVCIsIltwcm/FoWxvZ10gW3V0b3JrYV0gW3VdIExUIiwiW3Byb8WhbGVdIFtzcmVkZV0gW3VdIExUIiwiW3Byb8WhbG9nXSBbxI1ldHZydGthXSBbdV0gTFQiLCJbcHJvxaFsb2ddIFtwZXRrYV0gW3VdIExUIiwiW3Byb8WhbGVdIFtzdWJvdGVdIFt1XSBMVCJdO3JldHVybiB0W3RoaXMuZGF5KCldfSxzYW1lRWxzZToiTCJ9LHJlbGF0aXZlVGltZTp7ZnV0dXJlOiJ6YSAlcyIscGFzdDoicHJlICVzIixzOiJuZWtvbGk=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("bnVsbH1mdW5jdGlvbiBiKCl7dmFyIHQsZT1bXTtmb3IodCBpbiBPKU8uaGFzT3duUHJvcGVydHkodCkmJihDW3RdfHxDW1lbdF1dKSYmT1t0XSYmZS5wdXNoKE9bdF0pO3JldHVybiBlLnNvcnQoKX1mdW5jdGlvbiB3KHQpe3ZhciBlLG4saSxyO2Zvcigic3RyaW5nIj09dHlwZW9mIHQmJih0PVt0XSksZT0wO2U8dC5sZW5ndGg7ZSsrKW49dFtlXS5zcGxpdCgifCIpLGk9ZyhuWzBdKSxyPWcoblsxXSksWVtpXT1yLE9baV09blswXSxZW3JdPWksT1tyXT1uWzFdfWZ1bmN0aW9uIE0odCl7dih0LnpvbmVzKSx3KHQubGlua3MpLEwuZGF0YVZlcnNpb249dC52ZXJzaW9ufWZ1bmN0aW9uIFModCl7cmV0dXJuIFMuZGlkU2hvd0Vycm9yfHwoUy5kaWRTaG93RXJyb3I9ITAsaygibW9tZW50LnR6LnpvbmVFeGlzdHMoJyIrdCsiJykgaGFzIGJlZW4gZGVwcmVjYXRlZCBpbiBmYXZvciBvZiAhbW9tZW50LnR6LnpvbmUoJyIrdCsiJykiKSksISF5KHQpfWZ1bmN0aW9uIFQodCl7cmV0dXJuISghdC5fYXx8dm9pZCAwIT09dC5fdHptKX1mdW5jdGlvbiBrKHQpeyJ1bmRlZmluZWQiIT10eXBlb2YgY29uc29sZSYmImZ1bmN0aW9uIj09dHlwZW9mIGNvbnNvbGUuZXJyb3ImJmNvbnNvbGUuZXJyb3IodCl9ZnVuY3Rpb24gTChlKXt2YXIgbj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCwtMSksaT1hcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aC0xXSxyPXkoaSksbz10LnV0Yy5hcHBseShudWxsLG4pO3JldHVybiByJiYhdC5pc01vbWVudChlKSYmVChvKSYmby5hZGQoci5wYXJzZShvKSwibWludXRlcyIpLG8udHooaSksb31mdW5jdGlvbiB4KHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLl96P3RoaXMuX3ouYWJicih0aGlzKTp0LmNhbGwodGhpcyl9fWZ1bmN0aW9uIEEodCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3o9bnVsbCx0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX19aWYodm9pZCAwIT09dC50eilyZXR1cm4gaygiTW9tZW50IFRpbWV6b25lICIrdC50ei52ZXJzaW9uKyIgd2FzIGFscmVhZHkgbG9hZGVkICIrKHQudHouZGF0YVZlcnNpb24/IndpdGggZGF0YSBmcm9tICI6IndpdGhvdXQgYW55IGRhdGEiKSt0LnR6LmRhdGFWZXJzaW9uKSx0O3ZhciBFLEQ9IjAuNS4zIixDPXt9LFk9e30sTz17fSxQPXt9LE49dC52ZXJzaW9uLnNwbGl0KCIuIiksST0rTlswXSxSPStOWzFdOyhJPDJ8fDI9PT1JJiZSPDYpJiZrKCJNb21lbnQgVGltZXpvbmUgcmVxdWlyZXMgTW9tZW50LmpzID49IDIuNi4wLiBZb3UgYXJlIHVzaW5nIE1vbWVudC5qcyAiK3QudmVyc2lvbisiLiBTZWUgbW9tZW50anMuY29tIiksYS5wcm90b3R5cGU9e19zZXQ6ZnVuY3Rpb24odCl7dGhpcy5uYW1lPXQubmFtZSx0aGlzLmFiYnJzPXQuYWJicnMsdGhpcy51bnRpbHM9dC51bnRpbHMsdGhpcy5vZmZzZXRzPXQub2Zmc2V0cyx0aGlzLnBvcHVsYXQ=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("dHJhbGlhL01lbGJvdXJuZSIsIkF1c3RyYWxpYS9TeWRuZXl8QXVzdHJhbGlhL05TVyIsIkF1c3RyYWxpYS9TeWRuZXl8QXVzdHJhbGlhL1Rhc21hbmlhIiwiQXVzdHJhbGlhL1N5ZG5leXxBdXN0cmFsaWEvVmljdG9yaWEiLCJFdGMvVUNUfFVDVCIsIkV0Yy9VVEN8RXRjL1VuaXZlcnNhbCIsIkV0Yy9VVEN8RXRjL1p1bHUiLCJFdGMvVVRDfFVUQyIsIkV0Yy9VVEN8VW5pdmVyc2FsIiwiRXRjL1VUQ3xadWx1IiwiRXVyb3BlL0FzdHJha2hhbnxFdXJvcGUvVWx5YW5vdnNrIiwiRXVyb3BlL0F0aGVuc3xBc2lhL05pY29zaWEiLCJFdXJvcGUvQXRoZW5zfEVFVCIsIkV1cm9wZS9BdGhlbnN8RXVyb3BlL0J1Y2hhcmVzdCIsIkV1cm9wZS9BdGhlbnN8RXVyb3BlL0hlbHNpbmtpIiwiRXVyb3BlL0F0aGVuc3xFdXJvcGUvS2lldiIsIkV1cm9wZS9BdGhlbnN8RXVyb3BlL01hcmllaGFtbiIsIkV1cm9wZS9BdGhlbnN8RXVyb3BlL05pY29zaWEiLCJFdXJvcGUvQXRoZW5zfEV1cm9wZS9SaWdhIiwiRXVyb3BlL0F0aGVuc3xFdXJvcGUvU29maWEiLCJFdXJvcGUvQXRoZW5zfEV1cm9wZS9UYWxsaW5uIiwiRXVyb3BlL0F0aGVuc3xFdXJvcGUvVXpoZ29yb2QiLCJFdXJvcGUvQXRoZW5zfEV1cm9wZS9WaWxuaXVzIiwiRXVyb3BlL0F0aGVuc3xFdXJvcGUvWmFwb3Jvemh5ZSIsIkV1cm9wZS9DaGlzaW5hdXxFdXJvcGUvVGlyYXNwb2wiLCJFdXJvcGUvRHVibGlufEVpcmUiLCJFdXJvcGUvSXN0YW5idWx8QXNpYS9Jc3RhbmJ1bCIsIkV1cm9wZS9Jc3RhbmJ1bHxUdXJrZXkiLCJFdXJvcGUvTGlzYm9ufEF0bGFudGljL0NhbmFyeSIsIkV1cm9wZS9MaXNib258QXRsYW50aWMvRmFlcm9lIiwiRXVyb3BlL0xpc2JvbnxBdGxhbnRpYy9GYXJvZSIsIkV1cm9wZS9MaXNib258QXRsYW50aWMvTWFkZWlyYSIsIkV1cm9wZS9MaXNib258UG9ydHVnYWwiLCJFdXJvcGUvTGlzYm9ufFdFVCIsIkV1cm9wZS9Mb25kb258RXVyb3BlL0JlbGZhc3QiLCJFdXJvcGUvTG9uZG9ufEV1cm9wZS9HdWVybnNleSIsIkV1cm9wZS9Mb25kb258RXVyb3BlL0lzbGVfb2ZfTWFuIiwiRXVyb3BlL0xvbmRvbnxFdXJvcGUvSmVyc2V5IiwiRXVyb3BlL0xvbmRvbnxHQiIsIkV1cm9wZS9Mb25kb258R0ItRWlyZSIsIkV1cm9wZS9Nb3Njb3d8RXVyb3BlL1ZvbGdvZ3JhZCIsIkV1cm9wZS9Nb3Njb3d8Vy1TVSIsIkV1cm9wZS9QYXJpc3xBZnJpY2EvQ2V1dGEiLCJFdXJvcGUvUGFyaXN8QXJjdGljL0xvbmd5ZWFyYnllbiIsIkV1cm9wZS9QYXJpc3xBdGxhbnRpYy9KYW5fTWF5ZW4iLCJFdXJvcGUvUGFyaXN8Q0VUIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9BbXN0ZXJkYW0iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL0FuZG9ycmEiLCJFdXJvcGUvUGFyaXN8RXVyb3BlL0JlbGdyYWRlIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9CZXJsaW4iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL0JyYXRpc2xhdmEiLCJFdXJvcGUvUGFyaXN8RXVyb3BlL0JydXNzZWxzIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9CdWRhcGVzdCIsIkV1cm9wZS9QYXJpc3xFdXJvcGUvQnVzaW5nZW4iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL0NvcGVuaGFnZW4iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL0dpYnJhbHRhciIsIkV1cm9wZS9QYXJpc3xFdXJvcGUvTGp1YmxqYW5hIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9MdXhlbWJvdXJnIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9NYWRyaWQiLCJFdXJvcGUvUGFyaXN8RXVyb3BlL01hbHRhIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9Nb25hY28iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL09zbG8iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL1BvZGdvcmljYSIsIkV1cm9wZS9QYXJpc3xFdXJvcGUvUHJhZ3VlIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9Sb21lIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9TYW5fTWFyaW5vIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9TYXJhamV2byIsIkV1cm9wZS9QYXJpc3xFdXJvcGUvU2tvcGplIiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9TdG9ja2hvbG0iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL1RpcmFuZSIsIkV1cm9wZS9QYXJpc3xFdXJvcGUvVmFkdXoiLCJFdXJvcGUvUGFyaXN8RXVyb3BlL1ZhdGljYW4iLCJFdXJvcGUvUGFyaXN8RXVyb3BlL1ZpZW5uYSIsIkV1cm9wZS9QYXJpc3xFdXJvcGUvV2Fyc2F3IiwiRXVyb3BlL1BhcmlzfEV1cm9wZS9aYWdyZWIiLCJFdXJvcGUvUGFyaXN8RXVyb3BlL1p1cmljaCIsIkV1cm9wZS9QYXJpc3xQb2xhbmQiLCJQYWNpZmljL0F1Y2tsYW5kfEFudGFyY3RpY2EvTWNNdXJkbyIsIlBhY2lmaWMvQXVja2xhbmR8QW50YXJjdGljYS9Tb3V0aF9Qb2xlIiwiUGFjaWZpYy9BdWNrbGFuZHxOWiIsIlBhY2lmaWMvQ2hhdGhhbXxOWi1DSEFUIiwiUGFjaWZpYy9DaHV1a3xQYWNpZmljL1RydWsiLCJQYWNpZmljL0NodXVrfFBhY2lmaWMvWWFwIiwiUGFjaWZpYy9FYXN0ZXJ8Q2hpbGUvRWFzdGVySXNsYW5kIiwiUGFjaWZpYy9HdWFtfFBhY2lmaWMvU2FpcGFuIiwiUGFjaWZpYy9Ib25vbHVsdXxIU1QiLCJQYWNpZmljL0hvbm9sdWx1fFBhY2lmaWMvSm9obnN0b24iLCJQYWNpZmljL0hvbm9sdWx1fFVTL0hhd2FpaSIsIlBhY2lmaWMvTWFqdXJvfEt3YWphbGVpbiIsIlBhY2lmaWMvTWFqdXJvfFBhY2lmaWMvS3dhamFsZWluIiwiUGFjaWZpYy9QYWdvX1BhZ298UGFjaWZpYy9NaWR3YXkiLCJQYWNpZmljL1BhZ29fUGFnb3xQYWNpZmljL1NhbW9hIiwiUGFjaWZpYy9QYWdvX1BhZ298VVMvU2Ftb2EiLCJQYWNpZmljL1BvaG5wZWl8UGFjaWZpYy9Qb25hcGUiXQp9KSx0fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ2MyldLHI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5leHRlbmQoe3NlY3VyZUpTT046ITEsX2J1aWx0SW5Mb2NhbFByb3BzOntfX2VkaXRfXzoiYm9vbGVhbiIsX19wZW5kaW5nX186Ig==", "base64"));
  res.write(new Buffer("Ym9vbGVhbiJ9LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7dGhpcy5sb2NhbD10LmRlZmF1bHRzKHt9LHQucmVzdWx0KHRoaXMsImxvY2FsIiksdGhpcy5fYnVpbHRJbkxvY2FsUHJvcHMpLHQucmVzdWx0KHRoaXMsInNlY3VyZUpTT04iKSYmKHRoaXMuc3luYz10LndyYXAodGhpcy5zeW5jLGZ1bmN0aW9uKGUsbixpLHIpe3JldHVybiBlLmNhbGwodGhpcyxuLGksdC5leHRlbmQoe2RhdGFUeXBlOiJzZWN1cmVKU09OIn0scikpfSkpLGUuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG8scz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgdH07IWZ1bmN0aW9uKHMsYSl7cj1bbigzMjgpLG4oMzYwKSxuKDQ2NCldLGk9YSxvPSJmdW5jdGlvbiI9PXR5cGVvZiBpP2kuYXBwbHkoZSxyKTppLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9KHZvaWQgMCxmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gaShlLG4scixvKXt2YXIgcz10LmNvbnRhaW5zKG4scik7cmV0dXJuIG98fChvPXt9KSxzfHwhdC5pc09iamVjdChlKXx8dC5pc0FycmF5KGUpfHx0LmlzRnVuY3Rpb24oZSk/dm9pZCAwIT09ciYmKG9bcl09ZSk6dC5lYWNoKGUsZnVuY3Rpb24odCxlKXtpKHQsbixyP3IrIi4iK2U6ZSxvKX0pLG99ZnVuY3Rpb24gcihlKXtyZXR1cm4gdC5lYWNoKGUsZnVuY3Rpb24odCxlLG4pe2lmKGUuaW5kZXhPZigiLiIpIT0tMSl7Zm9yKHZhciBpLHI9bixvPWUuc3BsaXQoIi4iKTt2b2lkIDAhPT0oaT1vLnNoaWZ0KCkpOylyW2ldfHwocltpXT1vLmxlbmd0aD97fTp0KSxyPXJbaV07ZGVsZXRlIG5bZV19fSksZX1mdW5jdGlvbiBvKHQsZSl7dmFyIG49e307cmV0dXJuIG5bdC5uYW1lXT1lLG59ZnVuY3Rpb24gYShlLG4pe3ZhciBpO3JldHVybiBpPXQuaXNTdHJpbmcoZSk/e3R5cGU6ZX06dC5pc0FycmF5KGUpP3t0eXBlOmVbMF0scmVxdWlyZWQ6ZVsxXSx2YWx1ZTplWzJdfTp0LmNsb25lKGUpLHQuZGVmYXVsdHMoaSx7cmVxdWlyZWQ6ITEsbmFtZTpufSksaX1mdW5jdGlvbiBsKHQpe3JldHVybiB0LnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvXGJbYS16XS9nLGZ1bmN0aW9uKHQpe3JldHVybiB0LnRvVXBwZXJDYXNlKCl9KX1mdW5jdGlvbiBjKHQsZSxuKXtpZighZS50ZXN0KHQpKXJldHVybiBufWZ1bmN0aW9uIHUodCxlKXt2YXIgbj1tW3QuZm9ybWF0XTtpZih0LmZvcm1hdCYmIW4pdGhyb3cgbmV3IFR5cGVFcnJvcih0LmZvcm1hdCsiIGlzIG5vdCBhIHN1cHBvcnRlZCBzdHJpbmcgZm9ybWF0Iik7cmV0dXJuIG4mJm4oZSl9ZnVuY3Rpb24gZChlLG4pe3ZhciBpPXQucGFydGlhbChvLGUpLHI9dShlLG4pO3JldHVybiByP2kocik6biYmZS5taW5MZW5ndGgmJm4ubGVuZ3RoPGUubWluTGVuZ3RoP2koZi5FUlJPUl9TVFJJTkdfU1RSSU5HX01JTl9MRU5HVEgsbi5sZW5ndGgpOm4mJmUubWF4TGVuZ3RoJiZuLmxlbmd0aD5lLm1heExlbmd0aD9pKGYuRVJST1JfU1RSSU5HX1NUUklOR19NQVhfTEVOR1RILG4ubGVuZ3RoKTp2b2lkIDB9ZnVuY3Rpb24gaChlLG4pe3ZhciBpLHIscz10LnBhcnRpYWwobyxlKSxhPSF0LmlzVW5kZWZpbmVkKG4pJiYhdC5pc051bGwobik7aWYoZS5yZXF1aXJlZCYmKCFhfHx0LmlzTnVsbChuKXx8IiI9PT1uKSlyZXR1cm4gcyhmLkVSUk9SX0JMQU5LKTtpZihpPXRbImlzIitsKGUudHlwZSldLGEmJiJhbnkiIT1lLnR5cGUmJighdC5pc0Z1bmN0aW9uKGkpfHwhaShuKSkpcmV0dXJuIHMoZi5FUlJPUl9XUk9OR19UWVBFKTtpZihuJiYic3RyaW5nIj09ZS50eXBlKXt2YXIgYz1kKGUsbik7aWYoYylyZXR1cm4gY31pZihhJiZlLnZhbHVlcyYmIXQuY29udGFpbnMoZS52YWx1ZXMsbikpcmV0dXJuIHMoZi5FUlJPUl9OT1RfQUxMT1dFRCk7aWYodC5pc0Z1bmN0aW9uKGUudmFsaWRhdGUpKXt2YXIgdT1lLnZhbGlkYXRlKG4pO2lmKHQuaXNTdHJpbmcodSkmJnUpcmV0dXJuIHModSk7aWYodT09PSExKXJldHVybiBzKGYuRVJST1JfSU5WQUxJRCl9cmV0dXJuIGEmJiJhcnJheSI9PWUudHlwZSYmKHI9cChlLG4pKT9zKHIpOnZvaWQgMH1mdW5jdGlvbiBwKGUsbil7aWYoZS5taW5JdGVtcyYmbi5sZW5ndGg8ZS5taW5JdGVtcylyZXR1cm4ibW9kZWwudmFsaWRhdGlvbi5maWVsZC5hcnJheS5taW5JdGVtcyI7aWYoZS5tYXhJdGVtcyYmbi5sZW5ndGg+ZS5tYXhJdGVtcylyZXR1cm4ibW9kZWwudmFsaWRhdGlvbi5maWVsZC5hcnJheS5tYXhJdGVtcyI7aWYoZS51bmlxdWVJdGVtcyYmbi5sZW5ndGg+dC51bmlxKG4pLmxlbmd0aClyZXR1cm4gZi5FUlJPUl9JQVJSQVlfVU5JUVVFO2lmKGUuaXRlbXMpZm9yKHZhciBpPWEoZS5pdGVtcywicGxhY2Vob2xkZXIiKSxyPTA7cjxuLmxlbmd0aDtyKyspe3ZhciBvPW5bcl0scz1oKGksbyk7aWYocylyZXR1cm4gcy5wbGFjZWhvbGRlcn19dmFyIGYsbT17ZW1haWw6ZnVuY3Rpb24odCl7dmFyIGU9L14oKFtePD4oKVxbXF1cXC4sOzpcc0AiXSsoXC5bXjw+KClcW1xdXFwuLDs6XHNAIl0rKSopfCgiLisiKSlAKChcW1swLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31dKXwoKFthLXpBLVpcLTAtOV0rXC4pK1thLXpBLVpdezIsfSkpJC87cmV0dXJuIGModCxlLGYuRVJST1JfSU5WQUxJRF9GT1JNQVRfRU1BSUwpfSx1cmk6ZnVuY3Rpb24odCl7dmFyIGU9L14oPzooPzpodHRwcz98ZnRwKTpcL1wvKSg/OlxTKyg/OjpcUyopP0ApPyg/Oig/ISg/OjEwfDEyNykoPzpcLlxkezEsM30pezN9KSg/ISg/OjE2OVwuMjU0fDE5MlwuMTY4KSg/OlwuXGR7MSwzfSl7Mn0pKD8hMTcyXC4oPzoxWzYtOV18MlxkfDNbMC0xXSkoPzpcLlxkezEsM30pezJ9KSg/OlsxLTldXGQ/fDFcZFxkfDJbMDFdXGR8MjJbMC0zXSkoPzpcLig/OjE/XGR7MSwyfXwyWzAtNF1cZHwyNVswLTVdKSl7Mn0oPzpcLig/OlsxLTldXGQ/fDFcZFxkfDJbMC00XVxkfDI1WzAtNF0pKXwoPzooPzpbYS16XHUwMGExLVx1ZmZmZjAtOV0tKikqW2Etelx1MDBhMS1cdWZmZmYwLTldKykoPzpcLig/OlthLXpcdTAwYTEtXHVmZmZmMC05XS0qKSpbYS16XHUwMGExLVx1ZmZmZjAtOV0rKSooPzpcLig/OlthLXpcdTAwYTEtXHVmZmZmXXsyLH0pKVwuPykoPzo6XGR7Miw1fSk/KD86W1wvPyNdXFMqKT8kL2k7cmV0dXJuIGModCxlLGYuRVJST1JfSU5WQUxJRF9GT1JNQVRfVVJJKX0saXB2NDpmdW5jdGlvbih0KXt2YXIgZT0vXig/Oig/OjI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcLil7M30oPzoyNVswLTVdfDJbMC00XVswLTldfFswMV0/WzAtOV1bMC05XT8pJC87cmV0dXJuIGModCxlLGYuRVJST1JfSU5WQUxJRF9GT1JNQVRfSVBWNCl9LGhvc3RuYW1lOmZ1bmN0aW9uKHQpe3ZhciBlPS9eKChbYS16QS1aMC05XXxbYS16QS1aMC05XVthLXpBLVowLTlcLV0qW2EtekEtWjAtOV0pXC4pKihbQS1aYS16MC05XXxbQS1aYS16MC05XVtBLVphLXowLTlcLV0qW0EtWmEtejAtOV0pJC87cmV0dXJuIGModCxlLGYuRVJST1JfSU5WQUxJRF9GT1JNQVRfSE9TVE5BTUUpfX07cmV0dXJuIGY9ZS5Nb2RlbC5leHRlbmQoe3Byb3BzOnt9LGRlcml2ZWQ6e30sbG9jYWw6e30sZmxhdDohMCxkZWZhdWx0czp7fSxjb25zdHJ1Y3RvcjpmdW5jdGlvbihuKXt0aGlzLm9wdGlvbnM9bnx8e307dmFyIHI9dGhpcy5fX3NjaGVtYV9fPXt9LG89W107ci5jb21wdXRlZFByb3BlcnRpZXM9e30sci5wcm9wcz10LmNsb25lKHQucmVzdWx0KHRoaXMsInByb3BzIil8fHt9KSxyLmRlcml2ZWQ9dC5jbG9uZSh0LnJlc3VsdCh0aGlzLCJkZXJpdmVkIil8fHt9KSxyLmxvY2FsPXQuY2xvbmUodC5yZXN1bHQodGhpcywibG9jYWwiKXx8e30pO3ZhciBzPXt9O2lmKHQuZWFjaCh0LmV4dGVuZCh7fSxyLnByb3BzLHIubG9jYWwpLGZ1bmN0aW9uKGUsbil7dmFyIGk9YShlLG4pO3QuaXNVbmRlZmluZWQoaS52YWx1ZSl8fChzW25dPWkudmFsdWUpLCJvYmplY3QiPT09aS50eXBlJiZvLnB1c2gobil9LHRoaXMpLHQuc2l6ZShzKSl7dmFyIGw9dC5yZXN1bHQodGhpcywiZGVmYXVsdHMiKTt0aGlzLmRlZmF1bHRzPWZ1bmN0aW9uKCl7cmV0dXJuIHQuZGVmYXVsdHMoe30scyxsKX19dGhpcy52YWxpZGF0ZT10LndyYXAodGhpcy52YWxpZGF0ZSxmdW5jdGlvbihlKXt2YXIgbj10LnJlc3QoYXJndW1lbnRzKSxpPXQuZXh0ZW5kKHRoaXMu", "base64"));
  res.write(new Buffer("X3ZhbGlkYXRlU2NoZW1hLmFwcGx5KHRoaXMsbiksZS5hcHBseSh0aGlzLG4pKTtyZXR1cm4gdC5zaXplKGkpJiZpfHx2b2lkIDB9KSx0aGlzLnBhcnNlPXQud3JhcCh0aGlzLnBhcnNlLGZ1bmN0aW9uKGUpe3ZhciBuPWUuYXBwbHkodGhpcyx0LnJlc3QoYXJndW1lbnRzKSk7cmV0dXJuIHRoaXMuZmxhdCYmKG49aShuLG8pKSxufSksZS5Nb2RlbC5hcHBseSh0aGlzLGFyZ3VtZW50cyksdC5lYWNoKHIuZGVyaXZlZCxmdW5jdGlvbih0LGUpe3IuY29tcHV0ZWRQcm9wZXJ0aWVzW2VdPXRoaXMuX19nZXREZXJpdmVkVmFsdWUoZSk7dmFyIG49dC5kZXBzfHxbXTtuLmxlbmd0aCYmdGhpcy5vbigiY2FjaGU6Y2xlYXIgY2hhbmdlOiIrbi5qb2luKCIgY2hhbmdlOiIpLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fX2dldERlcml2ZWRWYWx1ZShlKTt0IT09ci5jb21wdXRlZFByb3BlcnRpZXNbZV0mJihyLmNvbXB1dGVkUHJvcGVydGllc1tlXT10LHRoaXMudHJpZ2dlcigiY2hhbmdlOiIrZSx0aGlzLHQpKX0sdGhpcyl9LHRoaXMpLHRoaXMub24oInN5bmMiLGZ1bmN0aW9uKCl7dGhpcy5fX3N5bmNlZERhdGE9dGhpcy50b0pTT04oKX0sdGhpcyl9LHZhbGlkYXRlOmZ1bmN0aW9uKCl7fSxhbGxvd3M6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5fX3NjaGVtYV9fLHI9dC5leHRlbmQoe30saS5wcm9wcyxpLmxvY2FsKTtyZXR1cm4gdC5oYXMocixlKXx8bi53YXJuKCJGaWVsZCBub3QgZGVmaW5lZCBpbiBzY2hlbWEiLGUpLCEwfSxnZXRQcm9wZXJ0eVNjaGVtYTpmdW5jdGlvbihlKXt2YXIgbj10aGlzLl9fc2NoZW1hX187cmV0dXJuIHQucmVkdWNlKFtuLnByb3BzLG4ubG9jYWxdLGZ1bmN0aW9uKHQsbil7cmV0dXJuIHR8fGEobltlXSxlKX0sbnVsbCl9LHNldDpmdW5jdGlvbihuLGkpe3ZhciByOyJvYmplY3QiPT09KCJ1bmRlZmluZWQiPT10eXBlb2Ygbj8idW5kZWZpbmVkIjpzKG4pKT9yPW46KHI9e30pW25dPWksdC5lYWNoKHIsZnVuY3Rpb24oZSxuKXtpZih0Lmhhcyh0aGlzLl9fc2NoZW1hX18uZGVyaXZlZCxuKSl0aHJvdyJvdmVycmlkaW5nIGRlcml2ZWQgcHJvcGVydGllcyBpcyBub3Qgc3VwcG9ydGVkOiAiK259LHRoaXMpO3ZhciBvPVtdO2lmKHQuZWFjaChyLGZ1bmN0aW9uKHQsZSl7dGhpcy5hbGxvd3MoZSl8fG8ucHVzaChlKX0sdGhpcyksby5sZW5ndGgpdGhyb3ciZmllbGQgbm90IGFsbG93ZWQ6ICIrby5qb2luKCIsICIpO3JldHVybiBlLk1vZGVsLnByb3RvdHlwZS5zZXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxnZXQ6ZnVuY3Rpb24obil7dmFyIGk9dGhpcy5fX3NjaGVtYV9fO3JldHVybiB0LmhhcyhpLmRlcml2ZWQsbik/aS5kZXJpdmVkW25dLmNhY2hlIT09ITE/aS5jb21wdXRlZFByb3BlcnRpZXNbbl06dGhpcy5fX2dldERlcml2ZWRWYWx1ZShuKTplLk1vZGVsLnByb3RvdHlwZS5nZXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0b0pTT04=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YXJndW1lbnRzKX1yZXR1cm4gZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0LnRvU3RyaW5nKCl9LGV9KGZ1bmN0aW9uKGUpe3ZhciBuPStlO3JldHVybiB0LmlzU3RyaW5nKGUpJiZuPT09cGFyc2VJbnQoZSwxMCk/bjplfSkscmFuZG9tU3RyaW5nOmZ1bmN0aW9uKGUpe3ZhciBuPSIwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYVFphYmNkZWZnaGlrbG1ub3BxcnN0dXZ3eHl6IjtpZih2b2lkIDA9PT1lKWU9dC5yYW5kb20obi5sZW5ndGgpO2Vsc2UgaWYoMD09PWUpcmV0dXJuIiI7Zm9yKHZhciBpPVtdO2UtLTspaS5wdXNoKG5bdC5yYW5kb20obi5sZW5ndGgtMSldKTtyZXR1cm4gaS5qb2luKCIiKX0sZW5kc1dpdGg6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdCs9IiIsZSs9IiIsdC5sZW5ndGg+PWUubGVuZ3RoJiZ0LnN1YnN0cmluZyh0Lmxlbmd0aC1lLmxlbmd0aCk9PT1lfSxpc0VtYWlsOmZ1bmN0aW9uKG4pe3ZhciBpPWUudHJpbShuKTtyZXR1cm4hdC5pc0VtcHR5KGkpJiZyLnRlc3QoaSl9fTtyZXR1cm4gb30uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMyOCksbigzNDYpLG4oMzMxKSxuKDUwMiksbig1MDMpLG4oNTA0KSxuKDMyNyksbig1MDUpXSxyPWZ1bmN0aW9uKHQsZSxuLGkscixvLHMsYSl7ZnVuY3Rpb24gbChlKXtpZighZSlyZXR1cm57fTt2YXIgbj17fTtyZXR1cm4gdC5lYWNoKHQua2V5cyhlKSxmdW5jdGlvbih0KXtuW3QudG9Mb3dlckNhc2UoKV09ZVt0XX0pLHQubWFwT2JqZWN0KG4sZnVuY3Rpb24oZSl7dmFyIG49e2xvZ2luOnt9LGNvdW50cnk6e319O2lmKCF0LmlzT2JqZWN0KGUpKXRocm93IG5ldyBFcnJvcignSW52YWxpZCBmb3JtYXQgZm9yICJpMThuIicpO3JldHVybiB0LmVhY2goZSxmdW5jdGlvbih0LGUpe3ZhciBpPWUuc3BsaXQoL15jb3VudHJ5XC4vKTtpLmxlbmd0aD4xP24uY291bnRyeVtpWzFdXT10Om4ubG9naW5baVswXV09dH0pLG59KX1mdW5jdGlvbiBjKCl7dmFyIHQ9SlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShwKSk7cmV0dXJuIHQmJnQudmVyc2lvbj09PXMudmVyc2lvbnx8KHQ9e3ZlcnNpb246cy52ZXJzaW9ufSksdH1mdW5jdGlvbiB1KHQsZSxuKXt2YXIgaT1jKCk7aVt0XT17bG9naW46ZSxjb3VudHJ5Om59LGxvY2FsU3RvcmFnZS5zZXRJdGVtKHAsSlNPTi5zdHJpbmdpZnkoaSkpfWZ1bmN0aW9uIGQodCxlLGkpe3ZhciByLG87cmV0dXJuIHI9ZS5yZXBsYWNlKCItIiwiXyIpLG89aS5yZXdyaXRlKGYoe2J1bmRsZTp0LGxhbmd1YWdlQ29kZTpyfSkpLG4uYWpheCh7dXJsOmkuYmFzZVVybCtvLGRhdGFUeXBlOiJqc29ucCIsY2FjaGU6ITAsdGltZW91dDo1ZTMsanNvbnBDYWxsYmFjazoianNvbnBfIit0fSl9ZnVuY3Rpb24gaChuLGkpe2lmKCJlbiI9PT1ufHwhdC5jb250YWlucyhzLnM=", "base64"));
  res.write(new Buffer("dXBwb3J0ZWRMYW5ndWFnZXMsbikpcmV0dXJuIGUoe30pO3ZhciByPSFhLmxvY2FsU3RvcmFnZUlzTm90U3VwcG9ydGVkKCk7aWYocil7dmFyIGw9YygpO2lmKGxbbl0pcmV0dXJuIGUobFtuXSl9cmV0dXJuIGUuYWxsKFtkKCJsb2dpbiIsbixpKSxkKCJjb3VudHJ5IixuLGkpXSkuc3ByZWFkKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHImJnUobix0LGUpLHtsb2dpbjp0LGNvdW50cnk6ZX19KS5mYWlsKGZ1bmN0aW9uKCl7cmV0dXJuIG8ud2FybigiVW5hYmxlIHRvIGxvYWQgbGFuZ3VhZ2U6ICIrbikse319KX12YXIgcD0ib3N3Lmxhbmd1YWdlcyIsZj10LnRlbXBsYXRlKCIvbGFiZWxzL2pzb25wL3t7YnVuZGxlfX1fe3tsYW5ndWFnZUNvZGV9fS5qc29ucCIpO3JldHVybntsb2dpbjppLGNvdW50cnk6cixjb3VyYWdlOmksY3VycmVudExhbmd1YWdlOm51bGwsaXNMb2FkZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY3VycmVudExhbmd1YWdlPT09dH0sbG9hZExhbmd1YWdlOmZ1bmN0aW9uKGUsbixvKXt2YXIgcz1sKG4pLGE9ZS50b0xvd2VyQ2FzZSgpO3JldHVybiBoKGUsbykudGhlbih0LmJpbmQoZnVuY3Rpb24obil7dGhpcy5sb2dpbj10LmV4dGVuZCh7fSxpLG4ubG9naW4pLHRoaXMuY291bnRyeT10LmV4dGVuZCh7fSxyLG4uY291bnRyeSksdGhpcy5jb3VyYWdlPXQuZXh0ZW5kKHt9LGksbi5sb2dpbiksc1thXSYmKHQuZXh0ZW5kKHRoaXMubG9naW4sc1thXS5sb2dpbiksdC5leHRlbmQodGhpcy5jb3VudHJ5LHNbYV0uY291bnRyeSksdC5leHRlbmQodGhpcy5jb3VyYWdlLHNbYV0ubG9naW4pKSx0aGlzLmN1cnJlbnRMYW5ndWFnZT1lfSx0aGlzKSl9fX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz17c2lnbm91dDoiU2lnbiBPdXQiLHJlbWVtYmVyOiJSZW1lbWJlciBtZSIscmVtZW1iZXJEZXZpY2U6IlRydXN0IHRoaXMgZGV2aWNlIiwicmVtZW1iZXJEZXZpY2UudGltZWJhc2VkIjoiRG8gbm90IGNoYWxsZW5nZSBtZSBvbiB0aGlzIGRldmljZSBmb3IgdGhlIG5leHQgezB9IiwicmVtZW1iZXJEZXZpY2UuZGV2aWNlYmFzZWQiOiJEbyBub3QgY2hhbGxlbmdlIG1lIG9uIHRoaXMgZGV2aWNlIGFnYWluIixhdXRvUHVzaDoiU2VuZCBwdXNoIGF1dG9tYXRpY2FsbHkiLHVubG9ja2FjY291bnQ6IlVubG9jayBhY2NvdW50PyIsbmVlZGhlbHA6Ik5lZWQgaGVscCBzaWduaW5nIGluPyIsZ29iYWNrOiJCYWNrIHRvIFNpZ24gSW4iLGZvcmdvdHBhc3N3b3JkOiJGb3Jnb3QgcGFzc3dvcmQ/IixoZWxwOiJIZWxwIixyZXRyeToiUmV0cnkiLCJtaW51dGVzLm9uZU1pbnV0ZSI6Im1pbnV0ZSIsbWludXRlczoiezB9IG1pbnV0ZXMiLGhvdXJzOiJ7MH0gaG91cnMiLGRheXM6InswfSBkYXlzIiwiZXJyb3IuY29uZmlnIjoiVGhlcmUgd2FzIGEgY29uZmlndXJhdGlvbiBlcnJvciIsImVycm9yLnJlcXVpcmVkLmF1dGhQYXJhbXMiOidNaXNzaW5nIHBhcmFtZXRlcnMgZm9yIHRoZSBjb25maWd1cmVkIGF1dGhlbnRpY2F0aW9uIHNjaGVtZSAtICJPQVVUSDIiJywiZXJyb3IucmVxdWlyZWQuYmFzZVVybCI6JyJiYXNlVXJsIiBpcyBhIHJlcXVpcmVkIHdpZGdldCBwYXJhbWV0ZXInLCJlcnJvci5yZXF1aXJlZC5zdWNjZXNzIjoiQSBzdWNjZXNzIGhhbmRsZXIgaXMgcmVxdWlyZWQiLCJlcnJvci5yZXF1aXJlZC5lbCI6JyJlbCIgaXMgYSByZXF1aXJlZCB3aWRnZXQgcGFyYW1ldGVyJywiZXJyb3IudW5zdXBwb3J0ZWQuYnJvd3NlciI6IlVuc3VwcG9ydGVkIGJyb3dzZXIiLCJlcnJvci51bnN1cHBvcnRlZC5jb3JzIjoiVW5zdXBwb3J0ZWQgYnJvd3NlciAtIG1pc3NpbmcgQ09SUyBzdXBwb3J0IiwiZXJyb3IudW5zdXBwb3J0ZWQubG9jYWxTdG9yYWdlIjoiVW5zdXBwb3J0ZWQgYnJvd3NlciAtIG1pc3NpbmcgbG9jYWxTdG9yYWdlIHN1cHBvcnQiLCJlcnJvci5lbmFibGVkLmNvcnMiOiJUaGVyZSB3YXMgYW4gZXJyb3Igc2VuZGluZyB0aGUgcmVxdWVzdCAtIGhhdmUgeW91IGVuYWJsZWQgQ09SUz8iLCJlcnJvci5leHBpcmVkLnNlc3Npb24iOiJZb3VyIHNlc3Npb24gaGFzIGV4cGlyZWQuIFBsZWFzZSB0cnkgdG8gbG9nIGluIGFnYWluLiIsImVycm9yLmF1dGgubG9ja2VkT3V0IjoiWW91ciBhY2NvdW50IGlzIGxvY2tlZC4gUGxlYXNlIGNvbnRhY3QgeW91ciBhZG1pbmlzdHJhdG9yLiIsImVycm9yLm9hdXRoLmlkVG9rZW4iOiJUaGVyZSB3YXMgYSBwcm9ibGVtIGdlbmVyYXRpbmcgdGhlIGlkX3Rva2VuIGZvciB0aGUgdXNlci4gUGxlYXNlIHRyeSBhZ2Fpbi4iLCJlcnJvci5uZXR3b3JrLmNvbm5lY3Rpb24iOiJVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgc2VydmVyLiBQbGVhc2UgY2hlY2sgeW91ciBuZXR3b3JrIGNvbm5lY3Rpb24uIiwiZXJyb3IudXNlcm5hbWUucmVxdWlyZWQiOiJQbGVhc2UgZW50ZXIgYSB1c2VybmFtZSIsImVycm9yLnBhc3N3b3JkLnJlcXVpcmVkIjoiUGxlYXNlIGVudGVyIGEgcGFzc3dvcmQiLCJlcnJvcnMuRTAwMDAwMDQiOiJTaWduIGluIGZhaWxlZCEiLCJlcnJvcnMuRTAwMDAwNjkiOiJZb3VyIGFjY291bnQgd2FzIGxvY2tlZCBkdWUgdG8gZXhjZXNzaXZlIE1GQSBhdHRlbXB0cy4iLCJlcnJvcnMuRTAwMDAwNDciOiJZb3UgZXhjZWVkZWQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJlcXVlc3RzLiBUcnkgYWdhaW4gaW4gYSB3aGlsZS4iLCJlcnJvcnMuRTAwMDAwMDEiOiJBcGkgdmFsaWRhdGlvbiBmYWlsZWQ6IHswfSIsImVycm9ycy5FMDAwMDAwMiI6IlRoZSByZXF1ZXN0IHdhcyBub3QgdmFsaWQ6IHswfSIsImVycm9ycy5FMDAwMDAwMyI6IlRoZSByZXF1ZXN0IGJvZHkgd2FzIG5vdCB3ZWxsLWZvcm1lZC4iLCJlcnJvcnMuRTAwMDAwMDUiOiJJbnZhbGlkIHNlc3Npb24iLCJlcnJvcnMuRTAwMDAwMDYiOiJZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBwZXJmb3JtIHRoZSByZXF1ZXN0ZWQgYWN0aW9uIiwiZXJyb3JzLkUwMDAwMDA3IjoiTm90IGZvdW5kOiB7MH0iLCJlcnJvcnMuRTAwMDAwMDgiOiJUaGUgcmVxdWVzdGVkIHBhdGggd2FzIG5vdCBmb3VuZCIsImVycm9ycy5FMDAwMDAwOSI6IkludGVybmFsIFNlcnZlciBFcnJvciIsImVycm9ycy5FMDAwMDAxMCI6IlNlcnZpY2UgaXMgaW4gcmVhZCBvbmx5IG1vZGUiLCJlcnJvcnMuRTAwMDAwMTEiOiJJbnZhbGlkIHRva2VuIHByb3ZpZGVkIiwiZXJyb3JzLkUwMDAwMDEyIjoiVW5zdXBwb3J0ZWQgbWVkaWEgdHlwZSIsImVycm9ycy5FMDAwMDAxMyI6IkludmFsaWQgY2xpZW50IGFwcCBpZCIsImVycm9ycy5FMDAwMDAxNSI6IllvdSBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGFjY2VzcyB0aGUgZmVhdHVyZSB5b3UgYXJlIHJlcXVlc3RpbmciLCJlcnJvcnMuRTAwMDAwMTYiOiJBY3RpdmF0aW9uIGZhaWxlZCBiZWNhdXNlIHRoZSB1c2VyIGlzIGFscmVhZHkgYWN0aXZlIiwiZXJyb3JzLkUwMDAwMDE3IjoiUGFzc3dvcmQgcmVzZXQgZmFpbGVkIiwiZXJyb3JzLkUwMDAwMDE4IjoiQmFkIHJlcXVlc3QuICBBY2NlcHQgYW5kL29yIENvbnRlbnQtVHlwZSBoZWFkZXJzIGFyZSBsaWtlbHkgbm90IHNldC4iLCJlcnJvcnMuRTAwMDAwMTkiOiJCYWQgcmVxdWVzdC4gIEFjY2VwdCBhbmQvb3IgQ29udGVudC1UeXBlIGhlYWRlcnMgbGlrZWx5IGRvIG5vdCBtYXRjaCBzdXBwb3J0ZWQgdmFsdWVzLiIsImVycm9ycy5FMDAwMDAyMCI6IkJhZCByZXF1ZXN0LiIsImVycm9ycy5FMDAwMDAyMSI6IkJhZCByZXF1ZXN0LiAgQWNjZXB0IGFuZC9vciBDb250ZW50LVR5cGUgaGVhZGVycyBsaWtlbHkgZG8gbm90IG1hdGNoIHN1cHBvcnRlZCB2YWx1ZXMuIiwiZXJyb3JzLkUwMDAwMDIyIjoiVGhlIGVuZHBvaW50IGRvZXMgbm90IHN1cHBvcnQgdGhlIHByb3ZpZGVkIEhUVFAgbWV0aG9kIiwiZXJyb3JzLkUwMDAwMDIzIjoiT3BlcmF0aW9uIGZhaWxlZCBiZWNhdXNlIHVzZXIgcHJvZmlsZSBpcyBtYXN0ZXJlZCB1bmRlciBhbm90aGVyIHN5c3RlbSIsImVycm9ycy5FMDAwMDAyNCI6IkJhZCByZXF1ZXN0LiAgVGhpcyBvcGVyYXRpb24gb24gYXBwIG1ldGFkYXRhIGlzIG5vdCB5ZXQgc3VwcG9ydGVkLiIsImVycm9ycy5FMDAwMDAyNSI6IkFwcCB2ZXJzaW9uIGFzc2lnbm1lbnQgZmFpbGVkLiIsImVycm9ycy5FMDAwMDAyNiI6IlRoaXMgZW5kcG9pbnQgaGFzIGJlZW4gZGVwcmVjYXRlZC4iLCJlcnJvcnMuRTAwMDAwMjciOiJHcm91cCBwdXNoIGJhZCByZXF1ZXN0IDogezB9IiwiZXJyb3JzLkUwMDAwMDI4IjoiVGhlIHJlcXVlc3QgaXMgbWlzc2luZyBhIHJlcXVpcmVkIHBhcmFtZXRlci4iLCJlcnJvcnMuRTAwMDAwMjkiOiJJbnZhbGlkIHBhZ2luZyByZXF1ZXN0LiIsImVycm9ycy5FMDAwMDAzMCI6IkJhZCByZXF1ZXN0LiBJbnZhbGlkIGRhdGUuIERhdGVzIG11c3QgYmUgb2YgdGhlIGZvcm0geXl5eS1NTS1kZCcnVCcnSEg6bW06c3MuU1NTWlosIGUuZy4gMjAxMy0wMS0wMVQxMjowMDowMC4wMDAtMDc6MDAuIiwiZXJyb3JzLkUwMDAwMDMxIjoiSW52YWxpZCBzZWFyY2ggY3JpdGVyaWEuIiwiZXJyb3JzLkUwMDAwMDMyIjoiVW5sb2NrIGlzIG5vdCBhbGxvd2VkIGZvciB0aGlzIHVzZXIuIiwiZXJyb3JzLkUwMDAwMDMzIjoiQmFkIHJlcXVlc3QuIENhbid0IHNwZWNpZnkgYSBzZWFyY2ggcXVlcnkgYW5kIGZpbHRlciBpbiB0aGUgc2FtZSByZXF1ZXN0LiIsImVycm9ycy5FMDAwMDAzNCI6IkZvcmdvdCBwYXNzd29yZCBub3QgYWxsb3dlZCBvbiBzcGVjaWZpZWQgdXNlci4iLCJlcnJvcnMuRTAwMDAwMzUiOiJDaGFuZ2UgcGFzc3dvcmQgbm90IGFsbG93ZWQgb24gc3BlY2lmaWVkIHVzZXIuIiwiZXJyb3JzLkUwMDAwMDM2IjoiQ2hhbmdlIHJlY292ZXJ5IHF1ZXN0aW9uIG5vdCBhbGxvd2VkIG9uIHNwZWNpZmllZCB1c2VyLiIsImVycm9ycy5FMDAwMDAzNyI6IlR5cGUgbWlzbWF0Y2ggZXhjZXB0aW9uLiIsImVycm9ycy5FMDAwMDAzOCI6IlRoaXMgb3BlcmF0aW9uIGlzIG5vdCBhbGxvd2VkIGluIHRoZSB1c2VyJydzIGN1cnJlbnQgc3RhdHVzLiIsImVycm9ycy5FMDAwMDAzOSI6Ik9wZXJhdGlvbiBvbiBhcHBsaWNhdGlvbiBzZXR0aW5ncyBmYWlsZWQuIiwiZXJyb3JzLkUwMDAwMDQwIjoiQXBwbGljYXRpb24gbGFiZWwgbXVzdCBub3QgYmUgdGhlIHNhbWUgYXMgYW4gZXhpc3RpbmcgYXBwbGljYXRpb24gbGFiZWwuIiwiZXJyb3JzLkUwMDAwMDQxIjoiQ3JlZGVudGlhbHMgc2hvdWxkIG5vdCBiZSBzZXQgb24gdGhpcyByZXNvdXJjZSBiYXNlZCBvbiB0aGUgc2NoZW1lLiIsImVycm9ycy5FMDAwMDA0MiI6IlNldHRpbmcgdGhlIGVycm9yIHBhZ2UgcmVkaXJlY3QgVVJMIGZhaWxlZC4iLCJlcnJvcnMuRTAwMDAwNDMiOiJTZWxmIHNlcnZpY2UgYXBwbGljYXRpb24gYXNzaWdubWVudCBpcyBub3QgZW5hYmxlZC4iLCJlcnJvcnMuRTAwMDAwNDQiOiJTZWxmIHNlcnZpY2UgYXBwbGljYXRpb24gYXNzaWdubWVudCBpcyBub3Qgc3VwcG9ydGVkLiIsImVycm9ycy5FMDAwMDA0NSI6IkZpZWxkIG1hcHBpbmcgYmFkIHJlcXVlc3QuIiwiZXJyb3JzLkUwMDAwMDQ2IjoiRGVhY3RpdmF0ZSBhcHBsaWNhdGlvbiBmb3IgdXNlciBmb3JiaWRkZW4uIiwiZXJyb3JzLkUwMDAwMDQ4IjoiRW50aXR5IG5vdCBmb3VuZCBleGNlcHRpb24uIiwiZXJyb3JzLkUwMDAwMDQ5IjoiSW52YWxpZCBTQ0lNIGRhdGEgZnJvbSBTQ0lNIGltcGxlbWVudGF0aW9uLiIsImVycm9ycy5FMDAwMDA1MCI6IkludmFsaWQgU0NJTSBkYXRhIGZyb20gY2xpZW50LiIsImVycm9ycy5FMDAwMDA1MSI6Ik5vIHJlc3BvbnNlIGZyb20gU0NJTSBpbXBsZW1lbnRhdGlvbi4iLCJlcnJvcnMuRTAwMDAwNTIiOiJFbmRwb2ludCBub3QgaW1wbGVtZW50ZWQuIiwiZXJyb3JzLkUwMDAwMDUzIjoiSW52YWxpZCBTQ0lNIGZpbHRlci4iLCJlcnJvcnMuRTAwMDAwNTQiOiJJbnZhbGlkIHBhZ2luYXRpb24gcHJvcGVydGllcy4iLCJlcnJvcnMuRTAwMDAwNTUiOiJEdXBsaWNhdGUgZ3JvdXAuIiwiZXJyb3JzLkUwMDAwMDU2IjoiRGVsZXRlIGFwcGxpY2F0aW9uIGZvcmJpZGRlbi4iLCJlcnJvcnMuRTAwMDAwNTciOiJBY2Nlc3MgdG8gdGhpcyBhcHBsaWNhdGlvbiBpcyBkZW5pZWQgZHVlIHRvIGEgcG9saWN5LiIsImVycm9ycy5FMDAwMDA1OCI6IkFjY2VzcyB0byB0aGlzIGFwcGxpY2F0aW9uIHJlcXVpcmVzIE1GQTogezB9IiwiZXJyb3JzLkUwMDAwMDU5IjoiVGhlIGNvbm5lY3RvciBjb25maWd1cmF0aW9uIGNvdWxkIG5vdCBiZSB0ZXN0ZWQuIE1ha2Ugc3VyZSB0aGF0IHRoZSBVUkwsIEF1dGhlbnRpY2F0aW9uIFBhcmFtZXRlcnMgYXJlIGNvcnJlY3QgYW5kIHRoYXQgdGhlcmUgaXMgYW4gaW1wbGVtZW50YXRpb24gYXZhaWxhYmxlIGF0IHRoZSBVUkwgcHJvdmlkZWQuIiwiZXJyb3JzLkUwMDAwMDYwIjoiVW5zdXBwb3J0ZWQgb3BlcmF0aW9uLiIsImVycm9ycy5FMDAwMDA2MSI6IlRhYiBlcnJvcjogezB9IiwiZXJyb3JzLkUwMDAwMDYyIjoiVGhlIHNwZWNpZmllZCB1c2VyIGlzIGFscmVhZHkgYXNzaWduZWQgdG8gdGhlIGFwcGxpY2F0aW9uLiIsImVycm9ycy5FMDAwMDA2MyI6IkludmFsaWQgY29tYmluYXRpb24gb2YgcGFyYW1ldGVycyBzcGVjaWZpZWQuIiwiZXJyb3JzLkUwMDAwMDY0IjoiUGFzc3dvcmQgaXMgZXhwaXJlZCBhbmQgbXVzdCBiZSBjaGFuZ2VkLiIsImVycm9ycy5FMDAwMDA2NSI6IkludGVybmFsIGVycm9yIHByb2Nlc3NpbmcgYXBwIG1ldGFkYXRhLiIsImVycm9ycy5FMDAwMDA2NiI6IkFQTlMgaXMgbm90IGNvbmZpZ3VyZWQsIGNvbnRhY3QgeW91ciBhZG1pbiIsImVycm9ycy5FMDAwMDA2NyI6IkZhY3RvcnMgU2VydmljZSBFcnJvci4iLCJlcnJvcnMuRTAwMDAwNzAiOiJXYWl0aW5nIGZvciBBQ0siLCJlcnJvcnMuRTAwMDAwNzEiOiJVbnN1cHBvcnRlZCBPUyBWZXJzaW9uOiB7MH0iLCJlcnJvcnMuRTAwMDAwNzIiOiJNSU0gcG9saWN5IHNldHRpbmdzIGhhdmUgZGlzYWxsb3dlZCBlbnJvbGxtZW50IGZvciB0aGlzIHVzZXIiLCJlcnJvcnMuRTAwMDAwNzMiOiJVc2VyIHJlamVjdGVkIGF1dGhlbnRpY2F0aW9uIiwiZXJyb3JzLkUwMDAwMDc0IjoiRmFjdG9yIFNlcnZpY2UgRXJyb3IiLCJlcnJvcnMuRTAwMDAwNzUiOiJDYW5ub3QgbW9kaWZ5IHRoZSB7MH0gYXR0cmlidXRlIGJlY2F1c2UgaXQgaGFzIGEgZmllbGQgbWFwcGluZyBhbmQgcHJvZmlsZSBwdXNoIGlzIGVuYWJsZWQuIiwiZXJyb3JzLkUwMDAwMDc2IjoiQ2Fubm90IG1vZGlmeSB0aGUgYXBwIHVzZXIgYmVjYXVzZSBpdCBpcyBtYXN0ZXJlZCBieSBhbiBleHRlcm5hbCBhcHAuIiwiZXJyb3JzLkUwMDAwMDc3IjoiQ2Fubm90IG1vZGlmeSB0aGUgezB9IGF0dHJpYnV0ZSBiZWNhdXNlIGl0IGlzIHJlYWQtb25seS4iLCJlcnJvcnMuRTAwMDAwNzgiOiJDYW5ub3QgbW9kaWZ5IHRoZSB7MH0gYXR0cmlidXRlIGJlY2F1c2UgaXQgaXMgaW1tdXRhYmxlLiIsImVycm9ycy5FMDAwMDA3OSI6IlRoaXMgb3BlcmF0aW9uIGlzIG5vdCBhbGxvd2VkIGluIHRoZSBjdXJyZW50IGF1dGhlbnRpY2F0aW9uIHN0YXRlLiIsImVycm9ycy5FMDAwMDA4MSI6IkNhbm5vdCBtb2RpZnkgdGhlIHswfSBhdHRyaWJ1dGUgYmVjYXVzZSBpdCBpcyBhIHJlc2VydmVkIGF0dHJpYnV0ZSBmb3IgdGhpcyBhcHBsaWNhdGlvbi4iLCJlcnJvcnMuRTAwMDAwODIiOiJFYWNoIGNvZGUgY2FuIG9ubHkgYmUgdXNlZCBvbmNlLiBQbGVhc2Ugd2FpdCBmb3IgYSBuZXcgY29kZSBhbmQgdHJ5IGFnYWluLiIsImVycm9ycy5FMDAwMDA4MyI6IlBhc3NDb2RlIGlzIHZhbGlkIGJ1dCBleGNlZWRlZCB0aW1lIHdpbmRvdy4iLCJlcnJvcnMuRTAwMDAwODQiOiJBcHAgZXZhbHVhdGlvbiBlcnJvci4iLCJlcnJvcnMuRTAwMDAwODUiOiJZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgeW91ciBhY2NvdW50IGF0IHRoaXMgdGltZS4iLCJlcnJvcnMuRTAwMDAwODYiOiJUaGlzIHBvbGljeSBjYW5ub3QgYmUgYWN0aXZhdGVkIGF0IHRoaXMgdGltZS4iLCJlcnJvcnMuRTAwMDAwODciOiJUaGUgcmVjb3ZlcnkgcXVlc3Rpb24gYW5zd2VyIGRpZCBub3QgbWF0Y2ggb3VyIHJlY29yZHMuIiwiZXJyb3JzLkUwMDAwMDkwIjoiVGhlIHJvbGUgc3BlY2lmaWVkIGlzIGFscmVhZHkgYXNzaWduZWQgdG8gdGhlIHVzZXIuIiwiZXJyb3JzLkUwMDAwMDkxIjoiVGhlIHByb3ZpZGVkIHJvbGUgdHlwZSB3YXMgbm90IHRoZSBzYW1lIGFzIHJlcXVpcmVkIHJvbGUgdHlwZS4iLCJlcnJvcnMuRTAwMDAwOTIiOiJBY2Nlc3MgdG8gdGhpcyBhcHBsaWNhdGlvbiByZXF1aXJlcyByZS1hdXRoZW50aWNhdGlvbjogezB9IiwiZXJyb3JzLkUwMDAwMDkzIjoiVGFyZ2V0IGNvdW50IGxpbWl0IGV4Y2VlZGVkIiwiZXJyb3JzLkUwMDAwMDk0IjoiVGhlIHByb3ZpZGVkIGZpbHRlciBpcyB1bnN1cHBvcnRlZC4iLCJlcnJvcnMuRTAwMDAwOTUiOiJSZWNvdmVyeSBub3QgYWxsb3dlZCBmb3IgdW5rbm93biB1c2VyLiIsImVycm9ycy5FMDAwMDA5NiI6IlRoaXMgY2VydGlmaWNhdGUgaGFzIGFscmVhZHkgYmVlbiB1cGxvYWRlZCB3aXRoIGtpZD17MH0uIiwiZXJyb3JzLkUwMDAwMDk3IjoiVGhlcmUgaXMgbm8gdmVyaWZpZWQgcGhvbmUgbnVtYmVyIG9uIGZpbGUuIiwiZXJyb3JzLkUwMDAwMDk4IjoiVGhpcyBwaG9uZSBudW1iZXIgaXMgaW52YWxpZC4iLCJlcnJvcnMuRTAwMDAwOTkiOiJPbmx5IG51bWJlcnMgbG9jYXRlZCBpbiBVUyBhbmQgQ2FuYWRhIGFyZSBhbGxvd2VkLiAgQ29udGFjdCB5b3VyIGFkbWluaXN0cmF0b3IgaWYgdGhpcyBpcyBhIHByb2JsZW0uIiwiZXJyb3JzLkUwMDAwMTAwIjoiVW5hYmxlIHRvIHBlcmZvcm0gc2VhcmNoIHF1ZXJ5LiIsImVycm9ycy5FMDAwMDEwMSI6IlVwbG9hZCBmYWlsZWQgYmVjYXVzZSBvZiBhIHByb2JsZW0gd2l0aCB5b3VyIGlwYSBmaWxlLCB7MH0iLCJlcnJvcnMuRTAwMDAxMDIiOiJZdWJpS2V5IGNhbm5vdCBiZSBkZWxldGVkIHdoaWxlIGFzc2lnbmVkIHRvIGFuIHVzZXIuIFBsZWFzZSBkZWFjdGl2YXRlIFl1YmlLZXkgdXNpbmcgcmVzZXQgTUZBIGFuZCB0cnkgYWdhaW4iLCJlcnJvcnMuRTAwMDAxMDMiOiJBY3Rpb24gb24gZGV2aWNlIGFscmVhZHkgaW4gcXVldWUgb3IgaW4gcHJvZ3Jlc3MiLCJlcnJvcnMuRTAwMDAxMDQiOiJEZXZpY2UgaXMgYWxyZWFkeSBsb2NrZWQgYW5kIGNhbm5vdCBiZSBsb2NrZWQgYWdhaW4iLCJlcnJvcnMuRTAwMDAxMDUiOiJZb3UgaGF2ZSBhY2Nlc3NlZCBhbiBhY2NvdW50IHJlY292ZXJ5IGxpbmsgdGhhdCBoYXMgZXhwaXJlZCBvciBiZWVuIHByZXZpb3VzbHkgdXNlZC4iLCJlcnJvcnMuRTAwMDAxMDYiOiJXYWl0IGZvciB0b2tlbiB0byBjaGFuZ2UsIHRoZW4gZW50ZXIgdGhlIG5ldyB0b2tlbmNvZGUuIiwiZXJyb3JzLkUwMDAwMTA3IjoiVGhlIGVudGl0eSBpcyBub3QgaW4gdGhlIGV4cGVjdGVkIHN0YXRlIGZvciB0aGUgcmVxdWVzdGVkIHRyYW5zaXRpb24uIiwiZXJyb3JzLkUwMDAwMTA5IjoiQW4gU01TIG1lc3NhZ2Ugd2FzIHJlY2VudGx5IHNlbnQuIFBsZWFzZSB3YWl0IDMwIHNlY29uZHMgYmVmb3JlIHRyeWluZyBhZ2Fpbi4iLCJlcnJvcnMuRTAwMDAxMTAiOiJZb3UgaGF2ZSBhY2Nlc3NlZCBhIGxpbmsgdGhhdCBoYXMgZXhwaXJlZCBvciBoYXMgYmVlbiBwcmV2aW91c2x5IHVzZWQuIiwiZXJyb3JzLkUwMDAwMTExIjoiQ2Fubm90IG1vZGlmeSB0aGUgezB9IG9iamVjdCBiZWNhdXNlIGl0IGlzIHJlYWQtb25seS4iLCJlcnJvcnMuRTAwMDAxMTIiOiJDYW5ub3QgdXBkYXRlIHRoaXMgdXNlciBiZWNhdXNlIHRoZXkgYXJlIHN0aWxsIGJlaW5nIGFjdGl2YXRlZC4gUGxlYXNlIHRyeSBhZ2FpbiBpbiBhIGZldyBtaW51dGVzLiIsImVycm9ycy5FMDAwMDExMyI6InswfS4iLCJlcnJvcnMuRTAwMDAxMTQiOiJBIHVzZXIgd2l0aCB0aGlzIGxvZ2luIGFscmVhZHkgZXhpc3RzIGluIHRoZSBjdXJyZW50IG9yZ2FuaXphdGlvbi4iLCJlcnJvcnMuRTAwMDAxMTUiOiJVcGxvYWQgZmFpbGVkLCB7MH0iLCJlcnJvcnMuRTAwMDAxMTYiOiJ7MH0iLCJlcnJvcnMuRTAwMDAxMTkiOiJZb3VyIGFjY291bnQgaXMgbG9ja2VkLiBQbGVhc2UgY29udGFjdCB5b3VyIGFkbWluaXN0cmF0b3IuIiwiZXJyb3JzLkUwMDAwMTI0IjoiQ291bGQgbm90IGNyZWF0ZSB1c2VyLiBUbyBjcmVhdGUgYSB1c2VyIGFuZCBleHBpcmUgdGhlaXIgcGFzc3dvcmQgaW1tZWRpYXRlbHksIGEgcGFzc3dvcmQgbXVzdCBiZSBzcGVjaWZpZWQiLCJlcnJvcnMuRTAwMDAxMjUiOidDb3VsZCBub3QgY3JlYXRlIHVzZXIuIFRvIGNyZWF0ZSBhIHVzZXIgYW5kIGV4cGlyZSB0aGVpciBwYXNzd29yZCBpbW1lZGlhdGVseSwgImFjdGl2YXRlIiBtdXN0IGJlIHRydWUnLCJvZm9ybS5uZXh0IjoiTmV4dCIsIm9mb3JtLnZlcmlmeSI6IlZlcmlmeSIsIm9mb3JtLnNlbmQiOiJTZW5kIiwib2Zvcm0uYmFjayI6IkJhY2siLCJvZm9ybS5zYXZlIjoiU2F2ZSIsIm9mb3JtLmNhbmNlbCI6IkNhbmNlbCIsIm9mb3JtLmVkaXQiOiJFZGl0Iiwib2Zvcm0ucHJldmlvdXMiOiJQcmV2aW91cyIsIm9mb3JtLmVycm9yYmFubmVyLnRpdGxlIjoiV2UgZm91bmQgc29tZSBlcnJvcnMuIFBsZWFzZSByZXZpZXcgdGhlIGZvcm0gYW5kIG1ha2UgY29ycmVjdGlvbnMuIiwib2Zvcm0uZXJyb3Jtc2cudGl0bGUiOiJQbGVhc2UgcmV2aWV3IHRoZSBmb3JtIHRvIGNvcnJlY3QgdGhlIGZvbGxvd2luZyBlcnJvcnM6Iiwib2Zvcm0uZXJyb3IudW5leHBlY3RlZCI6IlRoZXJlIHdhcyBhbiB1bmV4cGVjdGVkIGludGVybmFsIGVycm9yLiBQbGVhc2UgdHJ5IGFnYWluLiIsIm1vZGVsLnZhbGlkYXRpb24uZmllbGQuYmxhbmsiOiJUaGUgZmllbGQgY2Fubm90IGJlIGxlZnQgYmxhbmsiLCJtb2RlbC52YWxpZGF0aW9uLmZpZWxkLmFzY2lpIjoiVGhlIGZpZWxkIGNhbm5vdCBjb250YWluIE5vbi1BU0NJSSBjaGFyYWN0ZXJzIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC53cm9uZy50eXBlIjoiVGhlIGZpZWxkIGlzIG9mIHRoZSB3cm9uZyB0eXBlIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC5pbnZhbGlkIjoiVGhlIGZpZWxkIGhhcyBhbiBpbnZhbGlkIHZhbHVlIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC52YWx1ZS5ub3QuYWxsb3dlZCI6IlRoZSBmaWVsZCB2YWx1ZSBpcyBub3QgYWxsb3dlZCIsIm1vZGVsLnZhbGlkYXRpb24uZmllbGQuYXJyYXkubWluSXRlbXMiOiJUaGUgYXJyYXkgZG9lcyBub3QgaGF2ZSBlbm91Z2ggaXRlbXMiLCJtb2RlbC52YWxpZGF0aW9uLmZpZWxkLmFycmF5Lm1heEl0ZW1zIjoiVGhlIGFycmF5IGNvbnRhaW5zIHRvbyBtYW55IGl0ZW1zIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC5hcnJheS51bmlxdWUiOiJUaGUgYXJyYXkgY2FuIG9ubHkgaGF2ZSB1bmlxdWUgdmFsdWVzIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC50b28ubG9uZyI6IlRoZSBmaWVsZCBjYW5ub3QgZXhjZWVkIHswfSBjaGFyYWN0ZXJzIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC50b28uc21hbGwiOiJUaGUgZmllbGQgY2Fubm90IGJlIGxlc3MgdGhhbiB7MH0gY2hhcmFjdGVycyIsIm1vZGVsLnZhbGlkYXRpb24uZmllbGQuc3RyaW5nLm1pbkxlbmd0aCI6IlRoaXMgZmllbGQgY2Fubm90IGJlIGxlc3MgdGhhbiB0aGUgbWluaW11bSByZXF1aXJlZCBjaGFyYWN0ZXJzIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC5zdHJpbmcubWF4TGVuZ3RoIjoiVGhpcyBmaWVsZCBjYW5ub3QgZXhjZWVkIHRoZSBtYXhpbXVtIGFsbG93ZWQgY2hhcmFjdGVycyIsIm1vZGVsLnZhbGlkYXRpb24uZmllbGQuaW52YWxpZC5mb3JtYXQuZW1haWwiOiJUaGlzIHZhbHVlIGlzIG5vdCBhIHZhbGlkIGVtYWlsIGFkZHJlc3MiLCJtb2RlbC52YWxpZGF0aW9uLmZpZWxkLmludmFsaWQuZm9ybWF0LnVyaSI6IlRoaXMgdmFsdWUgaXMgbm90IGEgdmFsaWQgVVJJIiwibW9kZWwudmFsaWRhdGlvbi5maWVsZC5pbnZhbGlkLmZvcm1hdC5pcHY0IjoiVGhpcyB2YWx1ZSBpcyBub3QgYSB2YWxpZCBJUHY0IGFkZHJlc3MiLCJtb2RlbC52YWxpZGF0aW9uLmZpZWxkLmludmFsaWQuZm9ybWF0Lmhvc3RuYW1lIjoiVGhpcyB2YWx1ZSBpcyBub3QgYSB2YWxpZCBob3N0bmFtZSIsIm1vZGVsLnZhbGlkYXRpb24uZmllbGQudXNlcm5hbWUiOiJQbGVhc2UgY2hlY2sgeW91ciB1c2VybmFtZSIsImZhY3Rvci50b3RwU29mdC5va3RhVmVyaWZ5IjoiT2t0YSBWZXJpZnkiLCJmYWN0b3IudG90cFNvZnQuZ29vZ2xlQXV0aGVudGljYXRvciI6Ikdvb2dsZSBBdXRoZW50aWNhdG9yIiwiZmFjdG9yLnRvdHBTb2Z0LmRlc2NyaXB0aW9uIjoiRW50ZXIgc2luZ2xlLXVzZSBjb2RlIGZyb20gdGhlIG1vYmlsZSBhcHAuIiwiZmFjdG9yLnRvdHBIYXJkLnJzYVNlY3VySWQiOiJSU0EgU2VjdXJJRCIsImZhY3Rvci50b3RwSGFyZC5zeW1hbnRlY1ZpcCI6IlN5bWFudGVjIFZJUCIsImZhY3Rvci50b3RwSGFyZC5kZXNjcmlwdGlvbiI6IkVudGVyIGEgc2luZ2xlLXVzZSBjb2RlIGZyb20gYSBoYXJkd2FyZSB0b2tlbi4iLCJmYWN0b3IudG90cEhhcmQueXViaWtleSI6Ill1YmlrZXkiLCJmYWN0b3IudG90cEhhcmQueXViaWtleS5kZXNjcmlwdGlvbiI6Ikluc2VydCB5b3VyIFl1YmlrZXkgYW5kIHRhcCBpdCB0byBnZXQgYSB2ZXJpZmljYXRpb24gY29kZS4iLCJmYWN0b3IudG90cEhhcmQueXViaWtleS5wbGFjZWhvbGRlciI6IkNsaWNrIGhlcmUsIHRoZW4gdGFwIHlvdXIgWXViaWtleSIsImZhY3Rvci5va3RhVmVyaWZ5UHVzaCI6Ik9rdGEgVmVyaWZ5IiwiZmFjdG9yLnB1c2guZGVzY3JpcHRpb24iOiJVc2UgYSBwdXNoIG5vdGlmaWNhdGlvbiBzZW50IHRvIHRoZSBtb2JpbGUgYXBwLiIsImZhY3Rvci5kdW8iOiJEdW8gU2VjdXJpdHkiLCJmYWN0b3IuZHVvLmRlc2NyaXB0aW9uIjoiVXNlIFB1c2ggTm90aWZpY2F0aW9uLCBTTVMsIG9yIFZvaWNlIGNhbGwgdG8gYXV0aGVudGljYXRlLiIsImZhY3Rvci5zbXMiOiJTTVMgQXV0aGVudGljYXRpb24iLCJmYWN0b3Iuc21zLmRlc2NyaXB0aW9uIjoiRW50ZXIgYSBzaW5nbGUtdXNlIGNvZGUgc2VudCB0byB5b3VyIG1vYmlsZSBwaG9uZS4iLCJmYWN0b3IuY2FsbCI6IlZvaWNlIENhbGwgQXV0aGVudGljYXRpb24iLCJmYWN0b3IuY2FsbC5kZXNjcmlwdGlvbiI6IlVzZSBhIHBob25lIHRvIGF1dGhlbnRpY2F0ZSBieSBmb2xsb3dpbmcgdm9pY2UgaW5zdHJ1Y3Rpb25zLiIsImZhY3Rvci5zZWN1cml0eVF1ZXN0aW9uIjoiU2VjdXJpdHkgUXVlc3Rpb24iLCJmYWN0b3Iuc2VjdXJpdHlRdWVzdGlvbi5kZXNjcmlwdGlvbiI6IlVzZSB0aGUgYW5zd2VyIHRvIGEgc2VjdXJpdHkgcXVlc3Rpb24gdG8gYXV0aGVudGljYXRlLiIsImZhY3Rvci53aW5kb3dzSGVsbG8iOiJXaW5kb3dzIEhlbGxvIiwiZmFjdG9yLndpbmRvd3NIZWxsby5zaWduaW4uZGVzY3JpcHRpb24iOiJTaWduIGluIHRvIE9rdGEgdXNpbmcgV2luZG93cyBIZWxsby4iLCJmYWN0b3IudTJmIjoiU2VjdXJpdHkgS2V5IChVMkYpIiwiZmFjdG9yLnUyZi5kZXNjcmlwdGlvbiI6IlVzZSBhIFVuaXZlcnNhbCAybmQgRmFjdG9yIChVMkYpIHNlY3VyaXR5IGtleSB0byBzaWduIG9uIHRvIE9rdGEuIiwiZmFjdG9yLmVtYWlsIjoiRW1haWwgQXV0aGVudGljYXRpb24iLCJtZmEuY2hhbGxlbmdlLnZlcmlmeSI6IlZlcmlmeSIsIm1mYS5jaGFsbGVuZ2UuYW5zd2VyLnBsYWNlaG9sZGVyIjoiQW5zd2VyIiwibWZhLmNoYWxsZW5nZS5hbnN3ZXIudG9vbHRpcCI6IkFuc3dlciIsIm1mYS5jaGFsbGVuZ2UuYW5zd2VyLnNob3dBbnN3ZXIiOiJTaG93IiwibWZhLmNoYWxsZW5nZS5hbnN3ZXIuaGlkZUFuc3dlciI6IkhpZGUiLCJtZmEuY2hhbGxlbmdlLmVudGVyQ29kZS5wbGFjZWhvbGRlciI6IkVudGVyIENvZGUiLCJtZmEuY2hhbGxlbmdlLmVudGVyQ29kZS50b29sdGlwIjoiRW50ZXIgQ29kZSIsIm1mYS5iYWNrVG9GYWN0b3JzIjoiQmFjayB0byBmYWN0b3IgbGlzdCIsIm1mYS5waG9uZU51bWJlci5wbGFjZWhvbGRlciI6IlBob25lIG51bWJlciIsIm1mYS5waG9uZU51bWJlci5leHQucGxhY2Vob2xkZXIiOiJFeHRlbnNpb24iLCJtZmEuc2VuZENvZGUiOiJTZW5kIGNvZGUiLCJtZmEuc2VudCI6IlNlbnQiLCJtZmEucmVzZW5kQ29kZSI6IlJlLXNlbmQgY29kZSIsIm1mYS5jYWxsIjoiQ2FsbCIsIm1mYS5jYWxsaW5nIjoiQ2FsbGluZyIsIm1mYS5yZWRpYWwiOiJSZWRpYWwiLCJtZmEuc2VuZEVtYWlsIjoiU2VuZCBlbWFpbCIsIm1mYS5yZXNlbmRFbWFpbCI6IlJlLXNlbmQgZW1haWwiLCJtZmEuc2NhbkJhcmNvZGUiOiJTY2FuIGJhcmNvZGUiLCJtZmEubm9BY2Nlc3NUb0VtYWlsIjoiQ2FuJ3QgYWNjZXNzIGVtYWlsIiwicGFzc3dvcmQucmVzZXQiOiJSZXNldCBQYXNzd29yZCIsInBhc3N3b3JkLm9sZFBhc3N3b3JkLnBsYWNlaG9sZGVyIjoiT2xkIHBhc3N3b3JkIiwicGFzc3dvcmQub2xkUGFzc3dvcmQudG9vbHRpcCI6Ik9sZCBwYXNzd29yZCIsInBhc3N3b3JkLm5ld1Bhc3N3b3JkLnBsYWNlaG9sZGVyIjoiTmV3IHBhc3N3b3JkIiwicGFzc3dvcmQubmV3UGFzc3dvcmQudG9vbHRpcCI6Ik5ldyBwYXNzd29yZCIsInBhc3N3b3JkLmNvbmZpcm1QYXNzd29yZC5wbGFjZWhvbGRlciI6IlJlcGVhdCBwYXNzd29yZCIsInBhc3N3b3JkLmNvbmZpcm1QYXNzd29yZC50b29sdGlwIjoiUmVwZWF0IHBhc3N3b3JkIiwicGFzc3dvcmQuZXJyb3IubWF0Y2giOiJOZXcgcGFzc3dvcmRzIG11c3QgbWF0Y2giLCJyZWNvdmVyeS5zbXMuaGludCI6IlNNUyBjYW4gb25seSBiZSB1c2VkIGlmIGEgbW9iaWxlIHBob25lIG51bWJlciBoYXMgYmVlbiBjb25maWd1cmVkLiIsInJlY292ZXJ5Lm1vYmlsZS5oaW50IjoiezB9IGNhbiBvbmx5IGJlIHVzZWQgaWYgYSBtb2JpbGUgcGhvbmUgbnVtYmVyIGhhcyBiZWVuIGNvbmZpZ3VyZWQuIiwicmVjb3Zlcnkuc21zIjoiU01TIiwicmVjb3ZlcnkuY2FsbCI6IlZvaWNlIENhbGwiLCJyZWNvdmVyeS5zbXNPckNhbGwiOiJTTVMgb3IgVm9pY2UgQ2FsbCIsImVucm9sbC5jaG9pY2VzLnRpdGxlIjoiU2V0IHVwIG11bHRpZmFjdG9yIGF1dGhlbnRpY2F0aW9uIiwiZW5yb2xsLmNob2ljZXMuZGVzY3JpcHRpb24iOiJZb3VyIGNvbXBhbnkgcmVxdWlyZXMgbXVsdGlmYWN0b3IgYXV0aGVudGljYXRpb24gdG8gYWRkIGFuIGFkZGl0aW9uYWwgbGF5ZXIgb2Ygc2VjdXJpdHkgd2hlbiBzaWduaW5nIGludG8geW91ciBPa3RhIGFjY291bnQiLCJlbnJvbGwuY2hvaWNlcy5vcHRpb25hbCI6IllvdSBjYW4gY29uZmlndXJlIGFueSBhZGRpdGlvbmFsIG9wdGlvbmFsIGZhY3RvciBvciBjbGljayBmaW5pc2giLCJlbnJvbGwuY2hvaWNlcy5saXN0LnNldHVwIjoiU2V0dXAgcmVxdWlyZWQiLCJlbnJvbGwuY2hvaWNlcy5saXN0LmVucm9sbGVkIjoiRW5yb2xsZWQgZmFjdG9ycyIsImVucm9sbC5jaG9pY2VzLmxpc3Qub3B0aW9uYWwiOiJBZGRpdGlvbmFsIG9wdGlvbmFsIGZhY3RvcnMiLCJlbnJvbGwuY2hvaWNlcy5zdGVwIjoiezB9IG9mIHsxfSIsImVucm9sbC5jaG9pY2VzLnNldHVwIjoiU2V0dXAiLCJlbnJvbGwuY2hvaWNlcy5zdWJtaXQuZmluaXNoIjoiRmluaXNoIiwiZW5yb2xsLmNob2ljZXMuc3VibWl0LmNvbmZpZ3VyZSI6IkNvbmZpZ3VyZSBmYWN0b3IiLCJlbnJvbGwuY2hvaWNlcy5zdWJtaXQubmV4dCI6IkNvbmZpZ3VyZSBuZXh0IGZhY3RvciIsImVucm9sbC5zZWN1cml0eVF1ZXN0aW9uLnNldHVwIjoiU2V0dXAgc2VjcmV0IHF1ZXN0aW9uIGF1dGhlbnRpY2F0aW9uIiwic2VjdXJpdHkuZGlzbGlrZWRfZm9vZCI6IldoYXQgaXMgdGhlIGZvb2QgeW91IGxlYXN0IGxpa2VkIGFzIGEgY2hpbGQ/Iiwic2VjdXJpdHkubmFtZV9vZl9maXJzdF9wbHVzaF90b3kiOiJXaGF0IGlzIHRoZSBuYW1lIG9mIHlvdXIgZmlyc3Qgc3R1ZmZlZCBhbmltYWw/Iiwic2VjdXJpdHkuZmlyc3RfYXdhcmQiOiJXaGF0IGRpZCB5b3UgZWFybiB5b3VyIGZpcnN0IG1lZGFsIG9yIGF3YXJkIGZvcj8iLCJzZWN1cml0eS5mYXZvcml0ZV9zZWN1cml0eV9xdWVzdGlvbiI6IldoYXQgaXMgeW91ciBmYXZvcml0ZSBzZWN1cml0eSBxdWVzdGlvbj8iLCJzZWN1cml0eS5mYXZvcml0ZV90b3kiOiJXaGF0IGlzIHRoZSB0b3kvc3R1ZmZlZCBhbmltYWwgeW91IGxpa2VkIHRoZSBtb3N0IGFzIGEga2lkPyIsInNlY3VyaXR5LmZpcnN0X2NvbXB1dGVyX2dhbWUiOiJXaGF0IHdhcyB0aGUgZmlyc3QgY29tcHV0ZXIgZ2FtZSB5b3UgcGxheWVkPyIsInNlY3VyaXR5LmZhdm9yaXRlX21vdmllX3F1b3RlIjoiV2hhdCBpcyB5b3VyIGZhdm9yaXRlIG1vdmllIHF1b3RlPyIsInNlY3VyaXR5LmZpcnN0X3Nwb3J0c190ZWFtX21hc2NvdCI6IldoYXQgd2FzIHRoZSBtYXNjb3Qgb2YgdGhlIGZpcnN0IHNwb3J0cyB0ZWFtIHlvdSBwbGF5ZWQgb24/Iiwic2VjdXJpdHkuZmlyc3RfbXVzaWM=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("IjoiUmUtc2VuZCBQdXNoIiwib2t0YXZlcmlmeS5zZW50IjoiUHVzaCBzZW50ISIsIm9rdGF2ZXJpZnkucmVqZWN0ZWQiOiJZb3UgaGF2ZSBjaG9zZW4gdG8gcmVqZWN0IHRoaXMgbG9naW4uIiwib2t0YXZlcmlmeS50aW1lb3V0IjoiWW91ciBwdXNoIG5vdGlmaWNhdGlvbiBoYXMgZXhwaXJlZC4iLCJva3RhdmVyaWZ5Lndhcm5pbmciOiJIYXZlbid0IHJlY2VpdmVkIGEgcHVzaCBub3RpZmljYXRpb24geWV0PyBUcnkgb3BlbmluZyB0aGUgT2t0YSBWZXJpZnkgQXBwIG9uIHlvdXIgcGhvbmUuIiwicHJpbWFyeWF1dGgudGl0bGUiOiJTaWduIEluIiwicHJpbWFyeWF1dGgudXNlcm5hbWUucGxhY2Vob2xkZXIiOiJVc2VybmFtZSIsInByaW1hcnlhdXRoLnVzZXJuYW1lLnRvb2x0aXAiOiJVc2VybmFtZSIsInByaW1hcnlhdXRoLnBhc3N3b3JkLnBsYWNlaG9sZGVyIjoiUGFzc3dvcmQiLCJwcmltYXJ5YXV0aC5wYXNzd29yZC50b29sdGlwIjoiUGFzc3dvcmQiLCJwcmltYXJ5YXV0aC5zdWJtaXQiOiJTaWduIEluIiwicHJpbWFyeWF1dGgubmV3VXNlci50b29sdGlwIjoiVGhpcyBpcyB0aGUgZmlyc3QgdGltZSB5b3UgYXJlIGNvbm5lY3RpbmcgdG8gezB9IGZyb20gdGhpcyBicm93c2VyIiwicHJpbWFyeWF1dGgubmV3VXNlci50b29sdGlwLmNsb3NlIjoiQ2xvc2UiLCJwYXNzd29yZC5mb3Jnb3QuZW1haWwub3IudXNlcm5hbWUucGxhY2Vob2xkZXIiOiJFbWFpbCBvciBVc2VybmFtZSIsInBhc3N3b3JkLmZvcmdvdC5lbWFpbC5vci51c2VybmFtZS50b29sdGlwIjoiRW1haWwgb3IgVXNlcm5hbWUiLCJwYXNzd29yZC5mb3Jnb3Quc2VuZFRleHQiOiJSZXNldCB2aWEgU01TIiwicGFzc3dvcmQuZm9yZ290LnNlbmRFbWFpbCI6IlJlc2V0IHZpYSBFbWFpbCIsInBhc3N3b3JkLmZvcmdvdC5jYWxsIjoiUmVzZXQgdmlhIFZvaWNlIENhbGwiLCJwYXNzd29yZC5mb3Jnb3QuZW1haWxTZW50LnRpdGxlIjoiRW1haWwgc2VudCEiLCJwYXNzd29yZC5mb3Jnb3QuZW1haWxTZW50LmRlc2MiOiJFbWFpbCBoYXMgYmVlbiBzZW50IHRvIHswfSB3aXRoIGluc3RydWN0aW9ucyBvbiByZXNldHRpbmcgeW91ciBwYXNzd29yZC4iLCJwYXNzd29yZC5mb3Jnb3QucXVlc3Rpb24udGl0bGUiOiJBbnN3ZXIgRm9yZ290dGVuIFBhc3N3b3JkIENoYWxsZW5nZSIsInBhc3N3b3JkLmZvcmdvdC5xdWVzdGlvbi5zdWJtaXQiOiJSZXNldCBQYXNzd29yZCIsInBhc3N3b3JkLmZvcmdvdC5zbXMubm90UmVjZWl2ZWQiOiJEaWRuJ3QgcmVjZWl2ZSBhbiBTTVM/IFJlc2V0IHZpYSBlbWFpbCIsInBhc3N3b3JkLmZvcmdvdC5jb2RlLm5vdFJlY2VpdmVkIjoiRGlkbid0IHJlY2VpdmUgYSBjb2RlPyBSZXNldCB2aWEgZW1haWwiLCJwYXNzd29yZC5mb3Jnb3Qubm9GYWN0b3JzRW5hYmxlZCI6Ik5vIHBhc3N3b3JkIHJlc2V0IG9wdGlvbnMgYXZhaWxhYmxlLiBQbGVhc2UgY29udGFjdCB5b3VyIGFkbWluaXN0cmF0b3IuIiwicGFzc3dvcmQucmVzZXQudGl0bGUiOiJSZXNldCB5b3VyIE9rdGEgcGFzc3dvcmQiLCJwYXNzd29yZC5jb21wbGV4aXR5LnJlcXVpcmVtZW50cyI6IlBhc3N3b3JkIHJlcXVpcmVtZW50czogezB9LiIsInBhc3N3b3JkLmNvbXBsZXhpdHkuaGlzdG9yeSI6IllvdXIgcGFzc3dvcmQgY2Fubm90IGJlIGFueSBvZiB5b3VyIGxhc3QgezB9IHBhc3N3b3Jkcy4iLCJwYXNzd29yZC5jb21wbGV4aXR5Lm1pbkFnZU1pbnV0ZXMiOiJBdCBsZWFzdCB7MH0gbWludXRlKHMpIG11c3QgaGF2ZSBlbGFwc2VkIHNpbmNlIHlvdSBsYXN0IGNoYW5nZWQgeW91ciBwYXNzd29yZC4iLCJwYXNzd29yZC5jb21wbGV4aXR5Lm1pbkFnZUhvdXJzIjoiQXQgbGVhc3QgezB9IGhvdXIocykgbXVzdCBoYXZlIGVsYXBzZWQgc2luY2UgeW91IGxhc3QgY2hhbmdlZCB5b3VyIHBhc3N3b3JkLiIsInBhc3N3b3JkLmNvbXBsZXhpdHkubWluQWdlRGF5cyI6IkF0IGxlYXN0IHswfSBkYXkocykgbXVzdCBoYXZlIGVsYXBzZWQgc2luY2UgeW91IGxhc3QgY2hhbmdlZCB5b3VyIHBhc3N3b3JkLiIsInBhc3N3b3JkLmNvbXBsZXhpdHkubGVuZ3RoIjoiYXQgbGVhc3QgezB9IGNoYXJhY3RlcnMiLCJwYXNzd29yZC5jb21wbGV4aXR5Lmxpc3QuZWxlbWVudCI6IiwgezB9IiwicGFzc3dvcmQuY29tcGxleGl0eS5sb3dlcmNhc2UiOiJhIGxvd2VyY2FzZSBsZXR0ZXIiLCJwYXNzd29yZC5jb21wbGV4aXR5LnVwcGVyY2FzZSI6ImFuIHVwcGVyY2FzZSBsZXR0ZXIiLCJwYXNzd29yZC5jb21wbGV4aXR5Lm51bWJlciI6ImEgbnVtYmVyIiwicGFzc3dvcmQuY29tcGxleGl0eS5zeW1ib2wiOiJhIHN5bWJvbCIsInBhc3N3b3JkLmNvbXBsZXhpdHkubm9fdXNlcm5hbWUiOiJubyBwYXJ0cyBvZiB5b3VyIHVzZXJuYW1lIiwicGFzc3dvcmQuY29tcGxleGl0eS5ub19maXJzdF9uYW1lIjoiZG9lcyBub3QgaW5jbHVkZSB5b3VyIGZpcnN0IG5hbWUiLCJwYXNzd29yZC5jb21wbGV4aXR5Lm5vX2xhc3RfbmFtZSI6ImRvZXMgbm90IGluY2x1ZGUgeW91ciBsYXN0IG5hbWUiLCJwYXNzd29yZC5leHBpcmVkLnN1Ym1pdCI6IkNoYW5nZSBQYXNzd29yZCIsInBhc3N3b3JkLmV4cGlyZWQudGl0bGUiOiJZb3VyIE9rdGEgcGFzc3dvcmQgaGFzIGV4cGlyZWQiLCJwYXNzd29yZC5leHBpcmluZy5sYXRlciI6IlJlbWluZCBtZSBsYXRlciIsInBhc3N3b3JkLmV4cGlyaW5nLnRpdGxlIjoiWW91ciBwYXNzd29yZCB3aWxsIGV4cGlyZSBpbiB7MH0gZGF5cyIsInBhc3N3b3JkLmV4cGlyaW5nLnRvZGF5IjoiWW91ciBwYXNzd29yZCB3aWxsIGV4cGlyZSBsYXRlciB0b2RheSIsInBhc3N3b3JkLmV4cGlyaW5nLnNvb24iOiJZb3VyIHBhc3N3b3JkIGlzIGV4cGlyaW5nIHNvb24iLCJwYXNzd29yZC5leHBpcmluZy5zdWJ0aXRsZSI6IldoZW4gcGFzc3dvcmQgZXhwaXJlcyB5b3UgbWF5IGJlIGxvY2tlZCBvdXQgb2YgT2t0YSBNb2JpbGUsIG1vYmlsZSBlbWFpbCwgYW5kIG90aGVyIHNlcnZpY2VzLiIsInBhc3N3b3JkLmV4cGlyZWQuY3VzdG9tLnN1Ym1pdCI6IkdvIHRvIHswfSIsInBhc3N3b3JkLmV4cGlyZWQuY3VzdG9tLnN1YnRpdGxlIjoiVGhpcyBwYXNzd29yZCBpcyBzZXQgb24gYW5vdGhlciB3ZWJzaXRlLiBDbGljayB0aGUgYnV0dG9uIGJlbG93IHRvIGdvIHRoZXJlIGFuZCBzZXQgYSBuZXcgcGFzc3dvcmQuIiwiYWNjb3VudC51bmxvY2sudGl0bGUiOiJVbmxvY2sgYWNjb3VudCIsImFjY291bnQudW5sb2NrLmVtYWlsLm9yLnVzZXJuYW1lLnBsYWNlaG9sZGVyIjoiRW1haWwgb3IgdXNlcm5hbWUiLCJhY2NvdW50LnVubG9jay5lbWFpbC5vci51c2VybmFtZS50b29sdGlwIjoiRW1haWwgb3IgdXNlcm5hbWUiLCJhY2NvdW50LnVubG9jay5zZW5kVGV4dCI6IlNlbmQgU01TIiwiYWNjb3VudC51bmxvY2suc2VuZEVtYWlsIjoiU2VuZCBFbWFpbCIsImFjY291bnQudW5sb2NrLmVtYWlsU2VudC50aXRsZSI6IkVtYWlsIHNlbnQhIiwiYWNjb3VudC51bmxvY2suZW1haWxTZW50LmRlc2MiOiJFbWFpbCBoYXMgYmVlbiBzZW50IHRvIHswfSB3aXRoIGluc3RydWN0aW9ucyBvbiB1bmxvY2tpbmcgeW91ciBhY2NvdW50LiIsImFjY291bnQudW5sb2NrLnF1ZXN0aW9uLnRpdGxlIjoiQW5zd2VyIFVubG9jayBBY2NvdW50IENoYWxsZW5nZSIsImFjY291bnQudW5sb2NrLnF1ZXN0aW9uLnN1Ym1pdCI6IlVubG9jayBBY2NvdW50IiwiYWNjb3VudC51bmxvY2sudW5sb2NrZWQudGl0bGUiOiJBY2NvdW50IHN1Y2Nlc3NmdWxseSB1bmxvY2tlZCEiLCJhY2NvdW50LnVubG9jay51bmxvY2tlZC5kZXNjIjoiWW91IGNhbiBsb2cgaW4gdXNpbmcgeW91ciBleGlzdGluZyB1c2VybmFtZSBhbmQgcGFzc3dvcmQuIiwiYWNjb3VudC51bmxvY2suc21zLm5vdFJlY2VpdmVkIjoiRGlkbid0IHJlY2VpdmUgYW4gU01TPyBVbmxvY2sgdmlhIGVtYWlsIiwiYWNjb3VudC51bmxvY2subm9GYWN0b3JzRW5hYmxlZCI6Ik5vIHVubG9jayBvcHRpb25zIGF2YWlsYWJsZS4gUGxlYXNlIGNvbnRhY3QgeW91ciBhZG1pbmlzdHJhdG9yLiIsImNvbnRhY3Quc3VwcG9ydCI6IklmIHlvdSBkaWRuJ3QgcHJvdmlkZSBhIHNlY29uZGFyeSBlbWFpbCBhZGRyZXNzIG9yIGRvbid0IGhhdmUgYWNjZXNzIHRvIGVtYWlsLCBwbGVhc2UgY29udGFjdCB5b3VyIGFkbWluaXN0cmF0b3IgYXQgezB9Iiwic29jaWFsYXV0aC5kaXZpZGVyLnRleHQiOiJPUiIsInNvY2lhbGF1dGguZmFjZWJvb2subGFiZWwiOiJTaWduIGluIHdpdGggRmFjZWJvb2siLCJzb2NpYWxhdXRoLmdvb2dsZS5sYWJlbCI6IlNpZ24gaW4gd2l0aCBHb29nbGUiLCJzb2NpYWxhdXRoLmxpbmtlZGluLmxhYmVsIjoiU2lnbiBpbiB3aXRoIExpbmtlZEluIiwic29jaWFsYXV0aC5taWNyb3NvZnQubGFiZWwiOiJTaWduIGluIHdpdGggTWljcm9zb2Z0Iiwic29jaWFsYXV0aC5wb3B1cC50aXRsZSI6IkV4dGVybmFsIElkZW50aXR5IFByb3ZpZGVyIFVzZXIgQXV0aGVudGljYXRpb24iLCJhdXRoYnV0dG9uLmRpdmlkZXIudGV4dCI6Im9yIiwicmVnaXN0cmF0aW9uLnNpZ251cC5sYWJlbCI6IkRvbid0IGhhdmUgYW4gYWNjb3VudD8iLCJyZWdpc3RyYXRpb24uc2lnbnVwLnRleHQiOiJTaWduIHVwIiwicmVnaXN0cmF0aW9uLmNvbXBsZXRlLnRpdGxlIjoiVmVyaWZpY2F0aW9uIGVtYWlsIHNlbnQiLCJyZWdpc3RyYXRpb24uY29tcGxldGUuZGVzYyI6IldlIGp1c3Qgc2VudCBhIHZlcmlmaWNhdGlvbiBlbWFpbCB0byB7MH0uIFBsZWFzZSBjaGVjayB5b3VyIGVtYWlsIGFuZCB2ZXJpZnkgeW91ciBhY2NvdW50IHRvIGNvbnRpbnVlLiIsInJlZ2lzdHJhdGlvbi5mb3JtLnRpdGxlIjoiQ3JlYXRlIEFjY291bnQiLCJyZWdpc3RyYXRpb24uZm9ybS5zdWJtaXQiOiJSZWdpc3RlciIsInJlZ2lzdHJhdGlvbi5wYXNzd29yZENvbXBsZXhpdHkubWluTGVuZ3RoIjoiQXQgbGVhc3QgezB9IGNoYXJhY3RlcihzKSIsInJlZ2lzdHJhdGlvbi5wYXNzd29yZENvbXBsZXhpdHkubWluTG93ZXIiOiJBdCBsZWFzdCB7MH0gbG93ZXJjYXNlIGxldHRlcihzKSIsInJlZ2lzdHJhdGlvbi5wYXNzd29yZENvbXBsZXhpdHkubWluVXBwZXIiOiJBdCBsZWFzdCB7MH0gdXBwZXJjYXNlIGxldHRlcihzKSIsInJlZ2lzdHJhdGlvbi5wYXNzd29yZENvbXBsZXhpdHkubWluTnVtYmVyIjoiQXQgbGVhc3QgezB9IG51bWJlcihzKSIsInJlZ2lzdHJhdGlvbi5wYXNzd29yZENvbXBsZXhpdHkubWluU3ltYm9sIjoiQXQgbGVhc3QgezB9IHN5bWJvbChzKSIsInJlZ2lzdHJhdGlvbi5wYXNzd29yZENvbXBsZXhpdHkuZXhjbHVkZVVzZXJuYW1lIjoiRG9lcyBub3QgY29udGFpbiBwYXJ0IG9mIHVzZXJuYW1lIiwicmVnaXN0cmF0aW9uLmVycm9yLnVzZXJOYW1lLmludmFsaWRFbWFpbCI6IkludmFsaWQgZW1haWwgYWRkcmVzcyIsInJlZ2lzdHJhdGlvbi5lcnJvci5wYXNzd29yZC5wYXNzd29yZFJlcXVpcmVtZW50c05vdE1ldCI6IlBhc3N3b3JkIHJlcXVpcmVtZW50cyB3ZXJlIG5vdCBtZXQiLCJyZWdpc3RyYXRpb24uZXJyb3IudXNlck5hbWUubm90VW5pcXVlV2l0aGluT3JnIjoiQW4gYWNjb3VudCB3aXRoIHRoYXQgZW1haWwgYWxyZWFkeSBleGlzdHMiLCJwaXYuY2FyZCI6IlBJViBDYXJkIiwicGl2LmNhcmQuaW5zZXJ0IjoiUGxlYXNlIGluc2VydCB5b3VyIFBJViBjYXJkIGFuZCBzZWxlY3QgdGhlIHVzZXIgY2VydGlmaWNhdGUuIiwicGl2LmNhcmQuZXJyb3IiOiJDZXJ0aWZpY2F0ZSBhdXRoZW50aWNhdGlvbiBmYWlsZWQuIENvbnRhY3QgeW91ciBhZG1pbi4iLCJwaXYuY2FyZC5lcnJvci5lbXB0eSI6Ik5vIGNlcnRpZmljYXRlIHNlbGVjdGVkLiBDaG9vc2UgYSBjZXJ0aWZpY2F0ZSBhbmQgdHJ5IGFnYWluLiIsInBpdi5jYXJkLmVycm9yLmludmFsaWQiOiJDZXJ0aWZpY2F0ZSB2YWxpZGF0aW9uIGZhaWxlZC4gQ2hvb3NlIGFub3RoZXIgY2VydGlmaWNhdGUgYW5kIHRyeSBhZ2Fpbi4iLCJ1bnN1cHBvcnRlZC5vbmVEcml2ZS50aXRsZSI6IllvdXIgT25lRHJpdmUgdmVyc2lvbiBpcyBub3Qgc3VwcG9ydGVkIiwidW5zdXBwb3J0ZWQub25lRHJpdmUuZGVzYyI6IlVwZ3JhZGUgbm93IGJ5IGluc3RhbGxpbmcgdGhlIE9uZURyaXZlIGZvciBCdXNpbmVzcyBOZXh0IEdlbmVyYXRpb24gU3luYyBDbGllbnQgdG8gbG9naW4gdG8gT2t0YSIsInVuc3VwcG9ydGVkLm9uZURyaXZlLmFjdGlvbiI6IkxlYXJuIGhvdyB0byB1cGdyYWRlIiwidW5zdXBwb3J0ZWQuY29va2llcy50aXRsZSI6IkNvb2tpZXMgYXJlIHJlcXVpcmVkIiwidW5zdXBwb3J0ZWQuY29va2llcy5kZXNjIjoiQ29va2llcyBhcmUgZGlzYWJsZWQgb24geW91ciBicm93c2VyLiBQbGVhc2UgZW5hYmxlIENvb2tpZXMgYW5kIHJlZnJlc2ggdGhpcyBwYWdlLiIsInVuc3VwcG9ydGVkLmNvb2tpZXMuYWN0aW9uIjoiUmVmcmVzaCAiLCJkZXZpY2VUcnVzdC5zc28udGV4dCI6IlNpZ24gaW4gdG8gYWNjZXNzIGNvbXBhbnkgcmVzb3VyY2VzIiwiZGV2aWNlVHJ1c3Quc3NvLmhpbnQyIjoiT2t0YSBNb2JpbGUgd2lsbCBjaGVjayB0aGF0IHlvdXIgZGV2aWNlIGlzIHNlY3VyZSBhbmQgbWFrZSBpdCBlYXN5IHRvIHNpZ24gaW4gdG8gdGhpcyBhcHAuIiwiZGV2aWNlVHJ1c3Quc3NvLmJ1dHRvbjIiOiJTaWduIGluIHdpdGggT2t0YSIsImRldmljZVRydXN0LnNzby5leHBpcmUudGl0bGUiOiJPb3BzIGxldCdzIGdldCB5b3UgYmFjayBvbiB0cmFjayIsImRldmljZVRydXN0LnNzby5leHBpcmUuc3VidGl0bGUiOiJVbmZvcnR1bmF0ZWx5IHRoZSBzdGVwcyByZXF1aXJlZCB0byBzaWduIGluIHRvb2sgbG9uZ2VyIHRoYW4gZXhwZWN0ZWQgYW5kIHlvdXIgYXR0ZW1wdCB0aW1lZCBvdXQuIiwiZGV2aWNlVHJ1c3Quc3NvLmV4cGlyZS5idXR0b24iOiJTaWduIGluIHVzaW5nIE9rdGEgTW9iaWxlIiwiZGV2aWNlVHJ1c3QudW5pdmVyc2FsTGluay5mYWxsYmFjay5nZXRPa3RhTW9iaWxlLnRpdGxlIjoiR2V0IE9rdGEgTW9iaWxlIiwiZGV2aWNlVHJ1c3QudW5pdmVyc2FsTGluay5mYWxsYmFjay5nZXRPa3RhTW9iaWxlLnN1YnRpdGxlIjoiR28gdG8gdGhlIHswfUFwcFN0b3JlezF9LCB7MH1zZWFyY2h7MX0gZm9yIHswfU9rdGEgTW9iaWxlezF9IGFuZCB0YXAgb24gezB9R0VUezF9IE9rdGEgTW9iaWxlLiBPbmNlIGluc3RhbGxlZCwgc2lnbiBpbiB0byBPa3RhIE1vYmlsZSBhbmQgZm9sbG93IHRoZSBpbnN0cnVjdGlvbnMgdG8gc2VjdXJlIHlvdXIgZGV2aWNlLiIsImNvbnNlbnQucmVxdWlyZWQuaGVhZGxpbmUiOiI8Yj57MH08L2I+IGlzIHJlcXVlc3RpbmcgcGVybWlzc2lvbnMgdG86IiwiY29uc2VudC5yZXF1aXJlZC5sYWJlbCI6IjxiPnswfTwvYj4gd2FudHMgdG8gYWNjZXNzIHlvdXIgYWNjb3VudCAoPGI+ezF9PC9iPikgaW4gb3JkZXIgdG86IiwiY29uc2VudC5yZXF1aXJlZC5kZXNjcmlwdGlvbiI6IkJ5IGNsaWNraW5nIEFsbG93IEFjY2VzcywgeW91IGFsbG93IHRoaXMgYXBwIGFjY2VzcyB0byB0aGUgYWN0aW9ucyBsaXN0ZWQgYWJvdmUuIiwiY29uc2VudC5yZXF1aXJlZC50ZXJtc09mU2VydmljZSI6IlRlcm1zIG9mIFNlcnZpY2UiLCJjb25zZW50LnJlcXVpcmVkLnByaXZhY3lQb2xpY3kiOiJQcml2YWN5IFBvbGljeSIsImNvbnNlbnQucmVxdWlyZWQuY29uc2VudEJ1dHRvbiI6IkFsbG93IEFjY2VzcyIsImNvbnNlbnQucmVxdWlyZWQuY2FuY2VsQnV0dG9uIjoiRG9uJ3QgQWxsb3ciLCJjb25zZW50LnJlcXVpcmVkLnRpdGxlIjoiezB9IGlzIHJlcXVlc3RpbmcgcGVybWlzc2lvbnMgdG86IiwicGFzc3dvcmQuY29tcGxleGl0eS5kZXNjcmlwdGlvbiI6IllvdXIgcGFzc3dvcmQgbXVzdCBoYXZlIHswfS4iLCJwYXNzd29yZC5jb21wbGV4aXR5Lm5vX2ZpcnN0X29yX2xhc3RfbmFtZSI6ImRvIG5vdCBpbmNsdWRlIHlvdXIgZmlyc3Qgb3IgbGFzdCBuYW1lIn19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPXtBRjoiQWZnaGFuaXN0YW4iLEFYOiLDhWxhbmQgSXNsYW5kcyIsQUw6IkFsYmFuaWEiLERaOiJBbGdlcmlhIixBUzoiQW1lcmljYW4gU2Ftb2EiLEFEOiJBbmRvcnJhIixBTzoiQW5nb2xhIixBSToiQW5ndWlsbGEiLEFROiJBbnRhcmN0aWNhIixBRzoiQW50aWd1YSBhbmQgQmFyYnVkYSIsQVI6IkFyZ2VudGluYSIsQU06IkFybWVuaWEiLEFXOiJBcnViYSIsQVU6IkF1c3RyYWxpYSIsQVQ6IkF1c3RyaWEiLEFaOiJBemVyYmFpamFuIixCUzoiQmFoYW1hcyIsQkg6IkJhaHJhaW4iLEJEOiJCYW5nbGFkZXNoIixCQjoiQmFyYmFkb3MiLEJZOiJCZWxhcnVzIixCRToiQmVsZ2l1bSIsQlo6IkJlbGl6ZSIsQko6IkJlbmluIixCTToiQmVybXVkYSIsQlQ6IkJodXRhbiIsQk86IkJvbGl2aWEsIFBsdXJpbmF0aW9uYWwgU3RhdGUgb2YiLEJBOiJCb3NuaWEgYW5kIEhlcnplZ292aW5hIixCVzoiQm90c3dhbmEiLEJWOiJCb3V2ZXQgSXNsYW5kIixCUjoiQnJhemlsIixJTzoiQnJpdGlzaCBJbmRpYW4gT2NlYW4gVGVycml0b3J5IixWRzoiVmlyZ2luIElzbGFuZHMsIEJyaXRpc2giLEJOOiJCcnVuZWkgRGFydXNzYWxhbSIsQkc6IkJ1bGdhcmlhIixCRjoiQnVya2luYSBGYXNvIixCSToiQnVydW5kaSIsS0g6IkNhbWJvZGlhIixDTToiQ2FtZXJvb24iLENBOiJDYW5hZGEiLENWOiJDYXBlIFZlcmRlIixLWToiQ2F5bWFuIElzbGFuZHMiLENGOiJDZW50cmFsIEFmcmljYW4gUmVwdWJsaWMiLFREOiJDaGFkIixDTDoiQ2hpbGUiLENOOiJDaGluYSIsQ1g6IkNocmlzdG1hcyBJc2xhbmQiLENPOiJDb2xvbWJpYSIsS006IkNvbW9yb3MiLENHOiJDb25nbyIsQ0s6IkNvb2sgSXNsYW5kcyIsQ1I6IkNvc3RhIFJpY2EiLENJOiJDw7R0ZSBkJ0l2b2lyZSIsSFI6IkNyb2F0aWEiLENVOiJDdWJhIixDWToiQ3lwcnVzIixDWjoiQ3plY2ggUmVwdWJsaWMiLENEOiJDb25nbywgdGhlIERlbW9jcmF0aWMgUmVwdWJsaWMgb2YgdGhlIixESzoiRGVubWFyayIsREo6IkRqaWJvdXRpIixETToiRG9taW5pY2EiLERPOiJEb21pbmljYW4gUmVwdWJsaWMiLFRMOiJUaW1vci1MZXN0ZSIsRUM6IkVjdWFkb3IiLEVHOiJFZ3lwdCIsU1Y6IkVsIFNhbHZhZG9yIixHUToiRXF1YXRvcmlhbCBHdWluZWEiLEVSOiJFcml0cmVhIixFRToiRXN0b25pYSIsRVQ6IkV0aGlvcGlhIixGSzoiRmFsa2xhbmQgSXNsYW5kcyAoTWFsdmluYXMpIixGTzoiRmFyb2UgSXNsYW5kcyIsRko6IkZpamkiLEZJOiJGaW5sYW5kIixGUjoiRnJhbmNlIixHRjoiRnJlbmNoIEd1aWFuYSIsUEY6IkZyZW5jaCBQb2x5bmVzaWEiLFRGOiJGcmVuY2ggU291dGhlcm4gVGVycml0b3JpZXMiLEdBOiJHYWJvbiIsR006IkdhbWJpYSIsR0U6Ikdlb3JnaWEiLERFOiJHZXJtYW55IixHSDoiR2hhbmEiLEdJOiJHaWJyYWx0YXIiLEdSOiJHcmVlY2UiLEdMOiJHcmVlbmxhbmQiLEdEOiJHcmVuYWRhIixHUDoiR3VhZGVsb3VwZSIsR1U6Ikd1YW0iLEdUOiJHdWF0ZW1hbGEiLEdHOiJHdWVybnNleSIsR046Ikd1aW5lYSIsR1c6Ikd1aW5lYS1CaXNzYXUiLEdZOiJHdXlhbmEiLEhUOiJIYWl0aSIsSE06IkhlYXJkIElzbGFuZCBhbmQgTWNEb25hbGQgSXNsYW5kcyIsSE46IkhvbmR1cmFzIixISzoiSG9uZyBLb25nIixIVToiSHVuZ2FyeSIsSVM6IkljZWxhbmQiLElOOiJJbmRpYSIsSUQ6IkluZG9uZXNpYSIsSVI6IklyYW4sIElzbGFtaWMgUmVwdWJsaWMgb2YiLElROiJJcmFxIixJRToiSXJlbGFuZCIsSUw6IklzcmFlbCIsSVQ6Ikl0YWx5IixKTToiSmFtYWljYSIsSlA6IkphcGFuIixKRToiSmVyc2V5IixKTzoiSm9yZGFuIixLWjoiS2F6YWtoc3RhbiIsS0U6IktlbnlhIixLSToiS2lyaWJhdGkiLEtSOiJLb3JlYSwgUmVwdWJsaWMgb2YiLEtXOiJLdXdhaXQiLEtHOiJLeXJneXpzdGFuIixMQToiTGFvIFBlb3BsZSdzIERlbW9jcmF0aWMgUmVwdWJsaWMiLExWOiJMYXR2aWEiLExCOiJMZWJhbm9uIixMUzoiTGVzb3RobyIsTFI6IkxpYmVyaWEiLExZOiJMaWJ5YSIsTEk6IkxpZWNodGVuc3RlaW4iLExUOiJMaXRodWFuaWEiLExVOiJMdXhlbWJvdXJnIixNTzoiTWFjYW8iLE1LOiJNYWNlZG9uaWEsIHRoZSBmb3JtZXIgWXVnb3NsYXYgUmVwdWJsaWMgb2YiLE1HOiJNYWRhZ2FzY2FyIixNVzoiTWFsYXdpIixNWToiTWFsYXlzaWEiLE1WOiJNYWxkaXZlcyIsTUw6Ik1hbGkiLE1UOiJNYWx0YSIsTUg6Ik1hcnNoYWxsIElzbGFuZHMiLE1ROiJNYXJ0aW5pcXVlIixNUjoiTWF1cml0YW5pYSIsTVU6Ik1hdXJpdGl1cyIsWVQ6Ik1heW90dGUiLE1YOiJNZXhpY28iLEZNOiJNaWNyb25lc2lhLCBGZWRlcmF0ZWQgU3RhdGVzIG9mIixNRDoiTW9sZG92YSwgUmVwdWJsaWMgb2YiLE1DOiJNb25hY28iLE1OOiJNb25nb2xpYSIsTUU6Ik1vbnRlbmVncm8iLE1TOiJNb250c2VycmF0IixNQToiTW9yb2NjbyIsTVo6Ik1vemFtYmlxdWUiLE1NOiJNeWFubWFyIixOQToiTmFtaWJpYSIsTlI6Ik5hdXJ1IixOUDoiTmVwYWwiLE5MOiJOZXRoZXJsYW5kcyIsQU46Ik5ldGhlcmxhbmRzIEFudGlsbGVzIixOQzoiTmV3IENhbGVkb25pYSIsTlo6Ik5ldyBaZWFsYW5kIixOSToiTmljYXJhZ3VhIixORToiTmlnZXIiLE5HOiJOaWdlcmlhIixOVToiTml1ZSIsTkY6Ik5vcmZvbGsgSXNsYW5kIixLUDoiS29yZWEsIERlbW9jcmF0aWMgUGVvcGxlJ3MgUmVwdWJsaWMgb2YiLE1QOiJOb3J0aGVybiBNYXJpYW5hIElzbGFuZHMiLE5POiJOb3J3YXkiLE9NOiJPbWFuIixQSzoiUGFraXN0YW4iLFBXOiJQYWxhdSIsUFM6IlBhbGVzdGluZSwgU3RhdGUgb2YiLFBBOiJQYW5hbWEiLFBHOiJQYXB1YSBOZXcgR3VpbmVhIixQWToiUGFyYWd1YXkiLFBFOiJQZXJ1IixQSDoiUGhpbGlwcGluZXMiLFBOOiJQaXRjYWlybiIsUEw6IlBvbGFuZCIsUFQ6IlBvcnR1Z2FsIixQUjoiUHVlcnRvIFJpY28iLFFBOiJRYXRhciIsUkU6IlLDqXVuaW9uIixSTzoiUm9tYW5pYSIsUlU6IlJ1c3NpYW4gRmVkZXJhdGlvbiIsUlc6IlJ3YW5kYSIsU0g6IlNhaW50IEhlbGVuYSwgQXNjZW5zaW9uIGFuZCBUcmlzdGFuIGRhIEN1bmhhIixLTjoiU2FpbnQgS2l0dHMgYW5kIE5ldmlzIixMQzoiU2FpbnQgTHVjaWEiLFBNOiJTYWludCBQaWVycmUgYW5kIE1pcXVlbG9uIixWQzoiU2FpbnQgVmluY2VudCBhbmQgdGhlIEdyZW5hZGluZXMiLFdTOiJTYW1vYSIsU006IlNhbiBNYXJpbm8iLFNUOiJTw6NvIFRvbcOpIGFuZCBQcsOtbmNpcGUiLFNBOiJTYXVkaSBBcmFiaWEiLFNOOiJTZW5lZ2FsIixSUzoiU2VyYmlhIixTQzoiU2V5Y2hlbGxlcyIsU0w6IlNpZXJyYSBMZW9uZSIsU0c6IlNpbmdhcG9yZSIsU0s6IlNsb3Zha2lhIixTSToiU2xvdmVuaWEiLFNCOiJTb2xvbW9uIElzbGFuZHMiLFNPOiJTb21hbGlhIixaQToiU291dGggQWZyaWNhIixHUzoiU291dGggR2VvcmdpYSBhbmQgdGhlIFNvdXRoIFNhbmR3aWNoIElzbGFuZHMiLFNTOiJTb3V0aCBTdWRhbiIsRVM6IlNwYWluIixMSzoiU3JpIExhbmthIixTRDoiU3VkYW4iLFNSOiJTdXJpbmFtZSIsU0o6IlN2YWxiYXJkIGFuZCBKYW4gTWF5ZW4iLFNaOiJTd2F6aWxhbmQiLFNFOiJTd2VkZW4iLENIOiJTd2l0emVybGFuZCIsU1k6IlN5cmlhbiBBcmFiIFJlcHVibGljIixUVzoiVGFpd2FuIixUSjoiVGFqaWtpc3RhbiIsVFo6IlRhbnphbmlhLCBVbml0ZWQgUmVwdWJsaWMgb2YiLFRIOiJUaGFpbGFuZCIsVEc6IlRvZ28iLFRLOiJUb2tlbGF1IixUTzoiVG9uZ2EiLFRUOiJUcmluaWRhZCBhbmQgVG9iYWdvIixUTjoiVHVuaXNpYSIsVFI6IlR1cmtleSIsVE06IlR1cmttZW5pc3RhbiIsVEM6IlR1cmtzIGFuZCBDYWljb3MgSXNsYW5kcyIsVFY6IlR1dmFsdSIsVkk6IlZpcmdpbiBJc2xhbmRzLCBVLlMuIixVRzoiVWdhbmRhIixVQToiVWtyYWluZSIsQUU6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIixHQjoiVW5pdGVkIEtpbmdkb20iLFVTOiJVbml0ZWQgU3RhdGVzIixVTToiVW5pdGVkIFN0YXRlcyBNaW5vciBPdXRseWluZyBJc2xhbmRzIixVWToiVXJ1Z3VheSIsVVo6IlV6YmVraXN0YW4iLFZVOiJWYW51YXR1IixWQToiSG9seSBTZWUgKFZhdGljYW4gQ2l0eSBTdGF0ZSkiLFZFOiJWZW5lenVlbGEsIEJvbGl2YXJpYW4gUmVwdWJsaWMgb2YiLFZOOiJWaWV0IE5hbSIsV0Y6IldhbGxpcyBhbmQgRnV0dW5hIixFSDoiV2VzdGVybiBTYWhhcmEiLFlFOiJZZW1lbiIsWk06IlphbWJpYSIsWlc6IlppbWJhYndlIn19LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ2NCldLHI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5leHRlbmQoZSx7ZGVwcmVjYXRlOmZ1bmN0aW9uKHQpe2Uud2FybigiW29rdGEtc2lnbmluLXdpZGdldF0gREVQUkVDQVRFRDoiLHQpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KV0scj1mdW5jdGlvbih0KXt2YXIgZT17fSxuPSJ3aXRoQ3JlZGVudGlhbHMiaW4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCxpPSJ1bmRlZmluZWQiIT10eXBlb2YgWERvbWFpblJlcXVlc3Q7cmV0dXJuIGUuY29yc0lzTm90U3VwcG9ydGVkPWZ1bmN0aW9uKCl7cmV0dXJuIShufHxpKX0sZS5jb3JzSXNOb3RFbmFibGVkPWZ1bmN0aW9uKHQpe3JldHVybiAwPT09dC5zdGF0dXN9LGUubG9jYWxTdG9yYWdlSXNOb3RTdXBwb3J0ZWQ9ZnVuY3Rpb24oKXt2YXIgdD0idGVzdCI7dHJ5e3JldHVybiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0LHQpLGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHQpLCExfWNhdGNoKGUpe3JldHVybiEwfX0sZS5zdXBwb3J0c1B1c2hTdGF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gdD10fHx3aW5kb3csISghdC5oaXN0b3J5fHwhdC5oaXN0b3J5LnB1c2hTdGF0ZSl9LGUuaXNJRT1mdW5jdGlvbigpe3JldHVybi8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCl9LGUuaXNGaXJlZm94PWZ1bmN0aW9uKCl7cmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmRleE9mKCJmaXJlZm94Iik+LTF9LGUuZ2V0VXNlckxhbmd1YWdlcz1mdW5jdGlvbigpe3ZhciBlLG47cmV0dXJuIG5hdmlnYXRvci5sYW5ndWFnZXM/bmF2aWdhdG9yLmxhbmd1YWdlczooZT1bXSxuPVsibGFuZ3VhZ2UiLCJ1c2VyTGFuZ3VhZ2UiLCJicm93c2VyTGFuZ3VhZ2UiLCJzeXN0ZW1MYW5ndWFnZSJdLHQuZWFjaChuLGZ1bmN0aW9uKHQpe25hdmlnYXRvclt0XSYmZS5wdXNoKG5hdmlnYXRvclt0XSl9KSxlKX0sZX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbihtb2R1bGUsZXhwb3J0cyl7InVzZSBzdHJpY3QiO3ZhciBfdHlwZW9mPSJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJiJzeW1ib2wiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJiJmdW5jdGlvbiI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlPyJzeW1ib2wiOnR5cGVvZiB0fTsib2JqZWN0IiE9PSgidW5kZWZpbmVkIj09dHlwZW9mIEpTT04/InVuZGVmaW5lZCI6X3R5cGVvZihKU09OKSkmJihKU09OPXt9KSxmdW5jdGlvbigpe2Z1bmN0aW9uIGYodCl7cmV0dXJuIHQ8MTA/IjAiK3Q6dH1mdW5jdGlvbiBxdW90ZSh0KXtyZXR1cm4gZXNjYXBhYmxlLmxhc3RJbmRleD0wLGVzY2FwYWJsZS50ZXN0KHQpPyciJyt0LnJlcGxhY2UoZXNjYXBhYmxlLGZ1bmN0aW9uKHQpe3ZhciBlPW1ldGFbdF07cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlP2U6IlxcdSIrKCIwMDAwIit0LmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCl9KSsnIic6JyInK3QrJyInfWZ1bmN0aW9uIHN0cih0LGUpe3ZhciBuLGkscixvLHMsYT1nYXAsbD1lW3RdO3N3aXRjaChsJiYib2JqZWN0Ij09PSgidW5kZWZpbmVkIj09dHlwZW9mIGw/InVuZGVmaW5lZCI6X3R5cGVvZihsKSkmJiJmdW5jdGlvbiI9PXR5cGVvZiBsLnRvSlNPTiYmKGw9bC50b0pTT04odCkpLCJmdW5jdGlvbiI9PXR5cGVvZiByZXAmJihsPXJlcC5jYWxsKGUsdCxsKSksInVuZGVmaW5lZCI9PXR5cGVvZiBsPyJ1bmRlZmluZWQiOl90eXBlb2YobCkpe2Nhc2Uic3RyaW5nIjpyZXR1cm4gcXVvdGUobCk7Y2FzZSJudW1iZXIiOnJldHVybiBpc0Zpbml0ZShsKT9TdHJpbmcobCk6Im51bGwiO2Nhc2UiYm9vbGVhbiI6Y2FzZSJudWxsIjpyZXR1cm4gU3RyaW5nKGwpO2Nhc2Uib2JqZWN0IjppZighbClyZXR1cm4ibnVsbCI7aWYoZ2FwKz1pbmRlbnQscz1bXSwiW29iamVjdCBBcnJheV0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5hcHBseShsKSl7Zm9yKG89bC5sZW5ndGgsbj0wO248bztuKz0xKXNbbl09c3RyKG4sbCl8fCJudWxsIjtyZXR1cm4gcj0wPT09cy5sZW5ndGg/IltdIjpnYXA/IltcbiIrZ2FwK3Muam9pbigiLFxuIitnYXApKyJcbiIrYSsiXSI6IlsiK3Muam9pbigiLCIpKyJdIixnYXA9YSxyfWlmKHJlcCYmIm9iamVjdCI9PT0oInVuZGVmaW5lZCI9PXR5cGVvZiByZXA/InVuZGVmaW5lZCI6X3R5cGVvZihyZXApKSlmb3Iobz1yZXAubGVuZ3RoLG49MDtuPG87bis9MSkic3RyaW5nIj09dHlwZW9mIHJlcFtuXSYmKGk9cmVwW25dLHI9c3RyKGksbCksciYmcy5wdXNoKHF1b3RlKGkpKyhnYXA/IjogIjoiOiIpK3IpKTtlbHNlIGZvcihpIGluIGwpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGwsaSkmJihyPXN0cihpLGwpLHImJnMucHVzaChxdW90ZShpKSsoZ2FwPyI6ICI6IjoiKStyKSk7cmV0dXJuIHI9MD09PXMubGVuZ3RoPyJ7fSI6Z2FwPyJ7XG4iK2dhcCtzLmpvaW4oIixcbiIrZ2FwKSsiXG4iK2ErIn0iOiJ7IitzLmpvaW4oIiwiKSsifSIsZ2FwPWEscn19ImZ1bmN0aW9uIiE9dHlwZW9mIERhdGUucHJvdG90eXBlLnRvSlNPTiYmKERhdGUucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbih0KXtyZXR1cm4gaXNGaW5pdGUodGhpcy52YWx1ZU9mKCkpP3RoaXMuZ2V0VVRDRnVsbFllYXIoKSsiLSIrZih0aGlzLmdldFVUQ01vbnRoKCkrMSkrIi0iK2YodGhpcy5nZXRVVENEYXRlKCkpKyJUIitmKHRoaXMuZ2V0VVRDSG91cnMoKSkrIjoiK2YodGhpcy5nZXRVVENNaW51dGVzKCkpKyI6IitmKHRoaXMuZ2V0VVRDU2Vjb25kcygpKSsiWiI6bnVsbH0sU3RyaW5nLnByb3RvdHlwZS50b0pTT049TnVtYmVyLnByb3RvdHlwZS50b0pTT049Qm9vbGVhbi5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnZhbHVlT2YoKX0pO3ZhciBjeD0vW1x1MDAwMFx1MDBhZFx1MDYwMC1cdTA2MDRcdTA3MGZcdTE3YjRcdTE3YjVcdTIwMGMtXHUyMDBmXHUyMDI4LVx1MjAyZlx1MjA2MC1cdTIwNmZcdWZlZmZcdWZmZjAtXHVmZmZmXS9nLGVzY2FwYWJsZT0vW1xcXCJceDAwLVx4MWZceDdmLVx4OWZcdTAwYWRcdTA2MDAtXHUwNjA0XHUwNzBmXHUxN2I0XHUxN2I1XHUyMDBjLVx1MjAwZlx1MjAyOC1cdTIwMmZcdTIwNjAtXHUyMDZmXHVmZWZmXHVmZmYwLVx1ZmZmZl0vZyxnYXAsaW5kZW50LG1ldGE9eyJcYiI6IlxcYiIsIlx0IjoiXFx0IiwiXG4iOiJcXG4iLCJcZiI6IlxcZiIsIlxyIjoiXFxyIiwnIic6J1xcIicsIlxcIjoiXFxcXCJ9LHJlcDsiZnVuY3Rpb24iIT10eXBlb2YgSlNPTi5zdHJpbmdpZnkmJihKU09OLnN0cmluZ2lmeT1mdW5jdGlvbih0LGUsbil7dmFyIGk7aWYoZ2FwPSIiLGluZGVudD0iIiwibnVtYmVyIj09dHlwZW9mIG4pZm9yKGk9MDtpPG47aSs9MSlpbmRlbnQrPSIgIjtlbHNlInN0cmluZyI9PXR5cGVvZiBuJiYoaW5kZW50PW4pO2lmKHJlcD1lLGUmJiJmdW5jdGlvbiIhPXR5cGVvZiBlJiYoIm9iamVjdCIhPT0oInVuZGVmaW5lZCI9PXR5cGVvZiBlPyJ1bmRlZmluZWQiOl90eXBlb2YoZSkpfHwibnVtYmVyIiE9dHlwZW9mIGUubGVuZ3RoKSl0aHJvdyBuZXcgRXJyb3IoIkpTT04uc3RyaW5naWZ5Iik7cmV0dXJuIHN0cigiIix7IiI6dH0pfSksImZ1bmN0aW9uIiE9dHlwZW9mIEpTT04ucGFyc2UmJihKU09OLnBhcnNlPWZ1bmN0aW9uKHRleHQscmV2aXZlcil7ZnVuY3Rpb24gd2Fsayh0LGUpe3ZhciBuLGkscj10W2VdO2lmKHImJiJvYmplY3QiPT09KCJ1bmRlZmluZWQiPT10eQ==", "base64"));
  res.write(new Buffer("cGVvZiByPyJ1bmRlZmluZWQiOl90eXBlb2YocikpKWZvcihuIGluIHIpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsbikmJihpPXdhbGsocixuKSx2b2lkIDAhPT1pP3Jbbl09aTpkZWxldGUgcltuXSk7cmV0dXJuIHJldml2ZXIuY2FsbCh0LGUscil9dmFyIGo7aWYodGV4dD1TdHJpbmcodGV4dCksY3gubGFzdEluZGV4PTAsY3gudGVzdCh0ZXh0KSYmKHRleHQ9dGV4dC5yZXBsYWNlKGN4LGZ1bmN0aW9uKHQpe3JldHVybiJcXHUiKygiMDAwMCIrdC5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTQpfSkpLC9eW1xdLDp7fVxzXSokLy50ZXN0KHRleHQucmVwbGFjZSgvXFwoPzpbIlxcXC9iZm5ydF18dVswLTlhLWZBLUZdezR9KS9nLCJAIikucmVwbGFjZSgvIlteIlxcXG5ccl0qInx0cnVlfGZhbHNlfG51bGx8LT9cZCsoPzpcLlxkKik/KD86W2VFXVsrXC1dP1xkKyk/L2csIl0iKS5yZXBsYWNlKC8oPzpefDp8LCkoPzpccypcWykrL2csIiIpKSlyZXR1cm4gaj1ldmFsKCIoIit0ZXh0KyIpIiksImZ1bmN0aW9uIj09dHlwZW9mIHJldml2ZXI/d2Fsayh7IiI6an0sIiIpOmo7dGhyb3cgbmV3IFN5bnRheEVycm9yKCJKU09OLnBhcnNlIil9KX0oKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMzEpLG4oMzI4KSxuKDUwOCksbig0NzUpXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiBpLmV4dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24oZSl7dGhpcy5fX2hhc0RlZmF1bHRSb3V0ZT0hMTt2YXIgcj10aGlzLl9fdGFic1dpZGdldD1uZXcgbjtyLnJlbmRlcigpO3ZhciBvPXQoZS5lbCk7ZS5lbD1yLmNvbnRlbnQoKSx0KGZ1bmN0aW9uKCl7by5hcHBlbmQoci5lbCl9KSxpLmNhbGwodGhpcyxlKX0sdGFiOmZ1bmN0aW9uKHQsbixpLHIpe3ZhciBvPWUuaXNBcnJheSh0KT90Olt0XTtyZXR1cm4gdGhpcy5fX2FkZFRhYih7cm91dGVzOm8sbWV0aG9kOm4sbGFiZWw6aSxzdWJ0YWJzOnJ9KSx0aGlzfSxfX2FkZFRhYjpmdW5jdGlvbih0KXt0aGlzLl9faGFzRGVmYXVsdFJvdXRlfHwodGhpcy5yb3V0ZSgiIix0Lm1ldGhvZCksdGhpcy5fX2hhc0RlZmF1bHRSb3V0ZT0hMCksdC5zdWJ0YWJzJiZ0LnN1YnRhYnMubGVuZ3RoJiZ0aGlzLl9fYWRkU3ViVGFicyhlLmV4dGVuZChlLnBpY2sodCwicm91dGVzIiwic3VidGFicyIpKSksZS5lYWNoKHQucm91dGVzLGZ1bmN0aW9uKGUpe3RoaXMucm91dGUoZSx0Lm1ldGhvZCl9LHRoaXMpO3ZhciBuPWUuZmlyc3QodC5yb3V0ZXMpO3RoaXMuX190YWJzV2lkZ2V0LmFkZFRhYihlLmV4dGVuZChlLnBpY2sodCwibGFiZWwiLCJtZXRob2QiLCJzdWJ0YWJzIikse3JvdXRlOm4scm91dGVyOnRoaXN9KSl9LF9fYWRkU3ViVGFiczpmdW5jdGlvbih0KXtlLmVhY2godC5zdWJ0YWJzLGZ1bmN0aW9uKG4pe3ZhciBpPXQucm91dGVzKyIvIituLnJvdXRlczt0aGlzLnJvdXRlKGksbi5tZXRob2QpLHRoaXMuX190YWJzV2lkZ2V0LmFkZFN1YlRhYihlLmV4dGVuZChlLnBpY2sobiwibGFiZWwiLCJtZXRob2QiKSx7cm91dGU6aSxyb3V0ZXI6dGhpc30pKX0sdGhpcyl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig0NzApLG4oNTA5KSxuKDUxMCldLHI9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0LmV4dGVuZCh7Y2xhc3NOYW1lOiJjbGVhcmZpeCB1aS10YWJzIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1jb3JuZXItYWxsIix0ZW1wbGF0ZTonPHVsIHJvbGU9InRhYmxpc3QiIGNsYXNzPSJ1aS10YWJzLW5hdiB1aS1oZWxwZXItcmVzZXQgdWktaGVscGVyLWNsZWFyZml4IHVpLXdpZGdldC1oZWFkZXIgdWktY29ybmVyLWFsbCB1aS10YWJzLW1hcmdpbiI+PC91bD48ZGl2IHJvbGU9InN1YnRhYnMiIGNsYXNzPSJ1aS1zdWJ0YWJzIHVpLWhlbHBlci1yZXNldCB1aS10YWJzLW1hcmdpbiI+PC9kaXY+PGRpdiByb2xlPSJ0YWJwYW5lbCIgY2xhc3M9InVpLXRhYnMtcGFuZWwgdWktd2lkZ2V0LWNvbnRlbnQgdWktY29ybmVyLWJvdHRvbSI+PC9kaXY+Jyxjb250ZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJCgiZGl2LnVpLXRhYnMtcGFuZWwiKX0sYWRkVGFiOmZ1bmN0aW9uKHQpe3RoaXMuYWRkKGUsInVsIix7b3B0aW9uczp0fSl9LGFkZFN1YlRhYjpmdW5jdGlvbih0KXt0aGlzLmFkZChuLCJkaXYudWktc3VidGFicyIse29wdGlvbnM6dH0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MCldLHI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5leHRlbmQoe3RhZ05hbWU6ImxpIixjbGFzc05hbWU6InVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLXRvcCIsYXR0cmlidXRlczp7cm9sZToidGFiIn0sdGVtcGxhdGU6JzxhIGNsYXNzPSJ1aS10YWJzLWFuY2hvciIgcm9sZT0icHJlc2VudGF0aW9uIiBocmVmPSJ7e3JvdXRlfX0iPnt7bGFiZWx9fTwvYT4nLGV2ZW50czp7ImNsaWNrIGEiOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLHRoaXMucm91dGVyLm5hdmlnYXRlKHRoaXMucm91dGUse3RyaWdnZXI6ITB9KX19LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0LmV4dGVuZCh0aGlzLHQucGljayh0aGlzLm9wdGlvbnMsInJvdXRlIiwicm91dGVyIiwibWV0aG9kIikpLHRoaXMubGlzdGVuVG8odGhpcy5yb3V0ZXIsInJvdXRlIix0aGlzLnRvZ2dsZSl9LHRvZ2dsZTpmdW5jdGlvbihlKXtpZih0aGlzLiRlbC50b2dnbGVDbGFzcygidWktc3RhdGUtYWN0aXZlIHVpLXRhYnMtc2VsZWN0ZWQiLGU9PXRoaXMubWV0aG9kKSx0aGlzLm9wdGlvbnMuc3VidGFicyYmdGhpcy5vcHRpb25zLnN1YnRhYnMubGVuZ3RoKWlmKGUhPXRoaXMubWV0aG9kKXQuZWFjaCh0aGlzLm9wdGlvbnMuc3VidGFicyxmdW5jdGlvbih0KXt0Lm1ldGhvZD09ZSYmdGhpcy4kZWwuYWRkQ2xhc3MoInVpLXN0YXRlLWFjdGl2ZSB1aS10YWJzLXNlbGVjdGVkIil9LHRoaXMpO2Vsc2V7dGhpcy4kZWwucGFyZW50KCkucGFyZW50KCkuZmluZCgiLnVpLXN1YnRhYnMgbGk6Zmlyc3QtY2hpbGQiKS5hZGRDbGFzcygidWktc3RhdGUtYWN0aXZlIHVpLXRhYnMtc2VsZWN0ZWQiKTt2YXIgbj10aGlzLm9wdGlvbnMucm91dGUrIi8iK3RoaXMub3B0aW9ucy5zdWJ0YWJzWzBdLnJvdXRlczt0aGlzLnJvdXRlci5uYXZpZ2F0ZShuLHt0cmlnZ2VyOiEwfSl9ZWxzZSB0aGlzLiRlbC5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIudWktc3VidGFicyIpLnRvZ2dsZShlIT10aGlzLm1ldGhvZCl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oNDcwKV0scj1mdW5jdGlvbih0LGUpe3JldHVybiBlLmV4dGVuZCh7dGFnTmFtZToibGkiLGNsYXNzTmFtZToic3VidGFiIHVpLXN0YXRlLWRlZmF1bHQgdWktY29ybmVyLXRvcCIsYXR0cmlidXRlczp7cm9sZToic3VidGFiIn0sdGVtcGxhdGU6JzxhIGNsYXNzPSJzdWItdGFiLWxpbmsgdWktdGFicy1hbmNob3IiIHJvbGU9InByZXNlbnRhdGlvbiIgaHJlZj0ie3tyb3V0ZX19Ij57e2xhYmVsfX08L2E+JyxldmVudHM6eyJjbGljayBhIjpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKSx0aGlzLnJvdXRlci5uYXZpZ2F0ZSh0aGlzLnJvdXRlLHt0cmlnZ2VyOiEwfSl9fSxpbml0aWFsaXplOmZ1bmN0aW9uKCl7dC5leHRlbmQodGhpcyx0LnBpY2sodGhpcy5vcHRpb25zLCJyb3V0ZSIsInJvdXRlciIsIm1ldGhvZCIpKSx0aGlzLmxpc3RlblRvKHRoaXMucm91dGVyLCJyb3V0ZSIsdGhpcy50b2dnbGUpfSx0b2dnbGU6ZnVuY3Rpb24odCl7dGhpcy4kZWwudG9nZ2xlQ2xhc3MoInVpLXN0YXRlLWFjdGl2ZSB1aS10YWJzLXNlbGVjdGVkIix0PT10aGlzLm1ldGhvZCksdGhpcy4kZWwucGFyZW50KCkucGFyZW50KCkuZmluZCgiLnVpLXRhYnMtcGFuZWwiKS5hZGRDbGFzcygic3VidGFiLWNvbnRlbnQiKSx0aGlzLiRlbC5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIudWktc3VidGFicyIpLmFkZENsYXNzKCJzdWJ0YWJzLXBhbmVsIil9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjshKHQuZXhwb3J0cz17REVCT1VOQ0VfREVMQVk6MjAwLExPQURJTkdfRkFERTo0MDAsVU5MT0FESU5HX0ZBREU6NDAwLFJPV19FWFBBTkRFUl9UUkFOU0lUSU9OOjE1MCxISURFX0FERF9NQVBQSU5HX0ZPUk06MzAwfSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzYxKV0scj1mdW5jdGlvbih0KXt2YXIgZT17TUlMTElTRUNPTkQ6Im1pbGxpc2Vjb25kcyIsU0VDT05EOiJzZWNvbmRzIixNSU5VVEU6Im1pbnV0ZXMiLEhPVVI6ImhvdXJzIixEQVk6ImRheXMifTtyZXR1cm57TUlOVVRFU19IT1VSU19EQVlTOntNSU5VVEU6Ik1pbnV0ZXMiLEhPVVI6IkhvdXJzIixEQVk6IkRheXMifSxNSUxMSVNFQ09ORFNfU0VDT05EU19NSU5VVEVTOntNSUxMSVNFQ09ORDoiTWlsbGlzZWNvbmRzIixTRUNPTkQ6IlNlY29uZHMiLE1JTlVURToiTWludXRlcyJ9LGNvbnZlcnRUb1BEVDpmdW5jdGlvbihlLG4saSl7cmV0dXJuIG58fChuPSJNTU0gREQsIFlZWVkgaDptbTpzcyBBIiksaXx8KGk9IiIpLGU/dChlKS51dGMoKS56b25lKCItMDc6MDAiKS5mb3JtYXQobik6aX0sZ2V0VGltZUluSGlnaGVzdFJlbGV2YW50VW5pdDpmdW5jdGlvbihuLGkpe3ZhciByLG89dC5kdXJhdGlvbihuLGVbaV18fGkpO3JldHVybiByPTAhPT1vLm1pbGxpc2Vjb25kcygpPyJtaWxsaXNlY29uZHMiOjAhPT1vLnNlY29uZHMoKT8ic2Vjb25kcyI6MCE9PW8ubWludXRlcygpPyJtaW51dGVzIjowIT09by5ob3VycygpPyJob3VycyI6ImRheXMiLHt0aW1lOm8uYXMociksdW5pdDp0aGlzLmNvbnZlcnRNb21lbnRVbml0cyhyKX19LGNvbnZlcnRNb21lbnRVbml0czpmdW5jdGlvbih0KXtzd2l0Y2godCl7Y2FzZSJtaWxsaXNlY29uZHMiOnJldHVybiJNSUxMSVNFQ09ORCI7Y2FzZSJzZWNvbmRzIjpyZXR1cm4iU0VDT05EIjtjYXNlIm1pbnV0ZXMiOnJldHVybiJNSU5VVEUiO2Nhc2UiaG91cnMiOnJldHVybiJIT1VSIjtjYXNlImRheXMiOnJldHVybiJEQVkiO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJUaW1lIHVuaXQgbm90IHJlY29nbml6ZWQ6ICIrdCl9fSxjb252ZXJ0VGltZVVuaXQ6ZnVuY3Rpb24obixpLHIpe3JldHVybiBuPXBhcnNlSW50KG4sMTApLGk9ZVtpXXx8aSxyPWVbcl18fHIsdC5kdXJhdGlvbihuLGkpLmFzKHIpfSxjb252ZXJ0VGltZUZvcm1hdDpmdW5jdGlvbihlLG4saSl7cmV0dXJuIGl8fChpPSJNTU1NIERvLCBZWVlZIiksdChlLG4pLmZvcm1hdChpKX19fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSl7fSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMyOCksbig0NzApXSxyPWZ1bmN0aW9uKHQsZSl7cmV0dXJue3JlZGlyZWN0OmZ1bmN0aW9uKHQpe3dpbmRvdy5sb2NhdGlvbj10fSxyZWxvYWRQYWdlOmZ1bmN0aW9uKCl7d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpfSxjb25zdGFudEVycm9yOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcih0KX19LGdldFVybFF1ZXJ5U3RyaW5nOmZ1bmN0aW9uKGUpe3QuaXNPYmplY3QoZSl8fChlPXt9KTt2YXIgbj10LndpdGhvdXQodC5tYXAoZSxmdW5jdGlvbih0LGUpe2lmKHZvaWQgMCE9PXQmJm4=", "base64"));
  res.write(new Buffer("dWxsIT09dClyZXR1cm4gZSsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KHQpfSksdm9pZCAwKS5qb2luKCImIik7cmV0dXJuIHQuaXNFbXB0eShuKT8iIjoiPyIrbn0saXNBQmFzZVZpZXc6ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBlfHx0LnByb3RvdHlwZSBpbnN0YW5jZW9mIGV8fHQ9PT1lfX19LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig0NzApLG4oNTE2KSxuKDUxOCksbig1MTkpLG4oNTczKSxuKDU5NCksbig2MTEpLG4oNjEyKV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyxzLGEpe3JldHVybntCYXNlVmlldzp0LExpc3RWaWV3OmUsVGFibGVWaWV3Om4sY29tcG9uZW50czppLGRhdGFsaXN0OnIsZm9ybXM6byx0YWJzOnMsdXBsb2FkZXI6YX19LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig0NzApLG4oNTE3KV0scj1mdW5jdGlvbih0LGUpe3JldHVybiB0LmRlY29yYXRlKGUpfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG87ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9LCFmdW5jdGlvbihzLGEpe3I9W24oMzI4KSxuKDQ3MildLGk9YSxvPSJmdW5jdGlvbiI9PXR5cGVvZiBpP2kuYXBwbHkoZSxyKTppLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9KHZvaWQgMCxmdW5jdGlvbih0LGUpe3JldHVybiBlLmV4dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24oKXtpZihlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSwhdGhpcy5jb2xsZWN0aW9uKXRocm93IG5ldyBFcnJvcigiTWlzc2luZyBjb2xsZWN0aW9uIik7dGhpcy5saXN0ZW5Ubyh0aGlzLmNvbGxlY3Rpb24sInJlc2V0IHNvcnQiLHRoaXMucmVzZXQpLHRoaXMubGlzdGVuVG8odGhpcy5jb2xsZWN0aW9uLCJhZGQiLHRoaXMuYWRkSXRlbSksdGhpcy5jb2xsZWN0aW9uLmVhY2godGhpcy5hZGRJdGVtLHRoaXMpfSxpdGVtOm51bGwsaXRlbVNlbGVjdG9yOm51bGwscmVzZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZW1vdmVDaGlsZHJlbigpLHRoaXMuY29sbGVjdGlvbi5lYWNoKHRoaXMuYWRkSXRlbSx0aGlzKSx0aGlzfSxhZGRJdGVtOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWRkKHRoaXMuaXRlbSx0aGlzLml0ZW1TZWxlY3Rvcix7b3B0aW9uczp7bW9kZWw6dH19KS5sYXN0KCk7cmV0dXJuIGUubGlzdGVuVG8odCwiZGVzdHJveSByZW1vdmUiLGUucmVtb3ZlKSx0aGlzfX0pfSl9LGZ1bmN0aW9uKHQsZSl7fSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDQ3OSksbig1NjgpLG4oNTIxKSxuKDU2Myksbig1NjUpLG4oNTIwKSxuKDU2OSksbig1NzApLG4oNTcxKSxuKDQ3NildLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhLGwsYyl7cmV0dXJue0Jhc2VCdXR0b25MaW5rOnQsQmFzZURyb3BEb3duOmUsQmFzZUZvcm1EaWFsb2c6bixCYXNlTW9kYWxEaWFsb2c6aSxCYXNlU3Bpbm5lcjpyLENhbGxvdXQ6byxDb25maXJtYXRpb25EaWFsb2c6cyxEcm9wRG93bjphLE11bHRpVmlld01vZGFsRGlhbG9nOmwsTm90aWZpY2F0aW9uOmN9fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MCksbig1MTEpXSxyPWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKGUsbil7cmV0dXJuIHQucmVzdWx0Q3R4KGUub3B0aW9ucyxuLGUpfHx0LnJlc3VsdChlLG4pfWZ1bmN0aW9uIHIodCl7dmFyIGU9ImluZm9ib3ggY2xlYXJmaXggaW5mb2JveC0iK2kodCwidHlwZSIpO3N3aXRjaChpKHQsInNpemUiKSl7Y2FzZSJzdGFuZGFyZCI6ZSs9IiI7YnJlYWs7Y2FzZSJjb21wYWN0IjplKz0iIGluZm9ib3gtY29tcGFjdCI7YnJlYWs7Y2FzZSJsYXJnZSI6ZSs9IiBpbmZvYm94LW1kIn1yZXR1cm4gaSh0LCJkaXNtaXNzaWJsZSIpJiYoZSs9IiBpbmZvYm94LWRpc21pc3MiKSxlfXZhciBvPXsiY2xpY2sgLmluZm9ib3gtZGlzbWlzcy1saW5rIjpmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksdGhpcy4kZWwuZmFkZU91dChuLlVOTE9BRElOR19GQURFLHQuYmluZCh0aGlzLnJlbW92ZSx0aGlzKSl9fSxzPSdcdCAgICB7eyNpZiBkaXNtaXNzaWJsZX19XHQgICAgICA8YSBjbGFzcz0iaW5mb2JveC1kaXNtaXNzLWxpbmsiIHRpdGxlPSJEaXNtaXNzIiBocmVmPSIjIj5cdCAgICAgICAgPHNwYW4gY2xhc3M9ImRpc21pc3MtaWNvbiI+PC9zcGFuPlx0ICAgICAgPC9hPlx0ICAgIHt7L2lmfX1cdCAgICA8c3BhbiBjbGFzcz0iaWNvbiB7e2ljb259fSI+PC9zcGFuPlx0ICAgIHt7I2lmIHRpdGxlfX08aDM+e3t0aXRsZX19PC9oMz57ey9pZn19XHQgICAge3sjaWYgc3VidGl0bGV9fTxwPnt7c3VidGl0bGV9fTwvcD57ey9pZn19XHQgICAge3sjaWYgYnVsbGV0c319XHQgICAgICA8dWwgY2xhc3M9ImJ1bGxldHMiPlx0ICAgICAge3sjZWFjaCBidWxsZXRzfX08bGk+e3t0aGlzfX08L2xpPnt7L2VhY2h9fVx0ICAgICAgPC91bD5cdCAgICB7ey9pZn19XHQgICcsYT1lLmV4dGVuZCh7Y29udGVudDpudWxsLHNpemU6InN0YW5kYXJkIix0eXBlOiJpbmZvIixkaXNtaXNzaWJsZTohMSx0aXRsZTpudWxsLHN1YnRpdGxlOm51bGwsYnVsbGV0czpudWxsLGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7dGhpcy5ldmVudHM9dC5kZWZhdWx0cyh0aGlzLmV2ZW50c3x8e30sbyksZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy4kZWwuYWRkQ2xhc3Mocih0aGlzKSksdGhpcy50ZW1wbGF0ZT1zO3ZhciBuPWkodGhpcywiY29udGVudCIpO24mJnRoaXMuYWRkKG4pfSxnZXRUZW1wbGF0ZURhdGE6ZnVuY3Rpb24oKXt2YXIgdD1pKHRoaXMsInR5cGUiKTtyZXR1cm4idGlwIj09dCYmKHQ9ImxpZ2h0LWJ1bGIiKSx7aWNvbjp0KyItIisoImxhcmdlIj09aSh0aGlzLCJzaXplIik/IjI0IjoiMTYiKSx0aXRsZTppKHRoaXMsInRpdGxlIiksc3VidGl0bGU6aSh0aGlzLCJzdWJ0aXRsZSIpLGJ1bGxldHM6aSh0aGlzLCJidWxsZXRzIiksZGlzbWlzc2libGU6aSh0aGlzLCJkaXNtaXNzaWJsZSIpfX19KTtyZXR1cm57Y3JlYXRlOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgYSh0KX19fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzMxKSxuKDMyOCksbig0NzApLG4oNDY2KSxuKDUyMildLHI9ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgbz1bInNhdmUiLCJub0NhbmNlbEJ1dHRvbiIsImlucHV0cyIsInN1YnRpdGxlIiwiYXV0b1NhdmUiLCJmb2N1cyIsImNhbmNlbCIsImRhbmdlciIsImhhc1NhdmluZ1N0YXRlIiwiY3VzdG9tU2F2aW5nU3RhdGUiLCJwYXJzZUVycm9yTWVzc2FnZSJdLHM9e2xheW91dDoiby1mb3JtLXdyYXAiLHNjcm9sbE9uRXJyb3I6ITF9LGE9e21pbldpZHRoOjYwMCxtYXhXaWR0aDo5NTAsZm9jdXM6ITEsY2xvc2U6ITEsYXV0b1Jlc2l6ZTohMSxhdXRvUG9zaXRpb246ITB9O3JldHVybiBuLmV4dGVuZCh7Y29uc3RydWN0b3I6ZnVuY3Rpb24obCl7dmFyIGM9ci5leHRlbmQoZS5leHRlbmQoe30scyxlLnBpY2sodGhpcyxvKSkpO3RoaXMuZm9ybT1uZXcgYyhlLm9taXQobCwidGl0bGUiLCJzdWJ0aXRsZSIpKSx0aGlzLmxpc3RlblRvKHRoaXMuZm9ybSwicmVzaXplIixlLmRlYm91bmNlKGUuYmluZCh0aGlzLnJlc2l6ZU1vZGFsLHRoaXMpLDEwMCkpO3ZhciB1PWUuYmluZCh0aGlzLnJlbW92ZSx0aGlzKTt0aGlzLmxpc3RlblRvKHRoaXMuZm9ybSwiYWxsIixmdW5jdGlvbigpe3RoaXMudHJpZ2dlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksImNhbmNlbCI9PT1hcmd1bWVudHNbMF0mJnUoKX0pLHQod2luZG93KS5yZXNpemUoZS5kZWJvdW5jZShlLmJpbmQodGhpcy5yZXNpemVNb2RhbCx0aGlzKSwxMDApKTt2YXIgZD1pLmV4dGVuZCh7dGl0bGU6dGhpcy50aXRsZSxjbGFzc05hbWU6dGhpcy5jbGFzc05hbWUscGFyYW1zOmUuZXh0ZW5kKHt9LGEsdGhpcy5wYXJhbXMpfSk7dGhpcy5kaWFsb2c9bmV3IGQobCksdGhpcy5kaWFsb2cuYWRkKHRoaXMuZm9ybSksdGhpcy5lbD10aGlzLmRpYWxvZy5lbCxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmZvcm0uZ2V0QXR0cmlidXRlKCJhdXRvU2F2", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("OSksbig1MjUpLG4oNTQwKSxuKDU0MSksbig1NDIpLG4oNTQzKSxuKDU0NCksbig1NDUpLG4oNTQ2KSxuKDU0Nyksbig1NTIpLG4oNTUzKSxuKDU1NSldLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhLGwsYyx1LGQsaCxwLGYsbSxfLGcsdix5LGIsdyxNLFMpe2Z1bmN0aW9uIFQobixpKXtyZXR1cm4gbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBlP25ldyBuKHQub21pdChpLCJpbnB1dCIpKTpufWZ1bmN0aW9uIGsoZSl7aWYoZT10LmNsb25lKGUpLGUuaW5wdXQpcmV0dXJuIFQoZS5pbnB1dCxlKTt2YXIgbjtpZighRFtlLnR5cGVdKXRocm93IG5ldyBFcnJvcigidW5rbm93biBpbnB1dDogIitlLnR5cGUpO3JldHVybiBuPSJzZWxlY3QiPT09ZS50eXBlJiYoeChlLm9wdGlvbnMpfHx0LnNpemUoZS5vcHRpb25zKT5BKT9TOiJjaGVja2JveHNldCI9PT1lLnR5cGUmJnQuc2l6ZShlLm9wdGlvbnMpPkU/TTpEW2UudHlwZV0sVChuLGUpfWZ1bmN0aW9uIEwodCl7cmV0dXJuISF0LmlucHV0fHx0LnR5cGUgaW4gRH1mdW5jdGlvbiB4KGUpe3JldHVybiB0LnNpemUoZSk+MCYmdC5pc09iamVjdCh0LnZhbHVlcyhlKVswXSl9dmFyIEE9MWUzLEU9MTUwLEQ9eyJmaWxlL2ltYWdlIjpiLCJmaWxlL2NlcnQiOncsc2VsZWN0OnIsdGV4dGFyZWE6aSxyYWRpbzpvLGNoZWNrYm94OnMsdGV4dDpuLHBhc3N3b3JkOm4sbnVtYmVyOnUsdGV4dHNlbGVjdDphLCJ0ZXh0K3NlbGVjdCI6bCwic2VsZWN0K3RleHQiOmwsZGF0ZTpjLGdyb3VwcGlja2VyOmQsdXNlcnBpY2tlcjpoLGFwcHBpY2tlcjpwLGFwcGluc3RhbmNlcGlja2VyOmYsInN1LW9yZ3NwaWNrZXIiOm0sem9uZXBpY2tlcjpfLGxpc3Q6Zyxncm91cDp2LG11bHRpc2VsZWN0Ok0sY2hlY2tib3hzZXQ6eX07cmV0dXJue2NyZWF0ZTprLHN1cHBvcnRzOkx9fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSl7fSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDQ3MSksbig1MjcpLG4oNDk3KSxuKDUyOCldLHI9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPSJva3RhLWZvcm0taW5wdXQtZmllbGQgaW5wdXQtZml4IjtyZXR1cm4gZS5leHRlbmQoe3RlbXBsYXRlOnQudHBsKCc8aW5wdXQgdHlwZT0ie3t0eXBlfX0iIHBsYWNlaG9sZGVyPSJ7e3BsYWNlaG9sZGVyfX0iXHQgICAgICBuYW1lPSJ7e25hbWV9fSIgaWQ9Int7aW5wdXRJZH19IiB2YWx1ZT0ie3t2YWx1ZX19Ii8+JyksZXZlbnRzOnsiaW5wdXQgaW5wdXQiOiJ1cGRhdGUiLCJjaGFuZ2UgaW5wdXQiOiJ1cGRhdGUiLCJrZXlkb3duIGlucHV0IjoidXBkYXRlIiwia2V5dXAgaW5wdXQiOmZ1bmN0aW9uKHQpe24uaXNFbnRlcih0KT90aGlzLm1vZGVsLnRyaWdnZXIoImZvcm06c2F2ZSIpOm4uaXNFc2ModCkmJnRoaXMubW9kZWwudHJpZ2dlcigiZm9ybTpjYW5jZWwiKX19LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7ZS4=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("cGVyX189ZS5wcm90b3R5cGUsdH07aT10aGlzO3ZhciBhPWkuQWJzdHJhY3RDaG9zZW47ZT10LGUuZm4uZXh0ZW5kKHtjaG9zZW46ZnVuY3Rpb24odCl7cmV0dXJuIGEuYnJvd3Nlcl9pc19zdXBwb3J0ZWQoKT90aGlzLmVhY2goZnVuY3Rpb24oaSl7dmFyIHI7aWYocj1lKHRoaXMpLCFyLmhhc0NsYXNzKCJjaHpuLWRvbmUiKSlyZXR1cm4gci5kYXRhKCJjaG9zZW4iLG5ldyBuKHRoaXMsdCkpfSk6dGhpc319KSxuPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIG4oKXtyZXR1cm4gcj1uLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIHMobix0KSxuLnByb3RvdHlwZS5zZXR1cD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmZvcm1fZmllbGRfanE9ZSh0aGlzLmZvcm1fZmllbGQpLHRoaXMuY3VycmVudF9zZWxlY3RlZEluZGV4PXRoaXMuZm9ybV9maWVsZC5zZWxlY3RlZEluZGV4LHRoaXMuaXNfcnRsPXRoaXMuZm9ybV9maWVsZF9qcS5oYXNDbGFzcygiY2h6bi1ydGwiKX0sbi5wcm90b3R5cGUuZmluaXNoX3NldHVwPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZm9ybV9maWVsZF9qcS5hZGRDbGFzcygiY2h6bi1kb25lIil9LG4ucHJvdG90eXBlLnNldF91cF9odG1sPWZ1bmN0aW9uKCl7dmFyIHQsbjtyZXR1cm4gdGhpcy5jb250YWluZXJfaWQ9dGhpcy5mb3JtX2ZpZWxkLmlkLmxlbmd0aD90aGlzLmZvcm1fZmllbGQuaWQucmVwbGFjZSgvW15cd10vZywiXyIpOnRoaXMuZ2VuZXJhdGVfZmllbGRfaWQoKSx0aGlzLmNvbnRhaW5lcl9pZCs9Il9jaHpuIix0PVsiY2h6bi1jb250YWluZXIiXSx0LnB1c2goImNoem4tY29udGFpbmVyLSIrKHRoaXMuaXNfbXVsdGlwbGU/Im11bHRpIjoic2luZ2xlIikpLHRoaXMuaW5oZXJpdF9zZWxlY3RfY2xhc3NlcyYmdGhpcy5mb3JtX2ZpZWxkLmNsYXNzTmFtZSYmdC5wdXNoKHRoaXMuZm9ybV9maWVsZC5jbGFzc05hbWUpLHRoaXMuaXNfcnRsJiZ0LnB1c2goImNoem4tcnRsIiksbj17aWQ6dGhpcy5jb250YWluZXJfaWQsImNsYXNzIjp0LmpvaW4oIiAiKSxzdHlsZToid2lkdGg6ICIrdGhpcy5jb250YWluZXJfd2lkdGgoKSsiOyIsdGl0bGU6dGhpcy5mb3JtX2ZpZWxkLnRpdGxlfSx0aGlzLmNvbnRhaW5lcj1lKCI8ZGl2IC8+IixuKSx0aGlzLmlzX211bHRpcGxlP3RoaXMuY29udGFpbmVyLmh0bWwoJzx1bCBjbGFzcz0iY2h6bi1jaG9pY2VzIj48bGkgY2xhc3M9InNlYXJjaC1maWVsZCI+PGlucHV0IHR5cGU9InRleHQiIHZhbHVlPSInK3RoaXMuZGVmYXVsdF90ZXh0KyciIGNsYXNzPSJkZWZhdWx0IiBhdXRvY29tcGxldGU9Im9mZiIgc3R5bGU9IndpZHRoOjI1cHg7IiAvPjwvbGk+PC91bD48ZGl2IGNsYXNzPSJjaHpuLWRyb3AiPjx1bCBjbGFzcz0iY2h6bi1yZXN1bHRzIj48L3VsPjwvZGl2PicpOnRoaXMuY29udGFpbmVyLmh0bWwoJzxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCg=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("b24oKXtpZih0aGlzLmFsbG93X3NpbmdsZV9kZXNlbGVjdClyZXR1cm4gdGhpcy5zZWxlY3RlZF9pdGVtLmZpbmQoImFiYnIiKS5sZW5ndGh8fHRoaXMuc2VsZWN0ZWRfaXRlbS5maW5kKCJzcGFuIikuZmlyc3QoKS5hZnRlcignPGFiYnIgY2xhc3M9InNlYXJjaC1jaG9pY2UtY2xvc2UiPjwvYWJicj4nKSx0aGlzLnNlbGVjdGVkX2l0ZW0uYWRkQ2xhc3MoImNoem4tc2luZ2xlLXdpdGgtZGVzZWxlY3QiKX0sbi5wcm90b3R5cGUud2lubm93X3Jlc3VsdHM9ZnVuY3Rpb24oKXt2YXIgdCxuLGkscixvLHMsYSxsLGMsdSxkLGgscCxmLG0sXyxnLHY7Zm9yKHRoaXMubm9fcmVzdWx0c19jbGVhcigpLGM9MCx1PXRoaXMuc2VhcmNoX2ZpZWxkLnZhbCgpPT09dGhpcy5kZWZhdWx0X3RleHQ/IiI6ZSgiPGRpdi8+IikudGV4dChlLnRyaW0odGhpcy5zZWFyY2hfZmllbGQudmFsKCkpKS5odG1sKCkscz10aGlzLnNlYXJjaF9jb250YWlucz8iIjoiXiIsbz1uZXcgUmVnRXhwKHMrdS5yZXBsYWNlKC9bLVtcXXt9KCkqKz8uLFxcXiR8I1xzXS9nLCJcXCQmIiksImkiKSxwPW5ldyBSZWdFeHAodS5yZXBsYWNlKC9bLVtcXXt9KCkqKz8uLFxcXiR8I1xzXS9nLCJcXCQmIiksImkiKSx2PXRoaXMucmVzdWx0c19kYXRhLGY9MCxfPXYubGVuZ3RoO2Y8XztmKyspaWYobj12W2ZdLCFuLmVtcHR5KWlmKG4uZ3JvdXApZSgiIyIrbi5kb21faWQpLmNzcygiZGlzcGxheSIsIm5vbmUiKTtlbHNle2lmKHQ9ITEsbD1uLmRvbV9pZCxhPWUoIiMiK2wpLG8udGVzdChuLmh0bWwpKXQ9ITAsYys9MTtlbHNlIGlmKHRoaXMuZW5hYmxlX3NwbGl0X3dvcmRfc2VhcmNoJiYobi5odG1sLmluZGV4T2YoIiAiKT49MHx8MD09PW4uaHRtbC5pbmRleE9mKCJbIikpJiYocj1uLmh0bWwucmVwbGFjZSgvXFt8XF0vZywiIikuc3BsaXQoIiAiKSxyLmxlbmd0aCkpZm9yKG09MCxnPXIubGVuZ3RoO208ZzttKyspaT1yW21dLG8udGVzdChpKSYmKHQ9ITAsYys9MSk7dD8odS5sZW5ndGg/KGQ9bi5odG1sLnNlYXJjaChwKSxoPW4uaHRtbC5zdWJzdHIoMCxkK3UubGVuZ3RoKSsiPC9lbT4iK24uaHRtbC5zdWJzdHIoZCt1Lmxlbmd0aCksaD1oLnN1YnN0cigwLGQpKyI8ZW0+IitoLnN1YnN0cihkKSk6aD1uLmh0bWwsYS5odG1sKGgpLHRoaXMucmVzdWx0X2FjdGl2YXRlKGEsbiksbnVsbCE9bi5ncm91cF9hcnJheV9pbmRleCYmZSgiIyIrdGhpcy5yZXN1bHRzX2RhdGFbbi5ncm91cF9hcnJheV9pbmRleF0uZG9tX2lkKS5jc3MoImRpc3BsYXkiLCJsaXN0LWl0ZW0iKSk6KHRoaXMucmVzdWx0X2hpZ2hsaWdodCYmbD09PXRoaXMucmVzdWx0X2hpZ2hsaWdodC5hdHRyKCJpZCIpJiZ0aGlzLnJlc3VsdF9jbGVhcl9oaWdobGlnaHQoKSx0aGlzLnJlc3VsdF9kZWFjdGl2YXRlKGEpKX1yZXR1cm4gYzwxJiZ1Lmxlbmd0aD90aGlzLm5vX3Jlc3VsdHModSk6dGhpcy53aW5ub3dfcmVzdWx0c19zZXRfaGlnaGxpZ2h0KCl9LG4ucHJvdG90eXBlLndpbm5vd19yZXN1bHRzX3NldF9oaWdobGlnaHQ9ZnVuY3Rpb24oKXt2YXIgdCxlO2lmKCF0aGlzLnJlc3VsdF9oaWdobGlnaHQmJihlPXRoaXMuaXNfbXVsdGlwbGU/W106dGhpcy5zZWFyY2hfcmVzdWx0cy5maW5kKCIucmVzdWx0LXNlbGVjdGVkLmFjdGl2ZS1yZXN1bHQiKSx0PWUubGVuZ3RoP2UuZmlyc3QoKTp0aGlzLnNlYXJjaF9yZXN1bHRzLmZpbmQoIi5hY3RpdmUtcmVzdWx0IikuZmlyc3QoKSxudWxsIT10KSlyZXR1cm4gdGhpcy5yZXN1bHRfZG9faGlnaGxpZ2h0KHQpfSxuLnByb3RvdHlwZS5ub19yZXN1bHRzPWZ1bmN0aW9uKHQpe3ZhciBuO3JldHVybiBuPWUoJzxsaSBjbGFzcz0ibm8tcmVzdWx0cyI+Jyt0aGlzLnJlc3VsdHNfbm9uZV9mb3VuZCsnICI8c3Bhbj48L3NwYW4+IjwvbGk+Jyksbi5maW5kKCJzcGFuIikuZmlyc3QoKS5odG1sKHQpLHRoaXMuc2VhcmNoX3Jlc3VsdHMuYXBwZW5kKG4pfSxuLnByb3RvdHlwZS5ub19yZXN1bHRzX2NsZWFyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2VhcmNoX3Jlc3VsdHMuZmluZCgiLm5vLXJlc3VsdHMiKS5yZW1vdmUoKX0sbi5wcm90b3R5cGUua2V5ZG93bl9hcnJvdz1mdW5jdGlvbigpe3ZhciB0O3JldHVybiB0aGlzLnJlc3VsdHNfc2hvd2luZyYmdGhpcy5yZXN1bHRfaGlnaGxpZ2h0Pyh0PXRoaXMucmVzdWx0X2hpZ2hsaWdodC5uZXh0QWxsKCJsaS5hY3RpdmUtcmVzdWx0IikuZmlyc3QoKSk/dGhpcy5yZXN1bHRfZG9faGlnaGxpZ2h0KHQpOnZvaWQgMDp0aGlzLnJlc3VsdHNfc2hvdygpfSxuLnByb3RvdHlwZS5rZXl1cF9hcnJvdz1mdW5jdGlvbigpe3ZhciB0O3JldHVybiB0aGlzLnJlc3VsdHNfc2hvd2luZ3x8dGhpcy5pc19tdWx0aXBsZT90aGlzLnJlc3VsdF9oaWdobGlnaHQ/KHQ9dGhpcy5yZXN1bHRfaGlnaGxpZ2h0LnByZXZBbGwoImxpLmFjdGl2ZS1yZXN1bHQiKSx0Lmxlbmd0aD90aGlzLnJlc3VsdF9kb19oaWdobGlnaHQodC5maXJzdCgpKToodGhpcy5jaG9pY2VzX2NvdW50KCk+MCYmdGhpcy5yZXN1bHRzX2hpZGUoKSx0aGlzLnJlc3VsdF9jbGVhcl9oaWdobGlnaHQoKSkpOnZvaWQgMDp0aGlzLnJlc3VsdHNfc2hvdygpfSxuLnByb3RvdHlwZS5rZXlkb3duX2JhY2tzdHJva2U9ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gdGhpcy5wZW5kaW5nX2JhY2tzdHJva2U/KHRoaXMuY2hvaWNlX2Rlc3Ryb3kodGhpcy5wZW5kaW5nX2JhY2tzdHJva2UuZmluZCgiYSIpLmZpcnN0KCkpLHRoaXMuY2xlYXJfYmFja3N0cm9rZSgpKToodD10aGlzLnNlYXJjaF9jb250YWluZXIuc2libGluZ3MoImxpLnNlYXJjaC1jaG9pY2UiKS5sYXN0KCksdC5sZW5ndGgmJiF0Lmhhc0NsYXNzKCJzZWFyY2gtY2hvaWNlLWRpc2FibGVkIik/KHRoaXMucGVuZGluZ19iYWNrc3Ryb2tlPXQsdGhpcy5zaW5nbGVfYmFja3N0cm9rZV9kZWxldGU/dGhpcy5rZXlkb3duX2JhY2tzdHJva2UoKTp0aGlzLnBlbmRpbmdfYmFja3N0cm9rZS5hZGRDbGFzcygic2VhcmNoLWNob2ljZS1mb2N1cyIpKTp2b2lkIDApfSxuLnByb3RvdHlwZS5jbGVhcl9iYWNrc3Ryb2tlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGVuZGluZ19iYWNrc3Ryb2tlJiZ0aGlzLnBlbmRpbmdfYmFja3N0cm9rZS5yZW1vdmVDbGFzcygic2VhcmNoLWNob2ljZS1mb2N1cyIpLHRoaXMucGVuZGluZ19iYWNrc3Ryb2tlPW51bGx9LG4ucHJvdG90eXBlLmtleWRvd25fY2hlY2tlcj1mdW5jdGlvbih0KXt2YXIgZSxuO3N3aXRjaChlPW51bGwhPShuPXQud2hpY2gpP246dC5rZXlDb2RlLHRoaXMuc2VhcmNoX2ZpZWxkX3NjYWxlKCksOCE9PWUmJnRoaXMucGVuZGluZ19iYWNrc3Ryb2tlJiZ0aGlzLmNsZWFyX2JhY2tzdHJva2UoKSxlKXtjYXNlIDg6dGhpcy5iYWNrc3Ryb2tlX2xlbmd0aD10aGlzLnNlYXJjaF9maWVsZC52YWwoKS5sZW5ndGg7YnJlYWs7Y2FzZSA5OnRoaXMucmVzdWx0c19zaG93aW5nJiYhdGhpcy5pc19tdWx0aXBsZSYmdGhpcy5yZXN1bHRfc2VsZWN0KHQpLHRoaXMubW91c2Vfb25fY29udGFpbmVyPSExO2JyZWFrO2Nhc2UgMTM6dC5wcmV2ZW50RGVmYXVsdCgpO2JyZWFrO2Nhc2UgMzg6dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMua2V5dXBfYXJyb3coKTticmVhaztjYXNlIDQwOnQucHJldmVudERlZmF1bHQoKSx0aGlzLmtleWRvd25fYXJyb3coKX19LG4ucHJvdG90eXBlLnNlYXJjaF9maWVsZF9zY2FsZT1mdW5jdGlvbigpe3ZhciB0LG4saSxyLG8scyxhLGw7aWYodGhpcy5pc19tdWx0aXBsZSl7Zm9yKG49MCxzPTAscj0icG9zaXRpb246YWJzb2x1dGU7IGxlZnQ6IC0xMDAwcHg7IHRvcDogLTEwMDBweDsgZGlzcGxheTpub25lOyIsbz1bImZvbnQtc2l6ZSIsImZvbnQtc3R5bGUiLCJmb250LXdlaWdodCIsImZvbnQtZmFtaWx5IiwibGluZS1oZWlnaHQiLCJ0ZXh0LXRyYW5zZm9ybSIsImxldHRlci1zcGFjaW5nIl0sYT0wLGw9by5sZW5ndGg7YTxsO2ErKylpPW9bYV0scis9aSsiOiIrdGhpcy5zZWFyY2hfZmllbGQuY3NzKGkpKyI7IjtyZXR1cm4gdD1lKCI8ZGl2IC8+Iix7c3R5bGU6cn0pLHQudGV4dCh0aGlzLnNlYXJjaF9maWVsZC52YWwoKSksZSgiYm9keSIpLmFwcGVuZCh0KSxzPXQud2lkdGgoKSsyNSx0LnJlbW92ZSgpLHRoaXMuZl93aWR0aHx8KHRoaXMuZl93aWR0aD10aGlzLmNvbnRhaW5lci5vdXRlcldpZHRoKCkpLHM+dGhpcy5mX3dpZHRoLTEwJiYocz10aGlzLmZfd2lkdGgtMTApLHRoaXMuc2VhcmNoX2ZpZWxkLmNzcyh7d2lkdGg6cysicHgifSl9fSxuLnByb3RvdHlwZS5nZW5lcmF0ZV9yYW5kb21faWQ9ZnVuY3Rpb24oKXt2YXIgdDtmb3IodD0ic2VsIit0aGlzLmdlbmVyYXRlX3JhbmRvbV9jaGFyKCkrdGhpcy5nZW5lcmF0ZV9yYW5kb21fY2hhcigpK3RoaXMuZ2VuZXJhdGVfcmFuZG9tX2NoYXIoKTtlKCIjIit0KS5sZW5ndGg+MDspdCs9dGhpcy5nZW5lcmF0ZV9yYW5kb21fY2hhcigpO3JldHVybiB0fSxufShhKSxpLkNob3Nlbj1ufS5jYWxsKHRoaXMpfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDMzMSksbig0OTcpLG4oNTE0KSxuKDUyNyksbig0NzApLG4oNTMzKV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyl7dmFyIHM9aS5pc0FCYXNlVmlldyxhPW8uZXh0ZW5kKHt0ZW1wbGF0ZTonXHQgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5hbWU9Int7bmFtZX19IiBkYXRhLXNlLW5hbWU9Int7cmVhbE5hbWV9fSIgdmFsdWU9Int7dmFsdWV9fSIgaWQ9Int7b3B0aW9uSWR9fSI+XHQgICAgICA8bGFiZWwgZm9yPSJ7e29wdGlvbklkfX0iIGRhdGEtc2UtZm9yLW5hbWU9Int7cmVhbE5hbWV9fSIgY2xhc3M9InJhZGlvLWxhYmVsIj5cdCAgICAgICAge3tsYWJlbH19XHQgICAgICA8L2xhYmVsPlx0ICAgICcsaW5pdGlhbGl6ZTpmdW5jdGlvbihlKXt2YXIgbjtuPWUuZXhwbGFpbix0LmlzRnVuY3Rpb24obikmJiFzKG4pJiYobj10LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsImV4cGxhaW4iLHRoaXMpKSxuJiYocyhuKT8odGhpcy5hZGQoJzxwIGNsYXNzPSJvLWZvcm0tZXhwbGFpbiI+PC9wPicsIi5yYWRpby1sYWJlbCIpLHRoaXMuYWRkKG4sIi5vLWZvcm0tZXhwbGFpbiIpKTp0aGlzLmFkZCgnPHAgY2xhc3M9Im8tZm9ybS1leHBsYWluIj57e2V4cGxhaW59fTwvcD4nLCIucmFkaW8tbGFiZWwiKSl9fSk7cmV0dXJuIHIuZXh0ZW5kKHtldmVudHM6eyJjaGFuZ2UgOnJhZGlvIjoidXBkYXRlIixrZXl1cDpmdW5jdGlvbih0KXtuLmlzU3BhY2VCYXIodCk/ZSh0LnRhcmdldCkuY2xpY2soKTpuLmlzRW50ZXIodCkmJnRoaXMubW9kZWwudHJpZ2dlcigiZm9ybTpzYXZlIil9fSxlZGl0TW9kZTpmdW5jdGlvbigpe3ZhciBlPVtdO3RoaXMuJGVsLmVtcHR5KCksdC5lYWNoKHRoaXMub3B0aW9ucy5vcHRpb25zLGZ1bmN0aW9uKG4saSl7dmFyIHI9e29wdGlvbklkOnQudW5pcXVlSWQoIm9wdGlvbiIpLG5hbWU6dGhpcy5vcHRpb25zLmlucHV0SWQscmVhbE5hbWU6dGhpcy5vcHRpb25zLm5hbWUsdmFsdWU6aX07dC5pc09iamVjdChuKXx8KG49e2xhYmVsOm59KSx0LmV4dGVuZChyLG4pLGUucHVzaChuZXcgYShyKS5yZW5kZXIoKS5lbCl9LHRoaXMpLHRoaXMuJGVsLmFwcGVuZChlKTt2YXIgbj10aGlzLmdldE1vZGVsVmFsdWUoKTtyZXR1cm4gbiYmdGhpcy4kKCI6cmFkaW9bdmFsdWU9IituKyJdIikucHJvcCgiY2hlY2tlZCIsITApLHRoaXMuJCgiaW5wdXQiKS5jdXN0b21JbnB1dCgpLHRoaXMubW9kZWwudHJpZ2dlcigiZm9ybTpyZXNpemUiKSx0aGlzLmdldFBhcmFtKCJpbmxpbmUiKT09PSEwJiZ0aGlzLiQoImRpdi5jdXN0b20tcmFkaW8iKS5hZGRDbGFzcygiaW5saW4=", "base64"));
  res.write(new Buffer("ZSIpLHRoaXN9LHJlYWRNb2RlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZWRpdE1vZGUoKSx0aGlzLiQoIjpyYWRpbyIpLnByb3AoImRpc2FibGVkIiwhMCksdGhpc30sdmFsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJCgiOnJhZGlvOmNoZWNrZWQiKS52YWwoKX0sZm9jdXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kKCJsYWJlbDplcSgwKSIpLmZvY3VzKCl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMzIpXSxyPWZ1bmN0aW9uKHQpe3ZhciBlPXQ7dC5mbi5jdXN0b21JbnB1dD1mdW5jdGlvbigpe3JldHVybiBlKHRoaXMpLmVhY2goZnVuY3Rpb24oKXtpZihlKHRoaXMpLmlzKCJbdHlwZT1jaGVja2JveF0sW3R5cGU9cmFkaW9dIikpe3ZhciB0PWUodGhpcyksbj10LnNpYmxpbmdzKCdsYWJlbFtmb3I9IicrdC5hdHRyKCJpZCIpKyciXTpmaXJzdCcpO24ubGVuZ3RofHwobj10LmNsb3Nlc3QoJ2xhYmVsW2Zvcj0iJyt0LmF0dHIoImlkIikrJyJdOmZpcnN0JykpLHQuYWRkKG4pLndyYXBBbGwoJzxkaXYgY2xhc3M9ImN1c3RvbS0nK3QuYXR0cigidHlwZSIpKyciPjwvZGl2PicpLG4uaG92ZXIoZnVuY3Rpb24oKXtlKHRoaXMpLmFkZENsYXNzKCJob3ZlciIpfSxmdW5jdGlvbigpe2UodGhpcykucmVtb3ZlQ2xhc3MoImhvdmVyIil9KSx0LmJpbmQoInVwZGF0ZVN0YXRlIixmdW5jdGlvbigpe3QuaXMoIjpjaGVja2VkIik/bi5hZGRDbGFzcygiY2hlY2tlZCIpOm4ucmVtb3ZlQ2xhc3MoImNoZWNrZWQgY2hlY2tlZEhvdmVyIGNoZWNrZWRGb2N1cyIpfSkudHJpZ2dlcigidXBkYXRlU3RhdGUiKS5jbGljayhmdW5jdGlvbigpe2UoJ2lucHV0W25hbWU9IicrZSh0aGlzKS5hdHRyKCJuYW1lIikrJyJdJykudHJpZ2dlcigidXBkYXRlU3RhdGUiKX0pLmZvY3VzKGZ1bmN0aW9uKCl7bi5hZGRDbGFzcygiZm9jdXMiKSx0LmlzKCI6Y2hlY2tlZCIpJiZlKHRoaXMpLmFkZENsYXNzKCJjaGVja2VkRm9jdXMiKX0pLmJsdXIoZnVuY3Rpb24oKXtuLnJlbW92ZUNsYXNzKCJmb2N1cyBjaGVja2VkRm9jdXMiKX0pfX0pfX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMyOCksbig0OTcpLG4oNDcxKSxuKDUyNyksbig1MzMpXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPW4udHBsKCdcdCAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Int7bmFtZX19IiBpZD0ie3tpbnB1dElkfX0iLz5cdCAgICA8bGFiZWwgZm9yPSJ7e2lucHV0SWR9fSIgZGF0YS1zZS1mb3ItbmFtZT0ie3tuYW1lfX0iPnt7cGxhY2Vob2xkZXJ9fTwvbGFiZWw+XHQgICcpO3JldHVybiBpLmV4dGVuZCh7dGVtcGxhdGU6cixldmVudHM6eyJjaGFuZ2UgOmNoZWNrYm94IjoidXBkYXRlIixrZXl1cDpmdW5jdGlvbih0KXs=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("LGk9dGhpcy5vcHRHcm91cHMubGVuZ3RoPjAscj10aGlzLm9wdGlvbnMuc2VsZWN0T3B0aW9ucztyZXR1cm4gdC5yZWR1Y2UoZSxmdW5jdGlvbihlLG8pe3ZhciBzPW5bb107cmV0dXJuIXMmJmkmJihzPXQuZmluZChyLGZ1bmN0aW9uKHQpe3JldHVybiB0LmtleT09PW99KSksc3x8ZS5wdXNoKHtrZXk6byx2YWx1ZTpvfSksZX0sW10pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MSksbig1MTQpLG4oNTI3KSxuKDQ2NildLHI9ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9ZS50cGwoJ1x0ICAgIDxwIGNsYXNzPSJkcm9wZG93bi1mb290ZXIiPnt7aTE4biBjb2RlPSJvZm9ybS5zZWxlY3QuZHJvcGRvd24uZm9vdGVyIiBidW5kbGU9ImNvdXJhZ2UiIGFyZ3VtZW50cz0ibnVtIn19PC9wPlx0ICAnKSxvPWUudHBsKCdcdCAgICA8cCBjbGFzcz0iZHJvcGRvd24tZm9vdGVyIj57e2kxOG4gY29kZT0ib2Zvcm0uYmFzZXNlbGVjdC5ub3Jlc3VsdHMiIGJ1bmRsZT0iY291cmFnZSJ9fTwvcD5cdCAgJykoKTtyZXR1cm4gaS5leHRlbmQoe2dldFNlbGVjdGl6ZU9wdGlvbjpuLmNvbnN0YW50RXJyb3IoImdldFNlbGVjdGl6ZU9wdGlvbiBpcyBhbiBhYnN0cmFjdCB2YXJpYWJsZSIpLHRlbXBsYXRlOmUudHBsKCc8c2VsZWN0IGlkPSJ7e2lucHV0SWR9fSIgbmFtZT0ie3tuYW1lfX0iPjwvc2VsZWN0PicpLGNsYXNzTmFtZToiby1mb3JtLXNlYXJjaGFibGUtc2VsZWN0IixtYXhPcHRpb25zOjE1MCxldmVudHM6eyJjaGFuZ2Ugc2VsZWN0IjoidXBkYXRlIn0sY29uc3RydWN0b3I6ZnVuY3Rpb24oKXtpZihpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSwhdC5pc09iamVjdCh0aGlzLm9wdGlvbnMub3B0aW9ucykpdGhyb3cgbmV3IEVycm9yKCJvcHRpb25zIGlzIG5vdCBwcm92aWRlZCB3aGVuIGluaXRpYWxpemVzIFNlYXJjaGFibGVTZWxlY3QiKTt2YXIgZT10aGlzLl9fZ2V0T3B0aW9ucyh0aGlzLm9wdGlvbnMub3B0aW9ucyk7dGhpcy5zZWxlY3RPcHRpb25zPWUub3B0aW9ucyx0aGlzLm9wdEdyb3Vwcz1lLmdyb3Vwcyx0aGlzLl9hZGRGb290ZXJOb3RlPXQuZGVib3VuY2UodGhpcy5fYWRkRm9vdGVyTm90ZS5iaW5kKHRoaXMpLDEwMCl9LGhhbmRsZUZvb3RlcjpmdW5jdGlvbigpe3RoaXMuJCgiLmRyb3Bkb3duLWZvb3RlciIpLnJlbW92ZSgpLHRoaXMuX2FkZEZvb3Rlck5vdGUoKX0sX2FkZEZvb3Rlck5vdGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldFBhcmFtT3JBdHRyaWJ1dGUoIm1heE9wdGlvbnMiKSxlPXRoaXMuJCgiLnNlbGVjdGl6ZS1kcm9wZG93bi1jb250ZW50IC5vcHRpb24iKS5sZW5ndGg7ZT09PXQ/dGhpcy4kKCIuc2VsZWN0aXplLWRyb3Bkb3duLWNvbnRlbnQiKS5hcHBlbmQocih7bnVtOnR9KSk6MD09PWUmJih0aGlzLiQoIi5zZWxlY3RpemUtZHJvcGRvd24tY29udGVudCIpLmFwcGVuZChvKSx0aGlzLiQoIi5zZWxlY3RpemUtZHJvcGRvd24iKS5zaG93KCkpfSxnZXRFeHRyYU9wdGlvbnM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmdldFBhcmFtT3JBdHRyaWJ1dGUoIm1heE9wdGlvbnMiKSxuPXRoaXMuc2VsZWN0T3B0aW9ucyxpPXRoaXMub3B0R3JvdXBzLHI9e29wdGlvbnM6bixwbGFjZWhvbGRlcjp0aGlzLm9wdGlvbnMucGxhY2Vob2xkZXIscHJlbG9hZDohMCxtYXhPcHRpb25zOmUsbGFiZWxGaWVsZDoidmFsdWUiLHZhbHVlRmllbGQ6ImtleSIsc2VhcmNoRmllbGQ6WyJ2YWx1ZSJdLG9uVHlwZTp0aGlzLmhhbmRsZUZvb3Rlci5iaW5kKHRoaXMpLG9wdGdyb3VwczppLG9wdGdyb3VwRmllbGQ6Imdyb3VwIn07cmV0dXJuIHQuZXh0ZW5kKHIsdGhpcy5nZXRTZWxlY3RpemVPcHRpb24oKSl9LGVkaXRNb2RlOmZ1bmN0aW9uKCl7cmV0dXJuIGkucHJvdG90eXBlLmVkaXRNb2RlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLiRzZWxlY3Q9dGhpcy4kKCJzZWxlY3QiKSx0aGlzLiRzZWxlY3Quc2VsZWN0aXplKHRoaXMuZ2V0RXh0cmFPcHRpb25zKCkpLHRoaXN9LHZhbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRzZWxlY3QmJnRoaXMuJHNlbGVjdC52YWwoKX0sZm9jdXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kc2VsZWN0JiZ0aGlzLiRzZWxlY3QuZm9jdXMoKX0sZ2V0T3B0aW9uU3RyaW5nOmZ1bmN0aW9uKGUpe2lmKCF0LnNpemUodGhpcy5vcHRHcm91cHMpJiZ0aGlzLm9wdGlvbnMub3B0aW9ucylyZXR1cm4gdGhpcy5vcHRpb25zLm9wdGlvbnNbZV07dmFyIG49dC5maW5kKHRoaXMuc2VsZWN0T3B0aW9ucyxmdW5jdGlvbih0KXtyZXR1cm4gdC5rZXk9PT1lfSk7cmV0dXJuIG4/bi52YWx1ZTp2b2lkIDB9LF9fZ2V0T3B0aW9uczpmdW5jdGlvbihlKXtyZXR1cm4gdC5pc0Z1bmN0aW9uKGUpJiYoZT1lLmNhbGwodGhpcykpLHQucmVkdWNlKHQuaXNPYmplY3QoZSk/ZTp7fSxmdW5jdGlvbihlLG4saSl7aWYodC5pc09iamVjdChuKSl7dmFyIHI9aTtlLmdyb3Vwcy5wdXNoKHt2YWx1ZTpyLGxhYmVsOnJ9KSx0LnJlZHVjZShuLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC5wdXNoKHtrZXk6bix2YWx1ZTplLGdyb3VwOnJ9KSx0fSxlLm9wdGlvbnMpfWVsc2UgZS5vcHRpb25zLnB1c2goe2tleTppLHZhbHVlOm59KTtyZXR1cm4gZX0se29wdGlvbnM6W10sZ3JvdXBzOltdfSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig1NTQpXSxyPWZ1bmN0aW9uKHQpe3JldHVybiB0LmV4dGVuZCh7Z2V0U2VsZWN0aXplT3B0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRNb2RlbFZhbHVlKCk7cmV0dXJue2l0ZW1zOnQ/W3RdOltdLGNyZWF0ZTohMSxtYXhJdGVtczoxLG9uRHJvcGRvd25PcGVuOnRoaXMuaGFuZGxlRm9vdGVyLmJpbmQodGhpcyl9fSx0b1N0cmluZ1ZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRNb2RlbFZhbHVlKCk7cmV0dXJuIHRoaXMuZ2V0T3B0aW9uU3RyaW5nKHQpfHx0aGlzLmRlZmF1bHRWYWx1ZSgpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MSksbig0NzApLG4oNTU3KV0scj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG4uZXh0ZW5kKHtjbGFzc05hbWU6Im9rdGEtZm9ybS1sYWJlbCBvLWZvcm0tbGFiZWwiLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiby1mb3JtLWxhYmVsIn0sY29uc3RydWN0b3I6ZnVuY3Rpb24oaSl7dC5kZWZhdWx0cyhpLHtpbnB1dElkOmkuaWR9KSxkZWxldGUgaS5pZCxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgcjtyPXRoaXMuX2lzTGFiZWxWaWV3KGkubGFiZWwpPyc8bGFiZWwgZm9yPSJ7e2lucHV0SWR9fSI+PC9sYWJlbD4nOnQuY29udGFpbnMoWyJyYWRpbyIsImNoZWNrYm94Il0saS50eXBlKXx8IWkubGFiZWw/Int7bGFiZWx9fSI6JzxsYWJlbCBmb3I9Int7aW5wdXRJZH19Ij57e2xhYmVsfX0mbmJzcDs8L2xhYmVsPicsaS5zdWJsYWJlbCYmKHIrPSc8c3BhbiBjbGFzcz0iby1mb3JtLWV4cGxhaW4iPnt7c3VibGFiZWx9fTwvc3Bhbj4nKSxpLnRvb2x0aXAmJih0LmlzU3RyaW5nKGkudG9vbHRpcCkmJihpLnRvb2x0aXA9e3RleHQ6aS50b29sdGlwfSkscis9JzxzcGFuIGNsYXNzPSJvLWZvcm0tdG9vbHRpcCBpY29uLTE2IGljb24tb25seSBmb3JtLWhlbHAtMTYiIHRpdGxlPSJ7e3Rvb2x0aXAudGV4dH19Ij48L3NwYW4+JyksdGhpcy50ZW1wbGF0ZT1lLnRwbChyKX0sZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7dmFyIGU9e2xhYmVsOiIifTtyZXR1cm4gdC5lYWNoKFsiaW5wdXRJZCIsImxhYmVsIiwic3VibGFiZWwiLCJ0b29sdGlwIl0sZnVuY3Rpb24obil7ZVtuXT10LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsbix0aGlzKX0sdGhpcyksZX0sX2lzTGFiZWxWaWV3OmZ1bmN0aW9uKGUpe3JldHVybiF0LmlzVW5kZWZpbmVkKGUpJiZlIGluc3RhbmNlb2Ygbn0scG9zdFJlbmRlcjpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZ2V0VGVtcGxhdGVEYXRhKCk7dGhpcy5faXNMYWJlbFZpZXcoZS5sYWJlbCkmJih0aGlzLnJlbW92ZUNoaWxkcmVuKCksdGhpcy5hZGQoZS5sYWJlbCwibGFiZWwiKSksZS50b29sdGlwJiZ0aGlzLiQoIi5vLWZvcm0tdG9vbHRpcCIpLnF0aXAodC5leHRlbmQoe3N0eWxlOntjbGFzc2VzOiJxdGlwLWN1c3RvbSBxdGlwLXNoYWRvdyJ9LHBvc2l0aW9uOntteToiYm90dG9tIGxlZnQiLGF0OiJ0b3AgY2VudGVyIn0saGlkZTp7Zml4ZWQ6ITB9LHNob3c6e2RlbGF5OjB9fSxlLnRvb2x0aXAub3B0aW9ucykpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG8scz0iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgdH07IWZ1bmN0aW9uKGEsbCxjKXshZnVuY3Rpb24ocyl7InVzZSBzdHJpY3QiO3I9W24oMzMyKV0saT1zLG89ImZ1bmN0aW9uIj09dHlwZW9mIGk/aS5hcHBseShlLHIpOmksIShvIT09YyYmKHQuZXhwb3J0cz1vKSl9KGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBlKGUsbixpLHIpe3RoaXMuaWQ9aSx0aGlzLnRhcmdldD1lLHRoaXMudG9vbHRpcD1ZLHRoaXMuZWxlbWVudHM9e3RhcmdldDplfSx0aGlzLl9pZD1WKyItIitpLHRoaXMudGltZXJzPXtpbWc6e319LHRoaXMub3B0aW9ucz1uLHRoaXMucGx1Z2lucz17fSx0aGlzLmNhY2hlPXtldmVudDp7fSx0YXJnZXQ6dCgpLGRpc2FibGVkOkMsYXR0cjpyLG9uVG9vbHRpcDpDLGxhc3RDbGFzczoiIn0sdGhpcy5yZW5kZXJlZD10aGlzLmRlc3Ryb3llZD10aGlzLmRpc2FibGVkPXRoaXMud2FpdGluZz10aGlzLmhpZGRlbkR1cmluZ1dhaXQ9dGhpcy5wb3NpdGlvbmluZz10aGlzLnRyaWdnZXJpbmc9Q31mdW5jdGlvbiBuKGUpe3JldHVybiBlPT09WXx8Im9iamVjdCIhPT10LnR5cGUoZSl9ZnVuY3Rpb24gaShlKXtyZXR1cm4hKHQuaXNGdW5jdGlvbihlKXx8ZSYmZS5hdHRyfHxlLmxlbmd0aHx8Im9iamVjdCI9PT10LnR5cGUoZSkmJihlLmpxdWVyeXx8ZS50aGVuKSl9ZnVuY3Rpb24gcihlKXt2YXIgcixvLHMsYTtyZXR1cm4gbihlKT9DOihuKGUubWV0YWRhdGEpJiYoZS5tZXRhZGF0YT17dHlwZTplLm1ldGFkYXRhfSksImNvbnRlbnQiaW4gZSYmKHI9ZS5jb250ZW50LG4ocil8fHIuanF1ZXJ5fHxyLmRvbmU/KG89aShyKT9DOnIscj1lLmNvbnRlbnQ9e3RleHQ6b30pOm89ci50ZXh0LCJhamF4ImluIHImJihzPXIuYWpheCxhPXMmJnMub25jZSE9PUMsZGVsZXRlIHIuYWpheCxyLnRleHQ9ZnVuY3Rpb24oZSxuKXt2YXIgaT1vfHx0KHRoaXMpLmF0dHIobi5vcHRpb25zLmNvbnRlbnQuYXR0cil8fCJMb2FkaW5nLi4uIixyPXQuYWpheCh0LmV4dGVuZCh7fSxzLHtjb250ZXh0Om59KSkudGhlbihzLnN1Y2Nlc3MsWSxzLmVycm9yKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0JiZhJiZuLnNldCgiY29udGVudC50ZXh0Iix0KSx0fSxmdW5jdGlvbih0LGUsaSl7bi5kZXN0cm95ZWR8fDA9PT10LnN0YXR1c3x8bi5zZXQoImNvbnRlbnQudGV4dCIsZSsiOiAiK2kpfSk7cmV0dXJuIGE/aToobi5zZXQoImNvbnRlbnQudGV4dCIsaSkscil9KSwidGl0bGUiaW4gciYmKHQuaXNQbGE=", "base64"));
  res.write(new Buffer("aW5PYmplY3Qoci50aXRsZSkmJihyLmJ1dHRvbj1yLnRpdGxlLmJ1dHRvbixyLnRpdGxlPXIudGl0bGUudGV4dCksaShyLnRpdGxlfHxDKSYmKHIudGl0bGU9QykpKSwicG9zaXRpb24iaW4gZSYmbihlLnBvc2l0aW9uKSYmKGUucG9zaXRpb249e215OmUucG9zaXRpb24sYXQ6ZS5wb3NpdGlvbn0pLCJzaG93ImluIGUmJm4oZS5zaG93KSYmKGUuc2hvdz1lLnNob3cuanF1ZXJ5P3t0YXJnZXQ6ZS5zaG93fTplLnNob3c9PT1EP3tyZWFkeTpEfTp7ZXZlbnQ6ZS5zaG93fSksImhpZGUiaW4gZSYmbihlLmhpZGUpJiYoZS5oaWRlPWUuaGlkZS5qcXVlcnk/e3RhcmdldDplLmhpZGV9OntldmVudDplLmhpZGV9KSwic3R5bGUiaW4gZSYmbihlLnN0eWxlKSYmKGUuc3R5bGU9e2NsYXNzZXM6ZS5zdHlsZX0pLHQuZWFjaChCLGZ1bmN0aW9uKCl7dGhpcy5zYW5pdGl6ZSYmdGhpcy5zYW5pdGl6ZShlKX0pLGUpfWZ1bmN0aW9uIG8odCxlKXtmb3IodmFyIG4saT0wLHI9dCxvPWUuc3BsaXQoIi4iKTtyPXJbb1tpKytdXTspaTxvLmxlbmd0aCYmKG49cik7cmV0dXJuW258fHQsby5wb3AoKV19ZnVuY3Rpb24gdSh0LGUpe3ZhciBuLGkscjtmb3IobiBpbiB0aGlzLmNoZWNrcylpZih0aGlzLmNoZWNrcy5oYXNPd25Qcm9wZXJ0eShuKSlmb3IoaSBpbiB0aGlzLmNoZWNrc1tuXSl0aGlzLmNoZWNrc1tuXS5oYXNPd25Qcm9wZXJ0eShpKSYmKHI9bmV3IFJlZ0V4cChpLCJpIikuZXhlYyh0KSkmJihlLnB1c2gociksKCJidWlsdGluIj09PW58fHRoaXMucGx1Z2luc1tuXSkmJnRoaXMuY2hlY2tzW25dW2ldLmFwcGx5KHRoaXMucGx1Z2luc1tuXXx8dGhpcyxlKSl9ZnVuY3Rpb24gZCh0KXtyZXR1cm4gRy5jb25jYXQoIiIpLmpvaW4odD8iLSIrdCsiICI6IiAiKX1mdW5jdGlvbiBoKGUsbil7cmV0dXJuIG4+MD9zZXRUaW1lb3V0KHQucHJveHkoZSx0aGlzKSxuKTp2b2lkIGUuY2FsbCh0aGlzKX1mdW5jdGlvbiBwKHQpe3RoaXMudG9vbHRpcC5oYXNDbGFzcyhldCl8fChjbGVhclRpbWVvdXQodGhpcy50aW1lcnMuc2hvdyksY2xlYXJUaW1lb3V0KHRoaXMudGltZXJzLmhpZGUpLHRoaXMudGltZXJzLnNob3c9aC5jYWxsKHRoaXMsZnVuY3Rpb24oKXt0aGlzLnRvZ2dsZShELHQpfSx0aGlzLm9wdGlvbnMuc2hvdy5kZWxheSkpfWZ1bmN0aW9uIGYoZSl7aWYoIXRoaXMudG9vbHRpcC5oYXNDbGFzcyhldCkmJiF0aGlzLmRlc3Ryb3llZCl7dmFyIG49dChlLnJlbGF0ZWRUYXJnZXQpLGk9bi5jbG9zZXN0KEspWzBdPT09dGhpcy50b29sdGlwWzBdLHI9blswXT09PXRoaXMub3B0aW9ucy5zaG93LnRhcmdldFswXTtpZihjbGVhclRpbWVvdXQodGhpcy50aW1lcnMuc2hvdyksY2xlYXJUaW1lb3V0KHRoaXMudGltZXJzLmhpZGUpLHRoaXMhPT1uWzBdJiYibW91c2UiPT09dGhpcy5vcHRpb25zLnBvc2l0aW9uLnRhcmdldCYmaXx8dGhpcy5vcHRpb25zLmhpZGUuZml4ZWQmJi9tb3U=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("cC5oYXNDbGFzcyhldCk6dGhpcy5kaXNhYmxlZCk6ImJvb2xlYW4iIT10eXBlb2YgdCYmKHQ9RCksdGhpcy5yZW5kZXJlZCYmdGhpcy50b29sdGlwLnRvZ2dsZUNsYXNzKGV0LHQpLmF0dHIoImFyaWEtZGlzYWJsZWQiLHQpLHRoaXMuZGlzYWJsZWQ9ISF0LHRoaXMpfSxMLmVuYWJsZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRpc2FibGUoQyl9LEwuX2NyZWF0ZUJ1dHRvbj1mdW5jdGlvbigpe3ZhciBlPXRoaXMsbj10aGlzLmVsZW1lbnRzLGk9bi50b29sdGlwLHI9dGhpcy5vcHRpb25zLmNvbnRlbnQuYnV0dG9uLG89InN0cmluZyI9PXR5cGVvZiByLHM9bz9yOiJDbG9zZSB0b29sdGlwIjtuLmJ1dHRvbiYmbi5idXR0b24ucmVtb3ZlKCksci5qcXVlcnk/bi5idXR0b249cjpuLmJ1dHRvbj10KCI8YSAvPiIseyJjbGFzcyI6InF0aXAtY2xvc2UgIisodGhpcy5vcHRpb25zLnN0eWxlLndpZGdldD8iIjpWKyItaWNvbiIpLHRpdGxlOnMsImFyaWEtbGFiZWwiOnN9KS5wcmVwZW5kKHQoIjxzcGFuIC8+Iix7ImNsYXNzIjoidWktaWNvbiB1aS1pY29uLWNsb3NlIixodG1sOiImdGltZXM7In0pKSxuLmJ1dHRvbi5hcHBlbmRUbyhuLnRpdGxlYmFyfHxpKS5hdHRyKCJyb2xlIiwiYnV0dG9uIikuY2xpY2soZnVuY3Rpb24odCl7cmV0dXJuIGkuaGFzQ2xhc3MoZXQpfHxlLmhpZGUodCksQ30pfSxMLl91cGRhdGVCdXR0b249ZnVuY3Rpb24odCl7aWYoIXRoaXMucmVuZGVyZWQpcmV0dXJuIEM7dmFyIGU9dGhpcy5lbGVtZW50cy5idXR0b247dD90aGlzLl9jcmVhdGVCdXR0b24oKTplLnJlbW92ZSgpfSxMLl9zZXRXaWRnZXQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMuc3R5bGUud2lkZ2V0LGU9dGhpcy5lbGVtZW50cyxuPWUudG9vbHRpcCxpPW4uaGFzQ2xhc3MoZXQpO24ucmVtb3ZlQ2xhc3MoZXQpLGV0PXQ/InVpLXN0YXRlLWRpc2FibGVkIjoicXRpcC1kaXNhYmxlZCIsbi50b2dnbGVDbGFzcyhldCxpKSxuLnRvZ2dsZUNsYXNzKCJ1aS1oZWxwZXItcmVzZXQgIitkKCksdCkudG9nZ2xlQ2xhc3MoUSx0aGlzLm9wdGlvbnMuc3R5bGUuZGVmJiYhdCksZS5jb250ZW50JiZlLmNvbnRlbnQudG9nZ2xlQ2xhc3MoZCgiY29udGVudCIpLHQpLGUudGl0bGViYXImJmUudGl0bGViYXIudG9nZ2xlQ2xhc3MoZCgiaGVhZGVyIiksdCksZS5idXR0b24mJmUuYnV0dG9uLnRvZ2dsZUNsYXNzKFYrIi1pY29uIiwhdCl9LEwuX3N0b3JlTW91c2U9ZnVuY3Rpb24oZSl7cmV0dXJuKHRoaXMubW91c2U9dC5ldmVudC5maXgoZSkpLnR5cGU9Im1vdXNlbW92ZSIsdGhpc30sTC5fYmluZD1mdW5jdGlvbihlLG4saSxyLG8pe2lmKGUmJmkmJm4ubGVuZ3RoKXt2YXIgcz0iLiIrdGhpcy5faWQrKHI/Ii0iK3I6IiIpO3JldHVybiB0KGUpLmJpbmQoKG4uc3BsaXQ/bjpuLmpvaW4ocysiICIpKStzLHQucHJveHkoaSxvfHx0aGlzKSksdGhpc319LEwuX3VuYmluZD1mdW5jdGlvbihlLG4pe3JldHVybiBlJiZ0KGUpLnVuYmluZCgiLiIrdGhpcy5faWQrKG4/Ii0iK246IiIpKSx0aGlzfSxMLl90cmlnZ2VyPWZ1bmN0aW9uKGUsbixpKXt2YXIgcj1uZXcgdC5FdmVudCgidG9vbHRpcCIrZSk7cmV0dXJuIHIub3JpZ2luYWxFdmVudD1pJiZ0LmV4dGVuZCh7fSxpKXx8dGhpcy5jYWNoZS5ldmVudHx8WSx0aGlzLnRyaWdnZXJpbmc9ZSx0aGlzLnRvb2x0aXAudHJpZ2dlcihyLFt0aGlzXS5jb25jYXQobnx8W10pKSx0aGlzLnRyaWdnZXJpbmc9Qywhci5pc0RlZmF1bHRQcmV2ZW50ZWQoKX0sTC5fYmluZEV2ZW50cz1mdW5jdGlvbihlLG4saSxyLG8scyl7dmFyIGE9aS5maWx0ZXIocikuYWRkKHIuZmlsdGVyKGkpKSxsPVtdO2EubGVuZ3RoJiYodC5lYWNoKG4sZnVuY3Rpb24obixpKXt2YXIgcj10LmluQXJyYXkoaSxlKTtyPi0xJiZsLnB1c2goZS5zcGxpY2UociwxKVswXSl9KSxsLmxlbmd0aCYmKHRoaXMuX2JpbmQoYSxsLGZ1bmN0aW9uKHQpe3ZhciBlPSEhdGhpcy5yZW5kZXJlZCYmdGhpcy50b29sdGlwWzBdLm9mZnNldFdpZHRoPjA7KGU/czpvKS5jYWxsKHRoaXMsdCl9KSxpPWkubm90KGEpLHI9ci5ub3QoYSkpKSx0aGlzLl9iaW5kKGksZSxvKSx0aGlzLl9iaW5kKHIsbixzKX0sTC5fYXNzaWduSW5pdGlhbEV2ZW50cz1mdW5jdGlvbihlKXtmdW5jdGlvbiBuKGUpe3JldHVybiB0aGlzLmRpc2FibGVkfHx0aGlzLmRlc3Ryb3llZD9DOih0aGlzLmNhY2hlLmV2ZW50PWUmJnQuZXZlbnQuZml4KGUpLHRoaXMuY2FjaGUudGFyZ2V0PWUmJnQoZS50YXJnZXQpLGNsZWFyVGltZW91dCh0aGlzLnRpbWVycy5zaG93KSx2b2lkKHRoaXMudGltZXJzLnNob3c9aC5jYWxsKHRoaXMsZnVuY3Rpb24oKXt0aGlzLnJlbmRlcigib2JqZWN0Ij09PSgidW5kZWZpbmVkIj09dHlwZW9mIGU/InVuZGVmaW5lZCI6cyhlKSl8fGkuc2hvdy5yZWFkeSl9LGkucHJlcmVuZGVyPzA6aS5zaG93LmRlbGF5KSkpfXZhciBpPXRoaXMub3B0aW9ucyxyPWkuc2hvdy50YXJnZXQsbz1pLmhpZGUudGFyZ2V0LGE9aS5zaG93LmV2ZW50P3QudHJpbSgiIitpLnNob3cuZXZlbnQpLnNwbGl0KCIgIik6W10sbD1pLmhpZGUuZXZlbnQ/dC50cmltKCIiK2kuaGlkZS5ldmVudCkuc3BsaXQoIiAiKTpbXTt0aGlzLl9iaW5kKHRoaXMuZWxlbWVudHMudGFyZ2V0LFsicmVtb3ZlIiwicmVtb3ZlcXRpcCJdLGZ1bmN0aW9uKCl7dGhpcy5kZXN0cm95KCEwKX0sImRlc3Ryb3kiKSwvbW91c2Uob3ZlcnxlbnRlcikvaS50ZXN0KGkuc2hvdy5ldmVudCkmJiEvbW91c2Uob3V0fGxlYXZlKS9pLnRlc3QoaS5oaWRlLmV2ZW50KSYmbC5wdXNoKCJtb3VzZWxlYXZlIiksdGhpcy5fYmluZChyLCJtb3VzZW1vdmUiLGZ1bmN0aW9uKHQpe3RoaXMuX3N0b3JlTW91c2UodCksdGhpcy5jYWNoZS5vblRhcmdldD1EfSksdGhpcy5fYmluZEV2ZW50cyhhLGwscixvLG4sZnVuY3Rpb24oKXtyZQ==", "base64"));
  res.write(new Buffer("dHVybiB0aGlzLnRpbWVycz92b2lkIGNsZWFyVGltZW91dCh0aGlzLnRpbWVycy5zaG93KTpDfSksKGkuc2hvdy5yZWFkeXx8aS5wcmVyZW5kZXIpJiZuLmNhbGwodGhpcyxlKX0sTC5fYXNzaWduRXZlbnRzPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxuPXRoaXMub3B0aW9ucyxpPW4ucG9zaXRpb24scj10aGlzLnRvb2x0aXAsbz1uLnNob3cudGFyZ2V0LHM9bi5oaWRlLnRhcmdldCxjPWkuY29udGFpbmVyLHU9aS52aWV3cG9ydCxkPXQobCksaD10KGEpLGc9bi5zaG93LmV2ZW50P3QudHJpbSgiIituLnNob3cuZXZlbnQpLnNwbGl0KCIgIik6W10sdj1uLmhpZGUuZXZlbnQ/dC50cmltKCIiK24uaGlkZS5ldmVudCkuc3BsaXQoIiAiKTpbXTt0LmVhY2gobi5ldmVudHMsZnVuY3Rpb24odCxuKXtlLl9iaW5kKHIsInRvZ2dsZSI9PT10P1sidG9vbHRpcHNob3ciLCJ0b29sdGlwaGlkZSJdOlsidG9vbHRpcCIrdF0sbixudWxsLHIpfSksL21vdXNlKG91dHxsZWF2ZSkvaS50ZXN0KG4uaGlkZS5ldmVudCkmJiJ3aW5kb3ciPT09bi5oaWRlLmxlYXZlJiZ0aGlzLl9iaW5kKGQsWyJtb3VzZW91dCIsImJsdXIiXSxmdW5jdGlvbih0KXsvc2VsZWN0fG9wdGlvbi8udGVzdCh0LnRhcmdldC5ub2RlTmFtZSl8fHQucmVsYXRlZFRhcmdldHx8dGhpcy5oaWRlKHQpfSksbi5oaWRlLmZpeGVkP3M9cy5hZGQoci5hZGRDbGFzcyhYKSk6L21vdXNlKG92ZXJ8ZW50ZXIpL2kudGVzdChuLnNob3cuZXZlbnQpJiZ0aGlzLl9iaW5kKHMsIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHRoaXMudGltZXJzLnNob3cpfSksKCIiK24uaGlkZS5ldmVudCkuaW5kZXhPZigidW5mb2N1cyIpPi0xJiZ0aGlzLl9iaW5kKGMuY2xvc2VzdCgiaHRtbCIpLFsibW91c2Vkb3duIiwidG91Y2hzdGFydCJdLGZ1bmN0aW9uKGUpe3ZhciBuPXQoZS50YXJnZXQpLGk9dGhpcy5yZW5kZXJlZCYmIXRoaXMudG9vbHRpcC5oYXNDbGFzcyhldCkmJnRoaXMudG9vbHRpcFswXS5vZmZzZXRXaWR0aD4wLHI9bi5wYXJlbnRzKEspLmZpbHRlcih0aGlzLnRvb2x0aXBbMF0pLmxlbmd0aD4wO25bMF09PT10aGlzLnRhcmdldFswXXx8blswXT09PXRoaXMudG9vbHRpcFswXXx8cnx8dGhpcy50YXJnZXQuaGFzKG5bMF0pLmxlbmd0aHx8IWl8fHRoaXMuaGlkZShlKX0pLCJudW1iZXIiPT10eXBlb2Ygbi5oaWRlLmluYWN0aXZlJiYodGhpcy5fYmluZChvLCJxdGlwLSIrdGhpcy5pZCsiLWluYWN0aXZlIixtLCJpbmFjdGl2ZSIpLHRoaXMuX2JpbmQocy5hZGQociksay5pbmFjdGl2ZUV2ZW50cyxtKSksdGhpcy5fYmluZEV2ZW50cyhnLHYsbyxzLHAsZiksdGhpcy5fYmluZChvLmFkZChyKSwibW91c2Vtb3ZlIixmdW5jdGlvbih0KXtpZigibnVtYmVyIj09dHlwZW9mIG4uaGlkZS5kaXN0YW5jZSl7dmFyIGU9dGhpcy5jYWNoZS5vcmlnaW58fHt9LGk9dGhpcy5vcHRpb25zLmhpZGUuZGlzdGFuY2Uscj1NYXRoLmFiczsocih0LnBhZ2VYLWUucGFnZVgpPj1pfHxyKHQucGFnZVktZS5wYWdlWSk+PWkpJiZ0aGlzLmhpZGUodCl9dGhpcy5fc3RvcmVNb3VzZSh0KX0pLCJtb3VzZSI9PT1pLnRhcmdldCYmaS5hZGp1c3QubW91c2UmJihuLmhpZGUuZXZlbnQmJnRoaXMuX2JpbmQobyxbIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIl0sZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY2FjaGU/dm9pZCh0aGlzLmNhY2hlLm9uVGFyZ2V0PSJtb3VzZWVudGVyIj09PXQudHlwZSk6Q30pLHRoaXMuX2JpbmQoZCwibW91c2Vtb3ZlIixmdW5jdGlvbih0KXt0aGlzLnJlbmRlcmVkJiZ0aGlzLmNhY2hlLm9uVGFyZ2V0JiYhdGhpcy50b29sdGlwLmhhc0NsYXNzKGV0KSYmdGhpcy50b29sdGlwWzBdLm9mZnNldFdpZHRoPjAmJnRoaXMucmVwb3NpdGlvbih0KX0pKSwoaS5hZGp1c3QucmVzaXplfHx1Lmxlbmd0aCkmJnRoaXMuX2JpbmQodC5ldmVudC5zcGVjaWFsLnJlc2l6ZT91OmgsInJlc2l6ZSIsXyksaS5hZGp1c3Quc2Nyb2xsJiZ0aGlzLl9iaW5kKGguYWRkKGkuY29udGFpbmVyKSwic2Nyb2xsIixfKX0sTC5fdW5hc3NpZ25FdmVudHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnMsbj1lLnNob3cudGFyZ2V0LGk9ZS5oaWRlLnRhcmdldCxyPXQuZ3JlcChbdGhpcy5lbGVtZW50cy50YXJnZXRbMF0sdGhpcy5yZW5kZXJlZCYmdGhpcy50b29sdGlwWzBdLGUucG9zaXRpb24uY29udGFpbmVyWzBdLGUucG9zaXRpb24udmlld3BvcnRbMF0sZS5wb3NpdGlvbi5jb250YWluZXIuY2xvc2VzdCgiaHRtbCIpWzBdLGEsbF0sZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCI9PT0oInVuZGVmaW5lZCI9PXR5cGVvZiB0PyJ1bmRlZmluZWQiOnModCkpfSk7biYmbi50b0FycmF5JiYocj1yLmNvbmNhdChuLnRvQXJyYXkoKSkpLGkmJmkudG9BcnJheSYmKHI9ci5jb25jYXQoaS50b0FycmF5KCkpKSx0aGlzLl91bmJpbmQocikuX3VuYmluZChyLCJkZXN0cm95IikuX3VuYmluZChyLCJpbmFjdGl2ZSIpfSx0KGZ1bmN0aW9uKCl7ZyhLLFsibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiXSxmdW5jdGlvbihlKXt2YXIgbj0ibW91c2VlbnRlciI9PT1lLnR5cGUsaT10KGUuY3VycmVudFRhcmdldCkscj10KGUucmVsYXRlZFRhcmdldHx8ZS50YXJnZXQpLG89dGhpcy5vcHRpb25zO24/KHRoaXMuZm9jdXMoZSksaS5oYXNDbGFzcyhYKSYmIWkuaGFzQ2xhc3MoZXQpJiZjbGVhclRpbWVvdXQodGhpcy50aW1lcnMuaGlkZSkpOiJtb3VzZSI9PT1vLnBvc2l0aW9uLnRhcmdldCYmby5wb3NpdGlvbi5hZGp1c3QubW91c2UmJm8uaGlkZS5ldmVudCYmby5zaG93LnRhcmdldCYmIXIuY2xvc2VzdChvLnNob3cudGFyZ2V0WzBdKS5sZW5ndGgmJnRoaXMuaGlkZShlKSxpLnRvZ2dsZUNsYXNzKHR0LG4pfSksZygiWyIrJCsiXSIsSixtKX0pLGs9dC5mbi5xdGlwPWZ1bmN0aW9uKGUsbixpKXt2YXIgbz0oIiIrZSkudG9Mb3dlckNhc2UoKSxhPVksbD10Lm1ha2VBcnJheShhcmd1bWVudHMpLnNsaWNlKDEpLHU9bFtsLmxlbmd0aC0xXSxkPXRoaXNbMF0/dC5kYXRhKHRoaXNbMF0sVik6WTtyZXR1cm4hYXJndW1lbnRzLmxlbmd0aCYmZHx8ImFwaSI9PT1vP2Q6InN0cmluZyI9PXR5cGVvZiBlPyh0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10LmRhdGEodGhpcyxWKTtpZighZSlyZXR1cm4gRDtpZih1JiZ1LnRpbWVTdGFtcCYmKGUuY2FjaGUuZXZlbnQ9dSksIW58fCJvcHRpb24iIT09byYmIm9wdGlvbnMiIT09byllW29dJiZlW29dLmFwcGx5KGUsbCk7ZWxzZXtpZihpPT09YyYmIXQuaXNQbGFpbk9iamVjdChuKSlyZXR1cm4gYT1lLmdldChuKSxDO2Uuc2U=", "base64"));
  res.write(new Buffer("dChuLGkpfX0pLGEhPT1ZP2E6dGhpcyk6Im9iamVjdCIhPT0oInVuZGVmaW5lZCI9PXR5cGVvZiBlPyJ1bmRlZmluZWQiOnMoZSkpJiZhcmd1bWVudHMubGVuZ3RoP3ZvaWQgMDooZD1yKHQuZXh0ZW5kKEQse30sZSkpLHRoaXMuZWFjaChmdW5jdGlvbihlKXt2YXIgbixpO3JldHVybiBpPXQuaXNBcnJheShkLmlkKT9kLmlkW2VdOmQuaWQsaT0haXx8aT09PUN8fGkubGVuZ3RoPDF8fGsuYXBpW2ldP2submV4dGlkKys6aSxuPXYodCh0aGlzKSxpLGQpLG49PT1DP0Q6KGsuYXBpW2ldPW4sdC5lYWNoKEIsZnVuY3Rpb24oKXsiaW5pdGlhbGl6ZSI9PT10aGlzLmluaXRpYWxpemUmJnRoaXMobil9KSx2b2lkIG4uX2Fzc2lnbkluaXRpYWxFdmVudHModSkpfSkpfSx0LnF0aXA9ZSxrLmFwaT17fSx0LmVhY2goe2F0dHI6ZnVuY3Rpb24oZSxuKXtpZih0aGlzLmxlbmd0aCl7dmFyIGk9dGhpc1swXSxyPSJ0aXRsZSIsbz10LmRhdGEoaSwicXRpcCIpO2lmKGU9PT1yJiZvJiZvLm9wdGlvbnMmJiJvYmplY3QiPT09KCJ1bmRlZmluZWQiPT10eXBlb2Ygbz8idW5kZWZpbmVkIjpzKG8pKSYmIm9iamVjdCI9PT1zKG8ub3B0aW9ucykmJm8ub3B0aW9ucy5zdXBwcmVzcylyZXR1cm4gYXJndW1lbnRzLmxlbmd0aDwyP3QuYXR0cihpLGl0KToobyYmby5vcHRpb25zLmNvbnRlbnQuYXR0cj09PXImJm8uY2FjaGUuYXR0ciYmby5zZXQoImNvbnRlbnQudGV4dCIsbiksdGhpcy5hdHRyKGl0LG4pKX1yZXR1cm4gdC5mblsiYXR0ciIrbnRdLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sY2xvbmU6ZnVuY3Rpb24oZSl7dmFyIG49dC5mblsiY2xvbmUiK250XS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGV8fG4uZmlsdGVyKCJbIitpdCsiXSIpLmF0dHIoInRpdGxlIixmdW5jdGlvbigpe3JldHVybiB0LmF0dHIodGhpcyxpdCl9KS5yZW1vdmVBdHRyKGl0KSxufX0sZnVuY3Rpb24oZSxuKXtpZighbnx8dC5mbltlK250XSlyZXR1cm4gRDt2YXIgaT10LmZuW2UrbnRdPXQuZm5bZV07dC5mbltlXT1mdW5jdGlvbigpe3JldHVybiBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKXx8aS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSksdC51aXx8KHRbImNsZWFuRGF0YSIrbnRdPXQuY2xlYW5EYXRhLHQuY2xlYW5EYXRhPWZ1bmN0aW9uKGUpe2Zvcih2YXIgbixpPTA7KG49dChlW2ldKSkubGVuZ3RoO2krKylpZihuLmF0dHIocSkpdHJ5e24udHJpZ2dlckhhbmRsZXIoInJlbW92ZXF0aXAiKX1jYXRjaChyKXt9dFsiY2xlYW5EYXRhIitudF0uYXBwbHkodGhpcyxhcmd1bWVudHMpfSksay52ZXJzaW9uPSIzLjAuMy01LWciLGsubmV4dGlkPTAsay5pbmFjdGl2ZUV2ZW50cz1KLGsuemluZGV4PTE1ZTMsay5kZWZhdWx0cz17cHJlcmVuZGVyOkMsaWQ6QyxvdmVyd3JpdGU6RCxzdXBwcmVzczpELGNvbnRlbnQ6e3RleHQ6RCxhdHRyOiJ0aXRsZSIsdGl0bGU6QyxidXR0b246Q30scG9zaXRpb246e215OiJ0b3AgbGVmdCIsYXQ6ImJvdHRvbSByaWdodCIsdGFyZ2V0OkMsY29udGFpbmVyOkMsdmlld3BvcnQ6QyxhZGp1c3Q6e3g6MCx5OjAsbW91c2U6RCxzY3JvbGw6RCxyZXNpemU6RCxtZXRob2Q6ImZsaXBpbnZlcnQgZmxpcGludmVydCJ9LGVmZmVjdDpmdW5jdGlvbihlLG4pe3QodGhpcykuYW5pbWF0ZShuLHsKZHVyYXRpb246MjAwLHF1ZXVlOkN9KX19LHNob3c6e3RhcmdldDpDLGV2ZW50OiJtb3VzZWVudGVyIixlZmZlY3Q6RCxkZWxheTo5MCxzb2xvOkMscmVhZHk6QyxhdXRvZm9jdXM6Q30saGlkZTp7dGFyZ2V0OkMsZXZlbnQ6Im1vdXNlbGVhdmUiLGVmZmVjdDpELGRlbGF5OjAsZml4ZWQ6QyxpbmFjdGl2ZTpDLGxlYXZlOiJ3aW5kb3ciLGRpc3RhbmNlOkN9LHN0eWxlOntjbGFzc2VzOiIiLHdpZGdldDpDLHdpZHRoOkMsaGVpZ2h0OkMsZGVmOkR9LGV2ZW50czp7cmVuZGVyOlksbW92ZTpZLHNob3c6WSxoaWRlOlksdG9nZ2xlOlksdmlzaWJsZTpZLGhpZGRlbjpZLGZvY3VzOlksYmx1cjpZfX07dmFyIGx0LGN0LHV0LGR0LGh0LHB0PSJtYXJnaW4iLGZ0PSJib3JkZXIiLG10PSJjb2xvciIsX3Q9ImJhY2tncm91bmQtY29sb3IiLGd0PSJ0cmFuc3BhcmVudCIsdnQ9IiAhaW1wb3J0YW50Iix5dD0hIWwuY3JlYXRlRWxlbWVudCgiY2FudmFzIikuZ2V0Q29udGV4dCxidD0vcmdiYT9cKDAsIDAsIDAoLCAwKT9cKXx0cmFuc3BhcmVudHwjMTIzNDU2L2ksd3Q9e30sTXQ9WyJXZWJraXQiLCJPIiwiTW96IiwibXMiXTt5dD8oZHQ9YS5kZXZpY2VQaXhlbFJhdGlvfHwxLGh0PWZ1bmN0aW9uKCl7dmFyIHQ9bC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKS5nZXRDb250ZXh0KCIyZCIpO3JldHVybiB0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW98fHQud2Via2l0QmFja2luZ1N0b3JlUGl4ZWxSYXRpb3x8dC5tb3pCYWNraW5nU3RvcmVQaXhlbFJhdGlvfHx0Lm1zQmFja2luZ1N0b3JlUGl4ZWxSYXRpb3x8dC5vQmFja2luZ1N0b3JlUGl4ZWxSYXRpb3x8MX0oKSx1dD1kdC9odCk6Y3Q9ZnVuY3Rpb24odCxlLG4pe3JldHVybiI8cXRpcHZtbDoiK3QrJyB4bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LmNvbTp2bWwiIGNsYXNzPSJxdGlwLXZtbCIgJysoZXx8IiIpKycgc3R5bGU9ImJlaGF2aW9yOiB1cmwoI2RlZmF1bHQjVk1MKTsgJysobnx8IiIpKyciIC8+J30sdC5leHRlbmQoTS5wcm90b3R5cGUse2luaXQ6ZnVuY3Rpb24oZSl7dmFyIG4saTtpPXRoaXMuZWxlbWVudD1lLmVsZW1lbnRzLnRpcD10KCI8ZGl2IC8+Iix7ImNsYXNzIjpWKyItdGlwIn0pLnByZXBlbmRUbyhlLnRvb2x0aXApLHl0PyhuPXQoIjxjYW52YXMgLz4iKS5hcHBlbmRUbyh0aGlzLmVsZW1lbnQpWzBdLmdldENvbnRleHQoIjJkIiksbi5saW5lSm9pbj0ibWl0ZXIiLG4ubWl0ZXJMaW1pdD0xZTUsbi5zYXZlKCkpOihuPWN0KCJzaGFwZSIsJ2Nvb3Jkb3JpZ2luPSIwLDAiJywicG9zaXRpb246YWJzb2x1dGU7IiksdGhpcy5lbGVtZW50Lmh0bWwobituKSxlLl9iaW5kKHQoIioiLGkpLmFkZChpKSxbImNsaWNrIiwibW91c2Vkb3duIl0sZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKX0sdGhpcy5fbnMpKSxlLl9iaW5kKGUudG9vbHRpcCwidG9vbHRpcG1vdmUiLHRoaXMucmVwb3NpdGlvbix0aGlzLl9ucyx0aGlzKSx0aGlzLmNyZWF0ZSgpfSxfc3dhcERpbWVuc2lvbnM6ZnVuY3Rpb24oKXt0aGlzLnNpemVbMF09dGhpcy5vcHRpb25zLmhlaWdodCx0aGlzLnNpemVbMV09dGhpcy5vcHRpb25zLndpZHRofSxfcmVzZXREaW1lbnNpb25zOmZ1bmN0aW9uKCl7dGhpcy5zaXplWzBdPXRoaXMub3B0aW9ucy53aWR0aCx0aGlzLnNpemVbMV09dGhpcy5vcHRpb25zLmhlaWdodH0sX3VzZVRpdGxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucXRpcC5lbGVtZW50cy50aXRsZWJhcjtyZXR1cm4gZSYmKHQueT09PVJ8fHQueT09PXomJnRoaXMuZWxlbWVudC5wb3NpdGlvbigpLnRvcCt0aGlzLnNpemVbMV0vMit0aGlzLm9wdGlvbnMub2Zmc2V0PGUub3V0ZXJIZWlnaHQoRCkpfSxfcGFyc2VDb3JuZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5xdGlwLm9wdGlvbnMucG9zaXRpb24ubXk7cmV0dXJuIHQ9PT1DfHxlPT09Qz90PUM6dD09PUQ/dD1uZXcgeChlLnN0cmluZygpKTp0LnN0cmluZ3x8KHQ9bmV3IHgodCksdC5maXhlZD1EKSx0fSxfcGFyc2VXaWR0aDpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcy5xdGlwLmVsZW1lbnRzLHI9ZnQreShlKSsiV2lkdGgiO3JldHVybihuP3cobixyKTp3KGkuY29udGVudCxyKXx8dyh0aGlzLl91c2VUaXRsZSh0KSYmaS50aXRsZWJhcnx8aS5jb250ZW50LHIpfHx3KGkudG9vbHRpcCxyKSl8fDB9LF9wYXJzZVJhZGl1czpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnF0aXAuZWxlbWVudHMsbj1mdCt5KHQueSkreSh0LngpKyJSYWRpdXMiO3JldHVybiBydC5pZTw5PzA6dyh0aGlzLl91c2VUaXRsZSh0KSYmZS50aXRsZWJhcnx8ZS5jb250ZW50LG4pfHx3KGUudG9vbHRpcCxuKXx8MH0sX2ludmFsaWRDb2xvdXI6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQuY3NzKGUpO3JldHVybiFpfHxuJiZpPT09dC5jc3Mobil8fGJ0LnRlc3QoaSk/QzppfSxfcGFyc2VDb2xvdXJzOmZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMucXRpcC5lbGVtZW50cyxpPXRoaXMuZWxlbWVudC5jc3MoImNzc1RleHQiLCIiKSxyPWZ0K3koZVtlLnByZWNlZGFuY2VdKSt5KG10KSxvPXRoaXMuX3VzZVRpdGxlKGUpJiZuLnRpdGxlYmFyfHxuLmNvbnRlbnQscz10aGlzLl9pbnZhbGlkQ29sb3VyLGE9W107cmV0dXJuIGFbMF09cyhpLF90KXx8cyhvLF90KXx8cyhuLmNvbnRlbnQsX3QpfHxzKG4udG9vbHRpcCxfdCl8fGkuY3NzKF90KSxhWzFdPXMoaSxyLG10KXx8cyhvLHIsbXQpfHxzKG4uY29udGVudCxyLG10KXx8cyhuLnRvb2x0aXAs", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("RnVuY3Rpb24oaS5vLm9uU2hvdykmJmkuby5vblNob3cuYXBwbHkoaSxbaS5kXSksaX0sY3JlYXRlOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXM7aS5nZXREaW1lbnNpb25zKCksaS5vLm1vZGFsJiZhLmllNiYmKGkuZC5pZnJhbWU9dCgnPGlmcmFtZSBzcmM9ImphdmFzY3JpcHQ6ZmFsc2U7Ij48L2lmcmFtZT4nKS5jc3ModC5leHRlbmQoaS5vLmlmcmFtZUNzcyx7ZGlzcGxheToibm9uZSIsb3BhY2l0eTowLHBvc2l0aW9uOiJmaXhlZCIsaGVpZ2h0Om9bMF0sd2lkdGg6b1sxXSx6SW5kZXg6aS5vLnpJbmRleCx0b3A6MCxsZWZ0OjB9KSkuYXBwZW5kVG8oaS5vLmFwcGVuZFRvKSksaS5kLm92ZXJsYXk9dCgiPGRpdj48L2Rpdj4iKS5hdHRyKCJpZCIsaS5vLm92ZXJsYXlJZCkuYWRkQ2xhc3MoInNpbXBsZW1vZGFsLW92ZXJsYXkiKS5jc3ModC5leHRlbmQoaS5vLm92ZXJsYXlDc3Mse2Rpc3BsYXk6Im5vbmUiLG9wYWNpdHk6aS5vLm9wYWNpdHkvMTAwLGhlaWdodDppLm8ubW9kYWw/ZVswXTowLHdpZHRoOmkuby5tb2RhbD9lWzFdOjAscG9zaXRpb246ImZpeGVkIixsZWZ0OjAsdG9wOjAsekluZGV4Omkuby56SW5kZXgrMX0pKS5hcHBlbmRUbyhpLm8uYXBwZW5kVG8pLGkuZC5jb250YWluZXI9dCgiPGRpdj48L2Rpdj4iKS5hdHRyKCJpZCIsaS5vLmNvbnRhaW5lcklkKS5hdHRyKCJyb2xlIiwiZGlhbG9nIikuYWRkQ2xhc3MoInNpbXBsZW1vZGFsLWNvbnRhaW5lci1uZXciKS5jc3ModC5leHRlbmQoe3Bvc2l0aW9uOmkuby5maXhlZD8iZml4ZWQiOiJhYnNvbHV0ZSJ9LGkuby5jb250YWluZXJDc3Mse2Rpc3BsYXk6Im5vbmUiLHpJbmRleDppLm8uekluZGV4KzJ9KSkuYXBwZW5kKGkuby5jbG9zZSYmaS5vLmNsb3NlSFRNTD90KGkuby5jbG9zZUhUTUwpLmFkZENsYXNzKGkuby5jbG9zZUNsYXNzKToiIikuYXBwZW5kVG8oaS5vLmFwcGVuZFRvKSxpLmQud3JhcD10KCI8ZGl2PjwvZGl2PiIpLmF0dHIoInRhYkluZGV4IiwtMSkuYWRkQ2xhc3MoInNpbXBsZW1vZGFsLXdyYXAiKS5jc3Moe2hlaWdodDoiMTAwJSIsb3V0bGluZTowLHdpZHRoOiIxMDAlIn0pLmFwcGVuZFRvKGkuZC5jb250YWluZXIpLGkuZC5kYXRhPW4uYXR0cigiaWQiLG4uYXR0cigiaWQiKXx8aS5vLmRhdGFJZCkuYWRkQ2xhc3MoInNpbXBsZW1vZGFsLWRhdGEiKS5jc3ModC5leHRlbmQoaS5vLmRhdGFDc3Mse2Rpc3BsYXk6Im5vbmUifSkpLmFwcGVuZFRvKCJib2R5Iiksbj1udWxsLGkuc2V0Q29udGFpbmVyRGltZW5zaW9ucygpLGkuZC5kYXRhLmFwcGVuZFRvKGkuZC53cmFwKSwoYS5pZTZ8fGEuaWVRdWlya3MpJiZpLmZpeElFKCl9LGJpbmRFdmVudHM6ZnVuY3Rpb24oKXt2YXIgaT10aGlzO3QoIi4iK2kuby5jbG9zZUNsYXNzKS5iaW5kKCJjbGljay5zaW1wbGVtb2RhbCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGkuY2xvc2UoKX0pLGkuby5tb2RhbCYmaS5vLmNsb3NlJiZpLm8ub3ZlcmxheUNsb3NlJiZpLmQub3ZlcmxheS5iaW5kKCJjbGljay5zaW1wbGVtb2RhbCIsZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGkuY2xvc2UoKX0pLG4uYmluZCgia2V5ZG93bi5zaW1wbGVtb2RhbCIsZnVuY3Rpb24odCl7aS5vLm1vZGFsJiY5PT09dC5rZXlDb2RlP2kud2F0Y2hUYWIodCk6aS5vLmNsb3NlJiZpLm8uZXNjQ2xvc2UmJjI3PT09dC5rZXlDb2RlJiYodC5wcmV2ZW50RGVmYXVsdCgpLGkuY2xvc2UoKSl9KSxyLmJpbmQoInJlc2l6ZS5zaW1wbGVtb2RhbCBvcmllbnRhdGlvbmNoYW5nZS5zaW1wbGVtb2RhbCIsZnVuY3Rpb24oKXtpLmdldERpbWVuc2lvbnMoKSxpLm8uYXV0b1Jlc2l6ZT9pLnNldENvbnRhaW5lckRpbWVuc2lvbnMoKTppLm8uYXV0b1Bvc2l0aW9uJiZpLnNldFBvc2l0aW9uKCksYS5pZTZ8fGEuaWVRdWlya3M/aS5maXhJRSgpOmkuby5tb2RhbCYmKGkuZC5pZnJhbWUmJmkuZC5pZnJhbWUuY3NzKHtoZWlnaHQ6b1swXSx3aWR0aDpvWzFdfSksaS5kLm92ZXJsYXkuY3NzKHtoZWlnaHQ6ZVswXSx3aWR0aDplWzFdfSkpfSl9LHVuYmluZEV2ZW50czpmdW5jdGlvbigpe3QoIi4iK3RoaXMuby5jbG9zZUNsYXNzKS51bmJpbmQoImNsaWNrLnNpbXBsZW1vZGFsIiksbi51bmJpbmQoImtleWRvd24uc2ltcGxlbW9kYWwiKSxyLnVuYmluZCgiLnNpbXBsZW1vZGFsIiksdGhpcy5kLm92ZXJsYXkudW5iaW5kKCJjbGljay5zaW1wbGVtb2RhbCIpfSxmaXhJRTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsbj1lLm8ucG9zaXRpb247dC5lYWNoKFtlLmQuaWZyYW1lfHxudWxsLGUuby5tb2RhbD9lLmQub3ZlcmxheTpudWxsLCJmaXhlZCI9PT1lLmQuY29udGFpbmVyLmNzcygicG9zaXRpb24iKT9lLmQuY29udGFpbmVyOm51bGxdLGZ1bmN0aW9uKHQsZSl7aWYoZSl7dmFyIGk9ImRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0IixyPSJkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoIixvPSJkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCIscz0iZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0IixhPSJkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCIsbD0iZG9jdW1lbnQuYm9keS5zY3JvbGxXaWR0aCIsYz0iZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCIsdT0iZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoIixkPSJkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsTGVmdCIsaD0iZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCIscD1lWzBdLnN0eWxlO2lmKHAucG9zaXRpb249ImFic29sdXRlIix0PDIpcC5yZW1vdmVFeHByZXNzaW9uKCJoZWlnaHQiKSxwLnJlbW92ZUV4cHJlc3Npb24oIndpZHRoIikscC5zZXRFeHByZXNzaW9uKCJoZWlnaHQiLCIiK28rIiA+ICIraSsiID8gIitvKyIgOiAiK2krJyArICJweCInKSxwLnNldEV4cHJlc3Npb24oIndpZHRoIiwiIitsKw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("aWR0aDpvLnNjYWxlKihvLmxlbmd0aCtvLndpZHRoKSsicHgiLGhlaWdodDpvLnNjYWxlKm8ud2lkdGgrInB4IixiYWNrZ3JvdW5kOmUsYm94U2hhZG93Om4sdHJhbnNmb3JtT3JpZ2luOiJsZWZ0Iix0cmFuc2Zvcm06InJvdGF0ZSgiK35+KDM2MC9vLmxpbmVzKnUrby5yb3RhdGUpKyJkZWcpIHRyYW5zbGF0ZSgiK28uc2NhbGUqby5yYWRpdXMrInB4LDApIixib3JkZXJSYWRpdXM6KG8uY29ybmVycypvLnNjYWxlKm8ud2lkdGg+PjEpKyJweCJ9KX1mb3IodmFyIGwsdT0wLGQ9KG8ubGluZXMtMSkqKDEtby5kaXJlY3Rpb24pLzI7dTxvLmxpbmVzO3UrKylsPXIodCgpLHtwb3NpdGlvbjoiYWJzb2x1dGUiLHRvcDoxK34oby5zY2FsZSpvLndpZHRoLzIpKyJweCIsdHJhbnNmb3JtOm8uaHdhY2NlbD8idHJhbnNsYXRlM2QoMCwwLDApIjoiIixvcGFjaXR5Om8ub3BhY2l0eSxhbmltYXRpb246YyYmbihvLm9wYWNpdHksby50cmFpbCxkK3Uqby5kaXJlY3Rpb24sby5saW5lcykrIiAiKzEvby5zcGVlZCsicyBsaW5lYXIgaW5maW5pdGUifSksby5zaGFkb3cmJmUobCxyKGEoIiMwMDAiLCIwIDAgNHB4ICMwMDAiKSx7dG9wOiIycHgifSkpLGUoaSxlKGwsYShzKG8uY29sb3IsdSksIjAgMCAxcHggcmdiYSgwLDAsMCwuMSkiKSkpO3JldHVybiBpfSxvcGFjaXR5OmZ1bmN0aW9uKHQsZSxuKXtlPHQuY2hpbGROb2Rlcy5sZW5ndGgmJih0LmNoaWxkTm9kZXNbZV0uc3R5bGUub3BhY2l0eT1uKX19KSwidW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50KXt1PWZ1bmN0aW9uKCl7dmFyIG49dCgic3R5bGUiLHt0eXBlOiJ0ZXh0L2NzcyJ9KTtyZXR1cm4gZShkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLG4pLG4uc2hlZXR8fG4uc3R5bGVTaGVldH0oKTt2YXIgZj1yKHQoImdyb3VwIikse2JlaGF2aW9yOiJ1cmwoI2RlZmF1bHQjVk1MKSJ9KTshaShmLCJ0cmFuc2Zvcm0iKSYmZi5hZGo/bCgpOmM9aShmLCJhbmltYXRpb24iKX1yZXR1cm4gYX0pfSkuY2FsbChlLG4oMzYyKSh0KSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDMzMSksbig0NzEpLG4oNDcwKV0scj1mdW5jdGlvbih0LGUsbixpKXt2YXIgcj1uLnRwbCgnXHQgICAgPGEgY2xhc3M9Imljb24tMTYge3tjbGFzc05hbWV9fSIgZGF0YS1zZT0ie3tzZWxlbml1bUlkfX0iPlx0ICAgICAge3sjaWYgaWNvbn19XHQgICAgICA8c3BhbiBjbGFzcz0iaWNvbiB7e2ljb259fSI+PC9zcGFuPlx0ICAgICAge3svaWZ9fVx0ICAgICAge3sjaWYgdGl0bGV9fVx0ICAgICAge3t0aXRsZX19XHQgICAgICB7ey9pZn19XHQgICAgICB7eyNpZiBzdWJ0aXRsZX19XHQgICAgICAgIDxwIGNsYXNzPSJvcHRpb24tc3VidGl0bGUiPnt7c3VidGl0bGV9fTwvcD5cdCAgICAgIHt7L2lmfX1cdCAgIDwvYT5cdCAgICcpLG89aS5leHRlbmQoe3RhZ05hbWU6ImxpIixldmVudHM6e2NsaWNrOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSx0aGlzLmFjdGlvbiYmdGhpcy5hY3Rpb24uY2FsbCh0aGlzKX19LGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7aS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy4kZWwuYWRkQ2xhc3MoIm9rdGEtZHJvcGRvd24tb3B0aW9uIG9wdGlvbiIpfSxyZW5kZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kZWwuaHRtbChyKHtpY29uOnQucmVzdWx0KHRoaXMsImljb24iKSxjbGFzc05hbWU6dC5yZXN1bHQodGhpcywiY2xhc3NOYW1lIil8fCIiLHRpdGxlOnQucmVzdWx0KHRoaXMsInRpdGxlIiksc3VidGl0bGU6dC5yZXN1bHQodGhpcywic3VidGl0bGUiKSxzZWxlbml1bUlkOnQucmVzdWx0KHRoaXMsInNlbGVuaXVtSWQiKX0pKSx0aGlzfX0pO3JldHVybiBpLmV4dGVuZCh7ZXZlbnRzOnsiY2xpY2sgYS5vcHRpb24tc2VsZWN0ZWQiOmZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSx0LnJlc3VsdCh0aGlzLCJkaXNhYmxlZCIpJiZlLnN0b3BQcm9wYWdhdGlvbigpfSwiY2xpY2sgLmRyb3Bkb3duLWRpc2FibGVkIjpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKX19LGl0ZW1zOltdLGNvbnN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5jbGFzc05hbWU7dGhpcy5jbGFzc05hbWU9bnVsbCxpLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmNsYXNzTmFtZT1lLHRoaXMuJGVsLmFkZENsYXNzKCJkcm9wZG93biBtb3JlLWFjdGlvbnMgZmxvYXQtbCIpLHQuZWFjaCh0LnJlc3VsdCh0aGlzLCJpdGVtcyIpLGZ1bmN0aW9uKHQpe3RoaXMuYWRkT3B0aW9uKHQsdGhpcy5vcHRpb25zKX0sdGhpcyl9LHRlbXBsYXRlOidcdCAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJsaW5rLWJ1dHRvbiB7e2NsYXNzTmFtZX19IGxpbmstYnV0dG9uLWljb24gb3B0aW9uLXNlbGVjdGVkIGNlbnRlciI+XHQgICAgICAgIHt7I2lmIGljb259fVx0ICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbiB7e2ljb259fSI+PC9zcGFuPlx0ICAgICAgICB7ey9pZn19XHQgICAgICAgIDxzcGFuIGNsYXNzPSJvcHRpb24tc2VsZWN0ZWQtdGV4dCI+e3t0aXRsZX19PC9zcGFuPlx0ICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1kbSI+PC9zcGFuPlx0ICAgICAgPC9hPlx0ICAgICAgPGRpdiBjbGFzcz0ib3B0aW9ucyBjbGVhcmZpeCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij5cdCAgICAgIDx1bCBjbGFzcz0ib2t0YS1kcm9wZG93bi1saXN0IG9wdGlvbnMtd3JhcCBjbGVhcmZpeCI+PC91bD5cdCAgICAgIDwvZGl2Plx0ICAgICcsZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7dmFyIG49W3QucmVzdWx0KHRoaXMsImNsYXNzTmFtZSIpfHwiIix0LnJlc3VsdCh0aGlzLCJkaXNhYmxlZCIpPyJkcm9wZG93bi1kaXNhYmxlZCI6IiJdO3JldHVybntpY29uOnQucmVzdWx0KHRoaXMsImljb24iKSxjbGFzc05hbWU6ZS50cmltKG4uam9pbigiICIpKSx0aXRsZTp0LnJlc3VsdCh0aGlzLCJ0aXRsZSIpfX0sYWRkT3B0aW9uOmZ1bmN0aW9uKHQsZSl7dGhpcy5hZGQoby5leHRlbmQodCksInVsLm9wdGlvbnMtd3JhcCIse29wdGlvbnM6ZXx8e319KX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDUyMSldLHI9ZnVuY3Rpb24odCl7cmV0dXJuIHQuZXh0ZW5kKHtzYXZlOiJPSyIscGFyYW1zOnttaW5XaWR0aDo1MDAsbWF4V2lkdGg6NzAwLGNsb3NlOiEwfSxjb25zdHJ1Y3RvcjpmdW5jdGlvbigpe3QuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuY29udGVudCYmdGhpcy5hZGQodGhpcy5jb250ZW50KSx0aGlzLmxpc3RlblRvKHRoaXMsInNhdmUiLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5va3x8dGhpcy5vcHRpb25zLm9rO3QmJnQoKSx0aGlzLnJlbW92ZSgpfSksdGhpcy5saXN0ZW5Ubyh0aGlzLCJjYW5jZWwiLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jYW5jZWxGbnx8dGhpcy5vcHRpb25zLmNhbmNlbEZuO3QmJnQoKX0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDMzMSksbig0NzApLG4oNDgwKV0scj1mdW5jdGlvbih0LGUsbixpKXtlKGRvY3VtZW50KS5jbGljayhmdW5jdGlvbih0KXt2YXIgbj1lKHQudGFyZ2V0KSxpPShuLmhhc0NsYXNzKCJvcHRpb24tc2VsZWN0ZWQiKXx8bi5wYXJlbnRzKCkuaGFzQ2xhc3MoIm9wdGlvbi1zZWxlY3RlZCIpKSYmbi5jbG9zZXN0KCIuZHJvcGRvd24iKS5sZW5ndGg+MDtpfHxlKCIuZHJvcGRvd24gLm9wdGlvbnMiKS5mYWRlT3V0KDEwMCl9KTt2YXIgcj1uLmV4dGVuZCh7dGFnTmFtZToibGkiLHRlbXBsYXRlOidcdCAgICAgIDxhIGNsYXNzPSJpY29uLTE2e3sjdW5sZXNzIGljb259fSBuby1pY29ue3svdW5sZXNzfX0ie3sjaWYgc2VsZW5pdW1JZH19IGRhdGEtc2U9Int7c2VsZW5pdW1JZH19Int7L2lmfX0+XHQgICAgICAgIHt7I2lmIGljb259fTxzcGFuIGNsYXNzPSJpY29uIHt7aWNvbn19Ij48L3NwYW4+e3svaWZ9fVx0ICAgICAgICA8cCBjbGFzcz17eyNpZiB0aXRsZX19Im9wdGlvbi10aXRsZSJ7e2Vsc2V9fSJuby10aXRsZSJ7ey9pZn19Pnt7dGl0bGV9fTwvcD5cdCAgICAgICAge3sjaWYgc3VidGl0bGV9fTxwIGNsYXNzPSJvcHRpb24tc3VidGl0bGUiPnt7c3VidGl0bGV9fTwvcD57ey9pZn19XHQgICAgICA8L2E+XHQgICAgJyxjbGFzc05hbWU6Im9rdGEtZHJvcGRvd24tb3B0aW9uIG9wdGlvbiIsZXZlbnRzOntjbGljazpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdGhpcy4kZWwuaGFzQ2xhc3MoIm9wdGlvbi1kaXNhYmxlZCIpP3Quc3RvcFByb3BhZ2F0aW9uKCk6dGhpcy5vcHRpb25zLmNsaWNrJiZ0", "base64"));
  res.write(new Buffer("aGlzLm9wdGlvbnMuY2xpY2suY2FsbCh0aGlzKX19LGluaXRpYWxpemU6ZnVuY3Rpb24oKXtpLmFwcGx5RG9XaGVuKHRoaXMsdC5yZXN1bHRDdHgodGhpcy5vcHRpb25zLCJlbmFibGVXaGVuIix0aGlzKSx0aGlzLnRvZ2dsZUVuYWJsZWQpLGkuYXBwbHlEb1doZW4odGhpcyx0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsInNob3dXaGVuIix0aGlzKSx0aGlzLnRvZ2dsZVZpc2libGUpfSxwb3N0UmVuZGVyOmZ1bmN0aW9uKCl7dC5zaXplKHQucmVzdWx0Q3R4KHRoaXMub3B0aW9ucywiZW5hYmxlV2hlbiIsdGhpcykpfHx0aGlzLnRvZ2dsZUVuYWJsZWQoITApLHQuc2l6ZSh0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsInNob3dXaGVuIix0aGlzKSl8fHRoaXMudG9nZ2xlVmlzaWJsZSghMCl9LGdldFRlbXBsYXRlRGF0YTpmdW5jdGlvbigpe3JldHVybntpY29uOnQucmVzdWx0Q3R4KHRoaXMub3B0aW9ucywiaWNvbiIsdGhpcyksdGl0bGU6dC5yZXN1bHRDdHgodGhpcy5vcHRpb25zLCJ0aXRsZSIsdGhpcyksc3VidGl0bGU6dC5yZXN1bHRDdHgodGhpcy5vcHRpb25zLCJzdWJ0aXRsZSIsdGhpcyksc2VsZW5pdW1JZDp0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsInNlbGVuaXVtSWQiLHRoaXMpfX0sdG9nZ2xlRW5hYmxlZDpmdW5jdGlvbihlKXt2YXIgbj1lJiZ0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsImVuYWJsZWQiLHRoaXMpO3RoaXMuJGVsLnRvZ2dsZUNsYXNzKCJvcHRpb24tZGlzYWJsZWQiLCFuKX0sdG9nZ2xlVmlzaWJsZTpmdW5jdGlvbihlKXt2YXIgbj1lJiZ0LnJlc3VsdEN0eCh0aGlzLm9wdGlvbnMsInZpc2libGUiLHRoaXMpO3RoaXMuJGVsLnRvZ2dsZUNsYXNzKCJvcHRpb24taGlkZGVuIiwhbil9fSksbz17ImNsaWNrIGEub3B0aW9uLXNlbGVjdGVkIjpmdW5jdGlvbihlKXtlLnByZXZlbnREZWZhdWx0KCksdC5yZXN1bHQodGhpcywiZGlzYWJsZWQiKT9lLnN0b3BQcm9wYWdhdGlvbigpOnRoaXMuJCgiZGl2Lm9wdGlvbnMiKS50b2dnbGUoKX0sImNsaWNrIC5kcm9wZG93bi1kaXNhYmxlZCI6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCl9fSxzPVsiaWNvbiIsInRpdGxlIiwic3VidGl0bGUiLCJjbGljayIsImVuYWJsZVdoZW4iLCJzaG93V2hlbiIsImVuYWJsZWQiLCJ2aXNpYmxlIiwiYXR0cmlidXRlcyIsInNlbGVuaXVtSWQiXTtyZXR1cm4gbi5leHRlbmQoe2l0ZW1zOltdLGl0ZW1XaWR0aDpudWxsLHdpZHRoOm51bGwsaWNvbjpudWxsLHRpdGxlOm51bGwsZGlzYWJsZWQ6ITEsY29uc3RydWN0b3I6ZnVuY3Rpb24oKXt0aGlzLmV2ZW50cz10LmRlZmF1bHRzKHRoaXMuZXZlbnRzfHx7fSxvKTt2YXIgZT10aGlzLmNsYXNzTmFtZTt0aGlzLmNsYXNzTmFtZT1udWxsLHRoaXMucG9zdFJlbmRlcj10LndyYXAodGhpcy5wb3N0UmVuZGVyLHQuYmluZChmdW5jdGlvbihlKXt2YXIgbj10LnJlc3VsdCh0aGlzLCJpdGVtV2lkdGgiKTtuJiZ0aGlzLiQoInVsLm9wdGlvbnMtd3JhcCIpLndpZHRoKG4pO3ZhciBpPXQucmVzdWx0KHRoaXMsIndpZHRoIik7aSYmdGhpcy4kKCJhLm9wdGlvbi1zZWxlY3RlZCIpLndpZHRoKGktMzApLHQucmVzdWx0KHRoaXMsImRpc2FibGVkIikmJnRoaXMuZGlzYWJsZSgpLGUuY2FsbCh0aGlzKX0sdGhpcykpLG4uYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuY2xhc3NOYW1lPWUsdGhpcy4kZWwuYWRkQ2xhc3MoImRyb3Bkb3duIG1vcmUtYWN0aW9ucyBmbG9hdC1sIiksdC5lYWNoKHQucmVzdWx0KHRoaXMsIml0ZW1zIil8fFtdLGZ1bmN0aW9uKHQpe3RoaXMuYWRkSXRlbSh0LHRoaXMub3B0aW9ucyl9LHRoaXMpfSx0ZW1wbGF0ZTonXHQgICAgICA8YSBocmVmPSIjIiBjbGFzcz0ibGluay1idXR0b24gbGluay1idXR0b24taWNvbiBvcHRpb24tc2VsZWN0ZWQgY2VudGVyIHt7Y2xhc3NOYW1lfX0iPlx0ICAgICAgICB7eyNpZiBpY29ufX08c3BhbiBjbGFzcz0iaWNvbiB7e2ljb259fSI+PC9zcGFuPnt7L2lmfX1cdCAgICAgICAge3sjaWYgdGl0bGV9fTxzcGFuIGNsYXNzPSJvcHRpb24tc2VsZWN0ZWQtdGV4dCI+e3t0aXRsZX19PC9zcGFuPnt7L2lmfX1cdCAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZG0iPjwvc3Bhbj5cdCAgICAgIDwvYT5cdCAgICAgIDxkaXYgY2xhc3M9Im9wdGlvbnMgY2xlYXJmaXgiPlx0ICAgICAgICA8dWwgY2xhc3M9Im9rdGEtZHJvcGRvd24tbGlzdCBvcHRpb25zLXdyYXAgY2xlYXJmaXgiPjwvdWw+XHQgICAgICA8L2Rpdj5cdCAgICAnLGdldFRlbXBsYXRlRGF0YTpmdW5jdGlvbigpe3JldHVybntpY29uOnQucmVzdWx0KHRoaXMsImljb24iKSxjbGFzc05hbWU6dC5yZXN1bHQodGhpcywiY2xhc3NOYW1lIil8fCIiLHRpdGxlOnQucmVzdWx0KHRoaXMsInRpdGxlIil9fSxkaXNhYmxlOmZ1bmN0aW9uKCl7dGhpcy4kKCIub3B0aW9uLXNlbGVjdGVkIikuYWRkQ2xhc3MoImRyb3Bkb3duLWRpc2FibGVkIil9LGVuYWJsZTpmdW5jdGlvbigpe3RoaXMuJCgiLm9wdGlvbi1zZWxlY3RlZCIpLnJlbW92ZUNsYXNzKCJkcm9wZG93bi1kaXNhYmxlZCIpfSxhZGRJdGVtOmZ1bmN0aW9uKGUpe3JldHVybiBlPXQucGljayhlfHx7fSxzKSx0LmRlZmF1bHRzKGUse3Zpc2libGU6ITAsZW5hYmxlZDohMH0pLHRoaXMuYWRkKHIsInVsLm9wdGlvbnMtd3JhcCIse29wdGlvbnM6ZX0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDMzMSksbig1NjMpLG4oNDk2KSxuKDU3MildLHI9ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgbz1mdW5jdGlvbigpe2Z1bmN0aW9uIG4odCxuLGkpe3ZhciBvLHMsYT1lKHQpLmZpbmQobik7aWYoYSlyZXR1cm4gbz1hLm91dGVySGVpZ2h0KCEwKS1hLmhlaWdodCgpLHM9cihhLnNpYmxpbmdzKCkpK28saS1zfWZ1bmN0aW9uIGkoKXtyZXR1cm4gZSgiYm9keSIpLmFwcGVuZChhKSxlKCIubW9kYWwtc3RhZ2luZyIpfWZ1bmN0aW9uIHIobil7cmV0dXJuIHQucmVkdWNlKG4sZnVuY3Rpb24odCxuKXtyZXR1cm4gdCtlKG4pLm91dGVySGVpZ2h0KCEwKX0sMCl9ZnVuY3Rpb24gbyh0LGUpe3N8fChzPWkoKSkscy5odG1sKHQpO3ZhciBuPWUocyk7cmV0dXJuIHMuZW1wdHkoKSxufXZhciBzLGE9JzxkaXYgY2xhc3M9Im1vZGFsLXN0YWdpbmcgc2ltcGxlbW9kYWwtd3JhcCIgc3R5bGU9InZpc2liaWxpdHk6IGhpZGRlbjsgcG9zaXRpb246IGFic29sdXRlOyI+PC9kaXY+JztyZXR1cm57bWVhc3VyZTpmdW5jdGlvbih0KXtyZXR1cm4gbyh0LGZ1bmN0aW9uKHQpe3JldHVybiB0LmhlaWdodCgpfSl9LGZpdDpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIG8odCxmdW5jdGlvbih0KXtyZXR1cm4gbih0LGUsaSl9KX0scmVtb3ZlOmZ1bmN0aW9uKCl7cyYmcy5yZW1vdmUoKSxzPXZvaWQgMH19fSgpLHM9e21pbldpZHRoOjYwMCxtYXhXaWR0aDo5NTAsYXV0b1Jlc2l6ZTohMSxhdXRvUG9zaXRpb246ITB9O3JldHVybiBuLmV4dGVuZCh7cmVzaXplT25Td2l0Y2g6ITEsY29uc3RydWN0b3I6ZnVuY3Rpb24oZSl7aWYodC5kZWZhdWx0cyh0aGlzLnBhcmFtcyxzKSxuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxlfHwoZT17fSksdC5leHRlbmQodGhpcyx0LnBpY2soZSwiVmlldyIsImhlaWdodCIsInJlc2l6ZU9uU3dpdGNoIikpLCF0aGlzLlZpZXcpdGhyb3cgbmV3IEVycm9yKCJUaGUgTXVsdGlWaWV3TW9kYWxEaWFsb2cgbXVzdCBiZSBwcm92aWRlZCBhIFZpZXcgd2hlbiBpbml0aWFsaXplZCIpO3RoaXMuX3ByZWZldGNoRGV0ZWN0aW9uKGUsITEpLHRoaXMuU3RhZ2U9b30scmVuZGVyOmZ1bmN0aW9uKCl7cmV0dXJuIG4ucHJvdG90eXBlLnJlbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fc2V0SGVpZ2h0KCksdGhpcy5fc2V0Q29udGVudEhlaWdodCgpLHRoaXN9LHJlbW92ZTpmdW5jdGlvbigpe28ucmVtb3ZlKCksbi5wcm90b3R5cGUucmVtb3ZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sc3dpdGNoVmlldzpmdW5jdGlvbihlLG4pe258fChuPXt9KSxuPXQuY2xvbmUodC5leHRlbmQobix7Y3VycmVudFZpZXdIZWlnaHQ6dGhpcy5oZWlnaHR9KSksdC5leHRlbmQodGhpcyx0LnBpY2sobiwiaGVpZ2h0Iikse1ZpZXc6ZX0pLHRoaXMuX3ByZWZldGNoRGV0ZWN0aW9uKG4sITApfSx1cGRhdGVUaXRsZTpmdW5jdGlvbihlKXtlPWV8fHRoaXMuY3VycmVudFZpZXcudGl0bGUsZSYmKHQuaXNGdW5jdGlvbihlKSYmKGU9ZS5jYWxsKHRoaXMpKSx0aGlzLnJlbmRlcmVkKCk/KHRoaXMuJCgiaDIuYmxvY2siKS5odG1sKGUpLHRoaXMuY3VycmVudFZpZXcuJCgiaDIub2t0YS1mb3JtLXRpdGxlIikucmVtb3ZlKCkpOih0aGlzLnRpdGxlPWUsdGhpcy5jdXJyZW50Vmlldy50aXRsZT0iIikpfSxfYWRkVmlldzpmdW5jdGlvbihlLG4pe3RoaXMuY3VycmVudFZpZXcmJnRoaXMuY3VycmVudFZpZXcucmVtb3ZlKCksdGhpcy5jdXJyZW50Vmlldz10aGlzLmFkZChlKS5hdCgwKSx0aGlzLnJlc2l6ZVNlbGVjdG9yPXRoaXMuY3VycmVudFZpZXcucmVzaXplU2VsZWN0b3J8fHRoaXMuY3VycmVudFZpZXcuZWwsdGhpcy51cGRhdGVUaXRsZShuLnRpdGxlKSx0aGlzLmxpc3RlblRvKHRoaXMuY3VycmVudFZpZXcsInJlc2l6ZSIsdC5kZWJvdW5jZSh0LmJpbmQodGhpcy5fc2V0Q29udGVudEhlaWdodCx0aGlzKSwxMDApKX0sX2FkZFNjcm9sbGJhcnM6ZnVuY3Rpb24odCxlKXt0LmhlaWdodChlKSx0LmNzcygib3ZlcmZsb3ciLCJhdXRvIil9LF9nZXRNYXhIZWlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5yb3VuZCguOSplKHdpbmRvdykuaGVpZ2h0KCkpfSxfc2V0Q29udGVudEhlaWdodDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY3VycmVudFZpZXcsZT10LiQodGhpcy5yZXNpemVTZWxlY3Rvciksbj1vLmZpdCh0LiRlbC5odG1sKCksdGhpcy5yZXNpemVTZWxlY3Rvcix0aGlzLmhlaWdodCk7ZS5oZWlnaHQoKSE9PW4mJm4mJih0aGlzLl9hZGRTY3JvbGxiYXJzKGUsbiksdGhpcy5yZXNpemUoKSl9LF9zZXRIZWlnaHQ6ZnVuY3Rpb24odCl7dmFyIGUsbixpPXRoaXMuX2dldE1heEhlaWdodCgpLHI9dD92b2lkIDA6dGhpcy5oZWlnaHQ7cmV0dXJuIHI+aT92b2lkKHRoaXMuaGVpZ2h0PWkpOihuPW8uZml0KHRoaXMuJGVsLmh0bWwoKSx0aGlzLmN1cnJlbnRWaWV3LnJlc2l6ZVNlbGVjdG9yLHIpLHZvaWQobj4yMHx8KGU9by5tZWFzdXJlKHRoaXMuJGVsLmh0bWwoKSksdGhpcy5oZWlnaHQ9TWF0aC5taW4oZSxpKSkpKX0sX29uUHJlZmV0Y2hTdWNjZXNzOmZ1bmN0aW9uKGUsbixyKXt2YXIgbz0hIXRoaXMuY3VycmVudFZpZXc7cmV0dXJuIHRoaXMuX3NwaW5uZXJIaWRlKCksdGhpcy5fYWRkVmlldyhlLG4pLCEoIXImJiFvKSYmKCFyJiZvP3RoaXMuX3Jlc2l6ZURpYWxvZyh7aGVpZ2h0Om4uaGVpZ2h0LHRyYW5zaXRpb246aS5FRkZFQ1RTLk5PTkV9KTp0aGlzLl9yZXNpemVEaWFsb2cobiksdm9pZCh0LmlzRnVuY3Rpb24obi5wb3N0ZmV0Y2gpP3QuZGVmZXIobi5wb3N0ZmV0Y2gpOnQuaXNGdW5jdGlvbihlLnBvc3RmZXRjaCkmJnQuZGVmZXIodC5iaW5kKGUucG9zdGZldGNoLGUpKSkpfSxfcmVzaXplRGlhbG9nOmZ1bmN0aW9uKHQpe3QuaGVpZ2h0P3RoaXMuX3NldEhlaWdodCgpOnRoaXMucmVzaXplT25Td2l0Y2gmJnRoaXMuX3NldEhlaWdodCghMCksdGhpcy5fc2V0Q29udGVudEhlaWdodCgpLGkuYW5pbWF0ZSh0aGlzLmN1cnJlbnRWaWV3LiRlbCx0LnRyYW5zaXRpb258fGkuRUZGRUNUUy5TTElERSl9LF9nZXRJbnN0YW50aWF0ZWRWaWV3OmZ1bmN0aW9uKGUpe3JldHVybiB0LmlzRnVuY3Rpb24oZSk/bmV3IGUodGhpcy5vcHRpb25zKTplfSxfcHJlZmV0Y2hFcnJvcjpmdW5jdGlvbih0KXt0aGlzLmhlaWdodD10LmN1cnJlbnRWaWV3SGVpZ2h0fHx0aGlzLmhlaWdodCx0aGlzLl9zZXRIZWlnaHQoKSx0aGlzLl9zZXRDb250ZW50SGVpZ2h0KCksdGhpcy5fc3Bpbm5lckhpZGUoKX0sX3NwaW5uZXJTaG93OmZ1bmN0aW9uKHQpe3RoaXMuY3VycmVudFZpZXc/KHRoaXMuc3Bpbm5lclZpZXc9bmV3IHIoe2VsVG9BdHRhY2hUbzp0aGlzLmN1cnJlbnRWaWV3LiQodGhpcy5yZXNpemVTZWxlY3Rvcil9KSx0aGlzLmFkZCh0aGlzLnNwaW5uZXJWaWV3KSk6dGhpcy5fYWRkVmlldyhuZXcgcih7aGVpZ2h0OnRoaXMuaGVpZ2h0fSkse3RpdGxlOnQudGl0bGV9KX0sX3NwaW5uZXJIaWRlOmZ1bmN0aW9uKCl7dGhpcy5zcGlubmVyVmlldyYmdGhpcy5zcGlubmVyVmlldy5yZW1vdmUoKX0sX2dldFByZWZldGNoRnVuY3Rpb246ZnVuY3Rpb24oZSxuKXt2YXIgaT10LmlzVW5kZWZpbmVkKG4ucHJlZmV0Y2gpP2UucHJlZmV0Y2g6bi5wcmVmZXRjaDtyZXR1cm4hIWkmJih0LmlzRnVuY3Rpb24obi5wcmVmZXRjaCk/bi5wcmVmZXRjaDp0LmlzRnVuY3Rpb24oZS5wcmVmZXRjaCk/dC5iaW5kKGUucHJlZmV0Y2gsZSk6dC5iaW5kKGUubW9kZWwuZmV0Y2gsZS5tb2RlbCkpfSxfcHJlZmV0Y2hEZXRlY3Rpb246ZnVuY3Rpb24obixpKXt2YXIgcj10aGlzLG89dGhpcy5fZ2V0SW5zdGFudGlhdGVkVmlldyh0aGlzLlZpZXcpLHM9dC5iaW5kKHRoaXMuX29uUHJlZmV0Y2hTdWNjZXNzLHRoaXMsbyxuLGkpLGE9dGhpcy5fZ2V0UHJlZmV0Y2hGdW5jdGlvbihvLG4pO2E/KHRoaXMuX3NwaW5uZXJTaG93KG8pLGUud2hlbihhKCkpLmRvbmUocykuZmFpbChmdW5jdGlvbigpe3IuX3ByZWZldGNoRXJyb3Iobil9KSk6cygpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDU2NSksbig0NzApXSxyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT0yMDtyZXR1cm4gbi5leHRlbmQoe2luaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLl9pbml0aWFsU3R5bGUodGhpcy5vcHRpb25zKX0scG9zdFJlbmRlcjpmdW5jdGlvbigpe3ZhciBlPXRoaXMuX2dldFBvc2l0aW9uKCk7ZS5sZWZ0PDA/dC5kZWxheSh0LmJpbmQodGhpcy5zaG93U3Bpbm5lcix0aGlzKSwyMDApOnRoaXMuc2hvd1NwaW5uZXIoKX0sc2hvd1NwaW5uZXI6ZnVuY3Rpb24oKXt0aGlzLnNwaW5uZXImJnRoaXMuc3Bpbm5lci5yZW1vdmUoKTt2YXIgdCxuPXRoaXMuX2dldFBvc2l0aW9uKCk7dGhpcy5vcHRpb25zLmVsVG9BdHRhY2hUbyYmdGhpcy4kZWwuY3NzKHtwb3NpdGlvbjoiYWJzb2x1dGUifSksdD1lLmV4dGVuZCh7c3BpbkF0UmVuZGVyOiEwLHNwaW5PcHRpb25zOntsZWZ0Om4ubGVmdCx0b3A6bi50b3B9fSksdGhpcy5zcGlubmVyPW5ldyB0LHRoaXMuYWRkKHRoaXMuc3Bpbm5lcil9LF9pbml0aWFsU3R5bGU6ZnVuY3Rpb24oZSl7dmFyIG49e307aWYoZS5lbFRvQXR0YWNoVG8pe3ZhciBpPWUuZWxUb0F0dGFjaFRvLnBvc2l0aW9uKCk7bi53aWR0aD1lLmVsVG9BdHRhY2hUby5vdXRlcldpZHRoKCksbi5oZWlnaHQ9ZS5lbFRvQXR0YWNoVG8ub3V0ZXJIZWlnaHQoKSxpJiYobi50b3A9aS50b3ApfXQuZXh0ZW5kKG4sdC5waWNrKGUsImhlaWdodCIsIndpZHRoIikpLHRoaXMuJGVsLmNzcyhuKX0sX2dldFBvc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJue2xlZnQ6dGhpcy4kZWwub3V0ZXJXaWR0aCgpLzItaSx0b3A6dGhpcy4kZWwub3V0ZXJIZWlnaHQoKS8yLWl9fX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oNTc1KSxuKDU5Miksbig1NzgpLG4oNTc3KSxuKDU4MSksbig1NzYpLG4oNTg5KSxuKDU5MCksbig1OTMpLG4oNTc0KSxuKDU4NSksbig1ODcpLG4oNTgyKSxuKDU4Niksbig1OTEpLG4oNTc5KSxuKDU4OCldLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhLGwsYyx1LGQsaCxwLGYsbSxfKXtyZXR1cm57Q29udGVudDp0LERhdGFMaXN0OmUsRGVhZFNpbXBsZURhdGFMaXN0Om4sRW1wdHk6aSxGb290ZXI6cixMb2FkaW5nOm8sU2lkZWJhcjpzLFNpZGViYXJGaWx0ZXJTZXQ6YSxTaW1wbGVEYXRhTGlzdDpsLFRhYmxlOmMsVG9vbEJhcjp1LGNvbXBvbmVudHM6e0xldHRlcnNOYXY6ZCxMb2FkTW9yZTpoLFNlYXJjaEJveDpwLFNpZGViYXJGaWx0ZXI6Zn0sdXRpbDp7RGF0YWxpc3RGYWN0b3J5Om0sRmlsdGVyRmFjdG9yeTpffX19LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlKXt9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MCksbig1NzYpLG4oNTc3KV0scj1mdW5jdGlvbih0LGUsbixpKXtyZXR1cm4gZS5leHRlbmQoe0VtcHR5Om51bGwsTG9hZGluZzpudWxsLHRlbXBsYXRlOic8ZGl2IGNsYXNzPSJkYXRhLWxpc3QtY29udGVudCIgZGF0YS1zZT0iZGF0YS1saXN0LWNvbnRlbnQiPjwvZGl2PicsY29uc3RydWN0b3I6ZnVuY3Rpb24oKXtpZihlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSwhdGhpcy5jb2xsZWN0aW9uKXRocm93IG5ldyBFcnJvcigiTWlzc2luZyBBcmd1bWVudHM6IGNvbGxlY3Rpb24iKTt0aGlzLlRvb2xiYXImJnRoaXMuYWRkKHRoaXMuVG9vbGJhcix7cHJlcGVuZDohMH0pLHRoaXMuTWFpbiYmdGhpcy5hZGQodGhpcy5NYWluKTt2YXIgdD10aGlzLkVtcHR5fHxpLHI9dGhpcy5Mb2FkaW5nfHxuO3RoaXMuYWRkKHQpLHRoaXMuYWRkKHIpLHRoaXMuJGVsLmFkZENsYXNzKCJkYXRhLWxpc3QtY29udGVudC13cmFwIiksdGhpcy4kZWwuYXR0cigiZGF0YS1zZSIsImRhdGEtbGlzdC1jb250ZW50LXdyYXAiKX0sYWRkOmZ1bmN0aW9uKCl7dmFyIG49dC50b0FycmF5KGFyZ3VtZW50cyk7cmV0dXJuInVuZGVmaW5lZCI9PXR5cGVvZiBuWzFdJiYoblsxXT0iLmRhdGEtbGlzdC1jb250ZW50IiksZS5wcm90b3R5cGUuYWRkLmFwcGx5KHRoaXMsbil9LGhlaWdodDpmdW5jdGlvbih0KXtyZXR1cm4gdD92b2lkIHRoaXMuJCgiLmRhdGEtbGlzdC1jb250ZW50IikuY3NzKCJtaW4taGVpZ2h0Iix0KTp0aGlzLiRlbC5oZWlnaHQoKX0sdHlwZToiY29udGVudCJ9KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDU2NSldLHI9ZnVuY3Rpb24odCl7cmV0dXJuIHQuZXh0ZW5kKHtjbGFzc05hbWU6ImRhdGEtbGlzdC1sb2FkLXdyYXAiLHR5cGU6ImxvYWRpbmciLHRlbXBsYXRlOidcdCAgICAgIDxkaXYgY2xhc3M9ImRhdGEtbGlzdC1sb2FkLW1hc2siPjwvZGl2Plx0ICAgICAgPGg0IGNsYXNzPSJkYXRhLWxpc3QtaGVhZCI+TG9hZGluZy4uLjwvaDQ+XHQgICAgJyxzcGluT3B0aW9uczp7Y2xhc3NOYW1lOiJkYXRhLWxpc3Qtc3Bpbm5lciJ9LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmxpc3RlblRvKHRoaXMuY29sbGVjdGlvbiwicmVxdWVzdCIsdGhpcy5zcGluKSx0aGlzLmxpc3RlblRvKHRoaXMuY29sbGVjdGlvbiwic3luYyBlcnJvciIsdGhpcy5lbXB0eSl9LHNwaW46ZnVuY3Rpb24oZSl7ZT09PXRoaXMuY29sbGVjdGlvbiYmdC5wcm90b3R5cGUuc3Bpbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oNDcxKSxuKDQ3MCksbig1MDApXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe2Z1bmN0aW9uIHIoZSxuKXtyZXR1cm4gZS5zdGF0ZS5nZXQoImVtcHR5LmVzY2FwZSIpPT09ITF8fHQucmVzdWx0KGUsImVzY2FwZSIpPT09ITE/bjp0LmVzY2FwZShuKX1yZXR1cm4gbi5leHRlbmQoe2NsYXNzTmFtZToiZGF0YS1saXN0LWVtcHR5LW1zZyIsdHlwZToiZW1wdHkiLGVzY2FwZTohMCx0aXRsZTp2b2lkIDAsc3VidGl0bGU6dm9pZCAwLHRlbXBsYXRlOidcdCAgICAgIDxwIGNsYXNzPSJkYXRhLWxpc3QtZW1wdHktYmluYXJ5Ij5cdCAgICAgICAgMDExMDExMTAwMTEwMTExMTAxMTEwMTAwMDExMDEwMDAwMTEwMTAwMTAxMTAxMTEwMDExMDAxMTFcdCAgICAgICAgPHNwYW4gY2xhc3M9ImRhdGEtbGlzdC1lbXB0eS1pbWciPjwvc3Bhbj5cdCAgICAgIDwvcD5cdCAgICAgIDxoNCBjbGFzcz0iZGF0YS1saXN0LWhlYWQgZGF0YS1saXN0LWVtcHR5LWhlYWQiPnt7dGl0bGV9fTwvaDQ+XHQgICAgICA8aDUgY2xhc3M9ImRhdGEtbGlzdC1oZWFkIGRhdGEtbGlzdC1lbXB0eS1oZWFkIGRhdGEtbGlzdC1lbXB0eS1zdWJoZWFkIj57e3tzdWJ0aXRsZX19fTwvaDU+XHQgICAgJyxjb25zdHJ1Y3RvcjpmdW5jdGlvbihpKXt2YXIgcj1pJiZpLnRlbXBsYXRlfHx0aGlzLnRlbXBsYXRlO3RoaXMuX190ZW1wbGF0ZT10LmlzU3RyaW5nKHIpP2UudHBsKHIpOnIsbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIG89dGhpcy5vcHRpb25zLmRlYm91bmNlVGltZXx8MjAwLHM9bysxMDt0aGlzLmxpc3RlblRvKHRoaXMuY29sbGVjdGlvbiwic3luYyBhZGQgcmVtb3ZlIHJlc2V0Iix0LmRlYm91bmNlKHRoaXMudG9nZ2xlLG8pKSx0aGlzLmxpc3RlblRvKHRoaXMuY29sbGVjdGlvbiwiZXJyb3IiLHQuZGVib3VuY2UodGhpcy5fc2hvd0Vycm9yLHMpKSx0aGlzLmxpc3RlblRvKHRoaXMuY29sbGVjdGlvbiwicmVxdWVzdCIsdGhpcy5lbXB0eSl9LF9zaG93RXJyb3I6ZnVuY3Rpb24oZSxuLHIpe2lmKGU9PT10aGlzLmNvbGxlY3Rpb24pe2lmKCF0LmlzU3RyaW5nKHIpKXRyeXt2YXIgbz1uLnJlc3BvbnNlSlNPTnx8SlNPTi5wYXJzZShuLnJlc3BvbnNlVGV4dCk7cj1vLmVycm9yU3VtbWFyeX1jYXRjaChzKXt9dGhpcy5fX2RvUmVuZGVyKGkubG9jYWxpemUoImRhdGFsaXN0LmVycm9yX3RpdGxlIiwiY291cmFnZSIpLHQuaXNTdHJpbmcocik/cjppLmxvY2FsaXplKCJkYXRhbGlzdC5lcnJvcl9zdWJ0aXRsZSIsImNvdXJhZ2UiKSl9fSxyZW5kZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sX19kb1JlbmRlcjpmdW5jdGlvbih0LGUpe3RoaXMuJGVsLmh0bWwodGhpcy5fX3RlbXBsYXRlKHt0aXRsZTp0LHN1YnRpdGxlOnIodGhpcyxlKX0pKS5zaG93KCl9LF9fZ2V0VmFsdWU6ZnVuY3Rpb24oZSl7dmFyIG49dC5yZXN1bHQodGhpcyxlKTtyZXR1cm4gbj09PSExPyIiOnRoaXMuc3RhdGUuZ2V0KCJlbXB0eS4iK2UpfHxufHxpLmxvY2FsaXplKCJkYXRhbGlzdC5lbXB0eV8iK2UsImNvdXJhZ2UiKX0saXNFbXB0eVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLmNvbGxlY3Rpb24uc2l6ZSgpfSx0b2dnbGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc0VtcHR5U3RhdGUoKT90aGlzLl9fZG9SZW5kZXIodGhpcy5fX2dldFZhbHVlKCJ0aXRsZSIpLHRoaXMuX19nZXRWYWx1ZSgic3VidGl0bGUiKSk6dGhpcy5lbXB0eSgpLHRoaXN9LGVtcHR5OmZ1bmN0aW9uKCl7dGhpcy4kZWwuZW1wdHkoKS5oaWRlKCl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oNTc5KSxuKDU4NCksbig1ODgpLG4oNTkyKSxuKDU3NSksbig1NzQpXSxyPWZ1bmN0aW9uKHQsZSxuLGkscixvLHMpe2Z1bmN0aW9uIGEoZSxuLGkpe3QuaXNVbmRlZmluZWQoaSkmJihpPXRoaXNbZV0ubGVuZ3RoKSx0aGlzW2VdLnNwbGljZShpLDAsbil9cmV0dXJuIHIuZXh0ZW5kKHthdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImRhdGEtbGlzdCJ9LGVtcHR5U3RhdGU6e3RpdGxlOnZvaWQgMCxzdWJ0aXRsZTp2b2lkIDAsZXNjYXBlOnZvaWQgMH0sTG9hZE1vcmVWaWV3OnZvaWQgMCxjb2x1bW5zOltdLHRvb2xiYXI6W10saW5uZXJUb29sYmFyOiExLGZpbHRlcnM6W10sYWRkQ29sdW1uOnQucGFydGlhbChhLCJfX2NvbHVtbnMiKSxhZGRUb29sYmFyQ29tcG9uZW50OnQucGFydGlhbChhLCJfX3Rvb2xiYXIiKSxhZGRGaWx0ZXJTZXQ6dC5wYXJ0aWFsKGEsIl9fZmlsdGVycyIpLF9fcHJvY2Vzc0FjdGlvbnM6ZnVuY3Rpb24obil7aWYoIXQuaXNPYmplY3Qobil8fHQuaXNBcnJheShuKSlyZXR1cm4gbjt2YXIgaT10Lm9taXQobiwiYWN0aW9ucyIpLHI9dC5waWNrKG4sImRyb3Bkb3duIiwidGhyZXNob2xkIik7cmV0dXJuIG4uYWN0aW9ucyYmKGkudmlldz1lLmNyZWF0ZUFjdGlvbnModC5yZXN1bHQobiwiYWN0aW9ucyIpLHIpKSxpfSxjb25zdHJ1Y3RvcjpmdW5jdGlvbigpe3RoaXMuX190b29sYmFyPXQuY2xvbmUodGhpcy50b29sYmFyfHxbXSksdGhpcy5fX2ZpbHRlcnM9dC5jbG9uZSh0aGlzLmZpbHRlcnN8fFtdKSx0aGlzLl9fY29sdW1ucz10LmNsb25lKHRoaXMuY29sdW1uc3x8W10pLHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxyZW5kZXI6ZnVuY3Rpb24oKXt0aGlzLnJlbW92ZUNoaWxkcmVuKCksdGhpcy5fX3Rvb2xiYXIubGVuZ3RoJiYodGhpcy5Ub29sYmFyPW4uY3JlYXRlVG9vbGJhcih0aGlzLl9fdG9vbGJhcikpLHRoaXMuVG9vbGJhciYmIXRoaXMuaW5uZXJUb29sYmFyJiZ0aGlzLlRvb2xiYXImJnRoaXMuYWRkKHRoaXMuVG9vbGJhciksdGhpcy5fX2ZpbHRlcnMubGVuZ3RoJiYodGhpcy5TaWRlYmFyPWkuY3JlYXRlRmlsdGVycyh0aGlzLl9fZmlsdGVycykpLHRoaXMuU2lkZWJhciYmdGhpcy5hZGQodGhpcy5TaWRlYmFyKTt2YXIgYT10Lm1hcCh0aGlzLl9fY29sdW1ucyx0aGlzLl9fcHJvY2Vzc0FjdGlvbnMpO3JldHVybiF0aGlzLmZvb3RlciYmdGhpcy5Mb2FkTW9yZVZpZXcmJih0aGlzLmZvb3Rlcj1lLmNyZWF0ZUZvb3RlclZpZXcodGhpcy5Mb2FkTW9yZVZpZXcpKSx0aGlzLmFkZChvLmV4dGVuZCh7VG9vbGJhcjp0aGlzLmlubmVyVG9vbGJhciYmdGhpcy5Ub29sYmFyLE1haW46cy5leHRlbmQoe2F0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiZGF0YS1saXN0LXRhYmxlIn0sY29sdW1uczphLGl0ZW06dGhpcy5pdGVtLGhlYWRlcjp0aGlzLmhlYWRlcixjYXB0aW9uOnRoaXMuY2FwdGlvbixmb290ZXI6dGhpcy5mb290ZXJ9KSxFbXB0eTp0aGlzLkVtcHR5fHxlLmNyZWF0ZUVtcHR5Vmlldyh0aGlzLmVtcHR5U3RhdGUpLExvYWRpbmc6dGhpcy5Mb2FkaW5nfSkpLHIucHJvdG90eXBlLnJlbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpc319KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMyOCksbig1ODApLG4oNTc3KSxuKDU4MSksbig1ODMpXSxyPWZ1bmN0aW9uKHQsZSxuLGkscil7cmV0dXJue2NyZWF0ZUhlYWRlcjpmdW5jdGlvbigpe3JldHVybiBlLmNyZWF0ZUhlYWRlci5hcHBseShlLGFyZ3VtZW50cyl9LGNyZWF0ZVJvdzpmdW5jdGlvbigpe3JldHVybiBlLmNyZWF0ZVJvdy5hcHBseShlLGFyZ3VtZW50cyl9LGNyZWF0ZUFjdGlvbnM6ZnVuY3Rpb24oZSxuKXtpZihuPW58fHt9LCF0LmlzQXJyYXkoZSl8fCFlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoZSsiIGhhcyB0byBiZSBhIG5vbi1lbXB0eSBhcnJheS4iKTtyZXR1cm4gbi5hY3Rpb25PcHRpb25zPXQubWFwKGUsdC5jbG9uZSksci5leHRlbmQobil9LGNyZWF0ZUVtcHR5VmlldzpmdW5jdGlvbihlKXtyZXR1cm4gbi5leHRlbmQodC5jbG9uZShlKXx8e30pfSxjcmVhdGVGb290ZXJWaWV3OmZ1bmN0aW9uKHQpe3JldHVybiBpLmV4dGVuZCh7TG9hZE1vcmVWaWV3OnR9KX19fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG87ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmInN5bWJvbCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/InN5bWJvbCI6dHlwZW9mIHR9LCFmdW5jdGlvbihzLGEpe3I9W24oMzI4KSxuKDQ3MildLGk9YSxvPSJmdW5jdGlvbiI9PXR5cGVvZiBpP2kuYXBwbHkoZSxyKTppLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9KHZvaWQgMCxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oZSl7cmV0dXJuIHQubWFwKGUsZnVuY3Rpb24oZSl7cmV0dXJuIHQuaXNTdHJpbmcoZSkmJihlPXtuYW1lOmV9KSwhZS5uYW1lJiZlLmZpZWxkJiYoZT10LmV4dGVuZCh7bmFtZTplLmZpZWxkfSxlKSksZX0pfWZ1bmN0aW9uIGkoZSl7dmFyIG49e307cmV0dXJuIHQuZWFjaChlfHx7fSxmdW5jdGlvbihlLGkpe25baV09ZnVuY3Rpb24obil7bi5wcmV2ZW50RGVmYXVsdCgpLG4uc3RvcFByb3BhZ2F0aW9uKCksdC5pc0Z1bmN0aW9uKGUpJiZlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19LHRoaXMpLG59cmV0dXJue2NyZWF0ZUhlYWRlcjpmdW5jdGlvbihpKXtyZXR1cm4gZS5leHRlbmQoe3RhZ05hbWU6InRoZWFkIix0ZW1wbGF0ZToiPHRyPjwvdHI+Iixpbml0aWFsaXplOmZ1bmN0aW9uKCl7dC5lYWNoKG4oaSksZnVuY3Rpb24odCl7dGhpcy5hZGQoZS5leHRlbmQoe2VsOic8dGggcm9sZT0iY29sdW1uaGVhZGVyIj48L3RoPicsY2hpbGRyZW46dC5oZWFkZXJWaWV3JiZbdC5oZWFkZXJWaWV3XSx0ZW1wbGF0ZTp0LmhlYWRlclZpZXc/bnVsbDp0LmxhYmVsfHwiJm5ic3A7In0pLCJ0ciIpfSx0aGlzKX19KX0sY3JlYXRlUm93OmZ1bmN0aW9uKGkpe3ZhciByPXRoaXM7cmV0dXJuIGUuZXh0ZW5kKHt0YWdOYW1lOiJ0Ym9keSIsdGVtcGxhdGU6Jzx0ciByb2xlPSJyb3ciPjwvdHI+JyxjaGlsZHJlbjp0Lm1hcChuKGkpLGZ1bmN0aW9uKHQpe3JldHVybltyLmNyZWF0ZUNlbGwodCksInRyIl19KX0pfSxjcmVhdGVDZWxsOmZ1bmN0aW9uKG4pe3ZhciByPXQuZXh0ZW5kKHQucGljayhuLCJjbGFzc05hbWUiLCJhdHRyaWJ1dGVzIiwiaW5pdGlhbGl6ZSIpLHt0YWdOYW1lOiJ0ZCIsZXZlbnRzOmkobi5ldmVudHMpLGNoaWxkcmVuOm4udmlldyYmW24udmlld10sdGVtcGxhdGU6bi52aWV3P251bGw6bi50ZW1wbGF0ZXx8Int7IituLm5hbWUrIn19In0pO3JldHVybiBlLmV4dGVuZChyKX0sX19ub3JtYWxpemVGaWVsZHM6bixfX2NsZWFuRXZlbnRzOml9fSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MSksbig0NzApLG4oNTgyKV0scj1mdW5jdGlvbih0LGUsbixpKXt2YXIgcj1lLnRwbCgnXHQgICAgPHRyPlx0ICAgICAgPHRkIGNvbHNwYW49Int7Y29sc3Bhbn19Ij48L3RkPlx0ICAgIDwvdHI+XHQgICcpLG89bi5leHRlbmQoe3RhZ05hbWU6InRmb290IixjbGFzc05hbWU6ImRhdGEtbGlzdC1wYWdlci1mb290ZXIiLExvYWRNb3JlVmlldzp2b2lkIDAsY29uc3RydWN0b3I6ZnVuY3Rpb24oKXtuLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmxpc3RlblRvKHRoaXMuY29sbGVjdGlvbiwicmVxdWVzdCIsdGhpcy5lbXB0eSksdGhpcy5saXN0ZW5Ubyh0aGlzLmNvbGxlY3Rpb24sInN5bmMgcmVzZXQiLHQuZGVib3VuY2UodGhpcy5yZW5kZXIsNTApKX0scmVuZGVyOmZ1bmN0aW9uKCl7aWYodGhpcy5jb2xsZWN0aW9uLmhhc01vcmUoKSl7dmFyIHQ9dGhpcy5vcHRpb25zLmNvbHNwYW58fHRoaXMuY29sc3Bhbnx8MTAwO3RoaXMuJGVsLmh0bWwocih7Y29sc3Bhbjp0fSkpO3ZhciBlPXRoaXMuTG9hZE1vcmVWaWV3P3RoaXMuTG9hZE1vcmVWaWV3Omk7dGhpcy4kKCJ0ZCIpLmh0bWwobmV3IGUodGhpcy5vcHRpb25zKS5yZW5kZXIoKS5lbCl9ZWxzZSB0aGlzLmVtcHR5KCk7cmV0dXJuIHRoaXN9LGVtcHR5OmZ1bmN0aW9uKCl7dGhpcy4kZWwuZW1wdHkoKX19KTtyZXR1cm4gb30uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMzMSksbig0NzApXSxyPWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5leHRlbmQoe2VsOic8YSBocmVmPSIjIiBjbGFzcz0iZGF0YS1saXN0LXBhZ2VyLWZvb3Rlci1saW5rIj48L2E+Jyx0ZW1wbGF0ZTone3tpMThuIGNvZGU9ImRhdGFsaXN0LnNob3dfbW9yZSIgYnVuZGxlPSJjb3VyYWdlIn19JyxldmVudHM6e2NsaWNrOmZ1bmN0aW9uKGUpe2lmKGUucHJldmVudERlZmF1bHQoKSx0aGlzLmNvbGxlY3Rpb24uZg==", "base64"));
  res.write(new Buffer("ZXRjaE1vcmUpe3ZhciBuPXQoImJvZHkiKS5jc3MoInBvc2l0aW9uIik7dCgiYm9keSIpLmNzcygicG9zaXRpb24iLCJzdGlja3kiKSx0aGlzLmNvbGxlY3Rpb24uZmV0Y2hNb3JlKCksdGhpcy5saXN0ZW5Ub09uY2UodGhpcy5jb2xsZWN0aW9uLCJzeW5jIGVycm9yIixmdW5jdGlvbigpe3QoImJvZHkiKS5jc3MoInBvc2l0aW9uIixuKX0pfX19fSk7cmV0dXJuIG59LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oNDc4KSxuKDQ3MCksbig0NjYpLG4oNTAwKV0scj1mdW5jdGlvbih0LGUsbixpLHIpe3JldHVybiBuLmV4dGVuZCh7YWN0aW9uT3B0aW9uczpbXSx0aXRsZTpyLmxvY2FsaXplKCJkYXRhbGlzdC5jb2x1bW4uYWN0aW9ucy5kZWZhdWx0LnRpdGxlIiwiY291cmFnZSIpLHRocmVzaG9sZDoyLF9fY291bnRWaXNpYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHQuZmlsdGVyKHRoaXMuYWN0aW9uT3B0aW9ucyxmdW5jdGlvbihlKXtyZXR1cm4gdC5pc1VuZGVmaW5lZChlLnZpc2libGUpfHx0LnJlc3VsdEN0eChlLCJ2aXNpYmxlIix0aGlzKX0sdGhpcykubGVuZ3RofSxfX2FkZEJ1dHRvbnM6ZnVuY3Rpb24oKXt0LmVhY2godGhpcy5hY3Rpb25PcHRpb25zLGZ1bmN0aW9uKHQpe3RoaXMuYWRkKGUuY3JlYXRlKHQpKX0sdGhpcyl9LF9fYWRkRHJvcERvd246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmRyb3Bkb3dufHx7fTt0aGlzLmFkZChpLmV4dGVuZCh7dGl0bGU6dC50aXRsZXx8dGhpcy50aXRsZSxpY29uOnQuaWNvbixkaXNhYmxlZDp0LmRpc2FibGVkfHwhMSx3aWR0aDp0LndpZHRoLGl0ZW1XaWR0aDp0Lml0ZW1XaWR0aHx8MTgwLGl0ZW1zOnRoaXMuYWN0aW9uT3B0aW9uc30pKX0scmVuZGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmVtb3ZlQ2hpbGRyZW4oKSx0aGlzLl9fY291bnRWaXNpYmxlKCk8PXRoaXMudGhyZXNob2xkP3RoaXMuX19hZGRCdXR0b25zKCk6dGhpcy5fX2FkZERyb3BEb3duKCksbi5wcm90b3R5cGUucmVuZGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMyOCksbigzNjApLG4oNDc4KSxuKDU4NSksbig1ODYpLG4oNTg3KV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyl7cmV0dXJue2NyZWF0ZVRvb2xiYXI6ZnVuY3Rpb24oZSl7dmFyIG49dGhpcztyZXR1cm4gaS5leHRlbmQoe2luaXRpYWxpemU6ZnVuY3Rpb24oKXt0LmVhY2goZSxmdW5jdGlvbih0KXt0aGlzLmFkZChuLl9fY3JlYXRlQ29tcG9uZW50KHQpKX0sdGhpcyl9fSl9LF9fY3JlYXRlQ29tcG9uZW50OmZ1bmN0aW9uKGkpe2lmKHQuaXNGdW5jdGlvbihpKXx8dC5pc09iamVjdChpKSYmaSBpbnN0YW5jZW9mIGUuVmlldylyZXR1cm4gaTtzd2l0Y2goaS4=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("LEwseCxBLEUsRCxDLFksTyxQKXtyZXR1cm57QmFzZUZvcm06dCxCYXNlSW5wdXQ6ZSxjb21wb25lbnRzOntUZXh0Q291bnRlckV4cGxhaW46bixXaXphcmRUaXRsZTppfSxoZWxwZXJzOntFbnVtVHlwZUhlbHBlcjpyLEVycm9yQmFubmVyOm8sRXJyb3JQYXJzZXI6cyxGb3JtVXRpbDphLElucHV0Q29udGFpbmVyOmwsSW5wdXRGYWN0b3J5OmMsSW5wdXRMYWJlbDp1LElucHV0V3JhcHBlcjpkLFNjaGVtYUZvcm1GYWN0b3J5Omh9LGlucHV0czp7QmFzZUZpbGVVcGxvYWRlcjpwLEJhc2VQaWNrZXI6ZixCb29sZWFuU2VsZWN0Om0sQ2VydGlmaWNhdGlvbkZpbGVVcGxvYWRlcjpfLENoZWNrQm94OmcsQ2hlY2tCb3hTZXQ6dixEYXRlQm94OnksRGF0ZVRpbWVQaWNrZXI6YixEZWxldGFibGVCb3g6dyxHcm91cFBpY2tlcjpNLEdyb3VwU2VsZWN0OlMsSWRwUGlja2VyOlQsTnVtYmVyQm94OmssUmFkaW86TCxTY29wZXNQaWNrZXI6eCxTZWxlY3Q6QSxTaW1wbGVDaGVja0JveFNldDpFLFRleHRBcmVhOkQsVGV4dEJveDpDLFRleHRCb3hTZXQ6WSxUZXh0U2VsZWN0Ok8sQmFzZVNlbGVjdGl6ZTpQfX19LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzMjgpLG4oMzMxKSxuKDQ5Nyksbig0NzEpLG4oNTI3KSxuKDUzMyksbig1MDYpXSxyPWZ1bmN0aW9uKHQsZSxuLGkscil7dmFyIG89aS50cGwoJ1x0ICAgIDxzcGFuIGNsYXNzPSJib2xkIG1hcmdpbi1uMTAiPnt7dGl0bGV9fTwvc3Bhbj5cdCAgJykscz1pLnRwbCgnXHQgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuYW1lPSJ7e25hbWV9fSIgaWQ9Int7aWR9fSIvPlx0ICAgIDxsYWJlbCBmb3I9Int7aWR9fSI+e3tsYWJlbH19PC9sYWJlbD5cdCAgJyksYT1pLnRwbCgie3tzdWZmaXh9fXt7aWR9fSIpO3JldHVybiByLmV4dGVuZCh7aW5pdGlhbGl6ZTpmdW5jdGlvbihlKXtpZih0aGlzLmFsbE9wdGlvbnM9ZS5vcHRpb25zLmFsbCx0aGlzLnN1ZmZpeD1lLm5hbWUsdGhpcy5ncm91cGVkT3B0aW9ucz17fSxlLm9wdGlvbnMubXVsdGlDb2x1bW4pe3ZhciBuPWUub3B0aW9ucy5ncm91cEJ5RmllbGQ7dC5lYWNoKHRoaXMuYWxsT3B0aW9ucyxmdW5jdGlvbih0KXt0aGlzLmdyb3VwZWRPcHRpb25zW3Rbbl1dfHwodGhpcy5ncm91cGVkT3B0aW9uc1t0LmNhdGVnb3J5XT1bXSksdGhpcy5ncm91cGVkT3B0aW9uc1t0LmNhdGVnb3J5XS5wdXNoKHQpfSx0aGlzKX19LGV2ZW50czp7ImNoYW5nZSA6Y2hlY2tib3giOiJ1cGRhdGUiLGtleXVwOmZ1bmN0aW9uKHQpe3ZhciBpPXQud2hpY2h8fHQua2V5Q29kZTtpPT09bi5TUEFDRSYmZSh0LnRhcmdldCkuY2xpY2soKX19LHByZVJlbmRlcjpmdW5jdGlvbigpe3RoaXMuJGVsLmVtcHR5KCk7dmFyIGU9dC5rZXlzKHRoaXMuZ3JvdXBlZE9wdGlvbnMpO3RoaXMub3B0aW9ucy5vcHRpb25zLm11bHRpQ29sdW1uJiZlLmxlbmd0aD4xP3RoaXMucmVuZGVyTXVsdGlDb2x1bW4oZSk6dGhpcy5yZW5kZXJTaW5nbGVDb2x1bW4oKTt2YXIgbj10aGlzLiQoImlucHV0Iik7dC5kZWZlcih0LmJpbmQobi5jdXN0b21JbnB1dCxuKSl9LHJlbmRlclNpbmdsZUNvbHVtbjpmdW5jdGlvbigpe3QuZWFjaCh0aGlzLmFsbE9wdGlvbnMsZnVuY3Rpb24oZSl7dGhpcy4kZWwuYXBwZW5kKHMoe25hbWU6YSh0LmV4dGVuZCh0aGlzLGUpKSxpZDphKHQuZXh0ZW5kKHRoaXMsZSkpLGxhYmVsOmUuZGlzcGxheU5hbWV8fGUubmFtZX0pKX0sdGhpcyl9LHJlbmRlck11bHRpQ29sdW1uOmZ1bmN0aW9uKGUpe3ZhciBuPTM9PWUubGVuZ3RoPyJzdS1jaGVja2JveC0zY29sdW1ucyI6InN1LWNoZWNrYm94LTJjb2x1bW5zIjt0LmVhY2goZSxmdW5jdGlvbihlLGkpe3ZhciByPSJjb2x1bW4iK2k7dGhpcy4kZWwuYXBwZW5kKCc8c3BhbiBjbGFzcz0iJytuKyciIGlkPSInK3IrJyI+Jyk7dmFyIGw9dGhpcy4kZWwuZmluZCgiIyIrcik7bC5hcHBlbmQobyh7dGl0bGU6ZX0pKSx0LmVhY2godGhpcy5ncm91cGVkT3B0aW9uc1tlXSxmdW5jdGlvbihlKXtsLmFwcGVuZChzKHtuYW1lOmEodC5leHRlbmQodGhpcyxlKSksaWQ6YSh0LmV4dGVuZCh0aGlzLGUpKSxsYWJlbDplLmRpc3BsYXlOYW1lfHxlLm5hbWV9KSl9LHRoaXMpLHRoaXMuJGVsLmFwcGVuZCgiPC9zcGFuPiIpfSx0aGlzKX0sZWRpdE1vZGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy4kKCI6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwhMSksdC5lYWNoKHRoaXMubW9kZWwuZ2V0KHRoaXMub3B0aW9ucy5uYW1lKSxmdW5jdGlvbihlKXt0aGlzLiQoImlucHV0IyIrYSh0LmV4dGVuZCh0aGlzLGUpKSkucHJvcCgiY2hlY2tlZCIsZS5lbmFibGVkKX0sdGhpcyksdGhpcy5nZXRNb2RlbFZhbHVlKCksdGhpc30sdmFsOmZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIHQuZWFjaCh0aGlzLmFsbE9wdGlvbnMsZnVuY3Rpb24obil7bi5lbmFibGVkPXRoaXMuJCgiOmlucHV0IyIrYSh0LmV4dGVuZCh0aGlzLG4pKSkucHJvcCgiY2hlY2tlZCIpLGUucHVzaChuKX0sdGhpcyksZX0sdXBkYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy52YWwoKTt0aGlzLm1vZGVsLnNldCh0aGlzLm9wdGlvbnMubmFtZSxKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHQpKSl9LGZvY3VzOmZ1bmN0aW9uKCl7fX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDQ3MCldLHI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZS5leHRlbmQoe3RlbXBsYXRlOidcdCAgICB7eyNpZiBoYXNSZW1haW5pbmd9fVx0ICAgICAge3tpMThuIGNvZGU9ImNoYXJhY3RlcnMucmVtYWluaW5nIiBidW5kbGU9ImNvdXJhZ2UiIGFyZ3VtZW50cz0iY291bnQifX1cdCAgICB7ey9pZn19XHQgICAge3sjdW5sZXNzIGhhc1JlbWFpbmluZ319XHQgICAgICA8ZGl2IGNsYXNzPSJvLWZvcm0tdGV4dC1jb3VudGVyLW92ZXIiPlx0ICAgICAgICB7e2kxOG4gY29kZT0iY2hhcmFjdGVycy5vdmVyIiBidW5kbGU9ImNvdXJhZ2UiIGFyZ3VtZW50cz0iY291bnQifX1cdCAgICAgIDwvZGl2Plx0ICAgIHt7L3VubGVzc319Jyxtb2RlbEV2ZW50czpmdW5jdGlvbigpe3ZhciBlPXt9O3JldHVybiBlWyJjaGFuZ2U6Iit0aGlzLm9wdGlvbnMuZmllbGRdPXQudGhyb3R0bGUodGhpcy5yZW5kZXIsNTApLGV9LGluaXRpYWxpemU6ZnVuY3Rpb24oKXtpZighdGhpcy5vcHRpb25zLm1vZGVsfHwhdGhpcy5vcHRpb25zLmZpZWxkKXRocm93IG5ldyBFcnJvcignQ2Fubm90IGNyZWF0ZSBUZXh0Q291bnRlckV4cGxhaW4uIG1pc3NpbmcgYXJndW1lbnRzIFsibW9kZWwiLCAiZmllbGQiXScpO3ZhciBlPXRoaXMub3B0aW9ucy5tb2RlbC5nZXRQcm9wZXJ0eVNjaGVtYSh0aGlzLm9wdGlvbnMuZmllbGQpO2lmKCFlfHwhdC5pc051bWJlcihlLm1heExlbmd0aCkpdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY3JlYXRlIFRleHRDb3VudGVyRXhwbGFpbi4gcHJvcGVydHkgbWlzc2luZyAibWF4TGVuZ3RoIiBkZWZpbml0aW9uJyk7dGhpcy5maWVsZD10aGlzLm9wdGlvbnMuZmllbGQsdGhpcy5tYXhMZW5ndGg9ZS5tYXhMZW5ndGh9LGdldFRlbXBsYXRlRGF0YTpmdW5jdGlvbigpe3ZhciB0PXRoaXMubW9kZWwuZ2V0KHRoaXMuZmllbGQpfHwiIixlPXRoaXMubWF4TGVuZ3RoLG49ZS10Lmxlbmd0aCxpPW4+PTA7cmV0dXJue2hhc1JlbWFpbmluZzppLGNvdW50Omk/bjpNYXRoLmFicyhuKX19fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig0NzApXSxyPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZXh0ZW5kKHt0YWdOYW1lOiJoMiIsY2xhc3NOYW1lOiJ3aXphcmQtaGVhZCIsdGVtcGxhdGU6JzxzcGFuIGNsYXNzPSJzdGVwLW51bSI+e3tzdGVwfX08L3NwYW4+e3t0aXRsZX19J30pO3JldHVybiBlfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDMzMSksbig0OTkpXSxyPWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKHQpe3ZhciBlPXModC5lbnVtVmFsdWVzKSxpPXtuYW1lOnQubmFtZSxsYWJlbDp0LnRpdGxlLHJlYWRPbmx5OnQucmVhZE9ubHksY3VzdG9tRXhwbGFpbjp0LmV4cGxhaW4scGFyYW1zOntlbnVtT25lT2Y6ZX0sb3B0aW9uczpvKGUpfTtyZXR1cm4gbi5pc0FycmF5RGF0YVR5cGUodC5kaXNwbGF5VHlwZSk/KGkudHlwZT0iY2hlY2tib3hzZXQiLGkudG89bSxpLmZyb209Xyk6KGkudHlwZT0ic2VsZWN0IixpLnRvPWYsaS5mcm9tPXApLGkuaW5wdXQ9bnVsbCxpfWZ1bmN0aW9uIHIoZSl7cmV0dXJuIHQuaXNBcnJheShlKT9vKHMoZSkpOnt9fWZ1bmN0aW9uIG8oZSl7cmV0dXJuIGEoZSk/dC5yZWR1Y2UoZSxmdW5jdGlvbih0LGUsbil7cmV0dXJuIHRbaChuKV09ZS50aXRsZSx0fSx7fSk6e319ZnVuY3Rpb24gcyhuKXtyZXR1cm4gdC5hbGwobixlLmlzUGxhaW5PYmplY3QpP2Eobik/bjpkKG4pOmMobil9ZnVuY3Rpb24gYShlKXtyZXR1cm4gdC5pc0FycmF5KGUpJiZ0LmFsbChlLGZ1bmN0aW9uKGUpe3JldHVybiB0LmhhcyhlLCJjb25zdCIpJiZ0LmhhcyhlLCJ0aXRsZSIpfSl9ZnVuY3Rpb24gbChuKXtyZXR1cm4hIWEobikmJnQuYWxsKG4sZnVuY3Rpb24odCl7cmV0dXJuIiIhPT1lLnRyaW0odFsiY29uc3QiXSkmJiIiIT09ZS50cmltKHQudGl0bGUpfSl9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gdC5tYXAoZSxmdW5jdGlvbih0KXtyZXR1cm57ImNvbnN0Ijp0LHRpdGxlOnUodCl9fSl9ZnVuY3Rpb24gdShlKXtyZXR1cm4gdC5pc09iamVjdChlKT9KU09OLnN0cmluZ2lmeShlKTp0LmlzTnVtYmVyKGUpP2UrIiI6ZX1mdW5jdGlvbiBkKG4pe3ZhciBpPXQucGFydGlhbCh0Lmhhcyx0LGcpO3JldHVybiB0LmFsbChuLGkpP3QuY2hhaW4obikuZmlsdGVyKGZ1bmN0aW9uKG4pe3JldHVybiBlLmlzUGxhaW5PYmplY3QobikmJnQuaGFzKG4sZyl9KS5tYXAoZnVuY3Rpb24odCl7cmV0dXJueyJjb25zdCI6dCx0aXRsZTp0W2ddfX0pLnZhbHVlKCk6YyhuKX1mdW5jdGlvbiBoKHQpe3JldHVybiIiK3YrdH1mdW5jdGlvbiBwKGUpe3ZhciBuPXQuZmluZEluZGV4KHRoaXMub3B0aW9ucy5wYXJhbXMuZW51bU9uZU9mLGZ1bmN0aW9uKG4pe3JldHVybiB0LmlzT2JqZWN0KGUpP3QuaXNFcXVhbChuWyJjb25zdCJdLGUpOm5bImNvbnN0Il09PT1lfSk7cmV0dXJuIG4+LTE/aChuKTplfWZ1bmN0aW9uIGYoZSl7aWYoIXQuaXNTdHJpbmcoZSl8fDAhPT1lLmluZGV4T2YodikpcmV0dXJuIGU7dmFyIG49ZS5yZXBsYWNlKHYsIiIpLGk9dGhpcy5vcHRpb25zLnBhcmFtcyYmdC5pc0FycmF5KHRoaXMub3B0aW9ucy5wYXJhbXMuZW51bU9uZU9mKT90aGlzLm9wdGlvbnMucGFyYW1zLmVudW1PbmVPZltuXTpudWxsO3JldHVybiB0LmhhcyhpLCJjb25zdCIpP2lbImNvbnN0Il06aX1mdW5jdGlvbiBtKGUpe3JldHVybiB0Lm1hcChlLGYuYmluZCh0aGlzKSl9ZnVuY3Rpb24gXyhlKXtyZXR1cm4gdC5tYXAoZSxwLmJpbmQodGhpcykpfXZhciBnPSJuYW1lIix2PSJfZW51bV8iO3JldHVybntnZXRFbnVtSW5wdXRPcHRpb25zOmksZ2V0RHJvcGRvd25PcHRpb25zOnIsaXNPbmVPZkVudW1IYXZlQ29udGVudDpsLGNvbnZlcnRUb09uZU9mOnN9fS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oMzI4KSxuKDUwMCksbig2MDApLG4oNjAxKSxuKDU5OCldLHI9ZnVuY3Rpb24odCxlLG4saSxyKXtmdW5jdGlvbiA=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("b2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTtpPWRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpLnRleHQubGVuZ3RoLHIubW92ZVN0YXJ0KCJjaGFyYWN0ZXIiLC1lLnZhbHVlLmxlbmd0aCksbj1yLnRleHQubGVuZ3RoLWl9cmV0dXJue29mZnNldDpuLGxlbmd0aDppfX1mdW5jdGlvbiBnKHQpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpfWZ1bmN0aW9uIHYodCl7dC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCl9ZnVuY3Rpb24geShlKXtpZighUil7dmFyIG49ZVswXS5jdXJyZW50U3R5bGV8fHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVbMF0sbnVsbCk7Uj10KGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpKS5jc3Moe3Bvc2l0aW9uOiJhYnNvbHV0ZSIsbGVmdDoiLTEwMDAwcHgiLHRvcDoiLTEwMDAwcHgiLGRpc3BsYXk6Im5vbmUiLGZvbnRTaXplOm4uZm9udFNpemUsZm9udEZhbWlseTpuLmZvbnRGYW1pbHksZm9udFN0eWxlOm4uZm9udFN0eWxlLGZvbnRXZWlnaHQ6bi5mb250V2VpZ2h0LGxldHRlclNwYWNpbmc6bi5sZXR0ZXJTcGFjaW5nLHRleHRUcmFuc2Zvcm06bi50ZXh0VHJhbnNmb3JtLHdoaXRlU3BhY2U6Im5vd3JhcCJ9KSxSLmF0dHIoImNsYXNzIiwic2VsZWN0Mi1zaXplciIpLHQoImJvZHkiKS5hcHBlbmQoUil9cmV0dXJuIFIudGV4dChlLnZhbCgpKSxSLndpZHRoKCk7Cn1mdW5jdGlvbiBiKGUsbixpKXt2YXIgcixvLHM9W107cj10LnRyaW0oZS5hdHRyKCJjbGFzcyIpKSxyJiYocj0iIityLHQoci5zcGxpdCgvXHMrLykpLmVhY2gyKGZ1bmN0aW9uKCl7MD09PXRoaXMuaW5kZXhPZigic2VsZWN0Mi0iKSYmcy5wdXNoKHRoaXMpfSkpLHI9dC50cmltKG4uYXR0cigiY2xhc3MiKSksciYmKHI9IiIrcix0KHIuc3BsaXQoL1xzKy8pKS5lYWNoMihmdW5jdGlvbigpezAhPT10aGlzLmluZGV4T2YoInNlbGVjdDItIikmJihvPWkodGhpcyksbyYmcy5wdXNoKG8pKX0pKSxlLmF0dHIoImNsYXNzIixzLmpvaW4oIiAiKSl9ZnVuY3Rpb24gdyh0LGUsbixpKXt2YXIgbz1yKHQudG9VcHBlckNhc2UoKSkuaW5kZXhPZihyKGUudG9VcHBlckNhc2UoKSkpLHM9ZS5sZW5ndGg7cmV0dXJuIG88MD92b2lkIG4ucHVzaChpKHQpKToobi5wdXNoKGkodC5zdWJzdHJpbmcoMCxvKSkpLG4ucHVzaCgiPHNwYW4gY2xhc3M9J3NlbGVjdDItbWF0Y2gnPiIpLG4ucHVzaChpKHQuc3Vic3RyaW5nKG8sbytzKSkpLG4ucHVzaCgiPC9zcGFuPiIpLHZvaWQgbi5wdXNoKGkodC5zdWJzdHJpbmcobytzLHQubGVuZ3RoKSkpKX1mdW5jdGlvbiBNKHQpe3ZhciBlPXsiXFwiOiImIzkyOyIsIiYiOiImYW1wOyIsIjwiOiImbHQ7IiwiPiI6IiZndDsiLCciJzoiJnF1b3Q7IiwiJyI6IiYjMzk7IiwiLyI6IiYjNDc7In07cmV0dXJuIFN0cmluZyh0KS5yZXBsYWNlKC9bJjw+IidcL1xcXS9nLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSl9ZnVuY3Rpb24gUyhlKXt2YXIgaSxyPW51bGwsbz1lLnF1aWV0TWlsbGlzfHwxMDAscz1lLnVybCxhPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKGwpe3dpbmRvdy5jbGVhclRpbWVvdXQoaSksaT13aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBpPWUuZGF0YSxvPXMsYz1lLnRyYW5zcG9ydHx8dC5mbi5zZWxlY3QyLmFqYXhEZWZhdWx0cy50cmFuc3BvcnQsdT17dHlwZTplLnR5cGV8fCJHRVQiLGNhY2hlOmUuY2FjaGV8fCExLGpzb25wQ2FsbGJhY2s6ZS5qc29ucENhbGxiYWNrfHxuLGRhdGFUeXBlOmUuZGF0YVR5cGV8fCJqc29uIn0sZD10LmV4dGVuZCh7fSx0LmZuLnNlbGVjdDIuYWpheERlZmF1bHRzLnBhcmFtcyx1KTtpPWk/aS5jYWxsKGEsbC50ZXJtLGwucGFnZSxsLmNvbnRleHQpOm51bGwsbz0iZnVuY3Rpb24iPT10eXBlb2Ygbz9vLmNhbGwoYSxsLnRlcm0sbC5wYWdlLGwuY29udGV4dCk6byxyJiYiZnVuY3Rpb24iPT10eXBlb2Ygci5hYm9ydCYmci5hYm9ydCgpLGUucGFyYW1zJiYodC5pc0Z1bmN0aW9uKGUucGFyYW1zKT90LmV4dGVuZChkLGUucGFyYW1zLmNhbGwoYSkpOnQuZXh0ZW5kKGQsZS5wYXJhbXMpKSx0LmV4dGVuZChkLHt1cmw6byxkYXRhVHlwZTplLmRhdGFUeXBlLGRhdGE6aSxzdWNjZXNzOmZ1bmN0aW9uKHQpe3ZhciBuPWUucmVzdWx0cyh0LGwucGFnZSxsKTtsLmNhbGxiYWNrKG4pfSxlcnJvcjpmdW5jdGlvbih0LGUsbil7dmFyIGk9e2hhc0Vycm9yOiEwLGpxWEhSOnQsdGV4dFN0YXR1czplLGVycm9yVGhyb3duOm59O2wuY2FsbGJhY2soaSl9fSkscj1jLmNhbGwoYSxkKX0sbyl9fWZ1bmN0aW9uIFQoZSl7dmFyIG4saSxyPWUsbz1mdW5jdGlvbih0KXtyZXR1cm4iIit0LnRleHR9O3QuaXNBcnJheShyKSYmKGk9cixyPXtyZXN1bHRzOml9KSx0LmlzRnVuY3Rpb24ocik9PT0hMSYmKGk9cixyPWZ1bmN0aW9uKCl7cmV0dXJuIGl9KTt2YXIgcz1yKCk7cmV0dXJuIHMudGV4dCYmKG89cy50ZXh0LHQuaXNGdW5jdGlvbihvKXx8KG49cy50ZXh0LG89ZnVuY3Rpb24odCl7cmV0dXJuIHRbbl19KSksZnVuY3Rpb24oZSl7dmFyIG4saT1lLnRlcm0scz17cmVzdWx0czpbXX07cmV0dXJuIiI9PT1pP3ZvaWQgZS5jYWxsYmFjayhyKCkpOihuPWZ1bmN0aW9uKHIscyl7dmFyIGEsbDtpZihyPXJbMF0sci5jaGlsZHJlbil7YT17fTtmb3IobCBpbiByKXIuaGFzT3duUHJvcGVydHkobCkmJihhW2xdPXJbbF0pO2EuY2hpbGRyZW49W10sdChyLmNoaWxkcmVuKS5lYWNoMihmdW5jdGlvbih0LGUpe24oZSxhLmNoaWxkcmVuKX0pLChhLmNoaWxkcmVuLmxlbmd0aHx8ZS5tYXRjaGVyKGksbyhhKSxyKSkmJnMucHVzaChhKX1lbHNlIGUubWF0Y2hlcihpLG8ocikscikmJnMucHVzaChyKX0sdChyKCkucmVzdWx0cykuZWFjaDIoZnVuY3Rpb24odCxlKXtuKGUscy5yZXN1bHRzKX0pLHZvaWQgZS5jYWxsYmFjayhzKSl9fWZ1bmN0aW9uIGsoZSl7dmFyIGk9dC5pc0Z1bmN0aW9uKGUpO3JldHVybiBmdW5jdGlvbihyKXt2YXIgbz1yLnRlcm0scz17cmVzdWx0czpbXX0sYT1pP2Uocik6ZTt0LmlzQXJyYXkoYSkmJih0KGEpLmVhY2goZnVuY3Rpb24oKXt2YXIgdD10aGlzLnRleHQhPT1uLGU9dD90aGlzLnRleHQ6dGhpczsoIiI9PT1vfHxyLm1hdGNoZXIobyxlKSkmJnMucmVzdWx0cy5wdXNoKHQ/dGhpczp7aWQ6dGhpcyx0ZXh0OnRoaXN9KX0pLHIuY2FsbGJhY2socykpfX1mdW5jdGlvbiBMKGUsbil7aWYodC5pc0Z1bmN0aW9uKGUpKXJldHVybiEwO2lmKCFlKXJldHVybiExO2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4hMDt0aHJvdyBuZXcgRXJyb3IobisiIG11c3QgYmUgYSBzdHJpbmcsIGZ1bmN0aW9uLCBvciBmYWxzeSB2YWx1ZSIpfWZ1bmN0aW9uIHgoZSxuKXtpZih0LmlzRnVuY3Rpb24oZSkpe3ZhciBpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTtyZXR1cm4gZS5hcHBseShuLGkpfXJldHVybiBlfWZ1bmN0aW9uIEEoZSl7dmFyIG49MDtyZXR1cm4gdC5lYWNoKGUsZnVuY3Rpb24odCxlKXtlLmNoaWxkcmVuP24rPUEoZS5jaGlsZHJlbik6bisrfSksbn1mdW5jdGlvbiBFKHQsZSxpLHIpe3ZhciBvLHMsYSxjLHUsZD10LGg9ITE7aWYoIXIuY3JlYXRlU2VhcmNoQ2hvaWNlfHwhci50b2tlblNlcGFyYXRvcnN8fHIudG9rZW5TZXBhcmF0b3JzLmxlbmd0aDwxKXJldHVybiBuO2Zvcig7Oyl7Zm9yKHM9LTEsYT0wLGM9ci50b2tlblNlcGFyYXRvcnMubGVuZ3RoO2E8YyYmKHU9ci50b2tlblNlcGFyYXRvcnNbYV0scz10LmluZGV4T2YodSksIShzPj0wKSk7YSsrKTtpZihzPDApYnJlYWs7aWYobz10LnN1YnN0cmluZygwLHMpLHQ9dC5zdWJzdHJpbmcocyt1Lmxlbmd0aCksby5sZW5ndGg+MCYmKG89ci5jcmVhdGVTZWFyY2hDaG9pY2UuY2FsbCh0aGlzLG8sZSksbyE9PW4mJm51bGwhPT1vJiZyLmlkKG8pIT09biYmbnVsbCE9PXIuaWQobykpKXtmb3IoaD0hMSxhPTAsYz1lLmxlbmd0aDthPGM7YSsrKWlmKGwoci5pZChvKSxyLmlkKGVbYV0pKSl7aD0hMDticmVha31ofHxpKG8pfX1yZXR1cm4gZCE9PXQ/dDp2b2lkIDB9ZnVuY3Rpb24gRCgpe3ZhciBlPXRoaXM7dC5lYWNoKGFyZ3VtZW50cyxmdW5jdGlvbih0LG4pe2Vbbl0ucmVtb3ZlKCksZVtuXT1udWxsfSl9ZnVuY3Rpb24gQyhlLG4pe3ZhciBpPWZ1bmN0aW9uKCl7fTtyZXR1cm4gaS5wcm90b3R5cGU9bmV3IGUsaS5wcm90b3R5cGUuY29uc3RydWN0b3I9aSxpLnByb3RvdHlwZS5wYXJlbnQ9ZS5wcm90b3R5cGUsaS5wcm90b3R5cGU9dC5leHRlbmQoaS5wcm90b3R5cGUsbiksaX1pZihlPT09bil7dmFyIFksTyxQLE4sSSxSLGosSCxGPXt4OjAseTowfSxZPXtUQUI6OSxFTlRFUjoxMyxFU0M6MjcsU1BBQ0U6MzIsTEVGVDozNyxVUDozOCxSSUdIVDozOSxET1dOOjQwLFNISUZUOjE2LENUUkw6MTcsQUxUOjE4LFBBR0VfVVA6MzMsUEFHRV9ET1dOOjM0LEhPTUU6MzYsRU5EOjM1LEJBQ0tTUEFDRTo4LERFTEVURTo0Nixpc0Fycm93OmZ1bmN0aW9uKHQpe3N3aXRjaCh0PXQud2hpY2g/dC53aGljaDp0KXtjYXNlIFkuTEVGVDpjYXNlIFkuUklHSFQ6Y2FzZSBZLlVQOmNhc2UgWS5ET1dOOnJldHVybiEwfXJldHVybiExfSxpc0NvbnRyb2w6ZnVuY3Rpb24odCl7dmFyIGU9dC53aGljaDtzd2l0Y2goZSl7Y2FzZSBZLlNISUZUOmNhc2UgWS5DVFJMOmNhc2UgWS5BTFQ6cmV0dXJuITB9cmV0dXJuISF0Lm1ldGFLZXl9LGlzRnVuY3Rpb25LZXk6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dC53aGljaD90LndoaWNoOnQsdD49MTEyJiZ0PD0xMjN9fSx6PSI8ZGl2IGNsYXNzPSdzZWxlY3QyLW1lYXN1cmUtc2Nyb2xsYmFyJz48L2Rpdj4iLFU9eyLikrYiOiJBIiwi77yhIjoiQSIsIsOAIjoiQSIsIsOBIjoiQSIsIsOCIjoiQSIsIuG6piI6IkEiLCLhuqQiOiJBIiwi4bqqIjoiQSIsIuG6qCI6IkEiLCLDgyI6IkEiLCLEgCI6IkEiLCLEgiI6IkEiLCLhurAiOiJBIiwi4bquIjoiQSIsIuG6tCI6IkEiLCLhurIiOiJBIiwiyKYiOiJBIiwix6AiOiJBIiwiw4QiOiJBIiwix54iOiJBIiwi4bqiIjoiQSIsIsOFIjoiQSIsIse6IjoiQSIsIseNIjoiQSIsIsiAIjoiQSIsIsiCIjoiQSIsIuG6oCI6IkEiLCLhuqwiOiJBIiwi4bq2IjoiQSIsIuG4gCI6IkEiLCLEhCI6IkEiLCLIuiI6IkEiLCLisa8iOiJBIiwi6pyyIjoiQUEiLCLDhiI6IkFFIiwix7wiOiJBRSIsIseiIjoiQUUiLCLqnLQiOiJBTyIsIuqctiI6IkFVIiwi6py4IjoiQVYiLCLqnLoiOiJBViIsIuqcvCI6IkFZIiwi4pK3IjoiQiIsIu+8oiI6IkIiLCLhuIIiOiJCIiwi4biEIjoiQiIsIuG4hiI6IkIiLCLJgyI6IkIiLCLGgiI6IkIiLCLGgSI6IkIiLCLikrgiOiJDIiwi77yjIjoiQyIsIsSGIjoiQyIsIsSIIjoiQyIsIsSKIjoiQyIsIsSMIjoiQyIsIsOHIjoiQyIsIuG4iCI6IkMiLCLGhyI6IkMiLCLIuyI6IkMiLCLqnL4iOiJDIiwi4pK5IjoiRCIsIu+8pCI6IkQiLCLhuIoiOiJEIiwixI4iOiJEIiwi4biMIjoiRCIsIuG4kCI6IkQiLCLhuJIiOiJEIiwi4biOIjoiRCIsIsSQIjoiRCIsIsaLIjoiRCIsIsaKIjoiRCIsIsaJIjoiRCIsIuqduSI6IkQiLCLHsSI6IkRaIiwix4QiOiJEWiIsIseyIjoiRHoiLCLHhSI6IkR6Iiwi4pK6IjoiRSIsIu+8pSI6IkUiLCLDiCI6IkUiLCLDiSI6IkUiLCLDiiI6IkUiLCLhu4AiOiJFIiwi4bq+IjoiRSIsIuG7hCI6IkUiLCLhu4IiOiJFIiwi4bq8IjoiRSIsIsSSIjoiRSIsIuG4lCI6IkUiLCLhuJYiOiJFIiwixJQiOiJFIiwixJYiOiJFIiwiw4siOiJFIiwi4bq6IjoiRSIsIsSaIjoiRSIsIsiEIjoiRSIsIsiGIjoiRSIsIuG6uCI6IkUiLCLhu4YiOiJFIiwiyKgiOiJFIiwi4bicIjoiRSIsIsSYIjoiRSIsIuG4mCI6IkUiLCLhuJoiOiJFIiwixpAiOiJFIiwixo4iOiJFIiwi4pK7IjoiRiIsIu+8piI6IkYiLCLhuJ4iOiJGIiwixpEiOiJGIiwi6p27IjoiRiIsIuKSvCI6IkciLCLvvKciOiJHIiwix7QiOiJHIiwixJwiOiJHIiwi4bigIjoiRyIsIsSeIjoiRyIsIsSgIjoiRyIsIsemIjoiRyIsIsSiIjoiRyIsIsekIjoiRyIsIsaTIjoiRyIsIuqeoCI6IkciLCLqnb0iOiJHIiwi6p2+IjoiRyIsIuKSvSI6IkgiLCLvvKgiOiJIIiwixKQiOiJIIiwi4biiIjoiSCIsIuG4piI6IkgiLCLIniI6IkgiLCLhuKQiOiJIIiwi4bioIjoiSCIsIuG4qiI6IkgiLCLEpiI6IkgiLCLisaciOiJIIiwi4rG1IjoiSCIsIuqejSI6IkgiLCLikr4iOiJJIiwi77ypIjoiSSIsIsOMIjoiSSIsIsONIjoiSSIsIsOOIjoiSSIsIsSoIjoiSSIsIsSqIjoiSSIsIsSsIjoiSSIsIsSwIjoiSSIsIsOPIjoiSSIsIuG4riI6IkkiLCLhu4giOiJJIiwix48iOiJJIiwiyIgiOiJJIiwiyIoiOiJJIiwi4buKIjoiSSIsIsSuIjoiSSIsIuG4rCI6IkkiLCLGlyI6IkkiLCLikr8iOiJKIiwi77yqIjoiSiIsIsS0IjoiSiIsIsmIIjoiSiIsIuKTgCI6IksiLCLvvKsiOiJLIiwi4biwIjoiSyIsIseoIjoiSyIsIuG4siI6IksiLCLEtiI6IksiLCLhuLQiOiJLIiwixpgiOiJLIiwi4rGpIjoiSyIsIuqdgCI6IksiLCLqnYIiOiJLIiwi6p2EIjoiSyIsIuqeoiI6IksiLCLik4EiOiJMIiwi77ysIjoiTCIsIsS/IjoiTCIsIsS5IjoiTCIsIsS9IjoiTCIsIuG4tiI6IkwiLCLhuLgiOiJMIiwixLsiOiJMIiwi4bi8IjoiTCIsIuG4uiI6IkwiLCLFgSI6IkwiLCLIvSI6IkwiLCLisaIiOiJMIiwi4rGgIjoiTCIsIuqdiCI6IkwiLCLqnYYiOiJMIiwi6p6AIjoiTCIsIseHIjoiTEoiLCLHiCI6IkxqIiwi4pOCIjoiTSIsIu+8rSI6Ik0iLCLhuL4iOiJNIiwi4bmAIjoiTSIsIuG5giI6Ik0iLCLisa4iOiJNIiwixpwiOiJNIiwi4pODIjoiTiIsIu+8riI6Ik4iLCLHuCI6Ik4iLCLFgyI6Ik4iLCLDkSI6Ik4iLCLhuYQiOiJOIiwixYciOiJOIiwi4bmGIjoiTiIsIsWFIjoiTiIsIuG5iiI6Ik4iLCLhuYgiOiJOIiwiyKAiOiJOIiwixp0iOiJOIiwi6p6QIjoiTiIsIuqepCI6Ik4iLCLHiiI6Ik5KIiwix4siOiJOaiIsIuKThCI6Ik8iLCLvvK8iOiJPIiwiw5IiOiJPIiwiw5MiOiJPIiwiw5QiOiJPIiwi4buSIjoiTyIsIuG7kCI6Ik8iLCLhu5YiOiJPIiwi4buUIjoiTyIsIsOVIjoiTyIsIuG5jCI6Ik8iLCLIrCI6Ik8iLCLhuY4iOiJPIiwixYwiOiJPIiwi4bmQIjoiTyIsIuG5kiI6Ik8iLCLFjiI6Ik8iLCLIriI6Ik8iLCLIsCI6Ik8iLCLDliI6Ik8iLCLIqiI6Ik8iLCLhu44iOiJPIiwixZAiOiJPIiwix5EiOiJPIiwiyIwiOiJPIiwiyI4iOiJPIiwixqAiOiJPIiwi4bucIjoiTyIsIuG7miI6Ik8iLCLhu6AiOiJPIiwi4bueIjoiTyIsIuG7oiI6Ik8iLCLhu4wiOiJPIiwi4buYIjoiTyIsIseqIjoiTyIsIsesIjoiTyIsIsOYIjoiTyIsIse+IjoiTyIsIsaGIjoiTyIsIsafIjoiTyIsIuqdiiI6Ik8iLCLqnYwiOiJPIiwixqIiOiJPSSIsIuqdjiI6Ik9PIiwiyKIiOiJPVSIsIuKThSI6IlAiLCLvvLAiOiJQIiwi4bmUIjoiUCIsIuG5liI6IlAiLCLGpCI6IlAiLCLisaMiOiJQIiwi6p2QIjoiUCIsIuqdkiI6IlAiLCLqnZQiOiJQIiwi4pOGIjoiUSIsIu+8sSI6IlEiLCLqnZYiOiJRIiwi6p2YIjoiUSIsIsmKIjoiUSIsIuKThyI6IlIiLCLvvLIiOiJSIiwixZQiOiJSIiwi4bmYIjoiUiIsIsWYIjoiUiIsIsiQIjoiUiIsIsiSIjoiUiIsIuG5miI6IlIiLCLhuZwiOiJSIiwixZYiOiJSIiwi4bmeIjoiUiIsIsmMIjoiUiIsIuKxpCI6IlIiLCLqnZoiOiJSIiwi6p6mIjoiUiIsIuqegiI6IlIiLCLik4giOiJTIiwi77yzIjoiUyIsIuG6niI6IlMiLCLFmiI6IlMiLCLhuaQiOiJTIiwixZwiOiJTIiwi4bmgIjoiUyIsIsWgIjoiUyIsIuG5piI6IlMiLCLhuaIiOiJTIiwi4bmoIjoiUyIsIsiYIjoiUyIsIsWeIjoiUyIsIuKxviI6IlMiLCLqnqgiOiJTIiwi6p6EIjoiUyIsIuKTiSI6IlQiLCLvvLQiOiJUIiwi4bmqIjoiVCIsIsWkIjoiVCIsIuG5rCI6IlQiLCLImiI6IlQiLCLFoiI6IlQiLCLhubAiOiJUIiwi4bmuIjoiVCIsIsWmIjoiVCIsIsasIjoiVCIsIsauIjoiVCIsIsi+IjoiVCIsIuqehiI6IlQiLCLqnKgiOiJUWiIsIuKTiiI6IlUiLCLvvLUiOiJVIiwiw5kiOiJVIiwiw5oiOiJVIiwiw5siOiJVIiwixagiOiJVIiwi4bm4IjoiVSIsIsWqIjoiVSIsIuG5uiI6IlUiLCLFrCI6IlUiLCLDnCI6IlUiLCLHmyI6IlUiLCLHlyI6IlUiLCLHlSI6IlUiLCLHmSI6IlUiLCLhu6YiOiJVIiwixa4iOiJVIiwixbAiOiJVIiwix5MiOiJVIiwiyJQiOiJVIiwiyJYiOiJVIiwixq8iOiJVIiwi4buqIjoiVSIsIuG7qCI6IlUiLCLhu64iOiJVIiwi4busIjoiVSIsIuG7sCI6IlUiLCLhu6QiOiJVIiwi4bmyIjoiVSIsIsWyIjoiVSIsIuG5tiI6IlUiLCLhubQiOiJVIiwiyYQiOiJVIiwi4pOLIjoiViIsIu+8tiI6IlYiLCLhubwiOiJWIiwi4bm+IjoiViIsIsayIjoiViIsIuqdniI6IlYiLCLJhSI6IlYiLCLqnaAiOiJWWSIsIuKTjCI6IlciLCLvvLciOiJXIiwi4bqAIjoiVyIsIuG6giI6IlciLCLFtCI6IlciLCLhuoYiOiJXIiwi4bqEIjoiVyIsIuG6iCI6IlciLCLisbIiOiJXIiwi4pONIjoiWCIsIu+8uCI6IlgiLCLhuooiOiJYIiwi4bqMIjoiWCIsIuKTjiI6IlkiLCLvvLkiOiJZIiwi4buyIjoiWSIsIsOdIjoiWSIsIsW2IjoiWSIsIuG7uCI6IlkiLCLIsiI6IlkiLCLhuo4iOiJZIiwixbgiOiJZIiwi4bu2IjoiWSIsIuG7tCI6IlkiLCLGsyI6IlkiLCLJjiI6IlkiLCLhu74iOiJZIiwi4pOPIjoiWiIsIu+8uiI6IloiLCLFuSI6IloiLCLhupAiOiJaIiwixbsiOiJaIiwixb0iOiJaIiwi4bqSIjoiWiIsIuG6lCI6IloiLCLGtSI6IloiLCLIpCI6IloiLCLisb8iOiJaIiwi4rGrIjoiWiIsIuqdoiI6IloiLCLik5AiOiJhIiwi772BIjoiYSIsIuG6miI6ImEiLCLDoCI6ImEiLCLDoSI6ImEiLCLDoiI6ImEiLCLhuqciOiJhIiwi4bqlIjoiYSIsIuG6qyI6ImEiLCLhuqkiOiJhIiwiw6MiOiJhIiwixIEiOiJhIiwixIMiOiJhIiwi4bqxIjoiYSIsIuG6ryI6ImEiLCLhurUiOiJhIiwi4bqzIjoiYSIsIsinIjoiYSIsIsehIjoiYSIsIsOkIjoiYSIsIsefIjoiYSIsIuG6oyI6ImEiLCLDpSI6ImEiLCLHuyI6ImEiLCLHjiI6ImEiLCLIgSI6ImEiLCLIgyI6ImEiLCLhuqEiOiJhIiwi4bqtIjoiYSIsIuG6tyI6ImEiLCLhuIEiOiJhIiwixIUiOiJhIiwi4rGlIjoiYSIsIsmQIjoiYSIsIuqcsyI6ImFhIiwiw6YiOiJhZSIsIse9IjoiYWUiLCLHoyI6ImFlIiwi6py1IjoiYW8iLCLqnLciOiJhdSIsIuqcuSI6ImF2Iiwi6py7IjoiYXYiLCLqnL0iOiJheSIsIuKTkSI6ImIiLCLvvYIiOiJiIiwi4biDIjoiYiIsIuG4hSI6ImIiLCLhuIciOiJiIiwixoAiOiJiIiwixoMiOiJiIiwiyZMiOiJiIiwi4pOSIjoiYyIsIu+9gyI6ImMiLCLEhyI6ImMiLCLEiSI6ImMiLCLEiyI6ImMiLCLEjSI6ImMiLCLDpyI6ImMiLCLhuIkiOiJjIiwixogiOiJjIiwiyLwiOiJjIiwi6py/IjoiYyIsIuKGhCI6ImMiLCLik5MiOiJkIiwi772EIjoiZCIsIuG4iyI6ImQiLCLEjyI6ImQiLCLhuI0iOiJkIiwi4biRIjoiZCIsIuG4kyI6ImQiLCLhuI8iOiJkIiwixJEiOiJkIiwixowiOiJkIiwiyZYiOiJkIiwiyZciOiJkIiwi6p26IjoiZCIsIsezIjoiZHoiLCLHhiI6ImR6Iiwi4pOUIjoiZSIsIu+9hSI6ImUiLCLDqCI6ImUiLCLDqSI6ImUiLCLDqiI6ImUiLCLhu4EiOiJlIiwi4bq/IjoiZSIsIuG7hSI6ImUiLCLhu4MiOiJlIiwi4bq9IjoiZSIsIsSTIjoiZSIsIuG4lSI6ImUiLCLhuJciOiJlIiwixJUiOiJlIiwixJciOiJlIiwiw6siOiJlIiwi4bq7IjoiZSIsIsSbIjoiZSIsIsiFIjoiZSIsIsiHIjoiZSIsIuG6uSI6ImUiLCLhu4ciOiJlIiwiyKkiOiJlIiwi4bidIjoiZSIsIsSZIjoiZSIsIuG4mSI6ImUiLCLhuJsiOiJlIiwiyYciOiJlIiwiyZsiOiJlIiwix50iOiJlIiwi4pOVIjoiZiIsIu+9hiI6ImYiLCLhuJ8iOiJmIiwixpIiOiJmIiwi6p28IjoiZiIsIuKTliI6ImciLCLvvYciOiJnIiwix7UiOiJnIiwixJ0iOiJnIiwi4bihIjoiZyIsIsSfIjoiZyIsIsShIjoiZyIsIsenIjoiZyIsIsSjIjoiZyIsIselIjoiZyIsIsmgIjoiZyIsIuqeoSI6ImciLCLhtbkiOiJnIiwi6p2/IjoiZyIsIuKTlyI6ImgiLCLvvYgiOiJoIiwixKUiOiJoIiwi4bijIjoiaCIsIuG4pyI6ImgiLCLInyI6ImgiLCLhuKUiOiJoIiwi4bipIjoiaCIsIuG4qyI6ImgiLCLhupYiOiJoIiwixKciOiJoIiwi4rGoIjoiaCIsIuKxtiI6ImgiLCLJpSI6ImgiLCLGlSI6Imh2Iiwi4pOYIjoiaSIsIu+9iSI6ImkiLCLDrCI6ImkiLCLDrSI6ImkiLCLDriI6ImkiLCLEqSI6ImkiLCLEqyI6ImkiLCLErSI6ImkiLCLDryI6ImkiLCLhuK8iOiJpIiwi4buJIjoiaSIsIseQIjoiaSIsIsiJIjoiaSIsIsiLIjoiaSIsIuG7iyI6ImkiLCLEryI6ImkiLCLhuK0iOiJpIiwiyagiOiJpIiwixLEiOiJpIiwi4pOZIjoiaiIsIu+9iiI6ImoiLCLEtSI6ImoiLCLHsCI6ImoiLCLJiSI6ImoiLCLik5oiOiJrIiwi772LIjoiayIsIuG4sSI6ImsiLCLHqSI6ImsiLCLhuLMiOiJrIiwixLciOiJrIiwi4bi1IjoiayIsIsaZIjoiayIsIuKxqiI6ImsiLCLqnYEiOiJrIiwi6p2DIjoiayIsIuqdhSI6ImsiLCLqnqMiOiJrIiwi4pObIjoibCIsIu+9jCI6ImwiLCLFgCI6ImwiLCLEuiI6ImwiLCLEviI6ImwiLCLhuLciOiJsIiwi4bi5IjoibCIsIsS8IjoibCIsIuG4vSI6ImwiLCLhuLsiOiJsIiwixb8iOiJsIiwixYIiOiJsIiwixpoiOiJsIiwiyasiOiJsIiwi4rGhIjoibCIsIuqdiSI6ImwiLCLqnoEiOiJsIiwi6p2HIjoibCIsIseJIjoibGoiLCLik5wiOiJtIiwi772NIjoibSIsIuG4vyI6Im0iLCLhuYEiOiJtIiwi4bmDIjoibSIsIsmxIjoibSIsIsmvIjoibSIsIuKTnSI6Im4iLCLvvY4iOiJuIiwix7kiOiJuIiwixYQiOiJuIiwiw7EiOiJuIiwi4bmFIjoibiIsIsWIIjoibiIsIuG5hyI6Im4iLCLFhiI6Im4iLCLhuYsiOiJuIiwi4bmJIjoibiIsIsaeIjoibiIsIsmyIjoibiIsIsWJIjoibiIsIuqekSI6Im4iLCLqnqUiOiJuIiwix4wiOiJuaiIsIuKTniI6Im8iLCLvvY8iOiJvIiwiw7IiOiJvIiwiw7MiOiJvIiwiw7QiOiJvIiwi4buTIjoibyIsIuG7kSI6Im8iLCLhu5ciOiJvIiwi4buVIjoibyIsIsO1IjoibyIsIuG5jSI6Im8iLCLIrSI6Im8iLCLhuY8iOiJvIiwixY0iOiJvIiwi4bmRIjoibyIsIuG5kyI6Im8iLCLFjyI6Im8iLCLIryI6Im8iLCLIsSI6Im8iLCLDtiI6Im8iLCLIqyI6Im8iLCLhu48iOiJvIiwixZEiOiJvIiwix5IiOiJvIiwiyI0iOiJvIiwiyI8iOiJvIiwixqEiOiJvIiwi4budIjoibyIsIuG7myI6Im8iLCLhu6EiOiJvIiwi4bufIjoibyIsIuG7oyI6Im8iLCLhu40iOiJvIiwi4buZIjoibyIsIserIjoibyIsIsetIjoibyIsIsO4IjoibyIsIse/IjoibyIsIsmUIjoibyIsIuqdiyI6Im8iLCLqnY0iOiJvIiwiybUiOiJvIiwixqMiOiJvaSIsIsijIjoib3UiLCLqnY8iOiJvbyIsIuKTnyI6InAiLCLvvZAiOiJwIiwi4bmVIjoicCIsIuG5lyI6InAiLCLGpSI6InAiLCLhtb0iOiJwIiwi6p2RIjoicCIsIuqdkyI6InAiLCLqnZUiOiJwIiwi4pOgIjoicSIsIu+9kSI6InEiLCLJiyI6InEiLCLqnZciOiJxIiwi6p2ZIjoicSIsIuKToSI6InIiLCLvvZIiOiJyIiwixZUiOiJyIiwi4bmZIjoiciIsIsWZIjoiciIsIsiRIjoiciIsIsiTIjoiciIsIuG5myI6InIiLCLhuZ0iOiJyIiwixZciOiJyIiwi4bmfIjoiciIsIsmNIjoiciIsIsm9IjoiciIsIuqdmyI6InIiLCLqnqciOiJyIiwi6p6DIjoiciIsIuKToiI6InMiLCLvvZMiOiJzIiwiw58iOiJzIiwixZsiOiJzIiwi4bmlIjoicyIsIsWdIjoicyIsIuG5oSI6InMiLCLFoSI6InMiLCLhuaciOiJzIiwi4bmjIjoicyIsIuG5qSI6InMiLCLImSI6InMiLCLFnyI6InMiLCLIvyI6InMiLCLqnqkiOiJzIiwi6p6FIjoicyIsIuG6myI6InMiLCLik6MiOiJ0Iiwi772UIjoidCIsIuG5qyI6InQiLCLhupciOiJ0IiwixaUiOiJ0Iiwi4bmtIjoidCIsIsibIjoidCIsIsWjIjoidCIsIuG5sSI6InQiLCLhua8iOiJ0IiwixaciOiJ0Iiwixq0iOiJ0IiwiyogiOiJ0Iiwi4rGmIjoidCIsIuqehyI6InQiLCLqnKkiOiJ0eiIsIuKTpCI6InUiLCLvvZUiOiJ1Iiwiw7kiOiJ1Iiwiw7oiOiJ1Iiwiw7siOiJ1IiwixakiOiJ1Iiwi4bm5IjoidSIsIsWrIjoidSIsIuG5uyI6InUiLCLFrSI6InUiLCLDvCI6InUiLCLHnCI6InUiLCLHmCI6InUiLCLHliI6InUiLCLHmiI6InUiLCLhu6ciOiJ1Iiwixa8iOiJ1IiwixbEiOiJ1Iiwix5QiOiJ1IiwiyJUiOiJ1IiwiyJciOiJ1IiwixrAiOiJ1Iiwi4burIjoidSIsIuG7qSI6InUiLCLhu68iOiJ1Iiwi4butIjoidSIsIuG7sSI6InUiLCLhu6UiOiJ1Iiwi4bmzIjoidSIsIsWzIjoidSIsIuG5tyI6InUiLCLhubUiOiJ1IiwiyokiOiJ1Iiwi4pOlIjoidiIsIu+9liI6InYiLCLhub0iOiJ2Iiwi4bm/IjoidiIsIsqLIjoidiIsIuqdnyI6InYiLCLKjCI6InYiLCLqnaEiOiJ2eSIsIuKTpiI6InciLCLvvZciOiJ3Iiwi4bqBIjoidyIsIuG6gyI6InciLCLFtSI6InciLCLhuociOiJ3Iiwi4bqFIjoidyIsIuG6mCI6InciLCLhuokiOiJ3Iiwi4rGzIjoidyIsIuKTpyI6IngiLCLvvZgiOiJ4Iiwi4bqLIjoieCIsIuG6jSI6IngiLCLik6giOiJ5Iiwi772ZIjoieSIsIuG7syI6InkiLCLDvSI6InkiLCLFtyI6InkiLCLhu7kiOiJ5IiwiyLMiOiJ5Iiwi4bqPIjoieSIsIsO/IjoieSIsIuG7tyI6InkiLCLhupkiOiJ5Iiwi4bu1IjoieSIsIsa0IjoieSIsIsmPIjoieSIsIuG7vyI6InkiLCLik6kiOiJ6Iiwi772aIjoieiIsIsW6IjoieiIsIuG6kSI6InoiLCLFvCI6InoiLCLFviI6InoiLCLhupMiOiJ6Iiwi4bqVIjoieiIsIsa2IjoieiIsIsilIjoieiIsIsmAIjoieiIsIuKxrCI6InoiLCLqnaMiOiJ6IiwizoYiOiLOkSIsIs6IIjoizpUiLCLOiSI6Is6XIiwizooiOiLOmSIsIs6qIjoizpkiLCLOjCI6Is6fIiwizo4iOiLOpSIsIs6rIjoizqUiLCLOjyI6Is6pIiwizqwiOiLOsSIsIs6tIjoizrUiLCLOriI6Is63Iiwizq8iOiLOuSIsIs+KIjoizrkiLCLOkCI6Is65Iiwiz4wiOiLOvyIsIs+NIjoiz4UiLCLPiyI6Is+FIiwizrAiOiLPhSIsIs+JIjoiz4kiLCLPgiI6Is+DIn07aj10KGRvY3VtZW50KSxJPWZ1bmN0aW9uKCl7dmFyIHQ9MTtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdCsrfX0oKSxPPUMoT2JqZWN0LHtiaW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKCl7dC5hcHBseShlLGFyZ3VtZW50cyl9fSxpbml0OmZ1bmN0aW9uKGUpe3ZhciBpLHIsbz0iLnNlbGVjdDItcmVzdWx0cyI7dGhpcy5vcHRzPWU9dGhpcy5wcmVwYXJlT3B0cyhlKSx0aGlzLmlkPWUuaWQsZS5lbGVtZW50LmRhdGEoInNlbGVjdDIiKSE9PW4mJm51bGwhPT1lLmVsZW1lbnQuZGF0YSgic2VsZWN0MiIpJiZlLmVsZW1lbnQuZGF0YSgic2VsZWN0MiIpLmRlc3Ryb3koKSx0aGlzLmNvbnRhaW5lcj10aGlzLmNyZWF0ZUNvbnRhaW5lcigpLHRoaXMubGl2ZVJlZ2lvbj10KCIuc2VsZWN0Mi1oaWRkZW4tYWNjZXNzaWJsZSIpLDA9PXRoaXMubGl2ZVJlZ2lvbi5sZW5ndGgmJih0aGlzLmxpdmVSZWdpb249dCgiPHNwYW4+Iix7cm9sZToic3RhdHVzIiwiYXJpYS1saXZlIjoicG9saXRlIn0pLmFkZENsYXNzKCJzZWxlY3QyLWhpZGRlbi1hY2Nlc3NpYmxlIikuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSkpLHRoaXMuY29udGFpbmVySWQ9InMyaWRfIisoZS5lbGVtZW50LmF0dHIoImlkIil8fCJhdXRvZ2VuIitJKCkpLHRoaXMuY29udGFpbmVyRXZlbnROYW1lPXRoaXMuY29udGFpbmVySWQucmVwbGFjZSgvKFsuXSkvZywiXyIpLnJlcGxhY2UoLyhbOyYsXC1cLlwrXCpcfic6IlwhXF4jJCVAXFtcXVwoXCk9Plx8XSkvZywiXFwkMSIpLHRoaXMuY29udGFpbmVyLmF0dHIoImlkIix0aGlzLmNvbnRhaW5lcklkKSx0aGlzLmNvbnRhaW5lci5hdHRyKCJ0aXRsZSIsZS5lbGVtZW50LmF0dHIoInRpdGxlIikpLHRoaXMuYm9keT10KCJib2R5IiksYih0aGlzLmNvbnRhaW5lcix0aGlzLm9wdHMuZWxlbWVudCx0aGlzLm9wdHMuYWRhcHRDb250YWluZXJDc3NDbGFzcyksdGhpcy5jb250YWluZXIuYXR0cigic3R5bGUiLGUuZWxlbWVudC5hdHRyKCJzdHlsZSIpKSx0aGlzLmNvbnRhaW5lci5jc3MoeChlLmNvbnRhaW5lckNzcyx0aGlzLm9wdHMuZWxlbWVudCkpLHRoaXMuY29udGFpbmVyLmFkZENsYXNzKHgoZS5jb250YWluZXJDc3NDbGFzcyx0aGlzLm9wdHMuZWxlbWVudCkpLHRoaXMuZWxlbWVudFRhYkluZGV4PXRoaXMub3B0cy5lbGVtZW50LmF0dHIoInRhYmluZGV4IiksdGhpcy5vcHRzLmVsZW1lbnQuZGF0YSgic2VsZWN0MiIsdGhpcykuYXR0cigidGFiaW5kZXgiLCItMSIpLmJlZm9yZSh0aGlzLmNvbnRhaW5lcikub24oImNsaWNrLnNlbGVjdDIiLGcpLHRoaXMuY29udGFpbmVyLmRhdGEoInNlbGVjdDIiLHRoaXMpLHRoaXMuZHJvcGRvd249dGhpcy5jb250YWluZXIuZmluZCgiLnNlbGVjdDItZHJvcCIpLGIodGhpcy5kcm9wZG93bix0aGlzLm9wdHMuZWxlbWVudCx0aGlzLm9wdHMuYWRhcHREcm9wZG93bkNzc0NsYXNzKSx0aGlzLmRyb3Bkb3duLmFkZENsYXNzKHgoZS5kcm9wZG93bkNzc0NsYXNzLHRoaXMub3B0cy5lbGVtZW50KSksdGhpcy5kcm9wZG93bi5kYXRhKCJzZWxlY3QyIix0aGlzKSx0aGlzLmRyb3Bkb3duLm9uKCJjbGljayIsZyksdGhpcy5yZXN1bHRzPWk9dGhpcy5jb250YWluZXIuZmluZChvKSx0aGlzLnNlYXJjaD1yPXRoaXMuY29udGFpbmVyLmZpbmQoImlucHV0LnNlbGVjdDItaW5wdXQiKSx0aGlzLnF1ZXJ5Q291bnQ9MCx0aGlzLnJlc3VsdHNQYWdlPTAsdGhpcy5jb250ZXh0PW51bGwsdGhpcy5pbml0Q29udGFpbmVyKCksdGhpcy5jb250YWluZXIub24oImNsaWNrIixnKSxoKHRoaXMucmVzdWx0cyksdGhpcy5kcm9wZG93bi5vbigibW91c2Vtb3ZlLWZpbHRlcmVkIixvLHRoaXMuYmluZCh0aGlzLmhpZ2hsaWdodFVuZGVyRXZlbnQpKSx0aGlzLmRyb3Bkb3duLm9uKCJ0b3VjaHN0YXJ0IHRvdWNobW92ZSB0b3VjaGVuZCIsbyx0aGlzLmJpbmQoZnVuY3Rpb24odCl7dGhpcy5fdG91Y2hFdmVudD0hMCx0aGlzLmhpZ2hsaWdodFVuZGVyRXZlbnQodCl9KSksdGhpcy5kcm9wZG93bi5vbigidG91Y2htb3ZlIixvLHRoaXMuYmluZCh0aGlzLnRvdWNoTW92ZWQpKSx0aGlzLmRyb3Bkb3duLm9uKCJ0b3VjaHN0YXJ0IHRvdWNoZW5kIixvLHRoaXMuYmluZCh0aGlzLmNsZWFyVG91Y2hNb3ZlZCkpLHRoaXMuZHJvcGRvd24ub24oImNsaWNrIix0aGlzLmJpbmQoZnVuY3Rpb24odCl7dGhpcy5fdG91Y2hFdmVudCYmKHRoaXMuX3RvdWNoRXZlbnQ9ITEsdGhpcy5zZWxlY3RIaWdobGlnaHRlZCgpKX0pKSxmKDgwLHRoaXMucmVzdWx0cyksdGhpcy5kcm9wZG93bi5vbigic2Nyb2xsLWRlYm91bmNlZCIsbyx0aGlzLmJpbmQodGhpcy5sb2FkTW9yZUlmTmVlZGVkKSksdCh0aGlzLmNvbnRhaW5lcikub24oImNoYW5nZSIsIi5zZWxlY3QyLWlucHV0IixmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpfSksdCh0aGlzLmRyb3Bkb3duKS5vbigiY2hhbmdlIiwiLnNlbGVjdDItaW5wdXQiLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCl9KSx0LmZuLm1vdXNld2hlZWwmJmkubW91c2V3aGVlbChmdW5jdGlvbih0LGUsbixyKXt2YXIgbz1pLnNjcm9sbFRvcCgpO3I+MCYmby1yPD0wPyhpLnNjcm9sbFRvcCgwKSxnKHQpKTpyPDAmJmkuZ2V0KDApLnNjcm9sbEhlaWdodC1pLnNjcm9sbFRvcCgpK3I8PWkuaGVpZ2h0KCkmJihpLnNjcm9sbFRvcChpLmdldCgwKS5zY3JvbGxIZWlnaHQtaS5oZWlnaHQoKSksZyh0KSl9KSxkKHIpLHIub24oImtleXVwLWNoYW5nZSBpbnB1dCBwYXN0ZSIsdGhpcy5iaW5kKHRoaXMudXBkYXRlUmVzdWx0cykpLHIub24oImZvY3VzIixmdW5jdGlvbigpe3IuYWRkQ2xhc3MoInNlbGVjdDItZm9jdXNlZCIpfSksci5vbigiYmx1ciIsZnVuY3Rpb24oKXtyLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWZvY3VzZWQiKX0pLHRoaXMuZHJvcGRvd24ub24oIm1vdXNldXAiLG8sdGhpcy5iaW5kKGZ1bmN0aW9uKGUpe3QoZS50YXJnZXQpLmNsb3Nlc3QoIi5zZWxlY3QyLXJlc3VsdC1zZWxlY3RhYmxlIikubGVuZ3RoPjAmJih0aGlzLmhpZ2hsaWdodFVuZGVyRXZlbnQoZSksdGhpcy5zZWxlY3RIaWdobGlnaHRlZChlKSl9KSksdGhpcy5kcm9wZG93bi5vbigiY2xpY2sgbW91c2V1cCBtb3VzZWRvd24gdG91Y2hzdGFydCB0b3VjaGVuZCBmb2N1c2luIixmdW5jdGlvbih0KXt0LnN0b3BQcm9wYWdhdGlvbigpfSksdGhpcy5uZXh0U2VhcmNoVGVybT1uLHQuaXNGdW5jdGlvbih0aGlzLm9wdHMuaW5pdFNlbGVjdGlvbikmJih0aGlzLmluaXRTZWxlY3Rpb24oKSx0aGlzLm1vbml0b3JTb3VyY2UoKSksbnVsbCE9PWUubWF4aW11bUlucHV0TGVuZ3RoJiZ0aGlzLnNlYXJjaC5hdHRyKCJtYXhsZW5ndGgiLGUubWF4aW11bUlucHV0TGVuZ3RoKTt2YXIgcz1lLmVsZW1lbnQucHJvcCgiZGlzYWJsZWQiKTtzPT09biYmKHM9ITEpLHRoaXMuZW5hYmxlKCFzKTt2YXIgbD1lLmVsZW1lbnQucHJvcCgicmVhZG9ubHkiKTtsPT09biYmKGw9ITEpLHRoaXMucmVhZG9ubHkobCksSD1IfHxhKCksdGhpcy5hdXRvZm9jdXM9ZS5lbGVtZW50LnByb3AoImF1dG9mb2N1cyIpLGUuZWxlbWVudC5wcm9wKCJhdXRvZm9jdXMiLCExKSx0aGlzLmF1dG9mb2N1cyYmdGhpcy5mb2N1cygpLHRoaXMuc2VhcmNoLmF0dHIoInBsYWNlaG9sZGVyIixlLnNlYXJjaElucHV0UGxhY2Vob2xkZXIpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRzLmVsZW1lbnQsZT10LmRhdGEoInNlbGVjdDIiKSxpPXRoaXM7dGhpcy5jbG9zZSgpLHQubGVuZ3RoJiZ0WzBdLmRldGFjaEV2ZW50JiZpLl9zeW5jJiZ0LmVhY2goZnVuY3Rpb24oKXt0aGlzLmRldGFjaEV2ZW50KCJvbnByb3BlcnR5Y2hhbmdlIixpLl9zeW5jKX0pLHRoaXMucHJvcGVydHlPYnNlcnZlciYmKHRoaXMucHJvcGVydHlPYnNlcnZlci5kaXNjb25uZWN0KCksdGhpcy5wcm9wZXJ0eU9ic2VydmVyPW51bGwpLHRoaXMuX3N5bmM9bnVsbCxlIT09biYmKGUuY29udGFpbmVyLnJlbW92ZSgpLGUubGl2ZVJlZ2lvbi5yZW1vdmUoKSxlLmRyb3Bkb3duLnJlbW92ZSgpLHQucmVtb3ZlQ2xhc3MoInNlbGVjdDItb2Zmc2NyZWVuIikucmVtb3ZlRGF0YSgic2VsZWN0MiIpLm9mZigiLnNlbGVjdDIiKS5wcm9wKCJhdXRvZm9jdXMiLHRoaXMuYXV0b2ZvY3VzfHwhMSksdGhpcy5lbGVtZW50VGFiSW5kZXg/dC5hdHRyKHt0YWJpbmRleDp0aGlzLmVsZW1lbnRUYWJJbmRleH0pOnQucmVtb3ZlQXR0cigidGFiaW5kZXgiKSx0LnNob3coKSksRC5jYWxsKHRoaXMsImNvbnRhaW5lciIsImxpdmVSZWdpb24iLCJkcm9wZG93biIsInJlc3VsdHMiLCJzZWFyY2giKX0sb3B0aW9uVG9EYXRhOmZ1bmN0aW9uKHQpe3JldHVybiB0LmlzKCJvcHRpb24iKT97aWQ6dC5wcm9wKCJ2YWx1ZSIpLHRleHQ6dC50ZXh0KCksZWxlbWVudDp0LmdldCgpLGNzczp0LmF0dHIoImNsYXNzIiksZGlzYWJsZWQ6dC5wcm9wKCJkaXNhYmxlZCIpLGxvY2tlZDpsKHQuYXR0cigibG9ja2VkIiksImxvY2tlZCIpfHxsKHQuZGF0YSgibG9ja2VkIiksITApfTp0LmlzKCJvcHRncm91cCIpP3t0ZXh0OnQuYXR0cigibGFiZWwiKSxjaGlsZHJlbjpbXSxlbGVtZW50OnQuZ2V0KCksY3NzOnQuYXR0cigiY2xhc3MiKX06dm9pZCAwfSxwcmVwYXJlT3B0czpmdW5jdGlvbihlKXt2YXIgaSxyLG8scyxhPXRoaXM7aWYoaT1lLmVsZW1lbnQsInNlbGVjdCI9PT1pLmdldCgwKS50YWdOYW1lLnRvTG93ZXJDYXNlKCkmJih0aGlzLnNlbGVjdD1yPWUuZWxlbWVudCksciYmdC5lYWNoKFsiaWQiLCJtdWx0aXBsZSIsImFqYXgiLCJxdWVyeSIsImNyZWF0ZVNlYXJjaENob2ljZSIsImluaXRTZWxlY3Rpb24iLCJkYXRhIiwidGFncyJdLGZ1bmN0aW9uKCl7aWYodGhpcyBpbiBlKXRocm93IG5ldyBFcnJvcigiT3B0aW9uICciK3RoaXMrIicgaXMgbm90IGFsbG93ZWQgZm9yIFNlbGVjdDIgd2hlbiBhdHRhY2hlZCB0byBhIDxzZWxlY3Q+IGVsZW1lbnQuIil9KSxlPXQuZXh0ZW5kKHt9LHtwb3B1bGF0ZVJlc3VsdHM6ZnVuY3Rpb24oaSxyLG8pe3ZhciBzLGw9dGhpcy5vcHRzLmlkLGM9dGhpcy5saXZlUmVnaW9uOyhzPWZ1bmN0aW9uKGkscix1KXt2YXIgZCxoLHAsZixtLF8sZyx2LHksYjtpPWUuc29ydFJlc3VsdHMoaSxyLG8pO3ZhciB3PVtdO2ZvcihkPTAsaD1pLmxlbmd0aDtkPGg7ZCs9MSlwPWlbZF0sbT1wLmRpc2FibGVkPT09ITAsZj0hbSYmbChwKSE9PW4sXz1wLmNoaWxkcmVuJiZwLmNoaWxkcmVuLmxlbmd0aD4wLGc9dCgiPGxpPjwvbGk+IiksZy5hZGRDbGFzcygic2VsZWN0Mi1yZXN1bHRzLWRlcHQtIit1KSxnLmFkZENsYXNzKCJzZWxlY3QyLXJlc3VsdCIpLGcuYWRkQ2xhc3MoZj8ic2VsZWN0Mi1yZXN1bHQtc2VsZWN0YWJsZSI6InNlbGVjdDItcmVzdWx0LXVuc2VsZWN0YWJsZSIpLG0mJmcuYWRkQ2xhc3MoInNlbGVjdDItZGlzYWJsZWQiKSxfJiZnLmFkZENsYXNzKCJzZWxlY3QyLXJlc3VsdC13aXRoLWNoaWxkcmVuIiksZy5hZGRDbGFzcyhhLm9wdHMuZm9ybWF0UmVzdWx0Q3NzQ2xhc3MocCkpLGcuYXR0cigicm9sZSIsInByZXNlbnRhdGlvbiIpLHY9dChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSksdi5hZGRDbGFzcygic2VsZWN0Mi1yZXN1bHQtbGFiZWwiKSx2LmF0dHIoImlkIiwic2VsZWN0Mi1yZXN1bHQtbGFiZWwtIitJKCkpLHYuYXR0cigicm9sZSIsIm9wdGlvbiIpLGI9ZS5mb3JtYXRSZXN1bHQocCx2LG8sYS5vcHRzLmVzY2FwZU1hcmt1cCksYiE9PW4mJih2Lmh0bWwoYiksZy5hcHBlbmQodikpLF8mJih5PXQoIjx1bD48L3VsPiIpLHkuYWRkQ2xhc3MoInNlbGVjdDItcmVzdWx0LXN1YiIpLHMocC5jaGlsZHJlbix5LHUrMSksZy5hcHBlbmQoeSkpLGcuZGF0YSgic2VsZWN0Mi1kYXRhIixwKSx3LnB1c2goZ1swXSk7ci5hcHBlbmQodyksYy50ZXh0KGUuZm9ybWF0TWF0Y2hlcyhpLmxlbmd0aCkpfSkocixpLDApfX0sdC5mbi5zZWxlY3QyLmRlZmF1bHRzLGUpLCJmdW5jdGlvbiIhPXR5cGVvZiBlLmlkJiYobz1lLmlkLGUuaWQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRbb119KSx0LmlzQXJyYXkoZS5lbGVtZW50LmRhdGEoInNlbGVjdDJUYWdzIikpKXtpZigidGFncyJpbiBlKXRocm93InRhZ3Mgc3BlY2lmaWVkIGFzIGJvdGggYW4gYXR0cmlidXRlICdkYXRhLXNlbGVjdDItdGFncycgYW5kIGluIG9wdGlvbnMgb2YgU2VsZWN0MiAiK2UuZWxlbWVudC5hdHRyKCJpZCIpO2UudGFncz1lLmVsZW1lbnQuZGF0YSgic2VsZWN0MlRhZ3MiKX1pZihyPyhlLnF1ZXJ5PXRoaXMuYmluZChmdW5jdGlvbih0KXt2YXIgZSxyLG8scz17cmVzdWx0czpbXSxtb3JlOiExfSxsPXQudGVybTtvPWZ1bmN0aW9uKGUsbil7dmFyIGk7ZS5pcygib3B0aW9uIik/dC5tYXRjaGVyKGwsZS50ZXh0KCksZSkmJm4ucHVzaChhLm9wdGlvblRvRGF0YShlKSk6ZS5pcygib3B0Z3JvdXAiKSYmKGk9YS5vcHRpb25Ub0RhdGEoZSksZS5jaGlsZHJlbigpLmVhY2gyKGZ1bmN0aW9uKHQsZSl7byhlLGkuY2hpbGRyZW4pfSksaS5jaGlsZHJlbi5sZW5ndGg+MCYmbi5wdXNoKGkpKX0sZT1pLmNoaWxkcmVuKCksdGhpcy5nZXRQbGFjZWhvbGRlcigpIT09biYmZS5sZW5ndGg+MCYmKHI9dGhpcy5nZXRQbGFjZWhvbGRlck9wdGlvbigpLHImJihlPWUubm90KHIpKSksZS5lYWNoMihmdW5jdGlvbih0LGUpe28oZSxzLnJlc3VsdHMpfSksdC5jYWxsYmFjayhzKX0pLGUuaWQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQuaWR9KToicXVlcnkiaW4gZXx8KCJhamF4ImluIGU/KHM9ZS5lbGVtZW50LmRhdGEoImFqYXgtdXJsIikscyYmcy5sZW5ndGg+MCYmKGUuYWpheC51cmw9cyksZS5xdWVyeT1TLmNhbGwoZS5lbGVtZW50LGUuYWpheCkpOiJkYXRhImluIGU/ZS5xdWVyeT1UKGUuZGF0YSk6InRhZ3MiaW4gZSYmKGUucXVlcnk9ayhlLnRhZ3MpLGUuY3JlYXRlU2VhcmNoQ2hvaWNlPT09biYmKGUuY3JlYXRlU2VhcmNoQ2hvaWNlPWZ1bmN0aW9uKGUpe3JldHVybntpZDp0LnRyaW0oZSksdGV4dDp0LnRyaW0oZSl9fSksZS5pbml0U2VsZWN0aW9uPT09biYmKGUuaW5pdFNlbGVjdGlvbj1mdW5jdGlvbihuLGkpe3ZhciByPVtdO3QoYyhuLnZhbCgpLGUuc2VwYXJhdG9yKSkuZWFjaChmdW5jdGlvbigpe3ZhciBuPXtpZDp0aGlzLHRleHQ6dGhpc30saT1lLnRhZ3M7dC5pc0Z1bmN0aW9uKGkpJiYoaT1pKCkpLHQoaSkuZWFjaChmdW5jdGlvbigpe2lmKGwodGhpcy5pZCxuLmlkKSlyZXR1cm4gbj10aGlzLCExfSksci5wdXNoKG4pfSksaShyKX0pKSksImZ1bmN0aW9uIiE9dHlwZW9mIGUucXVlcnkpdGhyb3cicXVlcnkgZnVuY3Rpb24gbm90IGRlZmluZWQgZm9yIFNlbGVjdDIgIitlLmVsZW1lbnQuYXR0cigiaWQiKTtpZigidG9wIj09PWUuY3JlYXRlU2VhcmNoQ2hvaWNlUG9zaXRpb24pZS5jcmVhdGVTZWFyY2hDaG9pY2VQb3NpdGlvbj1mdW5jdGlvbih0LGUpe3QudW5zaGlmdChlKX07ZWxzZSBpZigiYm90dG9tIj09PWUuY3JlYXRlU2VhcmNoQ2hvaWNlUG9zaXRpb24pZS5jcmVhdGVTZWFyY2hDaG9pY2VQb3NpdGlvbj1mdW5jdGlvbih0LGUpe3QucHVzaChlKX07ZWxzZSBpZigiZnVuY3Rpb24iIT10eXBlb2YgZS5jcmVhdGVTZWFyY2hDaG9pY2VQb3NpdGlvbil0aHJvdyJpbnZhbGlkIGNyZWF0ZVNlYXJjaENob2ljZVBvc2l0aW9uIG9wdGlvbiBtdXN0IGJlICd0b3AnLCAnYm90dG9tJyBvciBhIGN1c3RvbSBmdW5jdGlvbiI7cmV0dXJuIGV9LG1vbml0b3JTb3VyY2U6ZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXMub3B0cy5lbGVtZW50LHI9dGhpcztpLm9uKCJjaGFuZ2Uuc2VsZWN0MiIsdGhpcy5iaW5kKGZ1bmN0aW9uKHQpe3RoaXMub3B0cy5lbGVtZW50LmRhdGEoInNlbGVjdDItY2hhbmdlLXRyaWdnZXJlZCIpIT09ITAmJnRoaXMuaW5pdFNlbGVjdGlvbigpfSkpLHRoaXMuX3N5bmM9dGhpcy5iaW5kKGZ1bmN0aW9uKCl7dmFyIHQ9aS5wcm9wKCJkaXNhYmxlZCIpO3Q9PT1uJiYodD0hMSksdGhpcy5lbmFibGUoIXQpO3ZhciBlPWkucHJvcCgicmVhZG9ubHkiKTtlPT09biYmKGU9ITEpLHRoaXMucmVhZG9ubHkoZSksYih0aGlzLmNvbnRhaW5lcix0aGlzLm9wdHMuZWxlbWVudCx0aGlzLm9wdHMuYWRhcHRDb250YWluZXJDc3NDbGFzcyksdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoeCh0aGlzLm9wdHMuY29udGFpbmVyQ3NzQ2xhc3MsdGhpcy5vcHRzLmVsZW1lbnQpKSxiKHRoaXMuZHJvcGRvd24sdGhpcy5vcHRzLmVsZW1lbnQsdGhpcy5vcHRzLmFkYXB0RHJvcGRvd25Dc3NDbGFzcyksdGhpcy5kcm9wZG93bi5hZGRDbGFzcyh4KHRoaXMub3B0cy5kcm9wZG93bkNzc0NsYXNzLHRoaXMub3B0cy5lbGVtZW50KSl9KSxpLmxlbmd0aCYmaVswXS5hdHRhY2hFdmVudCYmaS5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5hdHRhY2hFdmVudCgib25wcm9wZXJ0eWNoYW5nZSIsci5fc3luYyl9KSxlPXdpbmRvdy5NdXRhdGlvbk9ic2VydmVyfHx3aW5kb3cuV2ViS2l0TXV0YXRpb25PYnNlcnZlcnx8d2luZG93Lk1vek11dGF0aW9uT2JzZXJ2ZXIsZSE9PW4mJih0aGlzLnByb3BlcnR5T2JzZXJ2ZXImJihkZWxldGUgdGhpcy5wcm9wZXJ0eU9ic2VydmVyLHRoaXMucHJvcGVydHlPYnNlcnZlcj1udWxsKSx0aGlzLnByb3BlcnR5T2JzZXJ2ZXI9bmV3IGUoZnVuY3Rpb24oZSl7dC5lYWNoKGUsci5fc3luYyl9KSx0aGlzLnByb3BlcnR5T2JzZXJ2ZXIub2JzZXJ2ZShpLmdldCgwKSx7YXR0cmlidXRlczohMCxzdWJ0cmVlOiExfSkpfSx0cmlnZ2VyU2VsZWN0OmZ1bmN0aW9uKGUpe3ZhciBuPXQuRXZlbnQoInNlbGVjdDItc2VsZWN0aW5nIix7dmFsOnRoaXMuaWQoZSksb2JqZWN0OmUsY2hvaWNlOmV9KTtyZXR1cm4gdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcihuKSwhbi5pc0RlZmF1bHRQcmV2ZW50ZWQoKX0sdHJpZ2dlckNoYW5nZTpmdW5jdGlvbihlKXtlPWV8fHt9LGU9dC5leHRlbmQoe30sZSx7dHlwZToiY2hhbmdlIix2YWw6dGhpcy52YWwoKX0pLHRoaXMub3B0cy5lbGVtZW50LmRhdGEoInNlbGVjdDItY2hhbmdlLXRyaWdnZXJlZCIsITApLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoZSksdGhpcy5vcHRzLmVsZW1lbnQuZGF0YSgic2VsZWN0Mi1jaGFuZ2UtdHJpZ2dlcmVkIiwhMSksdGhpcy5vcHRzLmVsZW1lbnQuY2xpY2soKSx0aGlzLm9wdHMuYmx1ck9uQ2hhbmdlJiZ0aGlzLm9wdHMuZWxlbWVudC5ibHVyKCl9LGlzSW50ZXJmYWNlRW5hYmxlZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVuYWJsZWRJbnRlcmZhY2U9PT0hMH0sZW5hYmxlSW50ZXJmYWNlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZW5hYmxlZCYmIXRoaXMuX3JlYWRvbmx5LGU9IXQ7cmV0dXJuIHQhPT10aGlzLmVuYWJsZWRJbnRlcmZhY2UmJih0aGlzLmNvbnRhaW5lci50b2dnbGVDbGFzcygic2VsZWN0Mi1jb250YWluZXItZGlzYWJsZWQiLGUpLHRoaXMuY2xvc2UoKSx0aGlzLmVuYWJsZWRJbnRlcmZhY2U9dCwhMCl9LGVuYWJsZTpmdW5jdGlvbih0KXt0PT09biYmKHQ9ITApLHRoaXMuX2VuYWJsZWQhPT10JiYodGhpcy5fZW5hYmxlZD10LHRoaXMub3B0cy5lbGVtZW50LnByb3AoImRpc2FibGVkIiwhdCksdGhpcy5lbmFibGVJbnRlcmZhY2UoKSl9LGRpc2FibGU6ZnVuY3Rpb24oKXt0aGlzLmVuYWJsZSghMSl9LHJlYWRvbmx5OmZ1bmN0aW9uKHQpe3Q9PT1uJiYodD0hMSksdGhpcy5fcmVhZG9ubHkhPT10JiYodGhpcy5fcmVhZG9ubHk9dCx0aGlzLm9wdHMuZWxlbWVudC5wcm9wKCJyZWFkb25seSIsdCksdGhpcy5lbmFibGVJbnRlcmZhY2UoKSl9LG9wZW5lZDpmdW5jdGlvbigpe3JldHVybiEhdGhpcy5jb250YWluZXImJnRoaXMuY29udGFpbmVyLmhhc0NsYXNzKCJzZWxlY3QyLWRyb3Bkb3duLW9wZW4iKX0scG9zaXRpb25Ecm9wZG93bjpmdW5jdGlvbigpe3ZhciBlLG4saSxyLG8scz10aGlzLmRyb3Bkb3duLGE9dGhpcy5jb250YWluZXIsbD1hLm9mZnNldCgpLGM9YS5vdXRlckhlaWdodCghMSksdT1hLm91dGVyV2lkdGgoITEpLGQ9cy5vdXRlckhlaWdodCghMSksaD10KHdpbmRvdykscD1oLndpZHRoKCksZj1oLmhlaWdodCgpLG09aC5zY3JvbGxMZWZ0KCkrcCxfPWguc2Nyb2xsVG9wKCkrZixnPWwudG9wK2Msdj1sLmxlZnQseT1nK2Q8PV8sYj1sLnRvcC1kPj1oLnNjcm9sbFRvcCgpLHc9cy5vdXRlcldpZHRoKCExKSxNPWZ1bmN0aW9uKCl7cmV0dXJuIHYrdzw9bX0sUz1mdW5jdGlvbigpe3JldHVybiBsLmxlZnQrbSthLm91dGVyV2lkdGgoITEpPnd9LFQ9cy5oYXNDbGFzcygic2VsZWN0Mi1kcm9wLWFib3ZlIik7VD8obj0hMCwhYiYmeSYmKGk9ITAsbj0hMSkpOihuPSExLCF5JiZiJiYoaT0hMCxuPSEwKSksaSYmKHMuaGlkZSgpLGw9dGhpcy5jb250YWluZXIub2Zmc2V0KCksYz10aGlzLmNvbnRhaW5lci5vdXRlckhlaWdodCghMSksdT10aGlzLmNvbnRhaW5lci5vdXRlcldpZHRoKCExKSxkPXMub3V0ZXJIZWlnaHQoITEpLG09aC5zY3JvbGxMZWZ0KCkrcCxfPWguc2Nyb2xsVG9wKCkrZixnPWwudG9wK2Msdj1sLmxlZnQsdz1zLm91dGVyV2lkdGgoITEpLHMuc2hvdygpLHRoaXMuZm9jdXNTZWFyY2goKSksdGhpcy5vcHRzLmRyb3Bkb3duQXV0b1dpZHRoPyhvPXQoIi5zZWxlY3QyLXJlc3VsdHMiLHMpWzBdLHMuYWRkQ2xhc3MoInNlbGVjdDItZHJvcC1hdXRvLXdpZHRoIikscy5jc3MoIndpZHRoIiwiIiksdz1zLm91dGVyV2lkdGgoITEpKyhvLnNjcm9sbEhlaWdodD09PW8uY2xpZW50SGVpZ2h0PzA6SC53aWR0aCksdz51P3U9dzp3PXUsZD1zLm91dGVySGVpZ2h0KCExKSk6dGhpcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoInNlbGVjdDItZHJvcC1hdXRvLXdpZHRoIiksInN0YXRpYyIhPT10aGlzLmJvZHkuY3NzKCJwb3NpdGlvbiIpJiYoZT10aGlzLmJvZHkub2Zmc2V0KCksZy09ZS50b3Asdi09ZS5sZWZ0KSwhTSgpJiZTKCkmJih2PWwubGVmdCt0aGlzLmNvbnRhaW5lci5vdXRlcldpZHRoKCExKS13KSxyPXtsZWZ0OnYsd2lkdGg6dX0sbj8oci50b3A9bC50b3AtZCxyLmJvdHRvbT0iYXV0byIsdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoInNlbGVjdDItZHJvcC1hYm92ZSIpLHMuYWRkQ2xhc3MoInNlbGVjdDItZHJvcC1hYm92ZSIpKTooci50b3A9ZyxyLmJvdHRvbT0iYXV0byIsdGhpcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoInNlbGVjdDItZHJvcC1hYm92ZSIpLHMucmVtb3ZlQ2xhc3MoInNlbGVjdDItZHJvcC1hYm92ZSIpKSxyPXQuZXh0ZW5kKHIseCh0aGlzLm9wdHMuZHJvcGRvd25Dc3MsdGhpcy5vcHRzLmVsZW1lbnQpKSxzLmNzcyhyKX0sc2hvdWxkT3BlbjpmdW5jdGlvbigpe3ZhciBlO3JldHVybiF0aGlzLm9wZW5lZCgpJiZ0aGlzLl9lbmFibGVkIT09ITEmJnRoaXMuX3JlYWRvbmx5IT09ITAmJihlPXQuRXZlbnQoInNlbGVjdDItb3BlbmluZyIpLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoZSksIWUuaXNEZWZhdWx0UHJldmVudGVkKCkpfSxjbGVhckRyb3Bkb3duQWxpZ25tZW50UHJlZmVyZW5jZTpmdW5jdGlvbigpe3RoaXMuY29udGFpbmVyLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWRyb3AtYWJvdmUiKSx0aGlzLmRyb3Bkb3duLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWRyb3AtYWJvdmUiKX0sb3BlbjpmdW5jdGlvbigpe3JldHVybiEhdGhpcy5zaG91bGRPcGVuKCkmJih0aGlzLm9wZW5pbmcoKSxqLm9uKCJtb3VzZW1vdmUuc2VsZWN0MkV2ZW50IixmdW5jdGlvbih0KXtGLng9dC5wYWdlWCxGLnk9dC5wYWdlWX0pLCEwKX0sb3BlbmluZzpmdW5jdGlvbigpe3ZhciBlLG49dGhpcy5jb250YWluZXJFdmVudE5hbWUscj0ic2Nyb2xsLiIrbixvPSJyZXNpemUuIituLHM9Im9yaWVudGF0aW9uY2hhbmdlLiIrbjt0aGlzLmNvbnRhaW5lci5hZGRDbGFzcygic2VsZWN0Mi1kcm9wZG93bi1vcGVuIikuYWRkQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpLHRoaXMuY2xlYXJEcm9wZG93bkFsaWdubWVudFByZWZlcmVuY2UoKSx0aGlzLmRyb3Bkb3duWzBdIT09dGhpcy5ib2R5LmNoaWxkcmVuKCkubGFzdCgpWzBdJiZ0aGlzLmRyb3Bkb3duLmRldGFjaCgpLmFwcGVuZFRvKHRoaXMuYm9keSksZT10KCIjc2VsZWN0Mi1kcm9wLW1hc2siKSwwPT1lLmxlbmd0aCYmKGU9dChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSksZS5hdHRyKCJpZCIsInNlbGVjdDItZHJvcC1tYXNrIikuYXR0cigiY2xhc3MiLCJzZWxlY3QyLWRyb3AtbWFzayIpLGUuaGlkZSgpLGUuYXBwZW5kVG8odGhpcy5ib2R5KSxlLm9uKCJtb3VzZWRvd24gdG91Y2hzdGFydCBjbGljayIsZnVuY3Rpb24obil7aShlKTt2YXIgcixvPXQoIiNzZWxlY3QyLWRyb3AiKTtvLmxlbmd0aD4wJiYocj1vLmRhdGEoInNlbGVjdDIiKSxyLm9wdHMuc2VsZWN0T25CbHVyJiZyLnNlbGVjdEhpZ2hsaWdodGVkKHtub0ZvY3VzOiEwfSksci5jbG9zZSgpLG4ucHJldmVudERlZmF1bHQoKSxuLnN0b3BQcm9wYWdhdGlvbigpKX0pKSx0aGlzLmRyb3Bkb3duLnByZXYoKVswXSE9PWVbMF0mJnRoaXMuZHJvcGRvd24uYmVmb3JlKGUpLHQoIiNzZWxlY3QyLWRyb3AiKS5yZW1vdmVBdHRyKCJpZCIpLHRoaXMuZHJvcGRvd24uYXR0cigiaWQiLCJzZWxlY3QyLWRyb3AiKSxlLnNob3coKSx0aGlzLnBvc2l0aW9uRHJvcGRvd24oKSx0aGlzLmRyb3Bkb3duLnNob3coKSx0aGlzLnBvc2l0aW9uRHJvcGRvd24oKSx0aGlzLmRyb3Bkb3duLmFkZENsYXNzKCJzZWxlY3QyLWRyb3AtYWN0aXZlIik7dmFyIGE9dGhpczt0aGlzLmNvbnRhaW5lci5wYXJlbnRzKCkuYWRkKHdpbmRvdykuZWFjaChmdW5jdGlvbigpe3QodGhpcykub24obysiICIrcisiICIrcyxmdW5jdGlvbih0KXthLm9wZW5lZCgpJiZhLnBvc2l0aW9uRHJvcGRvd24oKX0pfSl9LGNsb3NlOmZ1bmN0aW9uKCl7aWYodGhpcy5vcGVuZWQoKSl7dmFyIGU9dGhpcy5jb250YWluZXJFdmVudE5hbWUsbj0ic2Nyb2xsLiIrZSxpPSJyZXNpemUuIitlLHI9Im9yaWVudGF0aW9uY2hhbmdlLiIrZTt0aGlzLmNvbnRhaW5lci5wYXJlbnRzKCkuYWRkKHdpbmRvdykuZWFjaChmdW5jdGlvbigpe3QodGhpcykub2ZmKG4pLm9mZihpKS5vZmYocil9KSx0aGlzLmNsZWFyRHJvcGRvd25BbGlnbm1lbnRQcmVmZXJlbmNlKCksdCgiI3NlbGVjdDItZHJvcC1tYXNrIikuaGlkZSgpLHRoaXMuZHJvcGRvd24ucmVtb3ZlQXR0cigiaWQiKSx0aGlzLmRyb3Bkb3duLmhpZGUoKSx0aGlzLmNvbnRhaW5lci5yZW1vdmVDbGFzcygic2VsZWN0Mi1kcm9wZG93bi1vcGVuIikucmVtb3ZlQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpLHRoaXMucmVzdWx0cy5lbXB0eSgpLGoub2ZmKCJtb3VzZW1vdmUuc2VsZWN0MkV2ZW50IiksdGhpcy5jbGVhclNlYXJjaCgpLHRoaXMuc2VhcmNoLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWFjdGl2ZSIpLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIodC5FdmVudCgic2VsZWN0Mi1jbG9zZSIpKX19LGV4dGVybmFsU2VhcmNoOmZ1bmN0aW9uKHQpe3RoaXMub3BlbigpLHRoaXMuc2VhcmNoLnZhbCh0KSx0aGlzLnVwZGF0ZVJlc3VsdHMoITEpfSxjbGVhclNlYXJjaDpmdW5jdGlvbigpe30sZ2V0TWF4aW11bVNlbGVjdGlvblNpemU6ZnVuY3Rpb24oKXtyZXR1cm4geCh0aGlzLm9wdHMubWF4aW11bVNlbGVjdGlvblNpemUsdGhpcy5vcHRzLmVsZW1lbnQpfSxlbnN1cmVIaWdobGlnaHRWaXNpYmxlOmZ1bmN0aW9uKCl7dmFyIGUsbixpLHIsbyxzLGEsbCxjPXRoaXMucmVzdWx0cztpZihuPXRoaXMuaGlnaGxpZ2h0KCksIShuPDApKXtpZigwPT1uKXJldHVybiB2b2lkIGMuc2Nyb2xsVG9wKDApO2U9dGhpcy5maW5kSGlnaGxpZ2h0YWJsZUNob2ljZXMoKS5maW5kKCIuc2VsZWN0Mi1yZXN1bHQtbGFiZWwiKSxpPXQoZVtuXSksbD0oaS5vZmZzZXQoKXx8e30pLnRvcHx8MCxyPWwraS5vdXRlckhlaWdodCghMCksbj09PWUubGVuZ3RoLTEmJihhPWMuZmluZCgibGkuc2VsZWN0Mi1tb3JlLXJlc3VsdHMiKSxhLmxlbmd0aD4wJiYocj1hLm9mZnNldCgpLnRvcCthLm91dGVySGVpZ2h0KCEwKSkpLG89Yy5vZmZzZXQoKS50b3ArYy5vdXRlckhlaWdodCghMCkscj5vJiZjLnNjcm9sbFRvcChjLnNjcm9sbFRvcCgpKyhyLW8pKSxzPWwtYy5vZmZzZXQoKS50b3AsczwwJiYibm9uZSIhPWkuY3NzKCJkaXNwbGF5IikmJmMuc2Nyb2xsVG9wKGMuc2Nyb2xsVG9wKCkrcyl9fSxmaW5kSGlnaGxpZ2h0YWJsZUNob2ljZXM6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZXN1bHRzLmZpbmQoIi5zZWxlY3QyLXJlc3VsdC1zZWxlY3RhYmxlOm5vdCguc2VsZWN0Mi1kaXNhYmxlZCk6bm90KC5zZWxlY3QyLXNlbGVjdGVkKSIpfSxtb3ZlSGlnaGxpZ2h0OmZ1bmN0aW9uKGUpe2Zvcih2YXIgbj10aGlzLmZpbmRIaWdobGlnaHRhYmxlQ2hvaWNlcygpLGk9dGhpcy5oaWdobGlnaHQoKTtpPi0xJiZpPG4ubGVuZ3RoOyl7aSs9ZTt2YXIgcj10KG5baV0pO2lmKHIuaGFzQ2xhc3MoInNlbGVjdDItcmVzdWx0LXNlbGVjdGFibGUiKSYmIXIuaGFzQ2xhc3MoInNlbGVjdDItZGlzYWJsZWQiKSYmIXIuaGFzQ2xhc3MoInNlbGVjdDItc2VsZWN0ZWQiKSl7dGhpcy5oaWdobGlnaHQoaSk7YnJlYWt9fX0saGlnaGxpZ2h0OmZ1bmN0aW9uKGUpe3ZhciBuLGkscj10aGlzLmZpbmRIaWdobGlnaHRhYmxlQ2hvaWNlcygpO3JldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aD9zKHIuZmlsdGVyKCIuc2VsZWN0Mi1oaWdobGlnaHRlZCIpWzBdLHIuZ2V0KCkpOihlPj1yLmxlbmd0aCYmKGU9ci5sZW5ndGgtMSksZTwwJiYoZT0wKSx0aGlzLnJlbW92ZUhpZ2hsaWdodCgpLG49dChyW2VdKSxuLmFkZENsYXNzKCJzZWxlY3QyLWhpZ2hsaWdodGVkIiksdGhpcy5zZWFyY2guYXR0cigiYXJpYS1hY3RpdmVkZXNjZW5kYW50IixuLmZpbmQoIi5zZWxlY3QyLXJlc3VsdC1sYWJlbCIpLmF0dHIoImlkIikpLHRoaXMuZW5zdXJlSGlnaGxpZ2h0VmlzaWJsZSgpLHRoaXMubGl2ZVJlZ2lvbi50ZXh0KG4udGV4dCgpKSxpPW4uZGF0YSgic2VsZWN0Mi1kYXRhIiksdm9pZChpJiZ0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHt0eXBlOiJzZWxlY3QyLWhpZ2hsaWdodCIsdmFsOnRoaXMuaWQoaSksY2hvaWNlOml9KSkpfSxyZW1vdmVIaWdobGlnaHQ6ZnVuY3Rpb24oKXt0aGlzLnJlc3VsdHMuZmluZCgiLnNlbGVjdDItaGlnaGxpZ2h0ZWQiKS5yZW1vdmVDbGFzcygic2VsZWN0Mi1oaWdobGlnaHRlZCIpfSx0b3VjaE1vdmVkOmZ1bmN0aW9uKCl7dGhpcy5fdG91Y2hNb3ZlZD0hMH0sY2xlYXJUb3VjaE1vdmVkOmZ1bmN0aW9uKCl7dGhpcy5fdG91Y2hNb3ZlZD0hMX0sY291bnRTZWxlY3RhYmxlUmVzdWx0czpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbmRIaWdobGlnaHRhYmxlQ2hvaWNlcygpLmxlbmd0aH0saGlnaGxpZ2h0VW5kZXJFdmVudDpmdW5jdGlvbihlKXt2YXIgbj10KGUudGFyZ2V0KS5jbG9zZXN0KCIuc2VsZWN0Mi1yZXN1bHQtc2VsZWN0YWJsZSIpO2lmKG4ubGVuZ3RoPjAmJiFuLmlzKCIuc2VsZWN0Mi1oaWdobGlnaHRlZCIpKXt2YXIgaT10aGlzLmZpbmRIaWdobGlnaHRhYmxlQ2hvaWNlcygpO3RoaXMuaGlnaGxpZ2h0KGkuaW5kZXgobikpfWVsc2UgMD09bi5sZW5ndGgmJnRoaXMucmVtb3ZlSGlnaGxpZ2h0KCl9LGxvYWRNb3JlSWZOZWVkZWQ6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMucmVzdWx0cyxuPWUuZmluZCgibGkuc2VsZWN0Mi1tb3JlLXJlc3VsdHMiKSxpPXRoaXMucmVzdWx0c1BhZ2UrMSxyPXRoaXMsbz10aGlzLnNlYXJjaC52YWwoKSxzPXRoaXMuY29udGV4dDswIT09bi5sZW5ndGgmJih0PW4ub2Zmc2V0KCkudG9wLWUub2Zmc2V0KCkudG9wLWUuaGVpZ2h0KCksdDw9dGhpcy5vcHRzLmxvYWRNb3JlUGFkZGluZyYmKG4uYWRkQ2xhc3MoInNlbGVjdDItYWN0aXZlIiksdGhpcy5vcHRzLnF1ZXJ5KHtlbGVtZW50OnRoaXMub3B0cy5lbGVtZW50LHRlcm06byxwYWdlOmksY29udGV4dDpzLG1hdGNoZXI6dGhpcy5vcHRzLm1hdGNoZXIsY2FsbGJhY2s6dGhpcy5iaW5kKGZ1bmN0aW9uKHQpe3Iub3BlbmVkKCkmJihyLm9wdHMucG9wdWxhdGVSZXN1bHRzLmNhbGwodGhpcyxlLHQucmVzdWx0cyx7dGVybTpvLHBhZ2U6aSxjb250ZXh0OnN9KSxyLnBvc3Rwcm9jZXNzUmVzdWx0cyh0LCExLCExKSx0Lm1vcmU9PT0hMD8obi5kZXRhY2goKS5hcHBlbmRUbyhlKS50ZXh0KHgoci5vcHRzLmZvcm1hdExvYWRNb3JlLHIub3B0cy5lbGVtZW50LGkrMSkpLHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ci5sb2FkTW9yZUlmTmVlZGVkKCl9LDEwKSk6bi5yZW1vdmUoKSxyLnBvc2l0aW9uRHJvcGRvd24oKSxyLnJlc3VsdHNQYWdlPWksci5jb250ZXh0PXQuY29udGV4dCx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHt0eXBlOiJzZWxlY3QyLWxvYWRlZCIsaXRlbXM6dH0pKX0pfSkpKX0sdG9rZW5pemU6ZnVuY3Rpb24oKXt9LHVwZGF0ZVJlc3VsdHM6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gaSgpe2MucmVtb3ZlQ2xhc3MoInNlbGVjdDItYWN0aXZlIiksaC5wb3NpdGlvbkRyb3Bkb3duKCksdS5maW5kKCIuc2VsZWN0Mi1uby1yZXN1bHRzLC5zZWxlY3QyLXNlbGVjdGlvbi1saW1pdCwuc2VsZWN0Mi1zZWFyY2hpbmciKS5sZW5ndGg/aC5saXZlUmVnaW9uLnRleHQodS50ZXh0KCkpOmgubGl2ZVJlZ2lvbi50ZXh0KGgub3B0cy5mb3JtYXRNYXRjaGVzKHUuZmluZCgiLnNlbGVjdDItcmVzdWx0LXNlbGVjdGFibGUiKS5sZW5ndGgpKX1mdW5jdGlvbiByKHQpe3UuaHRtbCh0KSxpKCl9dmFyIG8scyxhLGM9dGhpcy5zZWFyY2gsdT10aGlzLnJlc3VsdHMsZD10aGlzLm9wdHMsaD10aGlzLHA9Yy52YWwoKSxmPXQuZGF0YSh0aGlzLmNvbnRhaW5lciwic2VsZWN0Mi1sYXN0LXRlcm0iKTtpZigoZT09PSEwfHwhZnx8IWwocCxmKSkmJih0LmRhdGEodGhpcy5jb250YWluZXIsInNlbGVjdDItbGFzdC10ZXJtIixwKSxlPT09ITB8fHRoaXMuc2hvd1NlYXJjaElucHV0IT09ITEmJnRoaXMub3BlbmVkKCkpKXthPSsrdGhpcy5xdWVyeUNvdW50O3ZhciBtPXRoaXMuZ2V0TWF4aW11bVNlbGVjdGlvblNpemUoKTtpZihtPj0xJiYobz10aGlzLmRhdGEoKSx0LmlzQXJyYXkobykmJm8ubGVuZ3RoPj1tJiZMKGQuZm9ybWF0U2VsZWN0aW9uVG9vQmlnLCJmb3JtYXRTZWxlY3Rpb25Ub29CaWciKSkpcmV0dXJuIHZvaWQgcigiPGxpIGNsYXNzPSdzZWxlY3QyLXNlbGVjdGlvbi1saW1pdCc+Iit4KGQuZm9ybWF0U2VsZWN0aW9uVG9vQmlnLGQuZWxlbWVudCxtKSsiPC9saT4iKTtpZihjLnZhbCgpLmxlbmd0aDxkLm1pbmltdW1JbnB1dExlbmd0aClyZXR1cm4gcihMKGQuZm9ybWF0SW5wdXRUb29TaG9ydCwiZm9ybWF0SW5wdXRUb29TaG9ydCIpPyI8bGkgY2xhc3M9J3NlbGVjdDItbm8tcmVzdWx0cyc+Iit4KGQuZm9ybWF0SW5wdXRUb29TaG9ydCxkLmVsZW1lbnQsYy52YWwoKSxkLm1pbmltdW1JbnB1dExlbmd0aCkrIjwvbGk+IjoiIiksdm9pZChlJiZ0aGlzLnNob3dTZWFyY2gmJnRoaXMuc2hvd1NlYXJjaCghMCkpO2lmKGQubWF4aW11bUlucHV0TGVuZ3RoJiZjLnZhbCgpLmxlbmd0aD5kLm1heGltdW1JbnB1dExlbmd0aClyZXR1cm4gdm9pZCByKEwoZC5mb3JtYXRJbnB1dFRvb0xvbmcsImZvcm1hdElucHV0VG9vTG9uZyIpPyI8bGkgY2xhc3M9J3NlbGVjdDItbm8tcmVzdWx0cyc+Iit4KGQuZm9ybWF0SW5wdXRUb29Mb25nLGQuZWxlbWVudCxjLnZhbCgpLGQubWF4aW11bUlucHV0TGVuZ3RoKSsiPC9saT4iOiIiKTtkLmZvcm1hdFNlYXJjaGluZyYmMD09PXRoaXMuZmluZEhpZ2hsaWdodGFibGVDaG9pY2VzKCkubGVuZ3RoJiZyKCI8bGkgY2xhc3M9J3NlbGVjdDItc2VhcmNoaW5nJz4iK3goZC5mb3JtYXRTZWFyY2hpbmcsZC5lbGVtZW50KSsiPC9saT4iKSxjLmFkZENsYXNzKCJzZWxlY3QyLWFjdGl2ZSIpLHRoaXMucmVtb3ZlSGlnaGxpZ2h0KCkscz10aGlzLnRva2VuaXplKCkscyE9biYmbnVsbCE9cyYmYy52YWwocyksdGhpcy5yZXN1bHRzUGFnZT0xLGQucXVlcnkoe2VsZW1lbnQ6ZC5lbGVtZW50LHRlcm06Yy52YWwoKSxwYWdlOnRoaXMucmVzdWx0c1BhZ2UsY29udGV4dDpudWxsLG1hdGNoZXI6ZC5tYXRjaGVyLGNhbGxiYWNrOnRoaXMuYmluZChmdW5jdGlvbihvKXt2YXIgcztpZihhPT10aGlzLnF1ZXJ5Q291bnQpe2lmKCF0aGlzLm9wZW5lZCgpKXJldHVybiB2b2lkIHRoaXMuc2VhcmNoLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWFjdGl2ZSIpO2lmKG8uaGFzRXJyb3IhPT1uJiZMKGQuZm9ybWF0QWpheEVycm9yLCJmb3JtYXRBamF4RXJyb3IiKSlyZXR1cm4gdm9pZCByKCI8bGkgY2xhc3M9J3NlbGVjdDItYWpheC1lcnJvcic+Iit4KGQuZm9ybWF0QWpheEVycm9yLGQuZWxlbWVudCxvLmpxWEhSLG8udGV4dFN0YXR1cyxvLmVycm9yVGhyb3duKSsiPC9saT4iKTtpZih0aGlzLmNvbnRleHQ9by5jb250ZXh0PT09bj9udWxsOm8uY29udGV4dCx0aGlzLm9wdHMuY3JlYXRlU2VhcmNoQ2hvaWNlJiYiIiE9PWMudmFsKCkmJihzPXRoaXMub3B0cy5jcmVhdGVTZWFyY2hDaG9pY2UuY2FsbChoLGMudmFsKCksby5yZXN1bHRzKSxzIT09biYmbnVsbCE9PXMmJmguaWQocykhPT1uJiZudWxsIT09aC5pZChzKSYmMD09PXQoby5yZXN1bHRzKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gbChoLmlkKHRoaXMpLGguaWQocykpfSkubGVuZ3RoJiZ0aGlzLm9wdHMuY3JlYXRlU2VhcmNoQ2hvaWNlUG9zaXRpb24oby5yZXN1bHRzLHMpKSwwPT09by5yZXN1bHRzLmxlbmd0aCYmTChkLmZvcm1hdE5vTWF0Y2hlcywiZm9ybWF0Tm9NYXRjaGVzIikpcmV0dXJuIHZvaWQgcigiPGxpIGNsYXNzPSdzZWxlY3QyLW5vLXJlc3VsdHMnPiIreChkLmZvcm1hdE5vTWF0Y2hlcyxkLmVsZW1lbnQsYy52YWwoKSkrIjwvbGk+Iik7dS5lbXB0eSgpLGgub3B0cy5wb3B1bGF0ZVJlc3VsdHMuY2FsbCh0aGlzLHUsby5yZXN1bHRzLHt0ZXJtOmMudmFsKCkscGFnZTp0aGlzLnJlc3VsdHNQYWdlLGNvbnRleHQ6bnVsbH0pLG8ubW9yZT09PSEwJiZMKGQuZm9ybWF0TG9hZE1vcmUsImZvcm1hdExvYWRNb3JlIikmJih1LmFwcGVuZCgiPGxpIGNsYXNzPSdzZWxlY3QyLW1vcmUtcmVzdWx0cyc+IitkLmVzY2FwZU1hcmt1cCh4KGQuZm9ybWF0TG9hZE1vcmUsZC5lbGVtZW50LHRoaXMucmVzdWx0c1BhZ2UpKSsiPC9saT4iKSx3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe2gubG9hZE1vcmVJZk5lZWRlZCgpfSwxMCkpLHRoaXMucG9zdHByb2Nlc3NSZXN1bHRzKG8sZSksaSgpLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoe3R5cGU6InNlbGVjdDItbG9hZGVkIixpdGVtczpvfSl9fSl9KX19LGNhbmNlbDpmdW5jdGlvbigpe3RoaXMuY2xvc2UoKX0sYmx1cjpmdW5jdGlvbigpe3RoaXMub3B0cy5zZWxlY3RPbkJsdXImJnRoaXMuc2VsZWN0SGlnaGxpZ2h0ZWQoe25vRm9jdXM6ITB9KSx0aGlzLmNsb3NlKCksdGhpcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpLHRoaXMuc2VhcmNoWzBdPT09ZG9jdW1lbnQuYWN0aXZlRWxlbWVudCYmdGhpcy5zZWFyY2guYmx1cigpLHRoaXMuY2xlYXJTZWFyY2goKSx0aGlzLnNlbGVjdGlvbi5maW5kKCIuc2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWZvY3VzIikucmVtb3ZlQ2xhc3MoInNlbGVjdDItc2VhcmNoLWNob2ljZS1mb2N1cyIpfSxmb2N1c1NlYXJjaDpmdW5jdGlvbigpe20odGhpcy5zZWFyY2gpfSxzZWxlY3RIaWdobGlnaHRlZDpmdW5jdGlvbih0KXtpZih0aGlzLl90b3VjaE1vdmVkKXJldHVybiB2b2lkIHRoaXMuY2xlYXJUb3VjaE1vdmVkKCk7dmFyIGU9dGhpcy5oaWdobGlnaHQoKSxuPXRoaXMucmVzdWx0cy5maW5kKCIuc2VsZWN0Mi1oaWdobGlnaHRlZCIpLGk9bi5jbG9zZXN0KCIuc2VsZWN0Mi1yZXN1bHQiKS5kYXRhKCJzZWxlY3QyLWRhdGEiKTtpPyh0aGlzLmhpZ2hsaWdodChlKSx0aGlzLm9uU2VsZWN0KGksdCkpOnQmJnQubm9Gb2N1cyYmdGhpcy5jbG9zZSgpfSxnZXRQbGFjZWhvbGRlcjpmdW5jdGlvbigpe3ZhciB0O3JldHVybiB0aGlzLm9wdHMuZWxlbWVudC5hdHRyKCJwbGFjZWhvbGRlciIpfHx0aGlzLm9wdHMuZWxlbWVudC5hdHRyKCJkYXRhLXBsYWNlaG9sZGVyIil8fHRoaXMub3B0cy5lbGVtZW50LmRhdGEoInBsYWNlaG9sZGVyIil8fHRoaXMub3B0cy5wbGFjZWhvbGRlcnx8KCh0PXRoaXMuZ2V0UGxhY2Vob2xkZXJPcHRpb24oKSkhPT1uP3QudGV4dCgpOm4pfSxnZXRQbGFjZWhvbGRlck9wdGlvbjpmdW5jdGlvbigpe2lmKHRoaXMuc2VsZWN0KXt2YXIgZT10aGlzLnNlbGVjdC5jaGlsZHJlbigib3B0aW9uIikuZmlyc3QoKTtpZih0aGlzLm9wdHMucGxhY2Vob2xkZXJPcHRpb24hPT1uKXJldHVybiJmaXJzdCI9PT10aGlzLm9wdHMucGxhY2Vob2xkZXJPcHRpb24mJmV8fCJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLm9wdHMucGxhY2Vob2xkZXJPcHRpb24mJnRoaXMub3B0cy5wbGFjZWhvbGRlck9wdGlvbih0aGlzLnNlbGVjdCk7aWYoIiI9PT10LnRyaW0oZS50ZXh0KCkpJiYiIj09PWUudmFsKCkpcmV0dXJuIGV9fSxpbml0Q29udGFpbmVyV2lkdGg6ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKCl7dmFyIGUsaSxyLG8scyxhO2lmKCJvZmYiPT09dGhpcy5vcHRzLndpZHRoKXJldHVybiBudWxsO2lmKCJlbGVtZW50Ij09PXRoaXMub3B0cy53aWR0aClyZXR1cm4gMD09PXRoaXMub3B0cy5lbGVtZW50Lm91dGVyV2lkdGgoITEpPyJhdXRvIjp0aGlzLm9wdHMuZWxlbWVudC5vdXRlcldpZHRoKCExKSsicHgiO2lmKCJjb3B5Ij09PXRoaXMub3B0cy53aWR0aHx8InJlc29sdmUiPT09dGhpcy5vcHRzLndpZHRoKXtpZihlPXRoaXMub3B0cy5lbGVtZW50LmF0dHIoInN0eWxlIiksZSE9PW4pZm9yKGk9ZS5zcGxpdCgiOyIpLG89MCxzPWkubGVuZ3RoO288cztvKz0xKWlmKGE9aVtvXS5yZXBsYWNlKC9ccy9nLCIiKSxyPWEubWF0Y2goL153aWR0aDooKFstK10/KFswLTldKlwuKT9bMC05XSspKHB4fGVtfGV4fCV8aW58Y218bW18cHR8cGMpKS9pKSxudWxsIT09ciYmci5sZW5ndGg+PTEpcmV0dXJuIHJbMV07cmV0dXJuInJlc29sdmUiPT09dGhpcy5vcHRzLndpZHRoPyhlPXRoaXMub3B0cy5lbGVtZW50LmNzcygid2lkdGgiKSxlLmluZGV4T2YoIiUiKT4wP2U6MD09PXRoaXMub3B0cy5lbGVtZW50Lm91dGVyV2lkdGgoITEpPyJhdXRvIjp0aGlzLm9wdHMuZWxlbWVudC5vdXRlcldpZHRoKCExKSsicHgiKTpudWxsfXJldHVybiB0LmlzRnVuY3Rpb24odGhpcy5vcHRzLndpZHRoKT90aGlzLm9wdHMud2lkdGgoKTp0aGlzLm9wdHMud2lkdGh9dmFyIGk9ZS5jYWxsKHRoaXMpO251bGwhPT1pJiZ0aGlzLmNvbnRhaW5lci5jc3MoIndpZHRoIixpKX19KSxQPUMoTyx7Y3JlYXRlQ29udGFpbmVyOmZ1bmN0aW9uKCl7dmFyIGU9dChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSkuYXR0cih7CiJjbGFzcyI6InNlbGVjdDItY29udGFpbmVyIn0pLmh0bWwoWyI8YSBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCknIGNsYXNzPSdzZWxlY3QyLWNob2ljZScgdGFiaW5kZXg9Jy0xJz4iLCIgICA8c3BhbiBjbGFzcz0nc2VsZWN0Mi1jaG9zZW4nPiYjMTYwOzwvc3Bhbj48YWJiciBjbGFzcz0nc2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWNsb3NlJz48L2FiYnI+IiwiICAgPHNwYW4gY2xhc3M9J3NlbGVjdDItYXJyb3cnIHJvbGU9J3ByZXNlbnRhdGlvbic+PGIgcm9sZT0ncHJlc2VudGF0aW9uJz48L2I+PC9zcGFuPiIsIjwvYT4iLCI8bGFiZWwgZm9yPScnIGNsYXNzPSdzZWxlY3QyLW9mZnNjcmVlbic+PC9sYWJlbD4iLCI8aW5wdXQgY2xhc3M9J3NlbGVjdDItZm9jdXNzZXIgc2VsZWN0Mi1vZmZzY3JlZW4nIHR5cGU9J3RleHQnIGFyaWEtaGFzcG9wdXA9J3RydWUnIHJvbGU9J2J1dHRvbicgLz4iLCI8ZGl2IGNsYXNzPSdzZWxlY3QyLWRyb3Agc2VsZWN0Mi1kaXNwbGF5LW5vbmUnPiIsIiAgIDxkaXYgY2xhc3M9J3NlbGVjdDItc2VhcmNoJz4iLCIgICAgICAgPGxhYmVsIGZvcj0nJyBjbGFzcz0nc2VsZWN0Mi1vZmZzY3JlZW4nPjwvbGFiZWw+IiwiICAgICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBhdXRvY29tcGxldGU9J29mZicgYXV0b2NvcnJlY3Q9J29mZicgYXV0b2NhcGl0YWxpemU9J29mZicgc3BlbGxjaGVjaz0nZmFsc2UnIGNsYXNzPSdzZWxlY3QyLWlucHV0JyByb2xlPSdjb21ib2JveCcgYXJpYS1leHBhbmRlZD0ndHJ1ZSciLCIgICAgICAgYXJpYS1hdXRvY29tcGxldGU9J2xpc3QnIC8+IiwiICAgPC9kaXY+IiwiICAgPHVsIGNsYXNzPSdzZWxlY3QyLXJlc3VsdHMnIHJvbGU9J2xpc3Rib3gnPiIsIiAgIDwvdWw+IiwiPC9kaXY+Il0uam9pbigiIikpO3JldHVybiBlfSxlbmFibGVJbnRlcmZhY2U6ZnVuY3Rpb24oKXt0aGlzLnBhcmVudC5lbmFibGVJbnRlcmZhY2UuYXBwbHkodGhpcyxhcmd1bWVudHMpJiZ0aGlzLmZvY3Vzc2VyLnByb3AoImRpc2FibGVkIiwhdGhpcy5pc0ludGVyZmFjZUVuYWJsZWQoKSl9LG9wZW5pbmc6ZnVuY3Rpb24oKXt2YXIgZSxpLHI7dGhpcy5vcHRzLm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoPj0wJiZ0aGlzLnNob3dTZWFyY2goITApLHRoaXMucGFyZW50Lm9wZW5pbmcuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuc2hvd1NlYXJjaElucHV0IT09ITEmJnRoaXMuc2VhcmNoLnZhbCh0aGlzLmZvY3Vzc2VyLnZhbCgpKSx0aGlzLm9wdHMuc2hvdWxkRm9jdXNJbnB1dCh0aGlzKSYmKHRoaXMuc2VhcmNoLmZvY3VzKCksZT10aGlzLnNlYXJjaC5nZXQoMCksZS5jcmVhdGVUZXh0UmFuZ2U/KGk9ZS5jcmVhdGVUZXh0UmFuZ2UoKSxpLmNvbGxhcHNlKCExKSxpLnNlbGVjdCgpKTplLnNldFNlbGVjdGlvblJhbmdlJiYocj10aGlzLnNlYXJjaC52YWwoKS5sZW5ndGgsZS5zZXRTZWxlY3Rpb25SYW5nZShyLHIpKSksIiI9PT10aGlzLnNlYXJjaC52YWwoKSYmdGhpcy5uZXh0U2VhcmNoVGVybSE9biYmKHRoaXMuc2VhcmNoLnZhbCh0aGlzLm5leHRTZWFyY2hUZXJtKSx0aGlzLnNlYXJjaC5zZWxlY3QoKSksdGhpcy5mb2N1c3Nlci5wcm9wKCJkaXNhYmxlZCIsITApLnZhbCgiIiksdGhpcy51cGRhdGVSZXN1bHRzKCEwKSx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHQuRXZlbnQoInNlbGVjdDItb3BlbiIpKX0sY2xvc2U6ZnVuY3Rpb24oKXt0aGlzLm9wZW5lZCgpJiYodGhpcy5wYXJlbnQuY2xvc2UuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuZm9jdXNzZXIucHJvcCgiZGlzYWJsZWQiLCExKSx0aGlzLm9wdHMuc2hvdWxkRm9jdXNJbnB1dCh0aGlzKSYmdGhpcy5mb2N1c3Nlci5mb2N1cygpKX0sZm9jdXM6ZnVuY3Rpb24oKXt0aGlzLm9wZW5lZCgpP3RoaXMuY2xvc2UoKToodGhpcy5mb2N1c3Nlci5wcm9wKCJkaXNhYmxlZCIsITEpLHRoaXMub3B0cy5zaG91bGRGb2N1c0lucHV0KHRoaXMpJiZ0aGlzLmZvY3Vzc2VyLmZvY3VzKCkpfSxpc0ZvY3VzZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb250YWluZXIuaGFzQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpfSxjYW5jZWw6ZnVuY3Rpb24oKXt0aGlzLnBhcmVudC5jYW5jZWwuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuZm9jdXNzZXIucHJvcCgiZGlzYWJsZWQiLCExKSx0aGlzLm9wdHMuc2hvdWxkRm9jdXNJbnB1dCh0aGlzKSYmdGhpcy5mb2N1c3Nlci5mb2N1cygpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dCgibGFiZWxbZm9yPSciK3RoaXMuZm9jdXNzZXIuYXR0cigiaWQiKSsiJ10iKS5hdHRyKCJmb3IiLHRoaXMub3B0cy5lbGVtZW50LmF0dHIoImlkIikpLHRoaXMucGFyZW50LmRlc3Ryb3kuYXBwbHkodGhpcyxhcmd1bWVudHMpLEQuY2FsbCh0aGlzLCJzZWxlY3Rpb24iLCJmb2N1c3NlciIpfSxpbml0Q29udGFpbmVyOmZ1bmN0aW9uKCl7dmFyIGUsbixyPXRoaXMuY29udGFpbmVyLG89dGhpcy5kcm9wZG93bixzPUkoKTt0aGlzLm9wdHMubWluaW11bVJlc3VsdHNGb3JTZWFyY2g8MD90aGlzLnNob3dTZWFyY2goITEpOnRoaXMuc2hvd1NlYXJjaCghMCksdGhpcy5zZWxlY3Rpb249ZT1yLmZpbmQoIi5zZWxlY3QyLWNob2ljZSIpLHRoaXMuZm9jdXNzZXI9ci5maW5kKCIuc2VsZWN0Mi1mb2N1c3NlciIpLGUuZmluZCgiLnNlbGVjdDItY2hvc2VuIikuYXR0cigiaWQiLCJzZWxlY3QyLWNob3Nlbi0iK3MpLHRoaXMuZm9jdXNzZXIuYXR0cigiYXJpYS1sYWJlbGxlZGJ5Iiwic2VsZWN0Mi1jaG9zZW4tIitzKSx0aGlzLnJlc3VsdHMuYXR0cigiaWQiLCJzZWxlY3QyLXJlc3VsdHMtIitzKSx0aGlzLnNlYXJjaC5hdHRyKCJhcmlhLW93bnMiLCJzZWxlY3QyLXJlc3VsdHMtIitzKSx0aGlzLmZvY3Vzc2VyLmF0dHIoImlkIiwiczJpZF9hdXRvZ2VuIitzKSxuPXQoImxhYmVsW2Zvcj0nIit0aGlzLm9wdHMuZWxlbWVudC5hdHRyKCJpZCIpKyInXSIpLHRoaXMuZm9jdXNzZXIucHJldigpLnRleHQobi50ZXh0KCkpLmF0dHIoImZvciIsdGhpcy5mb2N1c3Nlci5hdHRyKCJpZCIpKTt2YXIgYT10aGlzLm9wdHMuZWxlbWVudC5hdHRyKCJ0aXRsZSIpO3RoaXMub3B0cy5lbGVtZW50LmF0dHIoInRpdGxlIixhfHxuLnRleHQoKSksdGhpcy5mb2N1c3Nlci5hdHRyKCJ0YWJpbmRleCIsdGhpcy5lbGVtZW50VGFiSW5kZXgpLHRoaXMuc2VhcmNoLmF0dHIoImlkIix0aGlzLmZvY3Vzc2VyLmF0dHIoImlkIikrIl9zZWFyY2giKSx0aGlzLnNlYXJjaC5wcmV2KCkudGV4dCh0KCJsYWJlbFtmb3I9JyIrdGhpcy5mb2N1c3Nlci5hdHRyKCJpZCIpKyInXSIpLnRleHQoKSkuYXR0cigiZm9yIix0aGlzLnNlYXJjaC5hdHRyKCJpZCIpKSx0aGlzLnNlYXJjaC5vbigia2V5ZG93biIsdGhpcy5iaW5kKGZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbnRlcmZhY2VFbmFibGVkKCkmJjIyOSE9dC5rZXlDb2RlKXtpZih0LndoaWNoPT09WS5QQUdFX1VQfHx0LndoaWNoPT09WS5QQUdFX0RPV04pcmV0dXJuIHZvaWQgZyh0KTtzd2l0Y2godC53aGljaCl7Y2FzZSBZLlVQOmNhc2UgWS5ET1dOOnJldHVybiB0aGlzLm1vdmVIaWdobGlnaHQodC53aGljaD09PVkuVVA/LTE6MSksdm9pZCBnKHQpO2Nhc2UgWS5FTlRFUjpyZXR1cm4gdGhpcy5zZWxlY3RIaWdobGlnaHRlZCgpLHZvaWQgZyh0KTtjYXNlIFkuVEFCOnJldHVybiB2b2lkIHRoaXMuc2VsZWN0SGlnaGxpZ2h0ZWQoe25vRm9jdXM6ITB9KTtjYXNlIFkuRVNDOnJldHVybiB0aGlzLmNhbmNlbCh0KSx2b2lkIGcodCl9fX0pKSx0aGlzLnNlYXJjaC5vbigiYmx1ciIsdGhpcy5iaW5kKGZ1bmN0aW9uKHQpe2RvY3VtZW50LmFjdGl2ZUVsZW1lbnQ9PT10aGlzLmJvZHkuZ2V0KDApJiZ3aW5kb3cuc2V0VGltZW91dCh0aGlzLmJpbmQoZnVuY3Rpb24oKXt0aGlzLm9wZW5lZCgpJiZ0aGlzLnNlYXJjaC5mb2N1cygpfSksMCl9KSksdGhpcy5mb2N1c3Nlci5vbigia2V5ZG93biIsdGhpcy5iaW5kKGZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbnRlcmZhY2VFbmFibGVkKCkmJnQud2hpY2ghPT1ZLlRBQiYmIVkuaXNDb250cm9sKHQpJiYhWS5pc0Z1bmN0aW9uS2V5KHQpJiZ0LndoaWNoIT09WS5FU0Mpe2lmKHRoaXMub3B0cy5vcGVuT25FbnRlcj09PSExJiZ0LndoaWNoPT09WS5FTlRFUilyZXR1cm4gdm9pZCBnKHQpO2lmKHQud2hpY2g9PVkuRE9XTnx8dC53aGljaD09WS5VUHx8dC53aGljaD09WS5FTlRFUiYmdGhpcy5vcHRzLm9wZW5PbkVudGVyKXtpZih0LmFsdEtleXx8dC5jdHJsS2V5fHx0LnNoaWZ0S2V5fHx0Lm1ldGFLZXkpcmV0dXJuO3JldHVybiB0aGlzLm9wZW4oKSx2b2lkIGcodCl9cmV0dXJuIHQud2hpY2g9PVkuREVMRVRFfHx0LndoaWNoPT1ZLkJBQ0tTUEFDRT8odGhpcy5vcHRzLmFsbG93Q2xlYXImJnRoaXMuY2xlYXIoKSx2b2lkIGcodCkpOnZvaWQgMH19KSksZCh0aGlzLmZvY3Vzc2VyKSx0aGlzLmZvY3Vzc2VyLm9uKCJrZXl1cC1jaGFuZ2UgaW5wdXQiLHRoaXMuYmluZChmdW5jdGlvbih0KXtpZih0aGlzLm9wdHMubWluaW11bVJlc3VsdHNGb3JTZWFyY2g+PTApe2lmKHQuc3RvcFByb3BhZ2F0aW9uKCksdGhpcy5vcGVuZWQoKSlyZXR1cm47dGhpcy5vcGVuKCl9fSkpLGUub24oIm1vdXNlZG93biB0b3VjaHN0YXJ0IiwiYWJiciIsdGhpcy5iaW5kKGZ1bmN0aW9uKHQpe3RoaXMuaXNJbnRlcmZhY2VFbmFibGVkKCkmJih0aGlzLmNsZWFyKCksdih0KSx0aGlzLmNsb3NlKCksdGhpcy5zZWxlY3Rpb24uZm9jdXMoKSl9KSksZS5vbigibW91c2Vkb3duIHRvdWNoc3RhcnQiLHRoaXMuYmluZChmdW5jdGlvbihuKXtpKGUpLHRoaXMuY29udGFpbmVyLmhhc0NsYXNzKCJzZWxlY3QyLWNvbnRhaW5lci1hY3RpdmUiKXx8dGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih0LkV2ZW50KCJzZWxlY3QyLWZvY3VzIikpLHRoaXMub3BlbmVkKCk/dGhpcy5jbG9zZSgpOnRoaXMuaXNJbnRlcmZhY2VFbmFibGVkKCkmJnRoaXMub3BlbigpLGcobil9KSksby5vbigibW91c2Vkb3duIHRvdWNoc3RhcnQiLHRoaXMuYmluZChmdW5jdGlvbigpe3RoaXMub3B0cy5zaG91bGRGb2N1c0lucHV0KHRoaXMpJiZ0aGlzLnNlYXJjaC5mb2N1cygpfSkpLGUub24oImZvY3VzIix0aGlzLmJpbmQoZnVuY3Rpb24odCl7Zyh0KX0pKSx0aGlzLmZvY3Vzc2VyLm9uKCJmb2N1cyIsdGhpcy5iaW5kKGZ1bmN0aW9uKCl7dGhpcy5jb250YWluZXIuaGFzQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpfHx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHQuRXZlbnQoInNlbGVjdDItZm9jdXMiKSksdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpfSkpLm9uKCJibHVyIix0aGlzLmJpbmQoZnVuY3Rpb24oKXt0aGlzLm9wZW5lZCgpfHwodGhpcy5jb250YWluZXIucmVtb3ZlQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIodC5FdmVudCgic2VsZWN0Mi1ibHVyIikpKX0pKSx0aGlzLnNlYXJjaC5vbigiZm9jdXMiLHRoaXMuYmluZChmdW5jdGlvbigpe3RoaXMuY29udGFpbmVyLmhhc0NsYXNzKCJzZWxlY3QyLWNvbnRhaW5lci1hY3RpdmUiKXx8dGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih0LkV2ZW50KCJzZWxlY3QyLWZvY3VzIikpLHRoaXMuY29udGFpbmVyLmFkZENsYXNzKCJzZWxlY3QyLWNvbnRhaW5lci1hY3RpdmUiKX0pKSx0aGlzLmluaXRDb250YWluZXJXaWR0aCgpLHRoaXMub3B0cy5lbGVtZW50LmFkZENsYXNzKCJzZWxlY3QyLW9mZnNjcmVlbiIpLHRoaXMuc2V0UGxhY2Vob2xkZXIoKX0sY2xlYXI6ZnVuY3Rpb24oZSl7dmFyIG49dGhpcy5zZWxlY3Rpb24uZGF0YSgic2VsZWN0Mi1kYXRhIik7aWYobil7dmFyIGk9dC5FdmVudCgic2VsZWN0Mi1jbGVhcmluZyIpO2lmKHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoaSksaS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSlyZXR1cm47dmFyIHI9dGhpcy5nZXRQbGFjZWhvbGRlck9wdGlvbigpO3RoaXMub3B0cy5lbGVtZW50LnZhbChyP3IudmFsKCk6IiIpLHRoaXMuc2VsZWN0aW9uLmZpbmQoIi5zZWxlY3QyLWNob3NlbiIpLmVtcHR5KCksdGhpcy5zZWxlY3Rpb24ucmVtb3ZlRGF0YSgic2VsZWN0Mi1kYXRhIiksdGhpcy5zZXRQbGFjZWhvbGRlcigpLGUhPT0hMSYmKHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoe3R5cGU6InNlbGVjdDItcmVtb3ZlZCIsdmFsOnRoaXMuaWQobiksY2hvaWNlOm59KSx0aGlzLnRyaWdnZXJDaGFuZ2Uoe3JlbW92ZWQ6bn0pKX19LGluaXRTZWxlY3Rpb246ZnVuY3Rpb24oKXtpZih0aGlzLmlzUGxhY2Vob2xkZXJPcHRpb25TZWxlY3RlZCgpKXRoaXMudXBkYXRlU2VsZWN0aW9uKG51bGwpLHRoaXMuY2xvc2UoKSx0aGlzLnNldFBsYWNlaG9sZGVyKCk7ZWxzZXt2YXIgdD10aGlzO3RoaXMub3B0cy5pbml0U2VsZWN0aW9uLmNhbGwobnVsbCx0aGlzLm9wdHMuZWxlbWVudCxmdW5jdGlvbihlKXtlIT09biYmbnVsbCE9PWUmJih0LnVwZGF0ZVNlbGVjdGlvbihlKSx0LmNsb3NlKCksdC5zZXRQbGFjZWhvbGRlcigpLHQubmV4dFNlYXJjaFRlcm09dC5vcHRzLm5leHRTZWFyY2hUZXJtKGUsdC5zZWFyY2gudmFsKCkpKX0pfX0saXNQbGFjZWhvbGRlck9wdGlvblNlbGVjdGVkOmZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHRoaXMuZ2V0UGxhY2Vob2xkZXIoKSE9PW4mJigodD10aGlzLmdldFBsYWNlaG9sZGVyT3B0aW9uKCkpIT09biYmdC5wcm9wKCJzZWxlY3RlZCIpfHwiIj09PXRoaXMub3B0cy5lbGVtZW50LnZhbCgpfHx0aGlzLm9wdHMuZWxlbWVudC52YWwoKT09PW58fG51bGw9PT10aGlzLm9wdHMuZWxlbWVudC52YWwoKSl9LHByZXBhcmVPcHRzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5wYXJlbnQucHJlcGFyZU9wdHMuYXBwbHkodGhpcyxhcmd1bWVudHMpLG49dGhpcztyZXR1cm4ic2VsZWN0Ij09PWUuZWxlbWVudC5nZXQoMCkudGFnTmFtZS50b0xvd2VyQ2FzZSgpP2UuaW5pdFNlbGVjdGlvbj1mdW5jdGlvbih0LGUpe3ZhciBpPXQuZmluZCgib3B0aW9uIikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2VsZWN0ZWQmJiF0aGlzLmRpc2FibGVkfSk7ZShuLm9wdGlvblRvRGF0YShpKSl9OiJkYXRhImluIGUmJihlLmluaXRTZWxlY3Rpb249ZS5pbml0U2VsZWN0aW9ufHxmdW5jdGlvbihuLGkpe3ZhciByPW4udmFsKCksbz1udWxsO2UucXVlcnkoe21hdGNoZXI6ZnVuY3Rpb24odCxuLGkpe3ZhciBzPWwocixlLmlkKGkpKTtyZXR1cm4gcyYmKG89aSksc30sY2FsbGJhY2s6dC5pc0Z1bmN0aW9uKGkpP2Z1bmN0aW9uKCl7aShvKX06dC5ub29wfSl9KSxlfSxnZXRQbGFjZWhvbGRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNlbGVjdCYmdGhpcy5nZXRQbGFjZWhvbGRlck9wdGlvbigpPT09bj9uOnRoaXMucGFyZW50LmdldFBsYWNlaG9sZGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sc2V0UGxhY2Vob2xkZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldFBsYWNlaG9sZGVyKCk7aWYodGhpcy5pc1BsYWNlaG9sZGVyT3B0aW9uU2VsZWN0ZWQoKSYmdCE9PW4pe2lmKHRoaXMuc2VsZWN0JiZ0aGlzLmdldFBsYWNlaG9sZGVyT3B0aW9uKCk9PT1uKXJldHVybjt0aGlzLnNlbGVjdGlvbi5maW5kKCIuc2VsZWN0Mi1jaG9zZW4iKS5odG1sKHRoaXMub3B0cy5lc2NhcGVNYXJrdXAodCkpLHRoaXMuc2VsZWN0aW9uLmFkZENsYXNzKCJzZWxlY3QyLWRlZmF1bHQiKSx0aGlzLmNvbnRhaW5lci5yZW1vdmVDbGFzcygic2VsZWN0Mi1hbGxvd2NsZWFyIil9fSxwb3N0cHJvY2Vzc1Jlc3VsdHM6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPTAscj10aGlzO2lmKHRoaXMuZmluZEhpZ2hsaWdodGFibGVDaG9pY2VzKCkuZWFjaDIoZnVuY3Rpb24odCxlKXtpZihsKHIuaWQoZS5kYXRhKCJzZWxlY3QyLWRhdGEiKSksci5vcHRzLmVsZW1lbnQudmFsKCkpKXJldHVybiBpPXQsITF9KSxuIT09ITEmJihlPT09ITAmJmk+PTA/dGhpcy5oaWdobGlnaHQoaSk6dGhpcy5oaWdobGlnaHQoMCkpLGU9PT0hMCl7dmFyIG89dGhpcy5vcHRzLm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoO28+PTAmJnRoaXMuc2hvd1NlYXJjaChBKHQucmVzdWx0cyk+PW8pfX0sc2hvd1NlYXJjaDpmdW5jdGlvbihlKXt0aGlzLnNob3dTZWFyY2hJbnB1dCE9PWUmJih0aGlzLnNob3dTZWFyY2hJbnB1dD1lLHRoaXMuZHJvcGRvd24uZmluZCgiLnNlbGVjdDItc2VhcmNoIikudG9nZ2xlQ2xhc3MoInNlbGVjdDItc2VhcmNoLWhpZGRlbiIsIWUpLHRoaXMuZHJvcGRvd24uZmluZCgiLnNlbGVjdDItc2VhcmNoIikudG9nZ2xlQ2xhc3MoInNlbGVjdDItb2Zmc2NyZWVuIiwhZSksdCh0aGlzLmRyb3Bkb3duLHRoaXMuY29udGFpbmVyKS50b2dnbGVDbGFzcygic2VsZWN0Mi13aXRoLXNlYXJjaGJveCIsZSkpfSxvblNlbGVjdDpmdW5jdGlvbih0LGUpe2lmKHRoaXMudHJpZ2dlclNlbGVjdCh0KSl7dmFyIG49dGhpcy5vcHRzLmVsZW1lbnQudmFsKCksaT10aGlzLmRhdGEoKTt0aGlzLm9wdHMuZWxlbWVudC52YWwodGhpcy5pZCh0KSksdGhpcy51cGRhdGVTZWxlY3Rpb24odCksdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih7dHlwZToic2VsZWN0Mi1zZWxlY3RlZCIsdmFsOnRoaXMuaWQodCksY2hvaWNlOnR9KSx0aGlzLm5leHRTZWFyY2hUZXJtPXRoaXMub3B0cy5uZXh0U2VhcmNoVGVybSh0LHRoaXMuc2VhcmNoLnZhbCgpKSx0aGlzLmNsb3NlKCksZSYmZS5ub0ZvY3VzfHwhdGhpcy5vcHRzLnNob3VsZEZvY3VzSW5wdXQodGhpcyl8fHRoaXMuZm9jdXNzZXIuZm9jdXMoKSxsKG4sdGhpcy5pZCh0KSl8fHRoaXMudHJpZ2dlckNoYW5nZSh7YWRkZWQ6dCxyZW1vdmVkOml9KX19LHVwZGF0ZVNlbGVjdGlvbjpmdW5jdGlvbih0KXt2YXIgZSxpLHI9dGhpcy5zZWxlY3Rpb24uZmluZCgiLnNlbGVjdDItY2hvc2VuIik7dGhpcy5zZWxlY3Rpb24uZGF0YSgic2VsZWN0Mi1kYXRhIix0KSxyLmVtcHR5KCksbnVsbCE9PXQmJihlPXRoaXMub3B0cy5mb3JtYXRTZWxlY3Rpb24odCxyLHRoaXMub3B0cy5lc2NhcGVNYXJrdXApKSxlIT09biYmci5hcHBlbmQoZSksaT10aGlzLm9wdHMuZm9ybWF0U2VsZWN0aW9uQ3NzQ2xhc3ModCxyKSxpIT09biYmci5hZGRDbGFzcyhpKSx0aGlzLnNlbGVjdGlvbi5yZW1vdmVDbGFzcygic2VsZWN0Mi1kZWZhdWx0IiksdGhpcy5vcHRzLmFsbG93Q2xlYXImJnRoaXMuZ2V0UGxhY2Vob2xkZXIoKSE9PW4mJnRoaXMuY29udGFpbmVyLmFkZENsYXNzKCJzZWxlY3QyLWFsbG93Y2xlYXIiKX0sdmFsOmZ1bmN0aW9uIFcoKXt2YXIgVyx0PSExLGU9bnVsbCxpPXRoaXMscj10aGlzLmRhdGEoKTtpZigwPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5vcHRzLmVsZW1lbnQudmFsKCk7aWYoVz1hcmd1bWVudHNbMF0sYXJndW1lbnRzLmxlbmd0aD4xJiYodD1hcmd1bWVudHNbMV0pLHRoaXMuc2VsZWN0KXRoaXMuc2VsZWN0LnZhbChXKS5maW5kKCJvcHRpb24iKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZWxlY3RlZH0pLmVhY2gyKGZ1bmN0aW9uKHQsbil7cmV0dXJuIGU9aS5vcHRpb25Ub0RhdGEobiksITF9KSx0aGlzLnVwZGF0ZVNlbGVjdGlvbihlKSx0aGlzLnNldFBsYWNlaG9sZGVyKCksdCYmdGhpcy50cmlnZ2VyQ2hhbmdlKHthZGRlZDplLHJlbW92ZWQ6cn0pO2Vsc2V7aWYoIVcmJjAhPT1XKXJldHVybiB2b2lkIHRoaXMuY2xlYXIodCk7aWYodGhpcy5vcHRzLmluaXRTZWxlY3Rpb249PT1uKXRocm93IG5ldyBFcnJvcigiY2Fubm90IGNhbGwgdmFsKCkgaWYgaW5pdFNlbGVjdGlvbigpIGlzIG5vdCBkZWZpbmVkIik7dGhpcy5vcHRzLmVsZW1lbnQudmFsKFcpLHRoaXMub3B0cy5pbml0U2VsZWN0aW9uKHRoaXMub3B0cy5lbGVtZW50LGZ1bmN0aW9uKGUpe2kub3B0cy5lbGVtZW50LnZhbChlP2kuaWQoZSk6IiIpLGkudXBkYXRlU2VsZWN0aW9uKGUpLGkuc2V0UGxhY2Vob2xkZXIoKSx0JiZpLnRyaWdnZXJDaGFuZ2Uoe2FkZGVkOmUscmVtb3ZlZDpyfSl9KX19LGNsZWFyU2VhcmNoOmZ1bmN0aW9uKCl7dGhpcy5zZWFyY2gudmFsKCIiKSx0aGlzLmZvY3Vzc2VyLnZhbCgiIil9LGRhdGE6ZnVuY3Rpb24gQih0KXt2YXIgQixlPSExO3JldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aD8oQj10aGlzLnNlbGVjdGlvbi5kYXRhKCJzZWxlY3QyLWRhdGEiKSxCPT1uJiYoQj1udWxsKSxCKTooYXJndW1lbnRzLmxlbmd0aD4xJiYoZT1hcmd1bWVudHNbMV0pLHZvaWQodD8oQj10aGlzLmRhdGEoKSx0aGlzLm9wdHMuZWxlbWVudC52YWwodD90aGlzLmlkKHQpOiIiKSx0aGlzLnVwZGF0ZVNlbGVjdGlvbih0KSxlJiZ0aGlzLnRyaWdnZXJDaGFuZ2Uoe2FkZGVkOnQscmVtb3ZlZDpCfSkpOnRoaXMuY2xlYXIoZSkpKX19KSxOPUMoTyx7Y3JlYXRlQ29udGFpbmVyOmZ1bmN0aW9uKCl7dmFyIGU9dChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSkuYXR0cih7ImNsYXNzIjoic2VsZWN0Mi1jb250YWluZXIgc2VsZWN0Mi1jb250YWluZXItbXVsdGkifSkuaHRtbChbIjx1bCBjbGFzcz0nc2VsZWN0Mi1jaG9pY2VzJz4iLCIgIDxsaSBjbGFzcz0nc2VsZWN0Mi1zZWFyY2gtZmllbGQnPiIsIiAgICA8bGFiZWwgZm9yPScnIGNsYXNzPSdzZWxlY3QyLW9mZnNjcmVlbic+PC9sYWJlbD4iLCIgICAgPGlucHV0IHR5cGU9J3RleHQnIGF1dG9jb21wbGV0ZT0nb2ZmJyBhdXRvY29ycmVjdD0nb2ZmJyBhdXRvY2FwaXRhbGl6ZT0nb2ZmJyBzcGVsbGNoZWNrPSdmYWxzZScgY2xhc3M9J3NlbGVjdDItaW5wdXQnPiIsIiAgPC9saT4iLCI8L3VsPiIsIjxkaXYgY2xhc3M9J3NlbGVjdDItZHJvcCBzZWxlY3QyLWRyb3AtbXVsdGkgc2VsZWN0Mi1kaXNwbGF5LW5vbmUnPiIsIiAgIDx1bCBjbGFzcz0nc2VsZWN0Mi1yZXN1bHRzJz4iLCIgICA8L3VsPiIsIjwvZGl2PiJdLmpvaW4oIiIpKTtyZXR1cm4gZX0scHJlcGFyZU9wdHM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLnBhcmVudC5wcmVwYXJlT3B0cy5hcHBseSh0aGlzLGFyZ3VtZW50cyksbj10aGlzO3JldHVybiJzZWxlY3QiPT09ZS5lbGVtZW50LmdldCgwKS50YWdOYW1lLnRvTG93ZXJDYXNlKCk/ZS5pbml0U2VsZWN0aW9uPWZ1bmN0aW9uKHQsZSl7dmFyIGk9W107dC5maW5kKCJvcHRpb24iKS5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZWxlY3RlZCYmIXRoaXMuZGlzYWJsZWR9KS5lYWNoMihmdW5jdGlvbih0LGUpe2kucHVzaChuLm9wdGlvblRvRGF0YShlKSl9KSxlKGkpfToiZGF0YSJpbiBlJiYoZS5pbml0U2VsZWN0aW9uPWUuaW5pdFNlbGVjdGlvbnx8ZnVuY3Rpb24obixpKXt2YXIgcj1jKG4udmFsKCksZS5zZXBhcmF0b3IpLG89W107ZS5xdWVyeSh7bWF0Y2hlcjpmdW5jdGlvbihuLGkscyl7dmFyIGE9dC5ncmVwKHIsZnVuY3Rpb24odCl7cmV0dXJuIGwodCxlLmlkKHMpKX0pLmxlbmd0aDtyZXR1cm4gYSYmby5wdXNoKHMpLGF9LGNhbGxiYWNrOnQuaXNGdW5jdGlvbihpKT9mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxuPTA7bjxyLmxlbmd0aDtuKyspZm9yKHZhciBzPXJbbl0sYT0wO2E8by5sZW5ndGg7YSsrKXt2YXIgYz1vW2FdO2lmKGwocyxlLmlkKGMpKSl7dC5wdXNoKGMpLG8uc3BsaWNlKGEsMSk7YnJlYWt9fWkodCl9OnQubm9vcH0pfSksZX0sc2VsZWN0Q2hvaWNlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY29udGFpbmVyLmZpbmQoIi5zZWxlY3QyLXNlYXJjaC1jaG9pY2UtZm9jdXMiKTtlLmxlbmd0aCYmdCYmdFswXT09ZVswXXx8KGUubGVuZ3RoJiZ0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKCJjaG9pY2UtZGVzZWxlY3RlZCIsZSksZS5yZW1vdmVDbGFzcygic2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWZvY3VzIiksdCYmdC5sZW5ndGgmJih0aGlzLmNsb3NlKCksdC5hZGRDbGFzcygic2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWZvY3VzIiksdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcigiY2hvaWNlLXNlbGVjdGVkIix0KSkpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dCgibGFiZWxbZm9yPSciK3RoaXMuc2VhcmNoLmF0dHIoImlkIikrIiddIikuYXR0cigiZm9yIix0aGlzLm9wdHMuZWxlbWVudC5hdHRyKCJpZCIpKSx0aGlzLnBhcmVudC5kZXN0cm95LmFwcGx5KHRoaXMsYXJndW1lbnRzKSxELmNhbGwodGhpcywic2VhcmNoQ29udGFpbmVyIiwic2VsZWN0aW9uIil9LGluaXRDb250YWluZXI6ZnVuY3Rpb24oKXt2YXIgZSxuPSIuc2VsZWN0Mi1jaG9pY2VzIjt0aGlzLnNlYXJjaENvbnRhaW5lcj10aGlzLmNvbnRhaW5lci5maW5kKCIuc2VsZWN0Mi1zZWFyY2gtZmllbGQiKSx0aGlzLnNlbGVjdGlvbj1lPXRoaXMuY29udGFpbmVyLmZpbmQobik7dmFyIGk9dGhpczt0aGlzLnNlbGVjdGlvbi5vbigiY2xpY2siLCIuc2VsZWN0Mi1jb250YWluZXI6bm90KC5zZWxlY3QyLWNvbnRhaW5lci1kaXNhYmxlZCkgLnNlbGVjdDItc2VhcmNoLWNob2ljZTpub3QoLnNlbGVjdDItbG9ja2VkKSIsZnVuY3Rpb24oZSl7aS5zZWFyY2hbMF0uZm9jdXMoKSxpLnNlbGVjdENob2ljZSh0KHRoaXMpKX0pLHRoaXMuc2VhcmNoLmF0dHIoImlkIiwiczJpZF9hdXRvZ2VuIitJKCkpLHRoaXMuc2VhcmNoLnByZXYoKS50ZXh0KHQoImxhYmVsW2Zvcj0nIit0aGlzLm9wdHMuZWxlbWVudC5hdHRyKCJpZCIpKyInXSIpLnRleHQoKSkuYXR0cigiZm9yIix0aGlzLnNlYXJjaC5hdHRyKCJpZCIpKSx0aGlzLnNlYXJjaC5vbigiaW5wdXQgcGFzdGUiLHRoaXMuYmluZChmdW5jdGlvbigpe3RoaXMuc2VhcmNoLmF0dHIoInBsYWNlaG9sZGVyIikmJjA9PXRoaXMuc2VhcmNoLnZhbCgpLmxlbmd0aHx8dGhpcy5pc0ludGVyZmFjZUVuYWJsZWQoKSYmKHRoaXMub3BlbmVkKCl8fHRoaXMub3BlbigpKX0pKSx0aGlzLnNlYXJjaC5hdHRyKCJ0YWJpbmRleCIsdGhpcy5lbGVtZW50VGFiSW5kZXgpLHRoaXMua2V5ZG93bnM9MCx0aGlzLnNlYXJjaC5vbigia2V5ZG93biIsdGhpcy5iaW5kKGZ1bmN0aW9uKHQpe2lmKHRoaXMuaXNJbnRlcmZhY2VFbmFibGVkKCkpeysrdGhpcy5rZXlkb3duczt2YXIgbj1lLmZpbmQoIi5zZWxlY3QyLXNlYXJjaC1jaG9pY2UtZm9jdXMiKSxpPW4ucHJldigiLnNlbGVjdDItc2VhcmNoLWNob2ljZTpub3QoLnNlbGVjdDItbG9ja2VkKSIpLHI9bi5uZXh0KCIuc2VsZWN0Mi1zZWFyY2gtY2hvaWNlOm5vdCguc2VsZWN0Mi1sb2NrZWQpIiksbz1fKHRoaXMuc2VhcmNoKTtpZihuLmxlbmd0aCYmKHQud2hpY2g9PVkuTEVGVHx8dC53aGljaD09WS5SSUdIVHx8dC53aGljaD09WS5CQUNLU1BBQ0V8fHQud2hpY2g9PVkuREVMRVRFfHx0LndoaWNoPT1ZLkVOVEVSKSl7dmFyIHM9bjtyZXR1cm4gdC53aGljaD09WS5MRUZUJiZpLmxlbmd0aD9zPWk6dC53aGljaD09WS5SSUdIVD9zPXIubGVuZ3RoP3I6bnVsbDp0LndoaWNoPT09WS5CQUNLU1BBQ0U/dGhpcy51bnNlbGVjdChuLmZpcnN0KCkpJiYodGhpcy5zZWFyY2gud2lkdGgoMTApLHM9aS5sZW5ndGg/aTpyKTp0LndoaWNoPT1ZLkRFTEVURT90aGlzLnVuc2VsZWN0KG4uZmlyc3QoKSkmJih0aGlzLnNlYXJjaC53aWR0aCgxMCkscz1yLmxlbmd0aD9yOm51bGwpOnQud2hpY2g9PVkuRU5URVImJihzPW51bGwpLHRoaXMuc2VsZWN0Q2hvaWNlKHMpLGcodCksdm9pZChzJiZzLmxlbmd0aHx8dGhpcy5vcGVuKCkpfWlmKCh0LndoaWNoPT09WS5CQUNLU1BBQ0UmJjE9PXRoaXMua2V5ZG93bnN8fHQud2hpY2g9PVkuTEVGVCkmJjA9PW8ub2Zmc2V0JiYhby5sZW5ndGgpcmV0dXJuIHRoaXMuc2VsZWN0Q2hvaWNlKGUuZmluZCgiLnNlbGVjdDItc2VhcmNoLWNob2ljZTpub3QoLnNlbGVjdDItbG9ja2VkKSIpLmxhc3QoKSksdm9pZCBnKHQpO2lmKHRoaXMuc2VsZWN0Q2hvaWNlKG51bGwpLHRoaXMub3BlbmVkKCkpc3dpdGNoKHQud2hpY2gpe2Nhc2UgWS5VUDpjYXNlIFkuRE9XTjpyZXR1cm4gdGhpcy5tb3ZlSGlnaGxpZ2h0KHQud2hpY2g9PT1ZLlVQPy0xOjEpLHZvaWQgZyh0KTtjYXNlIFkuRU5URVI6cmV0dXJuIHRoaXMuc2VsZWN0SGlnaGxpZ2h0ZWQoKSx2b2lkIGcodCk7Y2FzZSBZLlRBQjpyZXR1cm4gdGhpcy5zZWxlY3RIaWdobGlnaHRlZCh7bm9Gb2N1czohMH0pLHZvaWQgdGhpcy5jbG9zZSgpO2Nhc2UgWS5FU0M6cmV0dXJuIHRoaXMuY2FuY2VsKHQpLHZvaWQgZyh0KX1pZih0LndoaWNoIT09WS5UQUImJiFZLmlzQ29udHJvbCh0KSYmIVkuaXNGdW5jdGlvbktleSh0KSYmdC53aGljaCE9PVkuQkFDS1NQQUNFJiZ0LndoaWNoIT09WS5FU0Mpe2lmKHQud2hpY2g9PT1ZLkVOVEVSKXtpZih0aGlzLm9wdHMub3Blbk9uRW50ZXI9PT0hMSlyZXR1cm47aWYodC5hbHRLZXl8fHQuY3RybEtleXx8dC5zaGlmdEtleXx8dC5tZXRhS2V5KXJldHVybn10aGlzLm9wZW4oKSx0LndoaWNoIT09WS5QQUdFX1VQJiZ0LndoaWNoIT09WS5QQUdFX0RPV058fGcodCksdC53aGljaD09PVkuRU5URVImJmcodCl9fX0pKSx0aGlzLnNlYXJjaC5vbigia2V5dXAiLHRoaXMuYmluZChmdW5jdGlvbih0KXt0aGlzLmtleWRvd25zPTAsdGhpcy5yZXNpemVTZWFyY2goKX0pKSx0aGlzLnNlYXJjaC5vbigiYmx1ciIsdGhpcy5iaW5kKGZ1bmN0aW9uKGUpe3RoaXMuY29udGFpbmVyLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWNvbnRhaW5lci1hY3RpdmUiKSx0aGlzLnNlYXJjaC5yZW1vdmVDbGFzcygic2VsZWN0Mi1mb2N1c2VkIiksdGhpcy5zZWxlY3RDaG9pY2UobnVsbCksdGhpcy5vcGVuZWQoKXx8dGhpcy5jbGVhclNlYXJjaCgpLGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih0LkV2ZW50KCJzZWxlY3QyLWJsdXIiKSl9KSksdGhpcy5jb250YWluZXIub24oImNsaWNrIixuLHRoaXMuYmluZChmdW5jdGlvbihlKXt0aGlzLmlzSW50ZXJmYWNlRW5hYmxlZCgpJiYodChlLnRhcmdldCkuY2xvc2VzdCgiLnNlbGVjdDItc2VhcmNoLWNob2ljZSIpLmxlbmd0aD4wfHwodGhpcy5zZWxlY3RDaG9pY2UobnVsbCksdGhpcy5jbGVhclBsYWNlaG9sZGVyKCksdGhpcy5jb250YWluZXIuaGFzQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpfHx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHQuRXZlbnQoInNlbGVjdDItZm9jdXMiKSksdGhpcy5vcGVuKCksdGhpcy5mb2N1c1NlYXJjaCgpLGUucHJldmVudERlZmF1bHQoKSkpfSkpLHRoaXMuY29udGFpbmVyLm9uKCJmb2N1cyIsbix0aGlzLmJpbmQoZnVuY3Rpb24oKXt0aGlzLmlzSW50ZXJmYWNlRW5hYmxlZCgpJiYodGhpcy5jb250YWluZXIuaGFzQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpfHx0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKHQuRXZlbnQoInNlbGVjdDItZm9jdXMiKSksdGhpcy5jb250YWluZXIuYWRkQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpLHRoaXMuZHJvcGRvd24uYWRkQ2xhc3MoInNlbGVjdDItZHJvcC1hY3RpdmUiKSx0aGlzLmNsZWFyUGxhY2Vob2xkZXIoKSl9KSksdGhpcy5pbml0Q29udGFpbmVyV2lkdGgoKSx0aGlzLm9wdHMuZWxlbWVudC5hZGRDbGFzcygic2VsZWN0Mi1vZmZzY3JlZW4iKSx0aGlzLmNsZWFyU2VhcmNoKCl9LGVuYWJsZUludGVyZmFjZTpmdW5jdGlvbigpe3RoaXMucGFyZW50LmVuYWJsZUludGVyZmFjZS5hcHBseSh0aGlzLGFyZ3VtZW50cykmJnRoaXMuc2VhcmNoLnByb3AoImRpc2FibGVkIiwhdGhpcy5pc0ludGVyZmFjZUVuYWJsZWQoKSl9LGluaXRTZWxlY3Rpb246ZnVuY3Rpb24oKXtpZigiIj09PXRoaXMub3B0cy5lbGVtZW50LnZhbCgpJiYiIj09PXRoaXMub3B0cy5lbGVtZW50LnRleHQoKSYmKHRoaXMudXBkYXRlU2VsZWN0aW9uKFtdKSx0aGlzLmNsb3NlKCksdGhpcy5jbGVhclNlYXJjaCgpKSx0aGlzLnNlbGVjdHx8IiIhPT10aGlzLm9wdHMuZWxlbWVudC52YWwoKSl7dmFyIHQ9dGhpczt0aGlzLm9wdHMuaW5pdFNlbGVjdGlvbi5jYWxsKG51bGwsdGhpcy5vcHRzLmVsZW1lbnQsZnVuY3Rpb24oZSl7ZSE9PW4mJm51bGwhPT1lJiYodC51cGRhdGVTZWxlY3Rpb24oZSksdC5jbG9zZSgpLHQuY2xlYXJTZWFyY2goKSl9KX19LGNsZWFyU2VhcmNoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRQbGFjZWhvbGRlcigpLGU9dGhpcy5nZXRNYXhTZWFyY2hXaWR0aCgpO3QhPT1uJiYwPT09dGhpcy5nZXRWYWwoKS5sZW5ndGgmJnRoaXMuc2VhcmNoLmhhc0NsYXNzKCJzZWxlY3QyLWZvY3VzZWQiKT09PSExPyh0aGlzLnNlYXJjaC52YWwodCkuYWRkQ2xhc3MoInNlbGVjdDItZGVmYXVsdCIpLHRoaXMuc2VhcmNoLndpZHRoKGU+MD9lOnRoaXMuY29udGFpbmVyLmNzcygid2lkdGgiKSkpOnRoaXMuc2VhcmNoLnZhbCgiIikud2lkdGgoMTApfSxjbGVhclBsYWNlaG9sZGVyOmZ1bmN0aW9uKCl7dGhpcy5zZWFyY2guaGFzQ2xhc3MoInNlbGVjdDItZGVmYXVsdCIpJiZ0aGlzLnNlYXJjaC52YWwoIiIpLnJlbW92ZUNsYXNzKCJzZWxlY3QyLWRlZmF1bHQiKX0sb3BlbmluZzpmdW5jdGlvbigpe3RoaXMuY2xlYXJQbGFjZWhvbGRlcigpLHRoaXMucmVzaXplU2VhcmNoKCksdGhpcy5wYXJlbnQub3BlbmluZy5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5mb2N1c1NlYXJjaCgpLCIiPT09dGhpcy5zZWFyY2gudmFsKCkmJnRoaXMubmV4dFNlYXJjaFRlcm0hPW4mJih0aGlzLnNlYXJjaC52YWwodGhpcy5uZXh0U2VhcmNoVGVybSksdGhpcy5zZWFyY2guc2VsZWN0KCkpLHRoaXMudXBkYXRlUmVzdWx0cyghMCksdGhpcy5vcHRzLnNob3VsZEZvY3VzSW5wdXQodGhpcykmJnRoaXMuc2VhcmNoLmZvY3VzKCksdGhpcy5vcHRzLmVsZW1lbnQudHJpZ2dlcih0LkV2ZW50KCJzZWxlY3QyLW9wZW4iKSl9LGNsb3NlOmZ1bmN0aW9uKCl7dGhpcy5vcGVuZWQoKSYmdGhpcy5wYXJlbnQuY2xvc2UuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxmb2N1czpmdW5jdGlvbigpe3RoaXMuY2xvc2UoKSx0aGlzLnNlYXJjaC5mb2N1cygpfSxpc0ZvY3VzZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZWFyY2guaGFzQ2xhc3MoInNlbGVjdDItZm9jdXNlZCIpfSx1cGRhdGVTZWxlY3Rpb246ZnVuY3Rpb24oZSl7dmFyIG49W10saT1bXSxyPXRoaXM7dChlKS5lYWNoKGZ1bmN0aW9uKCl7cyhyLmlkKHRoaXMpLG4pPDAmJihuLnB1c2goci5pZCh0aGlzKSksaS5wdXNoKHRoaXMpKX0pLGU9aSx0aGlzLnNlbGVjdGlvbi5maW5kKCIuc2VsZWN0Mi1zZWFyY2gtY2hvaWNlIikucmVtb3ZlKCksdChlKS5lYWNoKGZ1bmN0aW9uKCl7ci5hZGRTZWxlY3RlZENob2ljZSh0aGlzKX0pLHIucG9zdHByb2Nlc3NSZXN1bHRzKCl9LHRva2VuaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5zZWFyY2gudmFsKCk7dD10aGlzLm9wdHMudG9rZW5pemVyLmNhbGwodGhpcyx0LHRoaXMuZGF0YSgpLHRoaXMuYmluZCh0aGlzLm9uU2VsZWN0KSx0aGlzLm9wdHMpLG51bGwhPXQmJnQhPW4mJih0aGlzLnNlYXJjaC52YWwodCksdC5sZW5ndGg+MCYmdGhpcy5vcGVuKCkpfSxvblNlbGVjdDpmdW5jdGlvbih0LGUpe3RoaXMudHJpZ2dlclNlbGVjdCh0KSYmIiIhPT10LnRleHQmJih0aGlzLmFkZFNlbGVjdGVkQ2hvaWNlKHQpLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoe3R5cGU6InNlbGVjdGVkIix2YWw6dGhpcy5pZCh0KSxjaG9pY2U6dH0pLHRoaXMubmV4dFNlYXJjaFRlcm09dGhpcy5vcHRzLm5leHRTZWFyY2hUZXJtKHQsdGhpcy5zZWFyY2gudmFsKCkpLHRoaXMuY2xlYXJTZWFyY2goKSx0aGlzLnVwZGF0ZVJlc3VsdHMoKSwhdGhpcy5zZWxlY3QmJnRoaXMub3B0cy5jbG9zZU9uU2VsZWN0fHx0aGlzLnBvc3Rwcm9jZXNzUmVzdWx0cyh0LCExLHRoaXMub3B0cy5jbG9zZU9uU2VsZWN0PT09ITApLHRoaXMub3B0cy5jbG9zZU9uU2VsZWN0Pyh0aGlzLmNsb3NlKCksdGhpcy5zZWFyY2gud2lkdGgoMTApKTp0aGlzLmNvdW50U2VsZWN0YWJsZVJlc3VsdHMoKT4wPyh0aGlzLnNlYXJjaC53aWR0aCgxMCksdGhpcy5yZXNpemVTZWFyY2goKSx0aGlzLmdldE1heGltdW1TZWxlY3Rpb25TaXplKCk+MCYmdGhpcy52YWwoKS5sZW5ndGg+PXRoaXMuZ2V0TWF4aW11bVNlbGVjdGlvblNpemUoKT90aGlzLnVwZGF0ZVJlc3VsdHMoITApOnRoaXMubmV4dFNlYXJjaFRlcm0hPW4mJih0aGlzLnNlYXJjaC52YWwodGhpcy5uZXh0U2VhcmNoVGVybSksdGhpcy51cGRhdGVSZXN1bHRzKCksdGhpcy5zZWFyY2guc2VsZWN0KCkpLHRoaXMucG9zaXRpb25Ecm9wZG93bigpKToodGhpcy5jbG9zZSgpLHRoaXMuc2VhcmNoLndpZHRoKDEwKSksdGhpcy50cmlnZ2VyQ2hhbmdlKHthZGRlZDp0fSksZSYmZS5ub0ZvY3VzfHx0aGlzLmZvY3VzU2VhcmNoKCkpfSxjYW5jZWw6ZnVuY3Rpb24oKXt0aGlzLmNsb3NlKCksdGhpcy5mb2N1c1NlYXJjaCgpfSxhZGRTZWxlY3RlZENob2ljZTpmdW5jdGlvbihlKXt2YXIgaSxyLG89IWUubG9ja2VkLHM9dCgiPGxpIGNsYXNzPSdzZWxlY3QyLXNlYXJjaC1jaG9pY2UnPiAgICA8ZGl2PjwvZGl2PiAgICA8YSBocmVmPScjJyBjbGFzcz0nc2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWNsb3NlJyB0YWJpbmRleD0nLTEnPjwvYT48L2xpPiIpLGE9dCgiPGxpIGNsYXNzPSdzZWxlY3QyLXNlYXJjaC1jaG9pY2Ugc2VsZWN0Mi1sb2NrZWQnPjxkaXY+PC9kaXY+PC9saT4iKSxsPW8/czphLGM9dGhpcy5pZChlKSx1PXRoaXMuZ2V0VmFsKCk7aT10aGlzLm9wdHMuZm9ybWF0U2VsZWN0aW9uKGUsbC5maW5kKCJkaXYiKSx0aGlzLm9wdHMuZXNjYXBlTWFya3VwKSxpIT1uJiZsLmZpbmQoImRpdiIpLnJlcGxhY2VXaXRoKCI8ZGl2PiIraSsiPC9kaXY+Iikscj10aGlzLm9wdHMuZm9ybWF0U2VsZWN0aW9uQ3NzQ2xhc3MoZSxsLmZpbmQoImRpdiIpKSxyIT1uJiZsLmFkZENsYXNzKHIpLG8mJmwuZmluZCgiLnNlbGVjdDItc2VhcmNoLWNob2ljZS1jbG9zZSIpLm9uKCJtb3VzZWRvd24iLGcpLm9uKCJjbGljayBkYmxjbGljayIsdGhpcy5iaW5kKGZ1bmN0aW9uKGUpe3RoaXMuaXNJbnRlcmZhY2VFbmFibGVkKCkmJih0aGlzLnVuc2VsZWN0KHQoZS50YXJnZXQpKSx0aGlzLnNlbGVjdGlvbi5maW5kKCIuc2VsZWN0Mi1zZWFyY2gtY2hvaWNlLWZvY3VzIikucmVtb3ZlQ2xhc3MoInNlbGVjdDItc2VhcmNoLWNob2ljZS1mb2N1cyIpLGcoZSksdGhpcy5jbG9zZSgpLHRoaXMuZm9jdXNTZWFyY2goKSl9KSkub24oImZvY3VzIix0aGlzLmJpbmQoZnVuY3Rpb24oKXt0aGlzLmlzSW50ZXJmYWNlRW5hYmxlZCgpJiYodGhpcy5jb250YWluZXIuYWRkQ2xhc3MoInNlbGVjdDItY29udGFpbmVyLWFjdGl2ZSIpLHRoaXMuZHJvcGRvd24uYWRkQ2xhc3MoInNlbGVjdDItZHJvcC1hY3RpdmUiKSl9KSksbC5kYXRhKCJzZWxlY3QyLWRhdGEiLGUpLGwuaW5zZXJ0QmVmb3JlKHRoaXMuc2VhcmNoQ29udGFpbmVyKSx1LnB1c2goYyksdGhpcy5zZXRWYWwodSl9LHVuc2VsZWN0OmZ1bmN0aW9uKGUpe3ZhciBuLGkscj10aGlzLmdldFZhbCgpO2lmKGU9ZS5jbG9zZXN0KCIuc2VsZWN0Mi1zZWFyY2gtY2hvaWNlIiksMD09PWUubGVuZ3RoKXRocm93IkludmFsaWQgYXJndW1lbnQ6ICIrZSsiLiBNdXN0IGJlIC5zZWxlY3QyLXNlYXJjaC1jaG9pY2UiO2lmKG49ZS5kYXRhKCJzZWxlY3QyLWRhdGEiKSl7dmFyIG89dC5FdmVudCgic2VsZWN0Mi1yZW1vdmluZyIpO2lmKG8udmFsPXRoaXMuaWQobiksby5jaG9pY2U9bix0aGlzLm9wdHMuZWxlbWVudC50cmlnZ2VyKG8pLG8uaXNEZWZhdWx0UHJldmVudGVkKCkpcmV0dXJuITE7Zm9yKDsoaT1zKHRoaXMuaWQobikscikpPj0wOylyLnNwbGljZShpLDEpLHRoaXMuc2V0VmFsKHIpLHRoaXMuc2VsZWN0JiZ0aGlzLnBvc3Rwcm9jZXNzUmVzdWx0cygpO3JldHVybiBlLnJlbW92ZSgpLHRoaXMub3B0cy5lbGVtZW50LnRyaWdnZXIoe3R5cGU6InNlbGVjdDItcmVtb3ZlZCIsdmFsOnRoaXMuaWQobiksY2hvaWNlOm59KSx0aGlzLnRyaWdnZXJDaGFuZ2Uoe3JlbW92ZWQ6bn0pLCEwfX0scG9zdHByb2Nlc3NSZXN1bHRzOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLmdldFZhbCgpLHI9dGhpcy5yZXN1bHRzLmZpbmQoIi5zZWxlY3QyLXJlc3VsdCIpLG89dGhpcy5yZXN1bHRzLmZpbmQoIi5zZWxlY3QyLXJlc3VsdC13aXRoLWNoaWxkcmVuIiksYT10aGlzO3IuZWFjaDIoZnVuY3Rpb24odCxlKXt2YXIgbj1hLmlkKGUuZGF0YSgic2VsZWN0Mi1kYXRhIikpO3MobixpKT49MCYmKGUuYWRkQ2xhc3MoInNlbGVjdDItc2VsZWN0ZWQiKSxlLmZpbmQoIi5zZWxlY3QyLXJlc3VsdC1zZWxlY3RhYmxlIikuYWRkQ2xhc3MoInNlbGVjdDItc2VsZWN0ZWQiKSl9KSxvLmVhY2gyKGZ1bmN0aW9uKHQsZSl7ZS5pcygiLnNlbGVjdDItcmVzdWx0LXNlbGVjdGFibGUiKXx8MCE9PWUuZmluZCgiLnNlbGVjdDItcmVzdWx0LXNlbGVjdGFibGU6bm90KC5zZWxlY3QyLXNlbGVjdGVkKSIpLmxlbmd0aHx8ZS5hZGRDbGFzcygic2VsZWN0Mi1zZWxlY3RlZCIpfSksdGhpcy5oaWdobGlnaHQoKT09LTEmJm4hPT0hMSYmYS5oaWdobGlnaHQoMCksIXRoaXMub3B0cy5jcmVhdGVTZWFyY2hDaG9pY2UmJiFyLmZpbHRlcigiLnNlbGVjdDItcmVzdWx0Om5vdCguc2VsZWN0Mi1zZWxlY3RlZCkiKS5sZW5ndGg+MCYmKCF0fHx0JiYhdC5tb3JlJiYwPT09dGhpcy5yZXN1bHRzLmZpbmQoIi5zZWxlY3QyLW5vLXJlc3VsdHMiKS5sZW5ndGgpJiZMKGEub3B0cy5mb3JtYXROb01hdGNoZXMsImZvcm1hdE5vTWF0Y2hlcyIpJiZ0aGlzLnJlc3VsdHMuYXBwZW5kKCI8bGkgY2xhc3M9J3NlbGVjdDItbm8tcmVzdWx0cyc+Iit4KGEub3B0cy5mb3JtYXROb01hdGNoZXMsYS5vcHRzLmVsZW1lbnQsYS5zZWFyY2gudmFsKCkpKyI8L2xpPiIpfSxnZXRNYXhTZWFyY2hXaWR0aDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNlbGVjdGlvbi53aWR0aCgpLXUodGhpcy5zZWFyY2gpfSxyZXNpemVTZWFyY2g6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxyLG89dSh0aGlzLnNlYXJjaCk7dD15KHRoaXMuc2VhcmNoKSsxMCxlPXRoaXMuc2VhcmNoLm9mZnNldCgpLmxlZnQsbj10aGlzLnNlbGVjdGlvbi53aWR0aCgpLGk9dGhpcy5zZWxlY3Rpb24ub2Zmc2V0KCkubGVmdCxyPW4tKGUtaSktbyxyPHQmJihyPW4tbykscjw0MCYmKHI9bi1vKSxyPD0wJiYocj10KSx0aGlzLnNlYXJjaC53aWR0aChNYXRoLmZsb29yKHIpKX0sZ2V0VmFsOmZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIHRoaXMuc2VsZWN0Pyh0PXRoaXMuc2VsZWN0LnZhbCgpLG51bGw9PT10P1tdOnQpOih0PXRoaXMub3B0cy5lbGVtZW50LnZhbCgpLGModCx0aGlzLm9wdHMuc2VwYXJhdG9yKSl9LHNldFZhbDpmdW5jdGlvbihlKXt2YXIgbjt0aGlzLnNlbGVjdD90aGlzLnNlbGVjdC52YWwoZSk6KG49W10sdChlKS5lYWNoKGZ1bmN0aW9uKCl7cyh0aGlzLG4pPDAmJm4ucHVzaCh0aGlzKX0pLHRoaXMub3B0cy5lbGVtZW50LnZhbCgwPT09bi5sZW5ndGg/IiI6bi5qb2luKHRoaXMub3B0cy5zZXBhcmF0b3IpKSl9LGJ1aWxkQ2hhbmdlRGV0YWlsczpmdW5jdGlvbih0LGUpe2Zvcih2YXIgZT1lLnNsaWNlKDApLHQ9dC5zbGljZSgwKSxuPTA7bjxlLmxlbmd0aDtuKyspZm9yKHZhciBpPTA7aTx0Lmxlbmd0aDtpKyspbCh0aGlzLm9wdHMuaWQoZVtuXSksdGhpcy5vcHRzLmlkKHRbaV0pKSYmKGUuc3BsaWNlKG4sMSksbj4wJiZuLS0sdC5zcGxpY2UoaSwxKSxpLS0pO3JldHVybnthZGRlZDplLHJlbW92ZWQ6dH19LHZhbDpmdW5jdGlvbihlLGkpe3ZhciByLG89dGhpcztpZigwPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5nZXRWYWwoKTtpZihyPXRoaXMuZGF0YSgpLHIubGVuZ3RofHwocj1bXSksIWUmJjAhPT1lKXJldHVybiB0aGlzLm9wdHMuZWxlbWVudC52YWwoIiIpLHRoaXMudXBkYXRlU2VsZWN0aW9uKFtdKSx0aGlzLmNsZWFyU2VhcmNoKCksdm9pZChpJiZ0aGlzLnRyaWdnZXJDaGFuZ2Uoe2FkZGVkOnRoaXMuZGF0YSgpLHJlbW92ZWQ6cn0pKTtpZih0aGlzLnNldFZhbChlKSx0aGlzLnNlbGVjdCl0aGlzLm9wdHMuaW5pdFNlbGVjdGlvbih0aGlzLnNlbGVjdCx0aGlzLmJpbmQodGhpcy51cGRhdGVTZWxlY3Rpb24pKSxpJiZ0aGlzLnRyaWdnZXJDaGFuZ2UodGhpcy5idWlsZENoYW5nZURldGFpbHMocix0aGlzLmRhdGEoKSkpO2Vsc2V7aWYodGhpcy5vcHRzLmluaXRTZWxlY3Rpb249PT1uKXRocm93IG5ldyBFcnJvcigidmFsKCkgY2Fubm90IGJlIGNhbGxlZCBpZiBpbml0U2VsZWN0aW9uKCkgaXMgbm90IGRlZmluZWQiKTt0aGlzLm9wdHMuaW5pdFNlbGVjdGlvbih0aGlzLm9wdHMuZWxlbWVudCxmdW5jdGlvbihlKXt2YXIgbj10Lm1hcChlLG8uaWQpO28uc2V0VmFsKG4pLG8udXBkYXRlU2VsZWN0aW9uKGUpLG8uY2xlYXJTZWFyY2goKSxpJiZvLnRyaWdnZXJDaGFuZ2Uoby5idWlsZENoYW5nZURldGFpbHMocixvLmRhdGEoKSkpfSl9dGhpcy5jbGVhclNlYXJjaCgpfSxvblNvcnRTdGFydDpmdW5jdGlvbigpe2lmKHRoaXMuc2VsZWN0KXRocm93IG5ldyBFcnJvcigiU29ydGluZyBvZiBlbGVtZW50cyBpcyBub3Qgc3VwcG9ydGVkIHdoZW4gYXR0YWNoZWQgdG8gPHNlbGVjdD4uIEF0dGFjaCB0byA8aW5wdXQgdHlwZT0naGlkZGVuJy8+IGluc3RlYWQuIik7dGhpcy5zZWFyY2gud2lkdGgoMCksdGhpcy5zZWFyY2hDb250YWluZXIuaGlkZSgpfSxvblNvcnRFbmQ6ZnVuY3Rpb24oKXt2YXIgZT1bXSxuPXRoaXM7dGhpcy5zZWFyY2hDb250YWluZXIuc2hvdygpLHRoaXMuc2VhcmNoQ29udGFpbmVyLmFwcGVuZFRvKHRoaXMuc2VhcmNoQ29udGFpbmVyLnBhcmVudCgpKSx0aGlzLnJlc2l6ZVNlYXJjaCgpLHRoaXMuc2VsZWN0aW9uLmZpbmQoIi5zZWxlY3QyLXNlYXJjaC1jaG9pY2UiKS5lYWNoKGZ1bmN0aW9uKCl7ZS5wdXNoKG4ub3B0cy5pZCh0KHRoaXMpLmRhdGEoInNlbGVjdDItZGF0YSIpKSl9KSx0aGlzLnNldFZhbChlKSx0aGlzLnRyaWdnZXJDaGFuZ2UoKX0sZGF0YTpmdW5jdGlvbihlLG4pe3ZhciBpLHIsbz10aGlzO3JldHVybiAwPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLnNlbGVjdGlvbi5jaGlsZHJlbigiLnNlbGVjdDItc2VhcmNoLWNob2ljZSIpLm1hcChmdW5jdGlvbigpe3JldHVybiB0KHRoaXMpLmRhdGEoInNlbGVjdDItZGF0YSIpfSkuZ2V0KCk6KHI9dGhpcy5kYXRhKCksZXx8KGU9W10pLGk9dC5tYXAoZSxmdW5jdGlvbih0KXtyZXR1cm4gby5vcHRzLmlkKHQpfSksdGhpcy5zZXRWYWwoaSksdGhpcy51cGRhdGVTZWxlY3Rpb24oZSksdGhpcy5jbGVhclNlYXJjaCgpLHZvaWQobiYmdGhpcy50cmlnZ2VyQ2hhbmdlKHRoaXMuYnVpbGRDaGFuZ2VEZXRhaWxzKHIsdGhpcy5kYXRhKCkpKSkpfX0pLHQuZm4uc2VsZWN0Mj1mdW5jdGlvbigpe3ZhciBpLHIsYSxsLGMsdT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMCksZD1bInZhbCIsImRlc3Ryb3kiLCJvcGVuZWQiLCJvcGVuIiwiY2xvc2UiLCJmb2N1cyIsImlzRm9jdXNlZCIsImNvbnRhaW5lciIsImRyb3Bkb3duIiwib25Tb3J0U3RhcnQiLCJvblNvcnRFbmQiLCJlbmFibGUiLCJkaXNhYmxlIiwicmVhZG9ubHkiLCJwb3NpdGlvbkRyb3Bkb3duIiwiZGF0YSIsInNlYXJjaCJdLGg9WyJvcGVuZWQiLCJpc0ZvY3VzZWQiLCJjb250YWluZXIiLCJkcm9wZG93biJdLHA9WyJ2YWwiLCJkYXRhIl0sZj17c2VhcmNoOiJleHRlcm5hbFNlYXJjaCJ9O3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtpZigwPT09dS5sZW5ndGh8fCJvYmplY3QiPT09byh1WzBdKSlpPTA9PT11Lmxlbmd0aD97fTp0LmV4dGVuZCh7fSx1WzBdKSxpLmVsZW1lbnQ9dCh0aGlzKSwic2VsZWN0Ij09PWkuZWxlbWVudC5nZXQoMCkudGFnTmFtZS50b0xvd2VyQ2FzZSgpP2M9aS5lbGVtZW50LnByb3AoIm11bHRpcGxlIik6KGM9aS5tdWx0aXBsZXx8ITEsInRhZ3MiaW4gaSYmKGkubXVsdGlwbGU9Yz0hMCkpLHI9Yz9uZXcgZVsiY2xhc3MiXS5tdWx0aTpuZXcgZVsiY2xhc3MiXS5zaW5nbGUsci5pbml0KGkpO2Vsc2V7aWYoInN0cmluZyIhPXR5cGVvZiB1WzBdKXRocm93IkludmFsaWQgYXJndW1lbnRzIHRvIHNlbGVjdDIgcGx1Z2luOiAiK3U7aWYocyh1WzBdLGQpPDApdGhyb3ciVW5rbm93biBtZXRob2Q6ICIrdVswXTtpZihsPW4scj10KHRoaXMpLmRhdGEoInNlbGVjdDIiKSxyPT09bilyZXR1cm47aWYoYT11WzBdLCJjb250YWluZXIiPT09YT9sPXIuY29udGFpbmVyOiJkcm9wZG93biI9PT1hP2w9ci5kcm9wZG93bjooZlthXSYmKGE9ZlthXSksbD1yW2FdLmFwcGx5KHIsdS5zbGljZSgxKSkpLHModVswXSxoKT49MHx8cyh1WzBdLHApPj0wJiYxPT11Lmxlbmd0aClyZXR1cm4hMX19KSxsPT09bj90aGlzOmx9LHQuZm4uc2VsZWN0Mi5kZWZhdWx0cz17d2lkdGg6ImNvcHkiLGxvYWRNb3JlUGFkZGluZzowLGNsb3NlT25TZWxlY3Q6ITAsb3Blbk9uRW50ZXI6ITAsY29udGFpbmVyQ3NzOnt9LGRyb3Bkb3duQ3NzOnt9LGNvbnRhaW5lckNzc0NsYXNzOiIiLGRyb3Bkb3duQ3NzQ2xhc3M6IiIsZm9ybWF0UmVzdWx0OmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPVtdO3JldHVybiB3KHRoaXMudGV4dCh0KSxuLnRlcm0scixpKSxyLmpvaW4oIiIpfSxmb3JtYXRTZWxlY3Rpb246ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0P2kodGhpcy50ZXh0KHQpKTpufSxzb3J0UmVzdWx0czpmdW5jdGlvbih0LGUsbil7cmV0dXJuIHR9LGZvcm1hdFJlc3VsdENzc0NsYXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0LmNzc30sZm9ybWF0U2VsZWN0aW9uQ3NzQ2xhc3M6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbn0sbWluaW11bVJlc3VsdHNGb3JTZWFyY2g6MCxtaW5pbXVtSW5wdXRMZW5ndGg6MCxtYXhpbXVtSW5wdXRMZW5ndGg6bnVsbCxtYXhpbXVtU2VsZWN0aW9uU2l6ZTowLGlkOmZ1bmN0aW9uKHQpe3JldHVybiB0PT1uP251bGw6dC5pZH0sdGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gZSYmdGhpcy5kYXRhJiZ0aGlzLmRhdGEudGV4dD90LmlzRnVuY3Rpb24odGhpcy5kYXRhLnRleHQpP3RoaXMuZGF0YS50ZXh0KGUpOmVbdGhpcy5kYXRhLnRleHRdOmUudGV4dH0sbWF0Y2hlcjpmdW5jdGlvbih0LGUpe3JldHVybiByKCIiK2UpLnRvVXBwZXJDYXNlKCkuaW5kZXhPZihyKCIiK3QpLnRvVXBwZXJDYXNlKCkpPj0wfSxzZXBhcmF0b3I6IiwiLHRva2VuU2VwYXJhdG9yczpbXSx0b2tlbml6ZXI6RSxlc2NhcGVNYXJrdXA6TSxibHVyT25DaGFuZ2U6ITEsc2VsZWN0T25CbHVyOiExLGFkYXB0Q29udGFpbmVyQ3NzQ2xhc3M6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LGFkYXB0RHJvcGRvd25Dc3NDbGFzczpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbH0sbmV4dFNlYXJjaFRlcm06ZnVuY3Rpb24odCxlKXtyZXR1cm4gbn0sc2VhcmNoSW5wdXRQbGFjZWhvbGRlcjoiIixjcmVhdGVTZWFyY2hDaG9pY2VQb3NpdGlvbjoidG9wIixzaG91bGRGb2N1c0lucHV0OmZ1bmN0aW9uKHQpe3ZhciBlPSJvbnRvdWNoc3RhcnQiaW4gd2luZG93fHxuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cz4wO3JldHVybiEoZSYmdC5vcHRzLm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoPDApfX0sdC5mbi5zZWxlY3QyLmxvY2FsZXM9W10sdC5mbi5zZWxlY3QyLmxvY2FsZXMuZW49e2Zvcm1hdE1hdGNoZXM6ZnVuY3Rpb24odCl7cmV0dXJuIDE9PT10PyJPbmUgcmVzdWx0IGlzIGF2YWlsYWJsZSwgcHJlc3MgZW50ZXIgdG8gc2VsZWN0IGl0LiI6dCsiIHJlc3VsdHMgYXJlIGF2YWlsYWJsZSwgdXNlIHVwIGFuZCBkb3duIGFycm93IGtleXMgdG8gbmF2aWdhdGUuIn0sZm9ybWF0Tm9NYXRjaGVzOmZ1bmN0aW9uKCl7cmV0dXJuIk5vIG1hdGNoZXMgZm91bmQifSxmb3JtYXRBamF4RXJyb3I6ZnVuY3Rpb24odCxlLG4pe3JldHVybiJMb2FkaW5nIGZhaWxlZCJ9LGZvcm1hdElucHV0VG9vU2hvcnQ6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLXQubGVuZ3RoO3JldHVybiJQbGVhc2UgZW50ZXIgIituKyIgb3IgbW9yZSBjaGFyYWN0ZXIiKygxPT1uPyIiOiJzIil9LGZvcm1hdElucHV0VG9vTG9uZzpmdW5jdGlvbih0LGUpe3ZhciBuPXQubGVuZ3RoLWU7cmV0dXJuIlBsZWFzZSBkZWxldGUgIituKyIgY2hhcmFjdGVyIisoMT09bj8iIjoicyIpfSxmb3JtYXRTZWxlY3Rpb25Ub29CaWc6ZnVuY3Rpb24odCl7cmV0dXJuIllvdSBjYW4gb25seSBzZWxlY3QgIit0KyIgaXRlbSIrKDE9PXQ/IiI6InMiKX0sZm9ybWF0TG9hZE1vcmU6ZnVuY3Rpb24odCl7cmV0dXJuIkxvYWRpbmcgbW9yZSByZXN1bHRz4oCmIn0sZm9ybWF0U2VhcmNoaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIlNlYXJjaGluZ+KApiJ9fSx0LmV4dGVuZCh0LmZuLnNlbGVjdDIuZGVmYXVsdHMsdC5mbi5zZWxlY3QyLmxvY2FsZXMuZW4pLHQuZm4uc2VsZWN0Mi5hamF4RGVmYXVsdHM9e3RyYW5zcG9ydDp0LmFqYXgscGFyYW1zOnt0eXBlOiJHRVQiLGNhY2hlOiExLGRhdGFUeXBlOiJqc29uIn19LGU9e3F1ZXJ5OnthamF4OlMsbG9jYWw6VCx0YWdzOmt9LHV0aWw6e2RlYm91bmNlOnAsbWFya01hdGNoOncsZXNjYXBlTWFya3VwOk0sc3RyaXBEaWFjcml0aWNzOnJ9LCJjbGFzcyI6eyJhYnN0cmFjdCI6TyxzaW5nbGU6UCxtdWx0aTpOfX19fSh0KSxlfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSl7fSxmdW5jdGlvbih0LGUpe30sZnVuY3Rpb24odCxlKXt9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oNTA5KSxuKDUwOCldLHI9ZnVuY3Rpb24odCxlKXtyZXR1cm57VGFiOnQsVGFiczplfX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDYxMyksbig2MTQpLG4oNjE1KV0scj1mdW5jdGlvbih0LGUsbil7cmV0dXJue0ZpbGVVcGxvYWQ6dCxVcGxvYWRlcjplLFVwbG9hZElmcmFtZTpufX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDMzMSksbig0NzEpLG4oNDcwKV0scj1mdW5jdGlvbih0LGUsbil7dmFyIGk9ZS50cGwoJ1x0ICAgIDxpbnB1dCB0eXBlPSJmaWxlIiBuYW1lPSJmaWxlIiBjbGFzcz0ibS1maWxlIj5cdCAgICA8ZGl2IGNsYXNzPSJmYWNhZGUiPlx0ICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJ0ZXh0LWZpZWxkLWRlZmF1bHQiIGRpc2FibGVkPlx0ICAgICAge3t7aW1nIHNyYz0iL2ltZy91aS9idXR0b24vZmlsZS1icm93c2UtMDEucG5nIiBhbHQ9IkJyb3dzZSBmaWxlcy4uLiIgY2xhc3M9ImJyb3dzZSJ9fX1cdCAgICA8L2Rpdj5cdCAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBjbGFzcz0iaGlkZSIgbmFtZT0iX3hzcmZUb2tlbiIgdmFsdWU9Int7dG9rZW59fSI+XHQgICcpLHI9bi5leHRlbmQoe3RlbXBsYXRlOmksY2xhc3NOYW1lOiJmaWxlLWlucHV0LWZhY2FkZSBtYXJnaW4tdG9wLTEwIG1hcmdpbi1idG0tMTAgY2xlYXJmaXgiLGV2ZW50czp7ImNoYW5nZSAubS1maWxlIjoidXBkYXRlRGlzcGxheVZhbCJ9LHVwZGF0ZURpc3BsYXlWYWw6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldEZpbGVuYW1lKCk7dC5tYXRjaCgvXkM6XFxmYWtlcGF0aC8pJiYodD10LnJlcGxhY2UoIkM6XFxmYWtlcGF0aFxcIiwiIikpLHRoaXMudXBkYXRlRGlzcGxheSh0KX0sdXBkYXRlRGlzcGxheTpmdW5jdGlvbih0KXt0aGlzLiQoIi50ZXh0LWZpZWxkLWRlZmF1bHQiKS52YWwodCl9LGdldEZpbGVuYW1lOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJCgiLm0tZmlsZSIpLnZhbCgpfSxyZW5kZXI6ZnVuY3Rpb24oKXt2YXIgZT10KCIjX3hzcmZUb2tlbiIpLnRleHQoKTtyZXR1cm4gdGhpcy4kZWwuaHRtbCh0aGlzLnRlbXBsYXRlKHt0b2tlbjplfSkpLHRoaXN9fSk7cmV0dXJuIHJ9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig0OTQpLG4oNDcwKSxuKDYxNSksbig2MTYpXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPWUuZXh0ZW5kKHtjbGFzc05hbWU6InVwbG9hZC1ob2xkZXIiLGluaXRpYWxpemU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pZnJhbWU9bmV3IG4oe25hbWU6dGhpcy5jaWR9KSx0aGlzLmFkZCh0aGlzLmlmcmFtZSxudWxsLCEwKSx0aGlzLnVwbG9hZEZvcm09bmV3IGkoe3RhcmdldDp0aGlzLmNpZCxlbmRwb2ludDp0aGlzLm9wdGlvbnMuZW5kcG9pbnR9KSx0aGlzLmFkZCh0aGlzLnVwbG9hZEZvcm0sbnVsbCwhMCksdGhpcy5saXN0ZW5Ubyh0aGlzLmlmcmFtZSx0LlVQTE9BRF9ET05FLGZ1bmN0aW9uKCl7dGhpcy51cGxvYWRGb3JtLnVwbG9hZERvbmUoKX0pLHRoaXN9fSk7cmV0dXJuIHJ9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbig0OTQpLG4oNDcwKSxuKDUwNildLHI9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmV4dGVuZCh7dGFnTmFtZToiaWZyYW1lIixjbGFzc05hbWU6ImhpZGUiLGF0dHJpYnV0ZXM6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTp0aGlzLm9wdGlvbnMubmFtZSxpZDp0aGlzLm9wdGlvbnMubmFtZX19LGV2ZW50czp7bG9hZDpmdW5jdGlvbigpe3RyeXt2YXIgZT10aGlzLiRlbC5jb250ZW50cygpLnRleHQoKTtpZihlKXJldHVybiB2b2lkIHRoaXMudHJpZ2dlcih0LlVQTE9BRF9ET05FLEpTT04ucGFyc2UoZSkpfWNhdGNoKG4pe310aGlzLnRyaWdnZXIodC5VUExPQURfRU1QVFlfQ09OVEVOVCl9fX0pO3JldHVybiBufS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oNDcwKSxuKDYxMyksbig2MTcpXSxyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10LmV4dGVuZCh7dGFnTmFtZToiZm9ybSIsY2xhc3NOYW1lOiJjbGVhcmZpeCBwYWRkaW5nLWJ0bS0xMCIsYXR0cmlidXRlczpmdW5jdGlvbigpe3JldHVybnttZXRob2Q6InBvc3QiLGVuY3R5cGU6Im11bHRpcGFydC9mb3JtLWRhdGEiLGFjdGlvbjp0aGlzLm9wdGlvbnMuZW5kcG9pbnQsdGFyZ2V0OnRoaXMub3B0aW9ucy50YXJnZXR9fSxldmVudHM6e3N1Ym1pdDpmdW5jdGlvbigpe3RoaXMuc3VibWl0QnRuLmRpc2FibGUoITApfX0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbGVVcGxvYWQ9bmV3IGUsdGhpcy5hZGQodGhpcy5maWxlVXBsb2FkKSx0aGlzLnN1Ym1pdEJ0bj1uZXcgbix0aGlzLmFkZCh0aGlzLnN1Ym1pdEJ0biksdGhpc30sdXBsb2FkRG9uZTpmdW5jdGlvbigpe3RoaXMuc3VibWl0QnRuLmRpc2FibGUoITEpfX0pO3JldHVybiBpfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oNDcwKV0scj1mdW5jdGlvbih0KXt2YXIgZT10LmV4dGVuZCh7dGFnTmFtZToiaW5wdXQiLGNsYXNzTmFtZToiYnV0dG9uIixhdHRyaWJ1dGVzOnt0eXBlOiJzdWJtaXQiLHZhbHVlOiJVcGxvYWQgTG9nbyJ9LGRpc2FibGU6ZnVuY3Rpb24odCl7dGhpcy4kZWwucHJvcCgiZGlzYWJsZWQiLHQpfX0pO3JldHVybiBlfS5hcHBseShlLGkpLCEodm9pZCAwIT09ciYmKHQuZXhwb3J0cz1yKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyO2k9W24oNjMxKSxuKDY4OCksbig2NDIpLG4oNjQ1KSxuKDY1OCksbig2NjIpLG4oNjY0KSxuKDY2Nyksbig2NjkpLG4oNjcwKSxuKDY3MSksbig2NzMpLG4oNjc0KSxuKDY3NSksbig2NzYpLG4oNjc5KSxuKDY4MCksbig2ODEpLG4oNjgyKSxuKDY4NCksbig2ODYpLG4oNjE5KSxuKDY5NCksbig2OTUpLG4oNjk4KSxuKDY5OSksbig3MDEpLG4oNzAyKSxuKDcwMyksbig3MDQpLG4oNzA1KSxuKDcwNiksbig3MDcpLG4oNzA4KSxuKDYzMyksbig3MDkpLG4oNzE1KSxuKDcxNiksbig2MzgpLG4oNzE5KSxuKDcyMildLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhLGwsYyx1LGQsaCxwLGYsbSxfLGcsdix5LGIsdyxNLFMsVCxrLEwseCxBLEUsRCxDLFksTyxQLE4sSSxSLGosSCxGKXtyZXR1cm4gdC5leHRlbmQoe3JvdXRlczp7IiI6InByaW1hcnlBdXRoIixzaWduaW46InByaW1hcnlBdXRoIiwic2lnbmluL3ZlcmlmeS9kdW8vd2ViIjoidmVyaWZ5RHVvIiwic2lnbmluL3ZlcmlmeS9maWRvL3dlYmF1dGhuIjoidmVyaWZ5V2luZG93c0hlbGxvIiwic2lnbmluL3ZlcmlmeS9maWRvL3UyZiI6InZlcmlmeVUyRiIsInNpZ25pbi92ZXJpZnkvOnByb3ZpZGVyLzpmYWN0b3JUeXBlIjoidmVyaWZ5Iiwic2lnbmluL2Vucm9sbCI6ImVucm9sbENob2ljZXMiLCJzaWduaW4vZW5yb2xsL2R1by93ZWIiOiJlbnJvbGxEdW8iLCJzaWduaW4vZW5yb2xsL29rdGEvcXVlc3Rpb24iOiJlbnJvbGxRdWVzdGlvbiIsInNpZ25pbi9lbnJvbGwvb2t0YS9zbXMiOiJlbnJvbGxTbXMiLCJzaWduaW4vZW5yb2xsL29rdGEvY2FsbCI6ImVucm9sbENhbGwiLCJzaWduaW4vZW5yb2xsLWFjdGl2YXRlL29rdGEvc21zIjoiZW5yb2xsU21zIiwic2lnbmluL2Vucm9sbC9yc2EvdG9rZW4iOiJlbnJvbGxSc2EiLCJzaWduaW4vZW5yb2xsL2RlbF9vYXRoL3Rva2VuIjoiZW5yb2xsT25QcmVtIiwic2lnbmluL2Vucm9sbC9zeW1hbnRlYy90b2tlbiI6ImVucm9sbFN5bWFudGVjVmlwIiwic2lnbmluL2Vucm9sbC95dWJpY28vdG9rZW46aGFyZHdhcmUiOiJlbnJvbGxZdWJpa2V5Iiwic2lnbmluL2Vucm9sbC9maWRvL3dlYmF1dGhuIjoiZW5yb2xsV2luZG93c0hlbGxvIiwic2lnbmluL2Vucm9sbC9maWRvL3UyZiI6ImVucm9sbFUyRiIsInNpZ25pbi9lbnJvbGwvOnByb3ZpZGVyLzpmYWN0b3JUeXBlIjoiZW5yb2xsVG90cEZhY3RvciIsInNpZ25pbi9lbnJvbGwtYWN0aXZhdGUvb2t0YS9wdXNoIjoic2NhbkJhcmNvZGVQdXNoRmFjdG9yIiwic2lnbmluL2Vucm9sbC1hY3RpdmF0ZS9va3RhL3B1c2gvbWFudWFsIjoibWFudWFsU2V0dXBQdXNoRmFjdG9yIiwic2lnbmluL2Vucm9sbC1hY3RpdmF0ZS9va3RhL3B1c2gvc2VudCI6ImFjdGl2YXRpb25MaW5rU2VudCIsInNpZ25pbi9lbnJvbGwtYWN0aXZhdGUvb2t0YS90b2tlbjpzb2Z0d2FyZTp0b3RwL3Bhc3Njb2RlIjoiZW50ZXJQYXNzY29kZUluUHVzaEVucm9sbG1lbnRGbG93Iiwic2lnbmluL2Vucm9sbC1hY3RpdmF0ZS86cHJvdmlkZXIvOmZhY3RvclR5cGUiOiJzY2FuQmFyY29kZVRvdHBGYWN0b3IiLCJzaWduaW4vZW5yb2xsLWFjdGl2YXRlLzpwcm92aWRlci86ZmFjdG9yVHlwZS9hY3RpdmF0ZSI6ImFjdGl2YXRlVG90cEZhY3RvciIsInNpZ25pbi9lbnJvbGwtYWN0aXZhdGUvOnByb3ZpZGVyLzpmYWN0b3JUeXBlL21hbnVhbCI6Im1hbnVhbFNldHVwVG90cEZhY3RvciIsInNpZ25pbi9wYXNzd29yZC1leHBpcmVkIjoicGFzc3dvcmRFeHBpcmVkIiwic2lnbmluL2N1c3RvbS1wYXNzd29yZC1leHBpcmVkIjoiY3VzdG9tUGFzc3dvcmRFeHBpcmVkIiwic2lnbmluL2ZvcmdvdC1wYXNzd29yZCI6ImZvcmdvdFBhc3N3b3JkIiwic2lnbmluL3JlY292ZXJ5LWNoYWxsZW5nZSI6InJlY292ZXJ5Q2hhbGxlbmdlIiwic2lnbmluL3JlY292ZXJ5LWVtYWlsZWQiOiJyZWNvdmVyeUVtYWlsU2VudCIsInNpZ25pbi9yZWNvdmVyeS1xdWVzdGlvbiI6InJlY292ZXJ5UXVlc3Rpb24iLCJzaWduaW4vcGFzc3dvcmQtcmVzZXQiOiJwYXNzd29yZFJlc2V0Iiwic2lnbmluL3Jlc2V0LXBhc3N3b3JkLzp0b2tlbiI6InJlY292ZXJ5TG9hZGluZyIsInNpZ25pbi91c2VyLXVubG9jay86dG9rZW4iOiJyZWNvdmVyeUxvYWRpbmciLCJzaWduaW4vcmVjb3ZlcnkvOnRva2VuIjoicmVjb3ZlcnlMb2FkaW5nIiwic2lnbmluL3VubG9jay1lbWFpbGVkIjoidW5sbw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("Ll9lbWJlZGRlZC51c2VyP3QuX2VtYmVkZGVkLnVzZXI6bnVsbH19LHJlY292ZXJ5UXVlc3Rpb246e2RlcHM6WyJ1c2VyIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQucmVjb3ZlcnlfcXVlc3Rpb24/dC5yZWNvdmVyeV9xdWVzdGlvbi5xdWVzdGlvbjpudWxsfX0sdXNlclByb2ZpbGU6e2RlcHM6WyJ1c2VyIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQucHJvZmlsZT90LnByb2ZpbGU6bnVsbH19LHVzZXJDb25zZW50TmFtZTp7ZGVwczpbInVzZXJQcm9maWxlIiwidXNlcm5hbWUiXSxmbjpmdW5jdGlvbih0LGUpe3JldHVybiF0fHxhLmlzRW1wdHkodC5maXJzdE5hbWUpP2U6YS5pc0VtcHR5KHQubGFzdE5hbWUpP3QuZmlyc3ROYW1lOnQuZmlyc3ROYW1lKyIgIit0Lmxhc3ROYW1lLmNoYXJBdCgwKSsiLiJ9fSx1c2VyRW1haWw6e2RlcHM6WyJ1c2VyUHJvZmlsZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0LmxvZ2luP3QubG9naW46bnVsbH19LHVzZXJGdWxsTmFtZTp7ZGVwczpbInVzZXJQcm9maWxlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJih0LmZpcnN0TmFtZXx8dC5sYXN0TmFtZSk/dC5maXJzdE5hbWUrIiAiK3QubGFzdE5hbWU6IiJ9fSxkZWZhdWx0QXBwTG9nbzp7ZGVwczpbImJhc2VVcmwiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdCt1fX0sZXhwaXJlc0F0OntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0LmV4cGlyZXNBdH19LHRhcmdldDp7ZGVwczpbImxhc3RBdXRoUmVzcG9uc2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fZW1iZWRkZWQ/dC5fZW1iZWRkZWQudGFyZ2V0Om51bGx9fSx0YXJnZXRMYWJlbDp7ZGVwczpbInRhcmdldCJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0P3QubGFiZWw6bnVsbH19LHRhcmdldExvZ286e2RlcHM6WyJ0YXJnZXQiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5fbGlua3M/dC5fbGlua3MubG9nbzpudWxsfX0sdGFyZ2V0VGVybXNPZlNlcnZpY2U6e2RlcHM6WyJ0YXJnZXQiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5fbGlua3M/dC5fbGlua3NbInRlcm1zLW9mLXNlcnZpY2UiXTpudWxsfX0sdGFyZ2V0UHJpdmFjeVBvbGljeTp7ZGVwczpbInRhcmdldCJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Ll9saW5rcz90Ll9saW5rc1sicHJpdmFjeS1wb2xpY3kiXTpudWxsfX0sc2NvcGVzOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9lbWJlZGRlZD90Ll9lbWJlZGRlZC5zY29wZXM6bnVsbH19LGhhc0V4aXN0aW5nUGhvbmVzOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe2lmKCF0Ll9lbWJlZGRlZHx8IXQuX2VtYmVkZGVkLmZhY3RvcnMpcmV0dXJuITE7dmFyIGU9dC5fZW1iZWRkZWQuZmFjdG9ycyxuPWEuZmluZFdoZXJlKGUse2ZhY3Q=", "base64"));
  res.write(new Buffer("b3JUeXBlOiJzbXMiLHByb3ZpZGVyOiJPS1RBIn0pO3JldHVybiEoIW58fCFuLl9lbWJlZGRlZHx8IW4uX2VtYmVkZGVkLnBob25lcy5sZW5ndGgpfX0saGFzRXhpc3RpbmdQaG9uZXNGb3JDYWxsOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe2lmKCF0Ll9lbWJlZGRlZHx8IXQuX2VtYmVkZGVkLmZhY3RvcnMpcmV0dXJuITE7dmFyIGU9dC5fZW1iZWRkZWQuZmFjdG9ycyxuPWEuZmluZFdoZXJlKGUse2ZhY3RvclR5cGU6ImNhbGwiLHByb3ZpZGVyOiJPS1RBIn0pO3JldHVybiEoIW58fCFuLl9lbWJlZGRlZHx8IW4uX2VtYmVkZGVkLnBob25lcy5sZW5ndGgpfX0saXNVbmRlZmluZWRVc2VyOntkZXBzOlsic2VjdXJpdHlJbWFnZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0PT09aH19LGlzTmV3VXNlcjp7ZGVwczpbInNlY3VyaXR5SW1hZ2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdD09PXB9fSxhbGxvd1JlbWVtYmVyRGV2aWNlOntkZXBzOlsicG9saWN5Il0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuYWxsb3dSZW1lbWJlckRldmljZX19LHJlbWVtYmVyRGV2aWNlTGFiZWw6e2RlcHM6WyJwb2xpY3kiXSxmbjpmdW5jdGlvbihlKXtpZihlJiZlLnJlbWVtYmVyRGV2aWNlTGlmZXRpbWVJbk1pbnV0ZXM+MCl7dmFyIG49cyhlLnJlbWVtYmVyRGV2aWNlTGlmZXRpbWVJbk1pbnV0ZXMpO3JldHVybiB0LmxvYygicmVtZW1iZXJEZXZpY2UudGltZWJhc2VkIiwibG9naW4iLFtuXSl9cmV0dXJuIGUmJjA9PT1lLnJlbWVtYmVyRGV2aWNlTGlmZXRpbWVJbk1pbnV0ZXM/dC5sb2MoInJlbWVtYmVyRGV2aWNlLmRldmljZWJhc2VkIiwibG9naW4iKTp0LmxvYygicmVtZW1iZXJEZXZpY2UiLCJsb2dpbiIpfX0scmVtZW1iZXJEZXZpY2VCeURlZmF1bHQ6e2RlcHM6WyJwb2xpY3kiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC5yZW1lbWJlckRldmljZUJ5RGVmYXVsdH19fSxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXR0aW5ncz10LnNldHRpbmdzLGEuZXh0ZW5kKGEub21pdCh0LCJzZXR0aW5ncyIpLHtsYW5ndWFnZUNvZGU6dGhpcy5zZXR0aW5ncy5nZXQoImxhbmd1YWdlQ29kZSIpfSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oMzQ2KSxuKDY0MSksbig2MjUpXSxyPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPXQuXyxvPTZlMyxzPWkuZXh0ZW5kKHtleHRyYVByb3BlcnRpZXM6ITAsZmxhdDohMSxwcm9wczp7aWQ6InN0cmluZyIsZmFjdG9yVHlwZTp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJzbXMiLCJjYWxsIiwiZW1haWwiLCJ0b2tlbiIsInRva2VuOnNvZnR3YXJlOnRvdHAiLCJ0b2tlbjpoYXJkd2FyZSIsInF1ZXN0aW9uIiwicHVzaCIsInUyZiJdfSxwcm92aWRlcjp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJPS1RBIiwiUlNBIiwiREVMX09BVEgiLCJTWU1BTlRFQyIsIkdPT0dMRSIsIllVQklDTyIsIkZJRE8iXX0sZW5yb2xsbWVudDp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJPUFRJT05BTCIsIlJFUVVJUkVEIl19LHN0YXR1czp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJOT1RfU0VUVVAiLCJBQ1RJVkUiXX0scHJvZmlsZTpbIm9iamVjdCJdLHZlbmRvck5hbWU6InN0cmluZyJ9LGxvY2FsOnthbnN3ZXI6InN0cmluZyIsYmFja3VwRmFjdG9yOiJvYmplY3QiLHNob3dBbnN3ZXI6ImJvb2xlYW4iLHJlbWVtYmVyRGV2aWNlOiJib29sZWFuIixhdXRvUHVzaDpbImJvb2xlYW4iLCEwLCExXX0sZGVyaXZlZDp7aXNPa3RhRmFjdG9yOntkZXBzOlsicHJvdmlkZXIiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4iT0tUQSI9PT10fX0sZmFjdG9yTmFtZTp7ZGVwczpbInByb3ZpZGVyIiwiZmFjdG9yVHlwZSJdLGZuOm4uZ2V0RmFjdG9yTmFtZX0sZmFjdG9yTGFiZWw6e2RlcHM6WyJwcm92aWRlciIsImZhY3RvclR5cGUiLCJ2ZW5kb3JOYW1lIl0sZm46ZnVuY3Rpb24odCxlLGkpe3JldHVybiJERUxfT0FUSCI9PT10P2k6bi5nZXRGYWN0b3JMYWJlbCh0LGUpfX0sZmFjdG9yRGVzY3JpcHRpb246e2RlcHM6WyJwcm92aWRlciIsImZhY3RvclR5cGUiXSxmbjpuLmdldEZhY3RvckRlc2NyaXB0aW9ufSxzb3J0T3JkZXI6e2RlcHM6WyJwcm92aWRlciIsImZhY3RvclR5cGUiXSxmbjpuLmdldEZhY3RvclNvcnRPcmRlcn0saWNvbkNsYXNzTmFtZTp7ZGVwczpbInByb3ZpZGVyIiwiZmFjdG9yVHlwZSJdLGZuOm4uZ2V0RmFjdG9ySWNvbkNsYXNzTmFtZX0sc2VjdXJpdHlRdWVzdGlvbjp7ZGVwczpbInByb2ZpbGUiLCJmYWN0b3JUeXBlIl0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4icXVlc3Rpb24iIT09ZT9udWxsOnQmJm4uZ2V0U2VjdXJpdHlRdWVzdGlvbkxhYmVsKHQpfX0scGhvbmVOdW1iZXI6e2RlcHM6WyJwcm9maWxlIiwiZmFjdG9yVHlwZSJdLGZuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHIuY29udGFpbnMoWyJzbXMiLCJjYWxsIl0sZSk/dCYmdC5waG9uZU51bWJlcjpudWxsfX0sZW1haWw6e2RlcHM6WyJwcm9maWxlIiwiZmFjdG9yVHlwZSJdLGZuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuImVtYWlsIj09PWU/dCYmdC5lbWFpbDpudWxsfX0sZGV2aWNlTmFtZTp7ZGVwczpbInByb2ZpbGUiLCJmYWN0b3JUeXBlIl0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4icHVzaCIhPT1lP251bGw6dCYmdC5uYW1lfX0sZW5yb2xsZWQ6e2RlcHM6WyJzdGF0dXMiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4iQUNUSVZFIj09PXR9fSxyZXF1aXJlZDp7ZGVwczpbImVucm9sbG1lbnQiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4iUkVRVUlSRUQiPT09dH19LGNhblVzZVJlc2VuZDp7ZGVwczpbInByb3ZpZGVyIiwiZmFjdG9yVHlwZSJdLGZuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIk9LVEEiPT09dCYmci5jb250YWlucyhbInB1c2giLCJzbXMiLCJjYWxsIiwiZW1haWwiXSxlKX19LGlzQW5zd2VyUmVxdWlyZWQ6e2RlcHM6WyJmYWN0b3JUeXBlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHIuY29udGFpbnMoWyJzbXMiLCJjYWxsIiwiZW1haWwiLCJ0b2tlbiIsInRva2VuOnNvZnR3YXJlOnRvdHAiLCJxdWVzdGlvbiJdLHQpfX19LHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldHRpbmdzPXQuc2V0dGluZ3MsdGhpcy5hcHBTdGF0ZT10LmFwcFN0YXRlLHQucmVtZW1iZXJEZXZpY2U9bi5nZXRSZW1lbWJlckRldmljZVZhbHVlKHRoaXMuYXBwU3RhdGUpLHIub21pdCh0LFsic2V0dGluZ3MiLCJhcHBTdGF0ZSJdKX0sdmFsaWRhdGU6ZnVuY3Rpb24oKXtpZih0aGlzLmdldCgiaXNBbnN3ZXJSZXF1aXJlZCIpJiYhdGhpcy5nZXQoImFuc3dlciIpKXJldHVybnthbnN3ZXI6dC5sb2MoIm1vZGVsLnZhbGlkYXRpb24uZmllbGQuYmxhbmsiKX19LHNhdmU6ZnVuY3Rpb24oKXt2YXIgdD0hIXRoaXMuZ2V0KCJyZW1lbWJlckRldmljZSIpO3JldHVybiB0aGlzLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24obil7dmFyIGk9e3JlbWVtYmVyRGV2aWNlOnR9OyJxdWVzdGlvbiI9PT10aGlzLmdldCgiZmFjdG9yVHlwZSIpP2kuYW5zd2VyPXRoaXMuZ2V0KCJhbnN3ZXIiKTppLnBhc3NDb2RlPXRoaXMuZ2V0KCJhbnN3ZXIiKTt2YXIgcztpZigiTUZBX1JFUVVJUkVEIj09PW4uc3RhdHVzKXt2YXIgYT1yLmZpbmRXaGVyZShuLmZhY3RvcnMse2lkOnRoaXMuZ2V0KCJpZCIpfSk7cz1hLnZlcmlmeShpKX1lbHNlIGlmKHRoaXMuZ2V0KCJjYW5Vc2VSZXNlbmQiKSYmIXRoaXMuZ2V0KCJhbnN3ZXIiKSYmbi5yZXNlbmQpe3ZhciBsPW4uZGF0YS5fbGlua3MucmVzZW5kWzBdO3M9bi5yZXNlbmQobC5uYW1lKX1lbHNlIHM9bi52ZXJpZnkoaSk7cmV0dXJuIHRoaXMudHJpZ2dlcigic2F2ZSIpLHMudGhlbihmdW5jdGlvbih0KXtyZXR1cm4iTUZBX0NIQUxMRU5HRSI9PT10LnN0YXR1cyYmdC5wb2xsP2UuZGVsYXkobykudGhlbihmdW5jdGlvbigpe3JldHVybiB0LnBvbGwobyl9KTp0fSkuZmFpbChmdW5jdGlvbih0KXt0aHJvdyB0fSl9KX19KSxhPXQuQ29sbGVjdGlvbi5leHRlbmQoe21vZGVsOnMsY29tcGFyYXRvcjoic29ydE9yZGVyIixwYXJzZTpmdW5jdGlvbih0KXt0aGlzLmxhc3RVc2VkRmFjdG9yPXRbMF07dmFyIGU9ci5maW5kV2hlcmUodCx7cHJvdmlkZXI6Ik9LVEEiLGZhY3RvclR5cGU6InB1c2gifSk7aWYoIWUpcmV0dXJuIHQ7dmFyIG49ci5maW5kV2hlcmUodCx7cHJvdmlkZXI6Ik9LVEEiLGZhY3RvclR5cGU6InRva2VuOnNvZnR3YXJlOnRvdHAifSksaT1uPT09dFswXSxvPXIucmVkdWNlKHQsZnVuY3Rpb24odCxpKXt2YXIgcj0iT0tUQSI9PT1pLnByb3ZpZGVyLG89ciYmInRva2VuOnNvZnR3YXJlOnRvdHAiPT09aS5mYWN0b3JUeXBlLGE9ciYmInB1c2giPT09aS5mYWN0b3JUeXBlLGw9IkFDVElWRSIhPT1pLnN0YXR1cyxjPW8mJihsfHwiQUNUSVZFIj09PWUuc3RhdHVzKSx1PWEmJmwmJiJBQ1RJVkUiPT09bi5zdGF0dXM7cmV0dXJuIGN8fHU/dDooYSYmKGkuYmFja3VwRmFjdG9yPW5ldyBzKG4se3BhcnNlOiEwfSkpLHQucHVzaChpKSx0KX0sW10pO3JldHVybiBpJiYodGhpcy5sYXN0VXNlZEZhY3Rvcj1lKSxvfSxnZXREZWZhdWx0RmFjdG9yOmZ1bmN0aW9uKCl7dmFyIHQ9ci5waWNrKHRoaXMubGFzdFVzZWRGYWN0b3IsImZhY3RvclR5cGUiLCJwcm92aWRlciIpO3JldHVybiB0aGlzLmZpbmRXaGVyZSh0KX0sZ2V0Rmlyc3RVbmVucm9sbGVkUmVxdWlyZWRGYWN0b3I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5maW5kV2hlcmUoe3JlcXVpcmVkOiEwLGVucm9sbGVkOiExfSl9fSk7cmV0dXJue01vZGVsOnMsQ29sbGVjdGlvbjphfX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig1MTIpXSxyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5fLGk9e30scj17T0tUQV9WRVJJRlk6e2xhYmVsOiJmYWN0b3IudG90cFNvZnQub2t0YVZlcmlmeSIsZGVzY3JpcHRpb246ImZhY3Rvci50b3RwU29mdC5kZXNjcmlwdGlvbiIsaWNvbkNsYXNzTmFtZToibWZhLW9rdGEtdmVyaWZ5Iixzb3J0T3JkZXI6MX0sT0tUQV9WRVJJRllfUFVTSDp7bGFiZWw6ImZhY3Rvci5va3RhVmVyaWZ5UHVzaCIsZGVzY3JpcHRpb246ImZhY3Rvci5wdXNoLmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtb2t0YS12ZXJpZnkiLHNvcnRPcmRlcjoxfSxTTVM6e2xhYmVsOiJmYWN0b3Iuc21zIixkZXNjcmlwdGlvbjoiZmFjdG9yLnNtcy5kZXNjcmlwdGlvbiIsaWNvbkNsYXNzTmFtZToibWZhLW9rdGEtc21zIixzb3J0T3JkZXI6Mn0sQ0FMTDp7bGFiZWw6ImZhY3Rvci5jYWxsIixkZXNjcmlwdGlvbjoiZmFjdG9yLmNhbGwuZGVzY3JpcHRpb24iLGljb25DbGFzc05hbWU6Im1mYS1va3RhLWNhbGwiLHNvcnRPcmRlcjozfSxXSU5ET1dTX0hFTExPOntsYWJlbDoiZmFjdG9yLndpbmRvd3NIZWxsbyIsZGVzY3JpcHRpb246ImZhY3Rvci53aW5kb3dzSGVsbG8uc2lnbmluLmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtd2luZG93cy1oZWxsbyIsc29ydE9yZGVyOjR9LFUyRjp7bGFiZWw6ImZhY3Rvci51MmYiLGRlc2NyaXB0aW9uOiJmYWN0b3IudTJmLmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtdTJmIixzb3J0T3JkZXI6NX0sWVVCSUtFWTp7bGFiZWw6ImZhY3Rvci50b3RwSGFyZC55dWJpa2V5IixkZXNjcmlwdGlvbjoiZmFjdG9yLnRvdHBIYXJkLnl1YmlrZXkuZGVzY3JpcHRpb24iLGljb25DbGFzc05hbWU6Im1mYS15dWJpa2V5Iixzb3J0T3JkZXI6Nn0sRFVPOntsYWJlbDoiZmFjdG9yLmR1byIsZGVzY3JpcHRpb246ImZhY3Rvci5kdW8uZGVzY3JpcHRpb24iLGljb25DbGFzc05hbWU6Im1mYS1kdW8iLHNvcnRPcmRlcjo3fSxHT09HTEVfQVVUSDp7bGFiZWw6ImZhY3Rvci50b3RwU29mdC5nb29nbGVBdXRoZW50aWNhdG9yIixkZXNjcmlwdGlvbjoiZmFjdG9yLnRvdHBTb2Z0LmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtZ29vZ2xlLWF1dGgiLHNvcnRPcmRlcjo4fSxTWU1BTlRFQ19WSVA6e2xhYmVsOiJmYWN0b3IudG90cEhhcmQuc3ltYW50ZWNWaXAiLGRlc2NyaXB0aW9uOiJmYWN0b3IudG90cEhhcmQuZGVzY3JpcHRpb24iLGljb25DbGFzc05hbWU6Im1mYS1zeW1hbnRlYyIsc29ydE9yZGVyOjl9LFJTQV9TRUNVUklEOntsYWJlbDoiZmFjdG9yLnRvdHBIYXJkLnJzYVNlY3VySWQiLGRlc2NyaXB0aW9uOiJmYWN0b3IudG90cEhhcmQuZGVzY3JpcHRpb24iLGljb25DbGFzc05hbWU6Im1mYS1yc2EiLHNvcnRPcmRlcjoxMH0sT05fUFJFTTp7bGFiZWw6IiIsZGVzY3JpcHRpb246ImZhY3Rvci50b3RwSGFyZC5kZXNjcmlwdGlvbiIsaWNvbkNsYXNzTmFtZToibWZhLW9ucHJlbSIsc29ydE9yZGVyOjEwfSxFTUFJTDp7bGFiZWw6ImZhY3Rvci5lbWFpbCIsZGVzY3JpcHRpb246IiIsaWNvbkNsYXNzTmFtZToibWZhLW9rdGEtZW1haWwiLHNvcnRPcmRlcjoxMX0sUVVFU1RJT046e2xhYmVsOiJmYWN0b3Iuc2VjdXJpdHlRdWVzdGlvbiIsZGVzY3JpcHRpb246ImZhY3Rvci5zZWN1cml0eVF1ZXN0aW9uLmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtb2t0YS1zZWN1cml0eS1xdWVzdGlvbiIsc29ydE9yZGVyOjEyfX07cmV0dXJuIGkuZ2V0RmFjdG9yTmFtZT1mdW5jdGlvbih0LGUpe3JldHVybiJPS1RBIj09PXQmJiJ0b2tlbjpzb2Z0d2FyZTp0b3RwIj09PWU/Ik9LVEFfVkVSSUZZIjoiT0tUQSI9PT10JiYicHVzaCI9PT1lPyJPS1RBX1ZFUklGWV9QVVNIIjoiR09PR0xFIj09PXQ/IkdPT0dMRV9BVVRIIjoiU1lNQU5URUMiPT09dCYmInRva2VuIj09PWU/IlNZTUFOVEVDX1ZJUCI6IlJTQSI9PT10JiYidG9rZW4iPT09ZT8iUlNBX1NFQ1VSSUQiOiJERUxfT0FUSCI9PT10JiYidG9rZW4iPT09ZT8iT05fUFJFTSI6IkRVTyI9PT10JiYid2ViIj09PWU/IkRVTyI6IllVQklDTyI9PT10JiYidG9rZW46aGFyZHdhcmUiPT09ZT8iWVVCSUtFWSI6Ik9LVEEiPT09dCYmInNtcyI9PT1lPyJTTVMiOiJPS1RBIj09PXQmJiJjYWxsIj09PWU/IkNBTEwiOiJPS1RBIj09PXQmJiJxdWVzdGlvbiI9PT1lPyJRVUVTVElPTiI6IkZJRE8iPT09dCYmIndlYmF1dGhuIj09PWU/IldJTkRPV1NfSEVMTE8iOiJGSURPIj09PXQmJiJ1MmYiPT09ZT8iVTJGIjoiT0tUQSI9PT10JiYiZW1haWwiPT09ZT8iRU1BSUwiOnZvaWQgMH0saS5pc09rdGFWZXJpZnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4iT0tUQSI9PT10JiYoInRva2VuOnNvZnR3YXJlOnRvdHAiPT09ZXx8InB1c2giPT09ZSl9LGkuZ2V0RmFjdG9yTGFiZWw9ZnVuY3Rpb24oZSxuKXt2YXIgbz1yW2kuZ2V0RmFjdG9yTmFtZShlLG4pXS5sYWJlbDtyZXR1cm4gdC5sb2MobywibG9naW4iKX0saS5nZXRGYWN0b3JEZXNjcmlwdGlvbj1mdW5jdGlvbihlLG4pe3ZhciBvPXJbaS5nZXRGYWN0b3JOYW1lKGUsbildLmRlc2NyaXB0aW9uO3JldHVybiB0LmxvYyhvLCJsb2dpbiIpfSxpLmdldEZhY3Rvckljb25DbGFzc05hbWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcltpLmdldEZhY3Rvck5hbWUodCxlKV0uaWNvbkNsYXNzTmFtZX0saS5nZXRGYWN0b3JTb3J0T3JkZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcltpLmdldEZhY3Rvck5hbWUodCxlKV0uc29ydE9yZGVyfSxpLmdldFJlbWVtYmVyRGV2aWNlVmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuZ2V0KCJyZW1lbWJlckRldmljZUJ5RGVmYXVsdCIpfSxpLmdldFNlY3VyaXR5UXVlc3Rpb25MYWJlbD1mdW5jdGlvbihlKXt2YXIgbj10LmxvYygic2VjdXJpdHkuIitlLnF1ZXN0aW9uKTtyZXR1cm4gbi5pbmRleE9mKCJMMTBOX0VSUk9SIik8MD9uOmUucXVlc3Rpb25UZXh0fSxpLmdldFBhc3N3b3JkQ29tcGxleGl0eURlc2NyaXB0aW9uPWZ1bmN0aW9uKGkpe3ZhciByPVtdLG89ZnVuY3Rpb24oZSl7dmFyIG47c3dpdGNoKGUudW5pdCl7Y2FzZSJEQVkiOm49InBhc3N3b3JkLmNvbXBsZXhpdHkubWluQWdlRGF5cyI7YnJlYWs7Y2FzZSJIT1VSIjpuPSJwYXNzd29yZC5jb21wbGV4aXR5Lm1pbkFnZUhvdXJzIjticmVhaztjYXNlIk1JTlVURSI6bj0icGFzc3dvcmQuY29tcGxleGl0eS5taW5BZ2VNaW51dGVzIn1yZXR1cm4gdC5sb2MobiwibG9naW4iLFtlLnRpbWVdKX0scz1mdW5jdGlvbih0KXt2YXIgZT10LmV4Y2x1ZGVBdHRyaWJ1dGVzO3JldHVybiB0LmV4Y2x1ZGVGaXJzdE5hbWU9bi5jb250YWlucyhlLCJmaXJzdE5hbWUiKSx0LmV4Y2x1ZGVMYXN0TmFtZT1uLmNvbnRhaW5zKGUsImxhc3ROYW1lIiksbi5vbWl0KHQsImV4Y2x1ZGVBdHRyaWJ1dGVzIil9O2lmKGkuY29tcGxleGl0eSl7dmFyIGE9e21pbkxlbmd0aDp7aTE4bjoicGFzc3dvcmQuY29tcGxleGl0eS5sZW5ndGgiLGFyZ3M6ITB9LG1pbkxvd2VyQ2FzZTp7aTE4bjoicGFzc3dvcmQuY29tcGxleGl0eS5sb3dlcmNhc2UifSxtaW5VcHBlckNhc2U6e2kxOG46InBhc3N3b3JkLmNvbXBsZXhpdHkudXBwZXJjYXNlIn0sbWluTnVtYmVyOntpMThuOiJwYXNzd29yZC5jb21wbGV4aXR5Lm51bWJlciJ9LG1pblN5bWJvbDp7aTE4bjoicGFzc3dvcmQuY29tcGxleGl0eS5zeW1ib2wifSxleGNsdWRlVXNlcm5hbWU6e2kxOG46InBhc3N3b3JkLmNvbXBsZXhpdHkubm9fdXNlcm5hbWUifSxleGNsdWRlRmlyc3ROYW1lOntpMThuOiJwYXNzd29yZC5jb21wbGV4aXR5Lm5vX2ZpcnN0X25hbWUifSxleGNsdWRlTGFzdE5hbWU6e2kxOG46InBhc3N3b3JkLmNvbXBsZXhpdHkubm9fbGFzdF9uYW1lIn19LGw9cyhpLmNvbXBsZXhpdHkpLGM9bi5tYXAobCxmdW5jdGlvbihlLG4pe2lmKCEoZTw9MCkpe3ZhciBpPWFbbl07cmV0dXJuIGkuYXJncz90LmxvYyhpLmkxOG4sImxvZ2luIixbZV0pOnQubG9jKGkuaTE4biwibG9naW4iKX19KTtjPW4uY29tcGFjdChjKSxjLmxlbmd0aCYmKGM9bi5yZWR1Y2UoYyxmdW5jdGlvbihlLG4pe3JldHVybiBlP2UrdC5sb2MoInBhc3N3b3JkLmNvbXBsZXhpdHkubGlzdC5lbGVtZW50IiwibG9naW4iLFtuXSk6bn0pLHIucHVzaCh0LmxvYygicGFzc3dvcmQuY29tcGxleGl0eS5yZXF1aXJlbWVudHMiLCJsb2dpbiIsW2NdKSkpfWlmKGkuYWdlJiZpLmFnZS5oaXN0b3J5Q291bnQ+MCYmci5wdXNoKHQubG9jKCJwYXNzd29yZC5jb21wbGV4aXR5Lmhpc3RvcnkiLCJsb2dpbiIsW2kuYWdlLmhpc3RvcnlDb3VudF0pKSxpLmFnZSYmaS5hZ2UubWluQWdlTWludXRlcz4wKXt2YXIgdT1lLmdldFRpbWVJbkhpZ2hlc3RSZWxldmFudFVuaXQoaS5hZ2UubWluQWdlTWludXRlcywiTUlOVVRFIiksZD1vKHUpO3IucHVzaChkKX1yZXR1cm4gci5qb2luKCIgIil9LGl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oNjQzKSxuKDM0Niksbig2NDEpLG4oNjIyKSxuKDYyOCksbig2MjMpLG4oNjQ0KV0scj1mdW5jdGlvbih0LGUsbixpLHIsbyxzLGEpe3ZhciBsPXQuJCxjPXQuXztyZXR1cm4gci5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeS1kdW8gZHVvLWZvcm0iLE1vZGVsOntwcm9wczp7aG9zdDoic3RyaW5nIixzaWduYXR1cmU6InN0cmluZyIscG9zdEFjdGlvbjoic3RyaW5nIixmYWN0b3JJZDoic3RyaW5nIixzdGF0ZVRva2VuOiJzdHJpbmciLHJlbWVtYmVyRGV2aWNlOiJib29sZWFuIn0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciB0PWkuZ2V0UmVtZW1iZXJEZXZpY2VWYWx1ZSh0aGlzLmFwcFN0YXRlKTt0aGlzLnNldCgicmVtZW1iZXJEZXZpY2UiLHQpfSxnZXRJbml0T3B0aW9uczpmdW5jdGlvbigpe3ZhciB0PSEhdGhpcy5nZXQoInJlbWVtYmVyRGV2aWNlIik7cmV0dXJuIHRoaXMuZG9UcmFuc2FjdGlvbihmdW5jdGlvbihlKXt2YXIgbj17cmVtZW1iZXJEZXZpY2U6dH0saT1jLmZpbmRXaGVyZShlLmZhY3RvcnMse3Byb3ZpZGVyOiJEVU8iLGZhY3RvclR5cGU6IndlYiJ9KTtyZXR1cm4gaS52ZXJpZnkobikuZmFpbChmdW5jdGlvbih0KXt0aHJvdyB0fSl9KX0sdmVyaWZ5OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KCJwb3N0QWN0aW9uIiksaT10aGlzLmdldCgiZmFjdG9ySWQiKSxyPXRoaXMsbz17aWQ6aSxzdGF0ZVRva2VuOnRoaXMuZ2V0KCJzdGF0ZVRva2VuIiksc2lnX3Jlc3BvbnNlOnR9LHM9dGhpcy5nZXQoInJlbWVtYmVyRGV2aWNlIik7cmV0dXJuIG4obC5wb3N0KGUsbykpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gci5kb1RyYW5zYWN0aW9uKGZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiBzJiYoZT17cmVtZW1iZXJEZXZpY2U6c30pLHQucG9sbChlKX0pfSkuZmFpbChmdW5jdGlvbih0KXtyLnRyaWdnZXIoImVycm9yIixyLHQueGhyKX0pfX0sRm9ybTp7YXV0b1NhdmU6ITAsbm9CdXR0b25CYXI6ITAsdGl0bGU6Yy5wYXJ0aWFsKHQubG9jLCJmYWN0b3IuZHVvIiksYXR0cmlidXRlczp7ImRhdGEtc2UiOiJmYWN0b3ItZHVvIn0scG9zdFJlbmRlcjpmdW5jdGlvbigpe3RoaXMuYWRkKCc8aWZyYW1lIGZyYW1lYm9yZGVyPSIwIiB0aXRsZT0iJyt0aGlzLnRpdGxlKCkrJyI+PC9pZnJhbWU+JyksdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiYWxsb3dSZW1lbWJlckRldmljZSIpJiZ0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJyZW1lbWJlckRldmljZUxhYmVsIiksY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAiLG5hbWU6InJlbWVtYmVyRGV2aWNlIix0eXBlOiJjaGVja2JveCJ9KSxlLmluaXQoe2hvc3Q6dGhpcy5tb2RlbC5nZXQoImhvc3QiKSxzaWdfcmVxdWVzdDp0aGlzLm1vZGVsLmdldCgic2lnbmF0dXJlIiksaWZyYW1lOnRoaXMuJCgiaWZyYW1lIikuZ2V0KDApLHBvc3RfYWN0aW9uOmMuYmluZCh0aGlzLm1vZGVsLnZlcmlmeSx0aGlzLm1vZGVsKX0pfX0sRm9vdGVyOmEsZmV0Y2hJbml0aWFsRGF0YTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIHRoaXMubW9kZWwuZ2V0SW5pdE9wdGlvbnMoKS50aGVuKGZ1bmN0aW9uKGUpe3ZhciBuPWUuZGF0YTtpZighKG4uX2VtYmVkZGVkJiZuLl9lbWJlZGRlZC5mYWN0b3ImJm4uX2VtYmVkZGVkLmZhY3Rvci5fZW1iZWRkZWQmJm4uX2VtYmVkZGVkLmZhY3Rvci5fZW1iZWRkZWQudmVyaWZpY2F0aW9uKSl0aHJvdyBuZXcgRXJyb3IoIlJlc3BvbnNlIGRvZXMgbm90IGhhdmUgZHVvIHZlcmlmaWNhdGlvbiBvcHRpb25zIik7dmFyIGk9bi5fZW1iZWRkZWQuZmFjdG9yLl9lbWJlZGRlZC52ZXJpZmljYXRpb247dC5tb2RlbC5zZXQoe2hvc3Q6aS5ob3N0LHNpZ25hdHVyZTppLnNpZ25hdHVyZSxwb3N0QWN0aW9uOmkuX2xpbmtzLmNvbXBsZXRlLmhyZWYsZmFjdG9ySWQ6bi5fZW1iZWRkZWQuZmFjdG9yLmlkLHN0YXRlVG9rZW46bi5zdGF0ZVRva2VufSl9KX0sdHJhcEF1dGhSZXNwb25zZTpmdW5jdGlvbigpe2lmKHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImlzTWZhQ2hhbGxlbmdlIikpcmV0dXJuITB9LGJhY2s6ZnVuY3Rpb24oKXt9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHIsbzsiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiYic3ltYm9sIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiYiZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT8ic3ltYm9sIjp0eXBlb2YgdH0sIWZ1bmN0aW9uKG4scyl7cj1bXSxpPXMsbz0iZnVuY3Rpb24iPT10eXBlb2YgaT9pLmFwcGx5KGUscik6aSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSh2b2lkIDAsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7dGhyb3cgbmV3IEVycm9yKCJEdW8gV2ViIFNESyBlcnJvcjogIit0KyhlPyJcblNlZSAiK2UrIiBmb3IgbW9yZSBpbmZvcm1hdGlvbiI6IiIpKX1mdW5jdGlvbiBlKHQpe3JldHVybiB0LnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pLywiJDEtJDIiKS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIG4odCxuKXtyZXR1cm4iZGF0YXNldCJpbiB0P3QuZGF0YXNldFtuXTp0LmdldEF0dHJpYnV0ZSgiZGF0YS0iK2UobikpfWZ1bmN0aW9uIGkodCxlLG4saSl7ImFkZEV2ZW50TGlzdGVuZXIiaW4gd2luZG93P3QuYWRkRXZlbnRMaXN0ZW5lcihlLGksITEpOnQuYXR0YWNoRXZlbnQobixpKX1mdW5jdGlvbiByKHQsZSxuLGkpeyJyZW1vdmVFdmVudExpc3RlbmVyImluIHdpbmRvdz90LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSxpLCExKTp0LmRldGFjaEV2ZW50KG4saSl9ZnVuY3Rpb24gbyh0KXtpKGRvY3VtZW50LCJET01Db250ZW50TG9hZGVkIiwib25yZWFkeXN0YXRlY2hhbmdlIix0KX1mdW5jdGlvbiBzKHQpe3IoZG9jdW1lbnQsIkRPTUNvbnRlbnRMb2FkZWQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLHQpfWZ1bmN0aW9uIGEodCl7aSh3aW5kb3csIm1lc3NhZ2UiLCJvbm1lc3NhZ2UiLHQpfWZ1bmN0aW9uIGwodCl7cih3aW5kb3csIm1lc3NhZ2UiLCJvbm1lc3NhZ2UiLHQpfWZ1bmN0aW9uIGMoZSl7aWYoZSl7MD09PWUuaW5kZXhPZigiRVJSfCIpJiZ0KGUuc3BsaXQoInwiKVsxXSksZS5pbmRleE9mKCI6IikhPT0tMSYmMj09PWUuc3BsaXQoIjoiKS5sZW5ndGh8fHQoIkR1byB3YXMgZ2l2ZW4gYSBiYWQgdG9rZW4uICBUaGlzIG1pZ2h0IGluZGljYXRlIGEgY29uZmlndXJhdGlvbiBwcm9ibGVtIHdpdGggb25lIG9mIER1bydzIGNsaWVudCBsaWJyYXJpZXMuIiwiaHR0cHM6Ly93d3cuZHVvc2VjdXJpdHkuY29tL2RvY3MvZHVvd2ViI2ZpcnN0LXN0ZXBzIik7dmFyIG49ZS5zcGxpdCgiOiIpO3JldHVybiB2PWUseT1uWzBdLGI9blsxXSx7c2lnUmVxdWVzdDplLGR1b1NpZzpuWzBdLGFwcFNpZzpuWzFdfX19ZnVuY3Rpb24gdSgpe2lmKHc9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoeCksIXcpdGhyb3cgbmV3IEVycm9yKCdUaGlzIHBhZ2UgZG9lcyBub3QgY29udGFpbiBhbiBpZnJhbWUgZm9yIER1byB0byB1c2UuQWRkIGFuIGVsZW1lbnQgbGlrZSA8aWZyYW1lIGlkPSJkdW9faWZyYW1lIj48L2lmcmFtZT4gdG8gdGhpcyBwYWdlLiAgU2VlIGh0dHBzOi8vd3d3LmR1b3NlY3VyaXR5LmNvbS9kb2NzL2R1b3dlYiMzLi1zaG93LXRoZS1pZnJhbWUgZm9yIG1vcmUgaW5mb3JtYXRpb24uJyk7bSgpLHModSl9ZnVuY3Rpb24gZCh0KXtyZXR1cm4gQm9vbGVhbih0Lm9yaWdpbj09PSJodHRwczovLyIrZyYmInN0cmluZyI9PXR5cGVvZiB0LmRhdGEmJih0LmRhdGEubWF0Y2goUyl8fHQuZGF0YS5tYXRjaChUKXx8dC5kYXRhLm1hdGNoKGspKSl9ZnVuY3Rpb24gaCh0KXt0JiYodC5ob3N0JiYoZz10Lmhvc3QpLHQuc2lnX3JlcXVlc3QmJmModC5zaWdfcmVxdWVzdCksdC5wb3N0X2FjdGlvbiYmKEE9dC5wb3N0X2FjdGlvbiksdC5wb3N0X2FyZ3VtZW50JiYoRT10LnBvc3RfYXJndW1lbnQpLHQuaWZyYW1lJiYodC5pZnJhbWUudGFnTmFtZT93PXQuaWZyYW1lOiJzdHJpbmciPT10eXBlb2YgdC5pZnJhbWUmJih4PXQuaWZyYW1lKSksImZ1bmN0aW9uIj09dHlwZW9mIHQuc3VibWl0X2NhbGxiYWNrJiYoTT10LnN1Ym1pdF9jYWxsYmFjaykpLHc/bSgpOih3PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHgpLHc/bSgpOm8odSkpLHMoaCl9ZnVuY3Rpb24gcCh0KXtpZihkKHQpKWlmKHQuZGF0YS5tYXRjaChrKSl7dmFyIGU9dC5kYXRhLnN1YnN0cmluZygiRFVPX09QRU5fV0lORE9XfCIubGVuZ3RoKTtmKGUpJiZ3aW5kb3cub3BlbihlLCJfc2VsZiIpfWVsc2UgXyh0LmRhdGEpLGwocCl9ZnVuY3Rpb24gZih0KXtpZighdClyZXR1cm4hMTt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7aWYoZS5ocmVmPXQsImR1b3RydXN0ZWRlbmRwb2ludHM6Ij09PWUucHJvdG9jb2wpcmV0dXJuITA7aWYoImh0dHBzOiIhPT1lLnByb3RvY29sKXJldHVybiExO2Zvcih2YXIgbj0wO248TC5sZW5ndGg7bisrKWlmKGUuaG9zdG5hbWUuZW5kc1dpdGgoIi4iK0xbbl0pfHxlLmhvc3RuYW1lPT09TFtuXSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBtKCl7Z3x8KGc9bih3LCJob3N0IiksZ3x8dCgiTm8gQVBJIGhvc3RuYW1lIGlzIGdpdmVuIGZvciBEdW8gdG8gdXNlLiAgQmUgc3VyZSB0byBwYXNzIGEgYGhvc3RgIHBhcmFtZXRlciB0byBEdW8uaW5pdCwgb3IgdGhyb3VnaCB0aGUgYGRhdGEtaG9zdGAgYXR0cmlidXRlIG9uIHRoZSBpZnJhbWUgZWxlbWVudC4iLCJodHRwczovL3d3dy5kdW9zZWN1cml0eS5jb20vZG9jcy9kdW93ZWIjMy4tc2hvdy10aGUtaWZyYW1lIikpLHkmJmJ8fChjKG4odywic2lnUmVxdWVzdCIpKSx5JiZifHx0KCJObyB2YWxpZCBzaWduZWQgcmVxdWVzdCBpcyBnaXZlbi4gIEJlIHN1cmUgdG8gZ2l2ZSB0aGUgYHNpZ19yZXF1ZXN0YCBwYXJhbWV0ZXIgdG8gRHVvLmluaXQsIG9yIHVzZSB0aGUgYGRhdGEtc2lnLXJlcXVlc3RgIGF0dHJpYnV0ZSBvbiB0aGUgaWZyYW1lIGVsZW1lbnQuIiwiaHR0cHM6Ly93d3cuZHVvc2VjdXJpdHkuY29tL2RvY3MvZHVvd2ViIzMuLXNob3ctdGhlLWlmcmFtZSIpKSwiIj09PUEmJihBPW4odywicG9zdEFjdGlvbiIpfHxBKSwic2lnX3Jlc3BvbnNlIj09PUUmJihFPW4odywicG9zdEFyZ3VtZW50Iil8fEUpLHcuc3JjPVsiaHR0cHM6Ly8iLGcsIi9mcmFtZS93ZWIvdjEvYXV0aD90eD0iLHksIiZwYXJlbnQ9IixlbmNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQubG9jYXRpb24uaHJlZiksIiZ2PTIuNiJdLmpvaW4oIiIpLGEocCl9ZnVuY3Rpb24gXyh0KXtBKHQrIjoiK2IpfXZhciBnLHYseSxiLHcsTSxTPS9eKD86QVVUSHxFTlJPTEwpK1x8W0EtWmEtejAtOVwrXC89XStcfFtBLVphLXowLTlcK1wvPV0rJC8sVD0vXkVSUlx8W1x3XHNcLlwoXCldKyQvLGs9L15EVU9fT1BFTl9XSU5ET1dcfC8sTD1bImR1by5jb20iLCJkdW9zZWN1cml0eS5jb20iLCJkdW9tb2JpbGUuczMtdXMtd2VzdC0xLmFtYXpvbmF3cy5jb20iXSx4PSJkdW9faWZyYW1lIixBPSIiLEU9InNpZ19yZXNwb25zZSI7cmV0dXJue2luaXQ6aCxfb25SZWFkeTpvLF9wYXJzZVNpZ1JlcXVlc3Q6YyxfaXNEdW9NZXNzYWdlOmQsX2RvUG9zdEJhY2s6X319KX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oNjI4KSxuKDUxNCldLHI9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQuXztyZXR1cm4gdC5WaWV3LmV4dGVuZCh7dGVtcGxhdGU6J1x0ICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Imxpbmsge3tsaW5rQ2xhc3NOYW1lfX0iIGRhdGEtc2U9InNpZ25vdXQtbGluayI+XHQgICAgICAgIHt7bGlua1RleHR9fVx0ICAgICAgPC9hPlx0ICAgICcsY2xhc3NOYW1lOiJhdXRoLWZvb3RlciBjbGVhcmZpeCIsZXZlbnRzOnsiY2xpY2sgYSI6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpO3ZhciBpPXRoaXM7dGhpcy5tb2RlbC5kb1RyYW5zYWN0aW9uKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNhbmNlbCgpfSkudGhlbihmdW5jdGlvbigpe2kuc2V0dGluZ3MuZ2V0KCJzaWduT3V0TGluayIpP24ucmVkaXJlY3QoaS5zZXR0aW5ncy5nZXQoInNpZ25PdXRMaW5rIikpOihpLnN0YXRlLnNldCgibmF2aWdhdGVEaXIiLGUuRElSRUNUSU9OX0JBQ0spLGkub3B0aW9ucy5hcHBTdGF0ZS50cmlnZ2VyKCJuYXZpZ2F0ZSIsIiIpKX0pfX0sZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7cmV0dXJue2xpbmtDbGFzc05hbWU6aS5pc1VuZGVmaW5lZCh0aGlzLm9wdGlvbnMubGlua0NsYXNzTmFtZSk/ImdvdG8iOnRoaXMub3B0aW9ucy5saW5rQ2xhc3NOYW1lLGxpbmtUZXh0OnRoaXMub3B0aW9ucy5saW5rVGV4dHx8dC5sb2MoInNpZ25vdXQiLCJsb2dpbiIpfX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig1MzQpLG4oNjI0KSxuKDY1MCksbig2NTMpLG4oNjU0KSxuKDY0Niksbig2NTUpLG4oNjU2KSxuKA==", "base64"));
  res.write(new Buffer("NjU3KSxuKDY0NCldLHI9ZnVuY3Rpb24odCxlLG4saSxyLG8scyxhLGwsYyx1KXtyZXR1cm4gbi5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeSIsaW5pdGlhbGl6ZTpmdW5jdGlvbihuKXt2YXIgaSxkPW4uYXBwU3RhdGUuZ2V0KCJmYWN0b3JzIiksaD1uLmZhY3RvclR5cGUscD1uLnByb3ZpZGVyO3N3aXRjaChoKXtjYXNlInF1ZXN0aW9uIjppPXM7YnJlYWs7Y2FzZSJzbXMiOmNhc2UiY2FsbCI6Y2FzZSJlbWFpbCI6aT1hO2JyZWFrO2Nhc2UidG9rZW4iOmNhc2UidG9rZW46c29mdHdhcmU6dG90cCI6aT1yO2JyZWFrO2Nhc2UidG9rZW46aGFyZHdhcmUiOmk9bzticmVhaztjYXNlInB1c2giOmk9bDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiVW5yZWNvZ25pemVkIGZhY3RvciB0eXBlIil9aWYodGhpcy5tb2RlbD1kLmZpbmRXaGVyZSh7cHJvdmlkZXI6cCxmYWN0b3JUeXBlOmh9KSwhdGhpcy5tb2RlbCl0aHJvdyBuZXcgRXJyb3IoIlVucmVjb2duaXplZCBmYWN0b3IvcHJvdmlkZXIiKTt0aGlzLmFkZExpc3RlbmVycygpLHRoaXMuYWRkKG5ldyBpKHRoaXMudG9KU09OKCkpKSwicHVzaCI9PT1oJiZ0aGlzLm1vZGVsLmdldCgiaXNPa3RhRmFjdG9yIikmJih0aGlzLmFkZChjLHtvcHRpb25zOnttb2RlbDp0aGlzLm1vZGVsLmdldCgiYmFja3VwRmFjdG9yIil9fSksdGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmF1dG9QdXNoIikmJnRoaXMuYWRkKGUse29wdGlvbnM6e21vZGVsOnRoaXMubW9kZWwsbmFtZToiYXV0b1B1c2giLHBsYWNlaG9sZGVyOnQubG9jKCJhdXRvUHVzaCIsImxvZ2luIiksbGFiZWw6ITEsImxhYmVsLXRvcCI6ITEsY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAifX0pLHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImFsbG93UmVtZW1iZXJEZXZpY2UiKSYmdGhpcy5hZGQoZSx7b3B0aW9uczp7bW9kZWw6dGhpcy5tb2RlbCxuYW1lOiJyZW1lbWJlckRldmljZSIscGxhY2Vob2xkZXI6dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicmVtZW1iZXJEZXZpY2VMYWJlbCIpLGxhYmVsOiExLCJsYWJlbC10b3AiOiEwLGNsYXNzTmFtZToibWFyZ2luLWJ0bS0wIn19KSx0aGlzLmxpc3RlblRvKHRoaXMubW9kZWwsImNoYW5nZTpyZW1lbWJlckRldmljZSIsZnVuY3Rpb24odCxlKXt0LmdldCgiYmFja3VwRmFjdG9yIikuc2V0KCJyZW1lbWJlckRldmljZSIsZSl9KSksdGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmhpZGVTaWduT3V0TGlua0luTUZBIil8fHRoaXMuYWRkKG5ldyB1KHRoaXMudG9KU09OKCkpKX0sdHJhcEF1dGhSZXNwb25zZTpmdW5jdGlvbigpe3JldHVybiEoIXRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImlzTWZhQ2hhbGxlbmdlIikmJiF0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJpc01mYVJlcXVpcmVkIikmJigicHVzaCI9PXRoaXMub3B0aW9ucy5mYWN0b3JUeXBlJiYodGhpcy5zZXR0aW4=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("YWwzIiBidW5kbGU9ImxvZ2luIn19PC9saT5cdCAgICAgICAgICA8L29sPjwvZGl2Pid9KSksbi5wdXNoKGUuVmlldyh7VmlldzonXHQgICAgICAgICAgPGRpdiBjbGFzcz0idTJmLWVucm9sbC10ZXh0IGhpZGUiPlx0ICAgICAgICAgICAgPHA+e3tpMThuIGNvZGU9ImVucm9sbC51MmYuaW5zdHJ1Y3Rpb25zIiBidW5kbGU9ImxvZ2luIn19PC9wPlx0ICAgICAgICAgICAgPHA+e3tpMThuIGNvZGU9ImVucm9sbC51MmYuaW5zdHJ1Y3Rpb25zQmx1ZXRvb3RoIiBidW5kbGU9ImxvZ2luIn19PC9wPlx0ICAgICAgICAgICAgPGRpdiBkYXRhLXNlPSJ1MmYtZGV2aWNlcyIgY2xhc3M9InUyZi1kZXZpY2VzLWltYWdlcyI+XHQgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InUyZi11c2IiPjwvZGl2Plx0ICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1MmYtYmx1ZXRvb3RoIj48L2Rpdj5cdCAgICAgICAgICAgIDwvZGl2Plx0ICAgICAgICAgICAgPGRpdiBkYXRhLXNlPSJ1MmYtd2FpdGluZyIgY2xhc3M9Im9rdGEtd2FpdGluZy1zcGlubmVyIj48L2Rpdj5cdCAgICAgICAgICA8L2Rpdj4nfSkpO2Vsc2V7dmFyIGk9InUyZi5lcnJvci5ub3RTdXBwb3J0ZWRCcm93c2VyIjtzLmlzRmlyZWZveCgpJiYoaT0idTJmLmVycm9yLm5vRmlyZWZveEV4dGVuc2lvbiIpLG4ucHVzaChlLlZpZXcoe1ZpZXc6bmV3IG8oe21lc3NhZ2U6dC5sb2MoaSwibG9naW4iKX0pfSx7c2VsZWN0b3I6Ii5vLWZvcm0tZXJyb3ItY29udGFpbmVyIn0pKX1yZXR1cm4gbn0sX3N0YXJ0RW5yb2xsbWVudDpmdW5jdGlvbigpe3RoaXMuJCgiLnUyZi1pbnN0cnVjdGlvbnMiKS5hZGRDbGFzcygiaGlkZSIpLHRoaXMuJCgiLnUyZi1lbnJvbGwtdGV4dCIpLnJlbW92ZUNsYXNzKCJoaWRlIiksdGhpcy4kKCIuby1mb3JtLWJ1dHRvbi1iYXIiKS5oaWRlKCl9LF9zdG9wRW5yb2xsbWVudDpmdW5jdGlvbigpe3RoaXMuJCgiLnUyZi1pbnN0cnVjdGlvbnMiKS5yZW1vdmVDbGFzcygiaGlkZSIpLHRoaXMuJCgiLnUyZi1lbnJvbGwtdGV4dCIpLmFkZENsYXNzKCJoaWRlIiksdGhpcy4kKCIuby1mb3JtLWJ1dHRvbi1iYXIiKS5zaG93KCl9fSxGb290ZXI6aSx0cmFwQXV0aFJlc3BvbnNlOmZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiaXNNZmFFbnJvbGxBY3RpdmF0ZSIpKXJldHVybiB0aGlzLm1vZGVsLmFjdGl2YXRlKCksITB9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLHI7aT1bbigzNTcpLG4oNjQxKSxuKDYyMiksbig2MjMpLG4oNjI2KSxuKDY3OCksbig2NjgpXSxyPWZ1bmN0aW9uKHQsZSxuLGkscixvLHMpe3ZhciBhPXQuXztyZXR1cm4gbi5leHRlbmQoe2NsYXNzTmFtZToiYmFyY29kZS10b3RwIixNb2RlbDpmdW5jdGlvbigpe3JldHVybntsb2NhbDp7X19mYWN0b3JUeXBlX186WyJzdHJpbmciLCE=", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZXMtZHJvcGRvd24iXScpfSxmYWRlT3V0OmZ1bmN0aW9uKCl7dmFyIHQ9ZS5kZWZlcigpO3JldHVybiB0aGlzLiQoIi5hdXRoLWJlYWNvbi1mYWN0b3IiKS5mYWRlT3V0KDIwMCxmdW5jdGlvbigpe3QucmVzb2x2ZSgpfSksdC5wcm9taXNlfSxlcXVhbHM6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdCYmdGhpcyBpbnN0YW5jZW9mIHQmJmUucHJvdmlkZXI9PT10aGlzLm9wdGlvbnMucHJvdmlkZXImJihlLmZhY3RvclR5cGU9PT10aGlzLm9wdGlvbnMuZmFjdG9yVHlwZXx8bi5pc09rdGFWZXJpZnkoZS5wcm92aWRlcixlLmZhY3RvclR5cGUpJiZuLmlzT2t0YVZlcmlmeSh0aGlzLm9wdGlvbnMucHJvdmlkZXIsdGhpcy5vcHRpb25zLmZhY3RvclR5cGUpKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig3MjEpLG4oNTY4KV0scj1mdW5jdGlvbih0LGUsbil7dmFyIGk9dC5fLHI9dC4kO3JldHVybiByKGRvY3VtZW50KS5jbGljayhmdW5jdGlvbih0KXt2YXIgZT1yKHQudGFyZ2V0KSxuPWUuY2xvc2VzdCgiLm9wdGlvbi1zZWxlY3RlZCIpLmxlbmd0aD4wJiZlLmNsb3Nlc3QoIi5kcm9wZG93biIpLmxlbmd0aD4wO258fHIoIi5kcm9wZG93biAub3B0aW9ucyIpLmhpZGUoKX0pLG4uZXh0ZW5kKHtjbGFzc05hbWU6ImJnLWhlbHBlciBpY29uLWJ1dHRvbiIsZXZlbnRzOnsiY2xpY2sgYS5vcHRpb24tc2VsZWN0ZWQiOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxpLnJlc3VsdCh0aGlzLCJkaXNhYmxlZCIpP3Quc3RvcFByb3BhZ2F0aW9uKCk6dGhpcy4kKCIub3B0aW9ucyIpLnRvZ2dsZSgpfSwiY2xpY2sgLmRyb3Bkb3duLWRpc2FibGVkIjpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKX19LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLmFkZE9wdGlvbihlLmdldERyb3Bkb3duT3B0aW9uKCJUSVRMRSIpKSx0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJmYWN0b3JzIikuZWFjaChmdW5jdGlvbih0KXt0aGlzLmFkZE9wdGlvbihlLmdldERyb3Bkb3duT3B0aW9uKHQuZ2V0KCJmYWN0b3JOYW1lIikpLHttb2RlbDp0fSksdGhpcy5saXN0ZW5Ubyh0aGlzLmxhc3QoKSwib3B0aW9uczp0b2dnbGUiLGZ1bmN0aW9uKCl7dGhpcy4kKCIub3B0aW9ucyIpLmhpZGUoKX0pfSx0aGlzKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PXImJih0LmV4cG9ydHM9cikpfSxmdW5jdGlvbih0LGUsbil7dmFyIGkscjtpPVtuKDM1Nyksbig2MjYpXSxyPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5fLGk9ZnVuY3Rpb24odCl7dmFyIG49ZS5jcmVhdGVWZXJpZnlVcmwodC5nZXQoInByb3ZpZGVyIiksdC5nZXQoImZhY3RvclR5cGUiKSksaT10aGlzO3RoaXMubW9kZWwubWFuYWdlVHJhbnNhY3Rpb24oZnVuY3Rpb24odCxlKXtyZXR1cm4iTUZBX0NIQUxMRU5HRSI9PT10LnN0YXR1cyYmdC5wcmV2P3QucHJldigpLnRoZW4oZnVuY3Rpb24odCl7aS50cmlnZ2VyKCJvcHRpb25zOnRvZ2dsZSIpLGUodCksaS5vcHRpb25zLmFwcFN0YXRlLnRyaWdnZXIoIm5hdmlnYXRlIixuKX0pOihpLnRyaWdnZXIoIm9wdGlvbnM6dG9nZ2xlIiksdm9pZCBpLm9wdGlvbnMuYXBwU3RhdGUudHJpZ2dlcigibmF2aWdhdGUiLG4pKX0pfSxyPXtUSVRMRTp7dGl0bGU6bi5wYXJ0aWFsKHQubG9jLCJtZmEuZmFjdG9ycy5kcm9wZG93bi50aXRsZSIsImxvZ2luIiksY2xhc3NOYW1lOiJkcm9wZG93bi1saXN0LXRpdGxlIn0sT0tUQV9WRVJJRlk6e2ljb246ImZhY3Rvci1pY29uIG1mYS1va3RhLXZlcmlmeS0zMCIsdGl0bGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIil9LGFjdGlvbjpmdW5jdGlvbigpe2kuY2FsbCh0aGlzLHRoaXMubW9kZWwpfX0sT0tUQV9WRVJJRllfUFVTSDp7aWNvbjoiZmFjdG9yLWljb24gbWZhLW9rdGEtdmVyaWZ5LTMwIix0aXRsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGVsLmdldCgiZmFjdG9yTGFiZWwiKX0sYWN0aW9uOmZ1bmN0aW9uKCl7aS5jYWxsKHRoaXMsdGhpcy5tb2RlbCl9fSxHT09HTEVfQVVUSDp7aWNvbjoiZmFjdG9yLWljb24gbWZhLWdvb2dsZS1hdXRoLTMwIix0aXRsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGVsLmdldCgiZmFjdG9yTGFiZWwiKX0sYWN0aW9uOmZ1bmN0aW9uKCl7aS5jYWxsKHRoaXMsdGhpcy5tb2RlbCl9fSxTWU1BTlRFQ19WSVA6e2ljb246ImZhY3Rvci1pY29uIG1mYS1zeW1hbnRlYy0zMCIsdGl0bGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIil9LGFjdGlvbjpmdW5jdGlvbigpe2kuY2FsbCh0aGlzLHRoaXMubW9kZWwpfX0sUlNBX1NFQ1VSSUQ6e2ljb246ImZhY3Rvci1pY29uIG1mYS1yc2EtMzAiLHRpdGxlOm4ucGFydGlhbCh0LmxvYywiZmFjdG9yLnRvdHBIYXJkLnJzYVNlY3VySWQiLCJsb2dpbiIpLGFjdGlvbjpmdW5jdGlvbigpe2kuY2FsbCh0aGlzLHRoaXMubW9kZWwpfX0sT05fUFJFTTp7aWNvbjoiZmFjdG9yLWljb24gbWZhLW9ucHJlbS0zMCIsdGl0bGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIil9LGFjdGlvbjpmdW5jdGlvbigpe2kuY2FsbCh0aGlzLHRoaXMubW9kZWwpfX0sRFVPOntpY29uOiJmYWN0b3ItaWNvbiBtZmEtZHVvLTMwIix0aXRsZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGVsLmdldCgiZmFjdG9yTGFiZWwiKX0sYWN0aW9uOmZ1bmN0aW9uKCl7aS5jYWxsKHRoaXMsdGhpcy5tb2RlbCl9fSxEVU9fUFVTSDp7aWNvbjoiZHVvLXB1c2gtMTYiLGNsYXNzTmFtZToic3Vib3B0aW9uIix0aXRsZTpuLnBhcnRpYWwodC5sb2MsIm1mYS5kdW9TZWN1cml0eS5wdXNoIiwibG9naW4iLA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("IW9ubHlIYW5kbGVycyYmIXNwZWNpYWwubm9CdWJibGUmJiFqUXVlcnkuaXNXaW5kb3coZWxlbSkpe2ZvcihidWJibGVUeXBlPXNwZWNpYWwuZGVsZWdhdGVUeXBlfHx0eXBlLHJmb2N1c01vcnBoLnRlc3QoYnViYmxlVHlwZSt0eXBlKXx8KGN1cj1jdXIucGFyZW50Tm9kZSk7Y3VyO2N1cj1jdXIucGFyZW50Tm9kZSlldmVudFBhdGgucHVzaChjdXIpLHRtcD1jdXI7dG1wPT09KGVsZW0ub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZldmVudFBhdGgucHVzaCh0bXAuZGVmYXVsdFZpZXd8fHRtcC5wYXJlbnRXaW5kb3d8fHdpbmRvdyl9Zm9yKGk9MDsoY3VyPWV2ZW50UGF0aFtpKytdKSYmIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7KWV2ZW50LnR5cGU9aT4xP2J1YmJsZVR5cGU6c3BlY2lhbC5iaW5kVHlwZXx8dHlwZSxoYW5kbGU9KGpRdWVyeS5fZGF0YShjdXIsImV2ZW50cyIpfHx7fSlbZXZlbnQudHlwZV0mJmpRdWVyeS5fZGF0YShjdXIsImhhbmRsZSIpLGhhbmRsZSYmaGFuZGxlLmFwcGx5KGN1cixkYXRhKSxoYW5kbGU9b250eXBlJiZjdXJbb250eXBlXSxoYW5kbGUmJmhhbmRsZS5hcHBseSYmYWNjZXB0RGF0YShjdXIpJiYoZXZlbnQucmVzdWx0PWhhbmRsZS5hcHBseShjdXIsZGF0YSksZXZlbnQucmVzdWx0PT09ITEmJmV2ZW50LnByZXZlbnREZWZhdWx0KCkpO2lmKGV2ZW50LnR5cGU9dHlwZSwhb25seUhhbmRsZXJzJiYhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkmJighc3BlY2lhbC5fZGVmYXVsdHx8c3BlY2lhbC5fZGVmYXVsdC5hcHBseShldmVudFBhdGgucG9wKCksZGF0YSk9PT0hMSkmJmFjY2VwdERhdGEoZWxlbSkmJm9udHlwZSYmZWxlbVt0eXBlXSYmIWpRdWVyeS5pc1dpbmRvdyhlbGVtKSl7dG1wPWVsZW1bb250eXBlXSx0bXAmJihlbGVtW29udHlwZV09bnVsbCksalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZD10eXBlO3RyeXtlbGVtW3R5cGVdKCl9Y2F0Y2goZSl7fWpRdWVyeS5ldmVudC50cmlnZ2VyZWQ9dm9pZCAwLHRtcCYmKGVsZW1bb250eXBlXT10bXApfXJldHVybiBldmVudC5yZXN1bHR9fSxkaXNwYXRjaDpmdW5jdGlvbihldmVudCl7ZXZlbnQ9alF1ZXJ5LmV2ZW50LmZpeChldmVudCk7dmFyIGksaixyZXQsbWF0Y2hlZCxoYW5kbGVPYmosaGFuZGxlclF1ZXVlPVtdLGFyZ3M9c2xpY2UuY2FsbChhcmd1bWVudHMpLGhhbmRsZXJzPShqUXVlcnkuX2RhdGEodGhpcywiZXZlbnRzIil8fHt9KVtldmVudC50eXBlXXx8W10sc3BlY2lhbD1qUXVlcnkuZXZlbnQuc3BlY2lhbFtldmVudC50eXBlXXx8e307aWYoYXJnc1swXT1ldmVudCxldmVudC5kZWxlZ2F0ZVRhcmdldD10aGlzLCFzcGVjaWFsLnByZURpc3BhdGNofHxzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwodGhpcyxldmVudCkhPT0hMSl7Zm9yKGhhbmRsZXJRdWV1ZT1qUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCh0aGlzLGV2ZW50LGhhbmRsZXJzKSxpPTA7KG1hdGNoZWQ9aGFuZGxlclF1ZXVlW2krK10pJiYhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTspZm9yKGV2ZW50LmN1cnJlbnRUYXJnZXQ9bWF0Y2hlZC5lbGVtLGo9MDsoaGFuZGxlT2JqPW1hdGNoZWQuaGFuZGxlcnNbaisrXSkmJiFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpOylldmVudC5ybmFtZXNwYWNlJiYhZXZlbnQucm5hbWVzcGFjZS50ZXN0KGhhbmRsZU9iai5uYW1lc3BhY2UpfHwoZXZlbnQuaGFuZGxlT2JqPWhhbmRsZU9iaixldmVudC5kYXRhPWhhbmRsZU9iai5kYXRhLHJldD0oKGpRdWVyeS5ldmVudC5zcGVjaWFsW2hhbmRsZU9iai5vcmlnVHlwZV18fHt9KS5oYW5kbGV8fGhhbmRsZU9iai5oYW5kbGVyKS5hcHBseShtYXRjaGVkLmVsZW0sYXJncyksdm9pZCAwIT09cmV0JiYoZXZlbnQucmVzdWx0PXJldCk9PT0hMSYmKGV2ZW50LnByZXZlbnREZWZhdWx0KCksZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCkpKTtyZXR1cm4gc3BlY2lhbC5wb3N0RGlzcGF0Y2gmJnNwZWNpYWwucG9zdERpc3BhdGNoLmNhbGwodGhpcyxldmVudCksZXZlbnQucmVzdWx0fX0saGFuZGxlcnM6ZnVuY3Rpb24oZXZlbnQsaGFuZGxlcnMpe3ZhciBpLG1hdGNoZXMsc2VsLGhhbmRsZU9iaixoYW5kbGVyUXVldWU9W10sZGVsZWdhdGVDb3VudD1oYW5kbGVycy5kZWxlZ2F0ZUNvdW50LGN1cj1ldmVudC50YXJnZXQ7aWYoZGVsZWdhdGVDb3VudCYmY3VyLm5vZGVUeXBlJiYoImNsaWNrIiE9PWV2ZW50LnR5cGV8fGlzTmFOKGV2ZW50LmJ1dHRvbil8fGV2ZW50LmJ1dHRvbjwxKSlmb3IoO2N1ciE9dGhpcztjdXI9Y3VyLnBhcmVudE5vZGV8fHRoaXMpaWYoMT09PWN1ci5ub2RlVHlwZSYmKGN1ci5kaXNhYmxlZCE9PSEwfHwiY2xpY2siIT09ZXZlbnQudHlwZSkpe2ZvcihtYXRjaGVzPVtdLGk9MDtpPGRlbGVnYXRlQ291bnQ7aSsrKWhhbmRsZU9iaj1oYW5kbGVyc1tpXSxzZWw9aGFuZGxlT2JqLnNlbGVjdG9yKyIgIix2b2lkIDA9PT1tYXRjaGVzW3NlbF0mJihtYXRjaGVzW3NlbF09aGFuZGxlT2JqLm5lZWRzQ29udGV4dD9qUXVlcnkoc2VsLHRoaXMpLmluZGV4KGN1cik+LTE6alF1ZXJ5LmZpbmQoc2VsLHRoaXMsbnVsbCxbY3VyXSkubGVuZ3RoKSxtYXRjaGVzW3NlbF0mJm1hdGNoZXMucHVzaChoYW5kbGVPYmopO21hdGNoZXMubGVuZ3RoJiZoYW5kbGVyUXVldWUucHVzaCh7ZWxlbTpjdXIsaGFuZGxlcnM6bWF0Y2hlc30pfXJldHVybiBkZWxlZ2F0ZUNvdW50PGhhbmRsZXJzLmxlbmd0aCYmaGFuZGxlclF1ZXVlLnB1c2goe2VsZW06dGhpcyxoYW5kbGVyczpoYW5kbGVycy5zbGljZShkZWxlZ2F0ZUNvdW50KX0pLGhhbmRsZXJRdWV1ZX0sZml4OmZ1bmN0aW9uKGV2ZW50KXtpZihldmVudFtqUXVlcnkuZXhwYW5kb10pcmV0dXJuIGV2ZW50O3ZhciBpLHByb3AsY29weSx0eXBlPWV2ZW50LnR5cGUsb3JpZ2luYWxFdmVudD1ldmVudA==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("eWxlLmxlZnQ9bGVmdCxyc0xlZnQmJihycy5sZWZ0PXJzTGVmdCkpLHZvaWQgMD09PXJldD9yZXQ6cmV0KyIifHwiYXV0byJ9KTt2YXIgcmFscGhhPS9hbHBoYVwoW14pXSpcKS9pLHJvcGFjaXR5PS9vcGFjaXR5XHMqPVxzKihbXildKikvaSxyZGlzcGxheXN3YXA9L14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLHJudW1zcGxpdD1uZXcgUmVnRXhwKCJeKCIrcG51bSsiKSguKikkIiwiaSIpLGNzc1Nob3c9e3Bvc2l0aW9uOiJhYnNvbHV0ZSIsdmlzaWJpbGl0eToiaGlkZGVuIixkaXNwbGF5OiJibG9jayJ9LGNzc05vcm1hbFRyYW5zZm9ybT17bGV0dGVyU3BhY2luZzoiMCIsZm9udFdlaWdodDoiNDAwIn0sY3NzUHJlZml4ZXM9WyJXZWJraXQiLCJPIiwiTW96IiwibXMiXSxlbXB0eVN0eWxlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpLnN0eWxlO2pRdWVyeS5leHRlbmQoe2Nzc0hvb2tzOntvcGFjaXR5OntnZXQ6ZnVuY3Rpb24oZWxlbSxjb21wdXRlZCl7aWYoY29tcHV0ZWQpe3ZhciByZXQ9Y3VyQ1NTKGVsZW0sIm9wYWNpdHkiKTtyZXR1cm4iIj09PXJldD8iMSI6cmV0fX19fSxjc3NOdW1iZXI6e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGNvbHVtbkNvdW50OiEwLGZpbGxPcGFjaXR5OiEwLGZsZXhHcm93OiEwLGZsZXhTaHJpbms6ITAsZm9udFdlaWdodDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITB9LGNzc1Byb3BzOnsiZmxvYXQiOnN1cHBvcnQuY3NzRmxvYXQ/ImNzc0Zsb2F0Ijoic3R5bGVGbG9hdCJ9LHN0eWxlOmZ1bmN0aW9uKGVsZW0sbmFtZSx2YWx1ZSxleHRyYSl7aWYoZWxlbSYmMyE9PWVsZW0ubm9kZVR5cGUmJjghPT1lbGVtLm5vZGVUeXBlJiZlbGVtLnN0eWxlKXt2YXIgcmV0LHR5cGUsaG9va3Msb3JpZ05hbWU9alF1ZXJ5LmNhbWVsQ2FzZShuYW1lKSxzdHlsZT1lbGVtLnN0eWxlO2lmKG5hbWU9alF1ZXJ5LmNzc1Byb3BzW29yaWdOYW1lXXx8KGpRdWVyeS5jc3NQcm9wc1tvcmlnTmFtZV09dmVuZG9yUHJvcE5hbWUob3JpZ05hbWUpfHxvcmlnTmFtZSksaG9va3M9alF1ZXJ5LmNzc0hvb2tzW25hbWVdfHxqUXVlcnkuY3NzSG9va3Nbb3JpZ05hbWVdLHZvaWQgMD09PXZhbHVlKXJldHVybiBob29rcyYmImdldCJpbiBob29rcyYmdm9pZCAwIT09KHJldD1ob29rcy5nZXQoZWxlbSwhMSxleHRyYSkpP3JldDpzdHlsZVtuYW1lXTtpZih0eXBlPXR5cGVvZiB2YWx1ZSwic3RyaW5nIj09PXR5cGUmJihyZXQ9cmNzc051bS5leGVjKHZhbHVlKSkmJnJldFsxXSYmKHZhbHVlPWFkanVzdENTUyhlbGVtLG5hbWUscmV0KSx0eXBlPSJudW1iZXIiKSxudWxsIT12YWx1ZSYmdmFsdWU9PT12YWx1ZSYmKCJudW1iZXIiPT09dHlwZSYmKHZhbHVlKz1yZXQmJnJldFszXXx8KGpRdWVyeS5jc3NOdW1iZXJbb3JpZ05hbWVdPyIiOiJweCIpKSxzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZXx8IiIhPT12YWx1ZXx8MCE9PW5hbWUuaW5kZXhPZigiYmFja2dyb3VuZCIpfHwoc3R5bGVbbmFtZV09ImluaGVyaXQiKSwhKGhvb2tzJiYic2V0ImluIGhvb2tzJiZ2b2lkIDA9PT0odmFsdWU9aG9va3Muc2V0KGVsZW0sdmFsdWUsZXh0cmEpKSkpKXRyeXtzdHlsZVtuYW1lXT12YWx1ZX1jYXRjaChlKXt9fX0sY3NzOmZ1bmN0aW9uKGVsZW0sbmFtZSxleHRyYSxzdHlsZXMpe3ZhciBudW0sdmFsLGhvb2tzLG9yaWdOYW1lPWpRdWVyeS5jYW1lbENhc2UobmFtZSk7cmV0dXJuIG5hbWU9alF1ZXJ5LmNzc1Byb3BzW29yaWdOYW1lXXx8KGpRdWVyeS5jc3NQcm9wc1tvcmlnTmFtZV09dmVuZG9yUHJvcE5hbWUob3JpZ05hbWUpfHxvcmlnTmFtZSksaG9va3M9alF1ZXJ5LmNzc0hvb2tzW25hbWVdfHxqUXVlcnkuY3NzSG9va3Nbb3JpZ05hbWVdLGhvb2tzJiYiZ2V0ImluIGhvb2tzJiYodmFsPWhvb2tzLmdldChlbGVtLCEwLGV4dHJhKSksdm9pZCAwPT09dmFsJiYodmFsPWN1ckNTUyhlbGVtLG5hbWUsc3R5bGVzKSksIm5vcm1hbCI9PT12YWwmJm5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtJiYodmFsPWNzc05vcm1hbFRyYW5zZm9ybVtuYW1lXSksIiI9PT1leHRyYXx8ZXh0cmE/KG51bT1wYXJzZUZsb2F0KHZhbCksZXh0cmE9PT0hMHx8aXNGaW5pdGUobnVtKT9udW18fDA6dmFsKTp2YWx9fSksalF1ZXJ5LmVhY2goWyJoZWlnaHQiLCJ3aWR0aCJdLGZ1bmN0aW9uKGksbmFtZSl7alF1ZXJ5LmNzc0hvb2tzW25hbWVdPXtnZXQ6ZnVuY3Rpb24oZWxlbSxjb21wdXRlZCxleHRyYSl7aWYoY29tcHV0ZWQpcmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KGpRdWVyeS5jc3MoZWxlbSwiZGlzcGxheSIpKSYmMD09PWVsZW0ub2Zmc2V0V2lkdGg/c3dhcChlbGVtLGNzc1Nob3csZnVuY3Rpb24oKXtyZXR1cm4gZ2V0V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEpfSk6Z2V0V2lkdGhPckhlaWdodChlbGVtLG5hbWUsZXh0cmEpfSxzZXQ6ZnVuY3Rpb24oZWxlbSx2YWx1ZSxleHRyYSl7dmFyIHN0eWxlcz1leHRyYSYmZ2V0U3R5bGVzKGVsZW0pO3JldHVybiBzZXRQb3NpdGl2ZU51bWJlcihlbGVtLHZhbHVlLGV4dHJhP2F1Z21lbnRXaWR0aE9ySGVpZ2h0KGVsZW0sbmFtZSxleHRyYSxzdXBwb3J0LmJveFNpemluZyYmImJvcmRlci1ib3giPT09alF1ZXJ5LmNzcyhlbGVtLCJib3hTaXppbmciLCExLHN0eWxlcyksc3R5bGVzKTowKX19fSksc3VwcG9ydC5vcGFjaXR5fHwoalF1ZXJ5LmNzc0hvb2tzLm9wYWNpdHk9e2dldDpmdW5jdGlvbihlbGVtLGNvbXB1dGVkKXtyZXR1cm4gcm9wYWNpdHkudGVzdCgoY29tcHV0ZWQmJmVsZW0uY3VycmVudFN0eWxlP2VsZW0uY3VycmVudFN0eWw=", "base64"));
  res.write(new Buffer("", "base64"));
  res.end();

  return __filename;
};
